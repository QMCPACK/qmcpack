#!/bin/bash
#
#PBS -A mat151
#PBS -N QMCPACKTestEos
#PBS -j oe
#PBS -l walltime=0:30:00,nodes=1
#PBS -q batch
#PBS -m e
#PBS -M kentpr@ornl.gov

#
# Setup for eos.ccs.ornl.gov
#
# Due to slow compiles, process limits, and job length limits, this job is a state machine that submits additional jobs
#
#  master : Clones Git repo, resubmits self with 1 week delay, submits job variants for each build_xxx 
#  build_xxx : Specific build and test types
#

# Name of machine on which run. Used to set build directory names.
machine_name=eos

# Name of this job script
THIS_JOB_NAME=weekly_ornl_olcf_${machine_name}_multi.job

# What tasks this job will run
my_task=master

# List of possible tasks
list_of_non_master_tasks='build_intel build_intel_complex build_intel_soa build_intel_complex_soa'

# Directory in which to run tests. Should be an absolute path and fastest usable filesystem
test_path=$MEMBERWORK/mat151
test_dir=${test_path}/QMCPACK_CI_BUILDS_DO_NOT_REMOVE

# Directory with reference data files for performance tests
QMC_DATA=$PROJWORK/mat151/QMC_DATA


echo --- START `date`
echo --- My task is $my_task
cd $PBS_O_WORKDIR  # Should contain $THIS_JOB_NAME

export N_PROCS_BUILD=1
echo --- N_PROCS_BUILD set to $N_PROCS_BUILD
export N_PROCS=`expr $PBS_NUM_NODES \* 16`
echo --- N_PROCS set to $N_PROCS



if [ -e ${test_path} ]; then

    if [ ! -e ${test_dir} ]; then
	mkdir ${test_dir}
    fi

    if [ -e ${test_dir} ]; then
	cd ${test_dir}

	if [ "$my_task" = "master" ]; then
            echo --- Running master task
# Always do a fresh git clone in case of partial clones or earlier filesystem issues etc.
# Use same local cloned git for all builds
	    if [ -e qmcpack_${machine_name} ]; then
		echo --- Removing existing git qmcpack_${machine_name}
		rm -r -f qmcpack_${machine_name}
	    fi
	    echo --- Cloning QMCPACK git `date`
	    git clone https://github.com/QMCPACK/qmcpack.git --depth 1 qmcpack_${machine_name}
	    
	    cd qmcpack_${machine_name}/CMake
	    mv ctest_script.cmake ctest_script.cmake_orig
	    sed -e 's/N_PROCS_BUILD 8/N_PROCS_BUILD 1/g' ctest_script.cmake_orig > ctest_script.cmake

	    cd $PBS_O_WORKDIR
	    qsub -a `date -d "next Tuesday" +%m%d2301` $THIS_JOB_NAME
	    
	    for new_task in $list_of_non_master_tasks
	    do
		sed -e s/walltime=0:30:00,nodes=1/walltime=8:00:00,nodes=1/g -e s/my_task=master/my_task=${new_task}/g $THIS_JOB_NAME > ${THIS_JOB_NAME}_${new_task}
		qsub ${THIS_JOB_NAME}_${new_task}
                sleep 2
	    done

	else
	    
	    echo --- Non master task $my_task

# Sanity check cmake config file present
	    if [ -e qmcpack_${machine_name}/CMakeLists.txt ]; then

		echo --- Starting test builds and tests

module unload xalt

#for sys in build_gnu build_gnu_complex build_gnu_cuda build_gnu_cuda_complex
		for sys in $my_task
		do
		    cd ${test_dir}

# Prepend directories with machine name so the same workspace can be used with other machines
		    if [ -e ${machine_name}_$sys ]; then
			rm -r -f ${machine_name}_$sys
		    fi
		    mkdir ${machine_name}_$sys
		    cd ${machine_name}_$sys
		    
		    case $sys in
			"build_intel")
# Build with default Intel PrgEnv on eos. This is not checked!
                            module swap gcc gcc/6.3.0 # For C++14 library visibility to Intel compiler
			    module load cray-hdf5-parallel
			    module load cmake3/3.6.1
			    module load boost
			    module unload cray-libsci
			    module list
			    export QMCPACK_TEST_SUBMIT_NAME=Intel-Release
			    ctest -j 1 -DCMAKE_C_COMPILER=cc -DCMAKE_CXX_COMPILER=CC -DQMC_DATA=$QMC_DATA -DENABLE_TIMERS=1 -S $PWD/../qmcpack_${machine_name}/CMake/ctest_script.cmake,release -R 'short-LiH|unit' -VV  --timeout 7200
#			    ctest -j 1 -DCMAKE_C_COMPILER=cc -DCMAKE_CXX_COMPILER=CC -DQMC_DATA=$QMC_DATA -DENABLE_TIMERS=1 -S $PWD/../qmcpack_${machine_name}/CMake/ctest_script.cmake,release -E 'long' -VV  --timeout 7200
			    ;;
			"build_intel_complex")
# Build with default Intel PrgEnv on eos. This is not checked!
                            module swap gcc gcc/6.3.0 # For C++14 library visibility to Intel compiler
			    module load cray-hdf5-parallel
			    module load cmake3/3.6.1
			    module load boost
			    module unload cray-libsci
			    export QMCPACK_TEST_SUBMIT_NAME=Intel-Complex-Release
			    ctest -j 1 -DQMC_COMPLEX=1 -DCMAKE_C_COMPILER=cc -DCMAKE_CXX_COMPILER=CC -DQMC_DATA=$QMC_DATA -DENABLE_TIMERS=1 -S $PWD/../qmcpack_${machine_name}/CMake/ctest_script.cmake,release -R 'short-LiH|unit' -VV --timeout 7200
			    ;;
			"build_intel_soa")
# Build with default Intel PrgEnv on eos. This is not checked!
                            module swap gcc gcc/6.3.0 # For C++14 library visibility to Intel compiler
			    module load cray-hdf5-parallel
			    module load cmake3/3.6.1
			    module load boost
			    module unload cray-libsci
			    export QMCPACK_TEST_SUBMIT_NAME=Intel-SoA-Release
			    ctest -j 1 -DCMAKE_C_COMPILER=cc -DCMAKE_CXX_COMPILER=CC -DENABLE_SOA=1 -DQMC_DATA=$QMC_DATA -DENABLE_TIMERS=1 -S $PWD/../qmcpack_${machine_name}/CMake/ctest_script.cmake,release -R 'short-LiH|unit' -VV  --timeout 7200
			    ;;
			"build_intel_complex_soa")
# Build with default Intel PrgEnv on eos. This is not checked!
                            module swap gcc gcc/6.3.0 # For C++14 library visibility to Intel compiler
			    module load cray-hdf5-parallel
			    module load cmake3/3.6.1
			    module load boost
			    module unload cray-libsci
			    export QMCPACK_TEST_SUBMIT_NAME=Intel-Complex-SoA-Release
			    ctest -j 1 -DQMC_COMPLEX=1 -DCMAKE_C_COMPILER=cc -DCMAKE_CXX_COMPILER=CC -DENABLE_SOA=1 -DQMC_DATA=$QMC_DATA -DENABLE_TIMERS=1 -S $PWD/../qmcpack_${machine_name}/CMake/ctest_script.cmake,release -R 'short-LiH|unit' -VV --timeout 7200
			    ;;
			*)
			    echo "ERROR: Unknown build type $sys"
			    ;;
		    esac
		    
		done
	    else
		echo "ERROR: No CMakeLists.txt Bad git clone by master job."
		exit 1
	    fi
	fi	    
    else
	echo "ERROR: Unable to make test directory ${test_dir}"
	exit 1
    fi
    
else
    echo "ERROR: No directory ${test_path}"
    exit 1
fi
    
echo --- END `date`
