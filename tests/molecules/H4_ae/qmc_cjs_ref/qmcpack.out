  Input file(s): qmcpack_ae.xml 

=====================================================
                    QMCPACK 3.5.0 

       (c) Copyright 2003-  QMCPACK developers

                    Please cite:
 J. Kim et al. J. Phys. Cond. Mat. 30 195901 (2018)
      https://doi.org/10.1088/1361-648X/aab9c3

  Git branch: countingjastrow
  Last git commit: 3b94cbbee1faec9fd57e9755a289186d124a4d4c-dirty
  Last git commit date: Thu Dec 13 16:03:16 2018 -0800
  Last git commit subject: adjusted includes to compensate for DiffCJO removal
=====================================================
  Global options 

  MPI Nodes             = 64
  MPI Nodes per group   = 64
  MPI Group ID          = 0
  OMP 1st level threads = 1
  OMP nested threading disabled or only 1 thread on the 2nd level

  Precision used in this calculation, see definitions in the manual:
  Base precision      = double
  Full precision      = double

  Input XML = qmcpack_ae.xml

  Project = H4
  date    = 2018-12-19 15:00:21 PST
  host    = n0013.savio3

 Random Number
 -------------
  Offset for the random number seeds from input file (mod 1024): 703

  Range of prime numbers to use as seeds over processors and threads = 5323-5851


 Particle Set 
 ------------
  Name: e
  All the species have the same mass 1
  Particle set size: 4

 Particle Set 
 ------------
  Name: ion0
  All the species have the same mass 1
  Particle set size: 4

 Wavefunction setup: 
 ------------------- 
  Name: psi0

  Distance table for similar particles (A-A):
    source/target: e
    Using array-of-structure (AoS) data layout (less efficient than SoA)
    Distance computations use open boundary conditions in 3D.


  Distance table for dissimilar particles (A-B):
    source: ion0  target: e
    Using array-of-structure (AoS) data layout (less efficient than SoA)
    Distance computations use open boundary conditions in 3D.

 size = 10 parameters 
 cusp = 0
 rcut = 10
Parameter     Name      Value
eH_0 -0.2485 1 1  ON 0
eH_1 -0.17044 1 1  ON 1
eH_2 -0.094096 1 1  ON 2
eH_3 -0.0074391 1 1  ON 3
eH_4 0.03173 1 1  ON 4
eH_5 0.1233 1 1  ON 5
eH_6 0.18658 1 1  ON 6
eH_7 0.18479 1 1  ON 7
eH_8 0.017159 1 1  ON 8
eH_9 -0.018068 1 1  ON 9
  RadialJastrowBuilder adds a functor with cusp = -0.25
 size = 10 parameters 
 cusp = -0.25
 rcut = 10
Parameter     Name      Value
uu_0 0 1 1  ON 0
uu_1 0 1 1  ON 1
uu_2 0 1 1  ON 2
uu_3 0 1 1  ON 3
uu_4 0 1 1  ON 4
uu_5 0 1 1  ON 5
uu_6 0 1 1  ON 6
uu_7 0 1 1  ON 7
uu_8 0 1 1  ON 8
uu_9 0 1 1  ON 9
  RadialJastrowBuilder adds a functor with cusp = -0.5
 size = 10 parameters 
 cusp = -0.5
 rcut = 10
Parameter     Name      Value
ud_0 0.7176 1 1  ON 0
ud_1 0.38142 1 1  ON 1
ud_2 0.1399 1 1  ON 2
ud_3 -0.035024 1 1  ON 3
ud_4 -0.15834 1 1  ON 4
ud_5 -0.23552 1 1  ON 5
ud_6 -0.27216 1 1  ON 6
ud_7 -0.27656 1 1  ON 7
ud_8 -0.21929 1 1  ON 8
ud_9 -0.042253 1 1  ON 9
GaussianCountingFunctor::put
GaussianCountingFunctor::put
GaussianCountingFunctor::put
GaussianCountingFunctor::put
  GaussianCountingFunctor::makeClone
NormalizedGaussianRegion::initialize

CountingJastrowOrbital::reportStatus begin
  F matrix:, opt_F: true  0.44903  0.53502  0.5255  0.68081
  0.53502  0.51408  0.48658  0.62182
  0.5255  0.48658  0.27189  0.94951
  0.68081  0.62182  0.94951  0
  num_regions: 4, num_els: 4
  Optimizable variables:
F_0_0 0.44903 0 1  ON 0
F_0_1 0.53502 0 1  ON 1
F_0_2 0.5255 0 1  ON 2
F_0_3 0.68081 0 1  ON 3
F_1_1 0.51408 0 1  ON 4
F_1_2 0.48658 0 1  ON 5
F_1_3 0.62182 0 1  ON 6
F_2_2 0.27189 0 1  ON 7
F_2_3 0.94951 0 1  ON 8

NormalizedGaussianRegion::reportStatus begin
num_els: 4, num_regions: 4
Normalized: true
Counting Functions: 
GaussianCountingFunctor::reportStatus begin
id: g0
  A: 
  0  0  0
  0  0  0
  0  0  0
  opt_A: 0, 0, 0, 0, 0, 0, 
  B:   0  0  0
  opt_B: 0, 0, 0, 
  C: 0
  opt_C: 0
  registered optimizable variables:
GaussianCountingFunctor::reportStatus end
GaussianCountingFunctor::reportStatus begin
id: g1
  A: 
  0  0  0
  0  0  0
  0  0  0
  opt_A: 1, 1, 1, 1, 1, 1, 
  B:   -1.13346  1.31921  0
  opt_B: 1, 1, 1, 
  C: 4.293
  opt_C: 1
  registered optimizable variables:
g1_A_xx 0 0 1  ON 0
g1_A_xy 0 0 1  ON 1
g1_A_xz 0 0 1  ON 2
g1_A_yy 0 0 1  ON 3
g1_A_yz 0 0 1  ON 4
g1_A_zz 0 0 1  ON 5
g1_B_x -1.13346 0 1  ON 6
g1_B_y 1.31921 0 1  ON 7
g1_B_z 0 0 1  ON 8
g1_C 4.293 0 1  ON 9
GaussianCountingFunctor::reportStatus end
GaussianCountingFunctor::reportStatus begin
id: g2
  A: 
  0  0  0
  0  0  0
  0  0  0
  opt_A: 1, 1, 1, 1, 1, 1, 
  B:   -3.49648  3.35424  0
  opt_B: 1, 1, 1, 
  C: -8.08161
  opt_C: 1
  registered optimizable variables:
g2_A_xx 0 0 1  ON 0
g2_A_xy 0 0 1  ON 1
g2_A_xz 0 0 1  ON 2
g2_A_yy 0 0 1  ON 3
g2_A_yz 0 0 1  ON 4
g2_A_zz 0 0 1  ON 5
g2_B_x -3.49648 0 1  ON 6
g2_B_y 3.35424 0 1  ON 7
g2_B_z 0 0 1  ON 8
g2_C -8.08161 0 1  ON 9
GaussianCountingFunctor::reportStatus end
GaussianCountingFunctor::reportStatus begin
id: g3
  A: 
  0  0  0
  0  0  0
  0  0  0
  opt_A: 1, 1, 1, 1, 1, 1, 
  B:   -5.49221  -2.7668  0
  opt_B: 1, 1, 1, 
  C: -94.3036
  opt_C: 1
  registered optimizable variables:
g3_A_xx 0 0 1  ON 0
g3_A_xy 0 0 1  ON 1
g3_A_xz 0 0 1  ON 2
g3_A_yy 0 0 1  ON 3
g3_A_yz 0 0 1  ON 4
g3_A_zz 0 0 1  ON 5
g3_B_x -5.49221 0 1  ON 6
g3_B_y -2.7668 0 1  ON 7
g3_B_z 0 0 1  ON 8
g3_C -94.3036 0 1  ON 9
GaussianCountingFunctor::reportStatus end
NormalizedGaussianRegion::reportStatus end
CountingJastrowOrbital::reportStatus end
end CountingRegionOrbital::put
Using MolecularSPOBuilder<NGOBuilder>
  Created SPOSet builder named 'LCAOBSet' of type molecularorbital
  AO BasisSet for H
   Angular momentum expanded in cartesian functions x^lx y^ly z^lz according to Gamess
Using log grid with default values: ri = 1e-06 rf = 100 npts = 1001
   R(n,l,m,s) 0 0 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
Adding 1 cartesian gaussian orbitals for l= 0
   R(n,l,m,s) 1 0 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
	Setting GridManager of 1 radial orbital to false
Adding 1 cartesian gaussian orbitals for l= 0
   R(n,l,m,s) 2 0 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
	Setting GridManager of 2 radial orbital to false
Adding 1 cartesian gaussian orbitals for l= 0
   R(n,l,m,s) 3 0 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
	Setting GridManager of 3 radial orbital to false
Adding 1 cartesian gaussian orbitals for l= 0
   R(n,l,m,s) 4 1 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
	Setting GridManager of 4 radial orbital to false
Adding 3 cartesian gaussian orbitals for l= 1
   R(n,l,m,s) 5 1 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
	Setting GridManager of 5 radial orbital to false
Adding 3 cartesian gaussian orbitals for l= 1
   R(n,l,m,s) 6 1 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
	Setting GridManager of 6 radial orbital to false
Adding 3 cartesian gaussian orbitals for l= 1
   R(n,l,m,s) 7 2 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
	Setting GridManager of 7 radial orbital to false
Adding 6 cartesian gaussian orbitals for l= 2
   R(n,l,m,s) 8 2 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
	Setting GridManager of 8 radial orbital to false
Adding 6 cartesian gaussian orbitals for l= 2
   R(n,l,m,s) 9 3 0 0
Expanding Ylm (angular function) according to Gamess using cartesian gaussians
	Setting GridManager of 9 radial orbital to false
Adding 10 cartesian gaussian orbitals for l= 3
   Maximu Angular Momentum   = 3
   Number of Radial functors = 10
   Basis size                = 35

Creating SPOSet in SlaterDetBuilder::put(xmlNodePtr cur).
spo_name = spo-up
  Building SPOSet 'spo-up' with 'LCAOBSet' basis set.
Creating LCOrbitalSet with the input coefficients
SPO coefficients are applied by a single dgemm (BLAS3)
Creating SPOSet in SlaterDetBuilder::put(xmlNodePtr cur).
spo_name = spo-dn
  Building SPOSet 'spo-dn' with 'LCAOBSet' basis set.
Creating LCOrbitalSet with the input coefficients
SPO coefficients are applied by a single dgemm (BLAS3)
Using Bryan's algorithm for MultiSlaterDeterminant expansion. 
Creating base determinant (up) for MSD expansion. 
Creating base determinant (down) for MSD expansion. 
Found determinant list. 
Reading CI expansion.
Found 1 terms in the MSD expansion.
Norm of ci vector (sum of ci^2): 1
Norm of qchem ci vector (sum of qchem_ci^2): 1
Found 1 unique up determinants.
Found 1 unique down determinants.
Number of terms in pairs array: 0
Number of terms in pairs array: 0
CI coefficients are not optimizable. 
  FermionWF = MultiSlaterDeterminantFast
  QMCHamiltonian::addOperator Kinetic to H, physical Hamiltonian 
  QMCHamiltonian::addOperator ElecElec to H, physical Hamiltonian 
QMCHamiltonian::addOperatorType added type coulomb named ElecElec
  QMCHamiltonian::addOperator IonElec to H, physical Hamiltonian 
QMCHamiltonian::addOperatorType added type coulomb named IonElec

  Distance table for similar particles (A-A):
    source/target: ion0
    Using structure-of-arrays (SoA) data layout
    Distance computations use open boundary conditions in 3D.

  QMCHamiltonian::addOperator IonIon to H, physical Hamiltonian 
QMCHamiltonian::addOperatorType added type coulomb named IonIon

  QMCHamiltonian::add2WalkerProperty added
    4 to P::PropertyList 
    0 to P::Collectables 
    starting Index of the observables in P::PropertyList = 9
ParticleSetPool::randomize 
  Initialization Execution time = 0.07372 secs
=========================================================
 Summary of QMC systems 
=========================================================
ParticleSetPool has: 

  ParticleSet e : 0 2 4 

    4

    u  2.4601162537e+00  6.7476360528e+00 -1.9073129953e+00
    u  2.2585811248e+00  2.1282254384e+00  5.1545776028e-02
    d  8.4796873937e-01  5.1735597110e+00  8.4642416761e-01
    d  3.1597337850e+00  5.1079432473e+00  1.0545953717e+00

  ParticleSet ion0 : 0 4 

    4

    H  2.6136335251e+00  5.0192822691e+00  0.0000000000e+00
    H  3.7470985117e+00  3.7000714572e+00  0.0000000000e+00
    H  6.1101167093e+00  1.6650404768e+00  0.0000000000e+00
    H  8.1058480342e+00  7.7860826617e+00  0.0000000000e+00

  Hamiltonian h0
  Kinetic         Kinetic energy
  ElecElec        CoulombAA source/target e

  IonElec         CoulombAB source=ion0

  IonIon          CoulombAA source/target ion0


=========================================================
  Start VMC
  File Root H4.s000 append = no 
=========================================================
  Adding 1 walkers to 0 existing sets
  Total number of walkers: 6.4000000000e+01
  Total weight: 6.4000000000e+01
  Resetting Properties of the walkers 1 x 13

<vmc function="put">
  qmc_counter=0  my_counter=0
  time step      = 5.0000000000e-02
  blocks         = 500
  steps          = 500
  substeps       = 1
  current        = 0
  target samples = 1.0000000000e+06
  walkers/mpi    = 1

  stepsbetweensamples = 16
<parameter name="blocks" condition="int">500</parameter>
<parameter name="blocks_between_recompute" condition="int">0</parameter>
<parameter name="check_properties" condition="int">100</parameter>
<parameter name="checkproperties" condition="int">100</parameter>
<parameter name="current" condition="int">0</parameter>
<parameter name="dmcwalkersperthread" condition="real">1.5625000000e+04</parameter>
<parameter name="maxcpusecs" condition="real">3.6000000000e+05</parameter>
<parameter name="record_configs" condition="int">0</parameter>
<parameter name="record_walkers" condition="int">16</parameter>
<parameter name="recordconfigs" condition="int">0</parameter>
<parameter name="recordwalkers" condition="int">16</parameter>
<parameter name="rewind" condition="int">0</parameter>
<parameter name="samples" condition="real">1.0000000000e+06</parameter>
<parameter name="samplesperthread" condition="real">1.5625000000e+04</parameter>
<parameter name="steps" condition="int">500</parameter>
<parameter name="stepsbetweensamples" condition="int">16</parameter>
<parameter name="store_configs" condition="int">0</parameter>
<parameter name="storeconfigs" condition="int">0</parameter>
<parameter name="sub_steps" condition="int">1</parameter>
<parameter name="substeps" condition="int">1</parameter>
<parameter name="tau" condition="au">5.0000000000e-02</parameter>
<parameter name="time_step" condition="au">5.0000000000e-02</parameter>
<parameter name="timestep" condition="au">5.0000000000e-02</parameter>
<parameter name="use_drift" condition="string">yes</parameter>
<parameter name="usedrift" condition="string">yes</parameter>
<parameter name="walkers" condition="int">1</parameter>
<parameter name="warmup_steps" condition="int">10000</parameter>
<parameter name="warmupsteps" condition="int">10000</parameter>
  DumpConfig==false Nothing (configurations, state) will be saved.
  Walker Samples are dumped every 16 steps.
</vmc>
  Adding a default LocalEnergyEstimator for the MainEstimator 
  Initial partition of walkers 0 1 

  Using Particle by Particle moves
  Walker moves with drift
  Total Sample Size   =1000000
  Walker distribution on root = 0 1 
===== Memory Usage after the buffer registration =====
Available memory on node 0, free + buffers : 88044 MB
Memory footprint by rank 0 on node 0       : 50 MB
==================================================
  Anonymous Buffer size per walker : 20904 Bytes.
MEMORY increase 0 MB VMC::resetRun
====================================================
  SimpleFixedNodeBranch::finalize after a VMC block
    QMC counter        = 0
    time step          = 0.05
    reference energy   = -2.05262
    reference variance = 0.376914
====================================================
  QMC Execution time = 2.5811e+02 secs 
  Total Execution time = 2.5812e+02 secs

=========================================================
  A new xml input file : H4.s000.cont.xml
