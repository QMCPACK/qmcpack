
import testing
from testing import value_eq,object_eq,text_eq


def test_import():
    from pwscf_analyzer import PwscfAnalyzer
#end def test_import



def test_empty_init():
    from pwscf_analyzer import PwscfAnalyzer

    PwscfAnalyzer()
#end def test_empty_init



def test_analyze():
    import os
    from numpy import array,ndarray
    from generic import obj
    from pwscf_analyzer import PwscfAnalyzer

    tpath = testing.setup_unit_test_output_directory(
        test      = 'pwscf_analyzer',
        subtest   = 'test_analyze',
        file_sets = ['scf_output','relax_output'],
        )

    scf_path = os.path.join(tpath,'scf_output')
    relax_path = os.path.join(tpath,'relax_output')

    # scf w/o actual analysis
    pa = PwscfAnalyzer(scf_path,'scf.in','scf.out')

    del pa.abspath
    del pa.path

    pa_ref = obj(
        infile_name     = 'scf.in',
        outfile_name    = 'scf.out',
        pw2c_outfile_name = None,
        info = obj(
            md_only         = False,
            warn            = False,
            xml             = False,
            ),
        input = obj(
            atomic_positions = obj(
                atoms           = ['C','C','C','C','C','C','C','C','C','C','C','C','C','C','C'],
                positions       = array(
                                  [[-0.08993686, -0.08993686, -0.08993686],
                                   [ 3.46309801,  3.46309801, -0.08993686],
                                   [ 5.05974172,  5.05974172,  1.70077347],
                                   [-0.08993686,  3.46309801,  3.46309801],
                                   [ 1.70077347,  5.05974172,  5.05974172],
                                   [ 3.37014984,  6.7493336 ,  3.37014983],
                                   [ 5.05974172,  8.41870996,  5.05974172],
                                   [ 3.46309801, -0.08993686,  3.46309801],
                                   [ 5.05974172,  1.70077347,  5.05974172],
                                   [ 6.7493336 ,  3.37014984,  3.37014984],
                                   [ 8.41870996,  5.05974172,  5.05974172],
                                   [ 3.37014984,  3.37014984,  6.7493336 ],
                                   [ 5.05974172,  5.05974172,  8.41870996],
                                   [ 6.7493336 ,  6.7493336 ,  6.7493336 ],
                                   [ 8.43290286,  8.43290286,  8.43290286]],dtype=float),
                specifier       = 'bohr',
                ),
            atomic_species = obj(
                atoms           = ['C'],
                specifier       = '',
                masses = obj(
                    C               = 12.011,
                    ),
                pseudopotentials = obj(
                    C               = 'C.BFD.upf',
                    ),
                ),
            cell_parameters = obj(
                specifier       = 'bohr',
                vectors         = array(
                                  [[ 6.74632229,  6.74632229,  0.        ],
                                   [-0.        ,  6.74632229,  6.74632229],
                                   [ 6.74632229, -0.        ,  6.74632229]],dtype=float),
                ),
            control = obj(
                calculation     = 'scf',
                outdir          = 'pwscf_output',
                prefix          = 'pwscf',
                pseudo_dir      = './',
                verbosity       = 'high',
                tstress         = True,
                tprnfor         = True,
                ),
            electrons = obj(
                conv_thr        = 1e-07,
                ),
            k_points = obj(
                grid            = array([2.,2.,2.],dtype=float),
                shift           = array([0.,0.,0.],dtype=float),
                specifier       = 'automatic',
                ),
            system = obj(
                ecutwfc         = 75.0,
                ibrav           = 0,
                input_dft       = 'lda',
                nat             = 15,
                nspin           = 1,
                ntyp            = 1,
                tot_charge      = 0.0,
                ),
            ),
        )

    assert(object_eq(pa.to_obj(),pa_ref))

    input_read = pa.input.copy()

    # scf w/ full analysis
    pa = PwscfAnalyzer(scf_path,'scf.in','scf.out',analyze=True)

    assert(object_eq(pa.input,input_read))

    del pa.input
    del pa.abspath
    del pa.path

    # Note: band read is failing for spin unpolarized case.
    # Test needed for spin polarized case w/ bands, then fix unpolarized.
    pa_ref = obj(
        E               = -170.11048381,
        Ef              = 0.0,
        cputime         = 0.001175,
        energies        = array([-170.11048381],dtype=float),
        fermi_energies  = array([],dtype=float),
        forces          = array(
                          [[[-0.01852018, -0.01852018, -0.01852018],
                            [ 0.01852018,  0.01852018, -0.01852018],
                            [ 0.        ,  0.        , -0.00189264],
                            [-0.01852018,  0.01852018,  0.01852018],
                            [-0.00189264, -0.        ,  0.        ],
                            [ 0.00046488, -0.00046488,  0.00046488],
                            [-0.        ,  0.00189264,  0.        ],
                            [ 0.01852018, -0.01852018,  0.01852018],
                            [ 0.        , -0.00189264, -0.        ],
                            [-0.00046488,  0.00046488,  0.00046488],
                            [ 0.00189264,  0.        ,  0.        ],
                            [ 0.00046488,  0.00046488, -0.00046488],
                            [ 0.        , -0.        ,  0.00189264],
                            [-0.00046488, -0.00046488, -0.00046488],
                            [-0.        ,  0.        ,  0.        ]]],dtype=float),
        infile_name     = 'scf.in',
        kpoints_cart    = array(
                          [[ 0.       ,  0.       ,  0.       ],
                           [-0.3535534,  0.3535534, -0.3535534],
                           [ 0.       ,  0.       , -0.7071068]],dtype=float),
        kpoints_unit    = array([[ 0.,   0. ,  0. ],
                                 [ 0.,   0. , -0.5],
                                 [ 0.,  -0.5, -0.5]],dtype=float),
        kweights        = array([0.25,1.,  0.75],dtype=float),
        max_forces      = array([0.03207789],dtype=float),
        outfile_name    = 'scf.out',
        pressure        = -170.96,
        pw2c_outfile_name = None,
        stress          = [[-0.00116217, 0.0, 0.0, -170.96, 0.0, 0.0], 
                           [ 0.0, -0.00116217, -0.0, 0.0, -170.96, -0.0], 
                           [ 0.0, 0.0, -0.00116217, 0.0, 0.0, -170.96]],
        tot_forces      = array([0.064343],dtype=float),
        volume          = 614.0889,
        walltime        = 0.00164444444444,
        info = obj(
            md_only         = False,
            warn            = False,
            xml             = False,
            ),
        md_data = obj(
            kinetic_energy   = array([-170.96],dtype=float),
            potential_energy = array([0.84951619],dtype=float),
            pressure         = array([-170.96],dtype=float),
            temperature      = array([0.],dtype=float),
            time             = array([0.],dtype=float),
            total_energy     = array([-170.11048381],dtype=float),
            ),
        md_stats = obj(
            kinetic_energy   = (-170.96, 0.0),
            potential_energy = (0.8495161900000028, 0.0),
            pressure         = (-170.96, 0.0),
            temperature      = (0.0, 0.0),
            time             = (0.0, 0.0),
            total_energy     = (-170.11048381, 0.0),
            ),
        )

    assert(object_eq(pa.to_obj(),pa_ref))


    # relax w/ full analysis
    pa = PwscfAnalyzer(relax_path,'relax.in','relax.out',analyze=True)

    del pa.input
    del pa.abspath
    del pa.path

    pa_ref = obj(
        E               = -168.41267772,
        Ef              = 0.0,
        cputime         = 0.00186111111111,
        energies        = array([-168.38623938,-168.40640935,-168.41263281,-168.41267772],dtype=float),
        fermi_energies  = array([],dtype=float),
        forces          = array(
                          [[[-4.625982e-02, -4.625982e-02, -4.625982e-02],
                            [ 4.625982e-02,  4.625982e-02, -4.625982e-02],
                            [ 0.000000e+00,  0.000000e+00,  2.650527e-02],
                            [-4.625982e-02,  4.625982e-02,  4.625982e-02],
                            [ 2.650527e-02,  0.000000e+00,  0.000000e+00],
                            [-2.041270e-03,  2.041270e-03, -2.041270e-03],
                            [ 0.000000e+00, -2.650527e-02,  0.000000e+00],
                            [ 4.625982e-02, -4.625982e-02,  4.625982e-02],
                            [ 0.000000e+00,  2.650527e-02,  0.000000e+00],
                            [ 2.041270e-03, -2.041270e-03, -2.041270e-03],
                            [-2.650527e-02, -0.000000e+00,  0.000000e+00],
                            [-2.041270e-03, -2.041270e-03,  2.041270e-03],
                            [ 0.000000e+00,  0.000000e+00, -2.650527e-02],
                            [ 2.041270e-03,  2.041270e-03,  2.041270e-03],
                            [ 0.000000e+00,  0.000000e+00,  0.000000e+00]],
                           [[-2.192410e-02, -2.192410e-02, -2.192410e-02],
                            [ 2.192410e-02,  2.192410e-02, -2.192410e-02],
                            [ 0.000000e+00,  0.000000e+00, -1.131570e-02],
                            [-2.192410e-02,  2.192410e-02,  2.192410e-02],
                            [-1.131570e-02,  0.000000e+00,  0.000000e+00],
                            [ 1.693610e-03, -1.693610e-03,  1.693610e-03],
                            [ 0.000000e+00,  1.131570e-02,  0.000000e+00],
                            [ 2.192410e-02, -2.192410e-02,  2.192410e-02],
                            [ 0.000000e+00, -1.131570e-02,  0.000000e+00],
                            [-1.693610e-03,  1.693610e-03,  1.693610e-03],
                            [ 1.131570e-02, -0.000000e+00,  0.000000e+00],
                            [ 1.693610e-03,  1.693610e-03, -1.693610e-03],
                            [-0.000000e+00,  0.000000e+00,  1.131570e-02],
                            [-1.693610e-03, -1.693610e-03, -1.693610e-03],
                            [ 0.000000e+00,  0.000000e+00,  0.000000e+00]],
                           [[ 5.327200e-04,  5.327200e-04,  5.327200e-04],
                            [-5.327200e-04, -5.327200e-04,  5.327200e-04],
                            [ 0.000000e+00,  0.000000e+00, -1.372200e-03],
                            [ 5.327200e-04, -5.327200e-04, -5.327200e-04],
                            [-1.372200e-03, -0.000000e+00,  0.000000e+00],
                            [-3.131240e-03,  3.131240e-03, -3.131240e-03],
                            [ 0.000000e+00,  1.372200e-03, -0.000000e+00],
                            [-5.327200e-04,  5.327200e-04, -5.327200e-04],
                            [-0.000000e+00, -1.372200e-03,  0.000000e+00],
                            [ 3.131240e-03, -3.131240e-03, -3.131240e-03],
                            [ 1.372200e-03,  0.000000e+00, -0.000000e+00],
                            [-3.131240e-03, -3.131240e-03,  3.131240e-03],
                            [ 0.000000e+00,  0.000000e+00,  1.372200e-03],
                            [ 3.131240e-03,  3.131240e-03,  3.131240e-03],
                            [ 0.000000e+00,  0.000000e+00,  0.000000e+00]],
                           [[ 6.653000e-05,  6.653000e-05,  6.653000e-05],
                            [-6.653000e-05, -6.653000e-05,  6.653000e-05],
                            [ 0.000000e+00,  0.000000e+00, -4.582100e-04],
                            [ 6.653000e-05, -6.653000e-05, -6.653000e-05],
                            [-4.582100e-04,  0.000000e+00,  0.000000e+00],
                            [ 8.294900e-04, -8.294900e-04,  8.294900e-04],
                            [ 0.000000e+00,  4.582100e-04,  0.000000e+00],
                            [-6.653000e-05,  6.653000e-05, -6.653000e-05],
                            [ 0.000000e+00, -4.582100e-04,  0.000000e+00],
                            [-8.294900e-04,  8.294900e-04,  8.294900e-04],
                            [ 4.582100e-04,  0.000000e+00, -0.000000e+00],
                            [ 8.294900e-04,  8.294900e-04, -8.294900e-04],
                            [ 0.000000e+00,  0.000000e+00,  4.582100e-04],
                            [-8.294900e-04, -8.294900e-04, -8.294900e-04],
                            [ 0.000000e+00,  0.000000e+00,  0.000000e+00]]],dtype=float),
        infile_name     = 'relax.in',
        max_forces      = array([0.08012436,0.03797366,0.00542347,0.00143672],dtype=float),
        outfile_name    = 'relax.out',
        pressure        = 0.0,
        pw2c_outfile_name = None,
        stress          = [],
        tot_forces      = array([],dtype=float),
        volume          = 614.0889,
        walltime        = 0.00251388888889,
        info = obj(
            md_only         = False,
            warn            = False,
            xml             = False,
            ),
        structures = obj({
            0 : obj(
                atoms           = ['C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C'],
                positions       = array(
                                  [[-0.04625982, -0.04625982, -0.04625982],
                                   [ 3.41942097,  3.41942097, -0.04625982],
                                   [ 5.05974172,  5.05974172,  1.71308584],
                                   [-0.04625982,  3.41942097,  3.41942097],
                                   [ 1.71308584,  5.05974172,  5.05974172],
                                   [ 3.37111988,  6.74836356,  3.37111987],
                                   [ 5.05974172,  8.40639759,  5.05974172],
                                   [ 3.41942097, -0.04625982,  3.41942097],
                                   [ 5.05974172,  1.71308584,  5.05974172],
                                   [ 6.74836356,  3.37111988,  3.37111988],
                                   [ 8.40639759,  5.05974172,  5.05974172],
                                   [ 3.37111988,  3.37111988,  6.74836356],
                                   [ 5.05974172,  5.05974172,  8.40639759],
                                   [ 6.74836356,  6.74836356,  6.74836356],
                                   [ 8.43290286,  8.43290286,  8.43290286]],
                                   dtype=float),
                ),
            1 : obj(
                atoms           = ['C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C'],
                positions       = array(
                                  [[-0.09055704, -0.09055704, -0.09055704],
                                   [ 3.46371819,  3.46371819, -0.09055704],
                                   [ 5.05974172,  5.05974172,  1.70201536],
                                   [-0.09055704,  3.46371819,  3.46371819],
                                   [ 1.70201536,  5.05974172,  5.05974172],
                                   [ 3.37322753,  6.74625591,  3.37322752],
                                   [ 5.05974172,  8.41746807,  5.05974172],
                                   [ 3.46371819, -0.09055704,  3.46371819],
                                   [ 5.05974172,  1.70201536,  5.05974172],
                                   [ 6.74625591,  3.37322753,  3.37322753],
                                   [ 8.41746807,  5.05974172,  5.05974172],
                                   [ 3.37322753,  3.37322753,  6.74625591],
                                   [ 5.05974172,  5.05974172,  8.41746807],
                                   [ 6.74625591,  6.74625591,  6.74625591],
                                   [ 8.43290286,  8.43290286,  8.43290286]],
                                   dtype=float),
                ),
            2 : obj(
                atoms           = ['C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C'],
                positions       = array(
                                  [[-0.08993686, -0.08993686, -0.08993686],
                                   [ 3.46309801,  3.46309801, -0.08993686],
                                   [ 5.05974172,  5.05974172,  1.70077347],
                                   [-0.08993686,  3.46309801,  3.46309801],
                                   [ 1.70077347,  5.05974172,  5.05974172],
                                   [ 3.37014984,  6.7493336 ,  3.37014983],
                                   [ 5.05974172,  8.41870996,  5.05974172],
                                   [ 3.46309801, -0.08993686,  3.46309801],
                                   [ 5.05974172,  1.70077347,  5.05974172],
                                   [ 6.7493336 ,  3.37014984,  3.37014984],
                                   [ 8.41870996,  5.05974172,  5.05974172],
                                   [ 3.37014984,  3.37014984,  6.7493336 ],
                                   [ 5.05974172,  5.05974172,  8.41870996],
                                   [ 6.7493336 ,  6.7493336 ,  6.7493336 ],
                                   [ 8.43290286,  8.43290286,  8.43290286]],
                                   dtype=float),
                ),
            3 : obj(
                atoms           = ['C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'C'],
                positions       = array(
                                  [[-0.08993686, -0.08993686, -0.08993686],
                                   [ 3.46309801,  3.46309801, -0.08993686],
                                   [ 5.05974172,  5.05974172,  1.70077347],
                                   [-0.08993686,  3.46309801,  3.46309801],
                                   [ 1.70077347,  5.05974172,  5.05974172],
                                   [ 3.37014984,  6.7493336 ,  3.37014983],
                                   [ 5.05974172,  8.41870996,  5.05974172],
                                   [ 3.46309801, -0.08993686,  3.46309801],
                                   [ 5.05974172,  1.70077347,  5.05974172],
                                   [ 6.7493336 ,  3.37014984,  3.37014984],
                                   [ 8.41870996,  5.05974172,  5.05974172],
                                   [ 3.37014984,  3.37014984,  6.7493336 ],
                                   [ 5.05974172,  5.05974172,  8.41870996],
                                   [ 6.7493336 ,  6.7493336 ,  6.7493336 ],
                                   [ 8.43290286,  8.43290286,  8.43290286]],
                                   dtype=float),
                ),
            }),
        )

    assert(object_eq(pa.to_obj(),pa_ref))

#end def test_analyze



