std_abs.h:71:3:constexpr double std::abs(double)	16	static
lazy_ostream.hpp:33:29:boost::unit_test::lazy_ostream::~lazy_ostream()	16	static
lazy_ostream.hpp:33:29:virtual boost::unit_test::lazy_ostream::~lazy_ostream()	32	static
lazy_ostream.hpp:35:29:static boost::unit_test::lazy_ostream& boost::unit_test::lazy_ostream::instance()	16	static
lazy_ostream.hpp:43:29:virtual std::ostream& boost::unit_test::lazy_ostream::operator()(std::ostream&) const	16	static
lazy_ostream.hpp:45:29:boost::unit_test::lazy_ostream::lazy_ostream(bool)	16	static
typeinfo:120:10:bool std::type_info::operator==(const std::type_info&) const	32	static
new:173:33:void* operator new(std::size_t, void*)	16	static
limits:1204:7:static constexpr long int std::numeric_limits<long int>::min()	16	static
limits:1207:7:static constexpr long int std::numeric_limits<long int>::max()	16	static
limits:1740:7:static constexpr double std::numeric_limits<double>::min()	16	static
limits:1743:7:static constexpr double std::numeric_limits<double>::max()	16	static
limits:1781:7:static constexpr double std::numeric_limits<double>::infinity()	16	static
ios_base.h:705:5:std::streamsize std::ios_base::precision(std::streamsize)	16	static
atomic:759:17:constexpr std::atomic<int>::atomic(std::atomic<int>::__integral_type)	32	static
sp_counted_base_std_atomic.hpp:30:13:void boost::detail::atomic_increment(std::atomic_int_least32_t*)	16	static
sp_counted_base_std_atomic.hpp:35:27:int_least32_t boost::detail::atomic_decrement(std::atomic_int_least32_t*)	16	static
sp_counted_base_std_atomic.hpp:74:5:boost::detail::sp_counted_base::sp_counted_base()	32	static
sp_counted_base_std_atomic.hpp:78:13:boost::detail::sp_counted_base::~sp_counted_base()	16	static
sp_counted_base_std_atomic.hpp:78:13:virtual boost::detail::sp_counted_base::~sp_counted_base()	32	static
sp_counted_base_std_atomic.hpp:89:18:virtual void boost::detail::sp_counted_base::destroy()	32	static
sp_counted_base_std_atomic.hpp:98:10:void boost::detail::sp_counted_base::add_ref_copy()	32	static
sp_counted_base_std_atomic.hpp:108:10:void boost::detail::sp_counted_base::release()	32	static
sp_counted_base_std_atomic.hpp:122:10:void boost::detail::sp_counted_base::weak_release()	32	static
type_traits:62:17:constexpr std::integral_constant<_Tp, __v>::operator std::integral_constant<_Tp, __v>::value_type() const [with _Tp = bool; _Tp __v = true]	16	static
shared_count.hpp:122:21:constexpr boost::detail::shared_count::shared_count()	16	static
shared_count.hpp:425:5:boost::detail::shared_count::~shared_count()	32	static
shared_count.hpp:433:5:boost::detail::shared_count::shared_count(const boost::detail::shared_count&)	32	static
shared_count.hpp:470:10:void boost::detail::shared_count::swap(boost::detail::shared_count&)	16	static
shared_ptr.hpp:242:13:)	16	static
assertion_result.hpp:45:25:void boost::test_tools::assertion_result::dummy::nonnull()	16	static
shared_ptr.hpp:341:25:boost::shared_ptr<boost::basic_wrap_stringstream<char> >::~shared_ptr()	32	static
assertion_result.hpp:52:5:boost::test_tools::assertion_result::assertion_result(bool)	32	static
assertion_result.hpp:60:25:bool boost::test_tools::assertion_result::operator!() const	32	static
assertion_result.hpp:62:5:boost::test_tools::assertion_result::operator boost::test_tools::assertion_result::safe_bool() const	48	static
assertion_result.hpp:65:5:boost::test_tools::assertion_result::readonly_property65::readonly_property65(write_param_t)	32	static
wrap_stringstream.hpp:40:7:boost::basic_wrap_stringstream<char>::basic_wrap_stringstream()	32	static
assertion_result.hpp:69:25:boost::wrap_stringstream& boost::test_tools::assertion_result::message()	48	static
assertion_result.hpp:76:25:boost::test_tools::assertion_result::const_string boost::test_tools::assertion_result::message() const	32	static
fwd.hpp:45:13:bool boost::test_tools::tt_detail::dummy_cond()	16	static
assertion_result.hpp:39:23:boost::test_tools::assertion_result::~assertion_result()	32	static
stl_type_index.hpp:93:12:boost::typeindex::stl_type_index::stl_type_index(const type_info_t&)	16	static
stl_type_index.hpp:117:43:const type_info_t& boost::typeindex::stl_type_index::type_info() const	16	static
stl_type_index.hpp:206:13:bool boost::typeindex::stl_type_index::equal(const boost::typeindex::stl_type_index&) const	32	static
function_base.hpp:603:3:boost::function_base::function_base()	16	static
function_base.hpp:689:8:bool boost::function_base::has_trivial_copy_and_destroy() const	16	static
fixture.hpp:37:13:boost::unit_test::test_unit_fixture::~test_unit_fixture()	16	static
fixture.hpp:37:13:virtual boost::unit_test::test_unit_fixture::~test_unit_fixture()	32	static
fixture.hpp:35:23:constexpr boost::unit_test::test_unit_fixture::test_unit_fixture()	16	static
function_template.hpp:1048:7:boost::function<void()>::~function()	32	static
decorator.hpp:94:13:boost::unit_test::decorator::base::~base()	16	static
decorator.hpp:94:13:virtual boost::unit_test::decorator::base::~base()	32	static
decorator.hpp:82:23:constexpr boost::unit_test::decorator::base::base()	16	static
shared_ptr.hpp:341:25:boost::shared_ptr<boost::unit_test::test_unit_fixture>::~shared_ptr()	32	static
decorator.hpp:233:29:boost::unit_test::decorator::fixture_t::fixture_t(boost::unit_test::test_unit_fixture_ptr)	32	static
indirections.hpp:68:1:const boost::unit_test::lazy_ostream& boost::test_tools::tt_detail::assertion_text(const boost::unit_test::lazy_ostream&, int)	16	static
test_unit.hpp:265:1:boost::unit_test::test_case* boost::unit_test::make_test_case(const boost::function<void()>&, boost::unit_test::const_string, boost::unit_test::const_string, std::size_t)	176	static
unit_test_suite.hpp:386:6:bool init_unit_test()	16	static
unit_test.hpp:61:1:int main(int, char**)	32	static
complex:1232:26:constexpr std::complex<double>::complex(double, double)	16	static
complex:1252:7:constexpr double std::complex<double>::real() const	16	static
complex:1256:7:constexpr double std::complex<double>::imag() const	16	static
complex:1287:7:std::complex<double>& std::complex<double>::operator+=(double)	16	static
complex:1301:7:std::complex<double>& std::complex<double>::operator*=(double)	16	static
core.hpp:265:1:boost::multi::blas::{anonymous}::v boost::multi::blas::rotg(const s&, const s&, boost::multi::blas::{anonymous}::s&, boost::multi::blas::{anonymous}::s&)	48	static
core.hpp:265:16:boost::multi::blas::{anonymous}::v boost::multi::blas::rotg(const d&, const d&, boost::multi::blas::{anonymous}::d&, boost::multi::blas::{anonymous}::d&)	48	static
core.hpp:266:1:boost::multi::blas::{anonymous}::v boost::multi::blas::rotmg(boost::multi::blas::{anonymous}::s&, boost::multi::blas::{anonymous}::s&, boost::multi::blas::{anonymous}::s&, const s&, boost::multi::blas::{anonymous}::s (&)[5])	64	static
core.hpp:266:16:boost::multi::blas::{anonymous}::v boost::multi::blas::rotmg(boost::multi::blas::{anonymous}::d&, boost::multi::blas::{anonymous}::d&, boost::multi::blas::{anonymous}::d&, const d&, boost::multi::blas::{anonymous}::d (&)[5])	64	static
core.hpp:273:1:boost::multi::blas::core::scal(int64_t, const s*, boost::multi::blas::{anonymous}::s*, int64_t)::<lambda(auto:31)> [with auto:31 = long int]	32	static
core.hpp:273:1:boost::multi::blas::core::scal(int64_t, const s*, boost::multi::blas::{anonymous}::s*, int64_t)::<lambda(auto:32)> [with auto:32 = long int]	32	static
core.hpp:273:1:boost::multi::blas::{anonymous}::s* boost::multi::blas::core::scal(int64_t, const s*, boost::multi::blas::{anonymous}::s*, int64_t)	80	static
core.hpp:273:16:boost::multi::blas::core::scal(int64_t, const d*, boost::multi::blas::{anonymous}::d*, int64_t)::<lambda(auto:33)> [with auto:33 = long int]	32	static
core.hpp:273:16:boost::multi::blas::core::scal(int64_t, const d*, boost::multi::blas::{anonymous}::d*, int64_t)::<lambda(auto:34)> [with auto:34 = long int]	32	static
core.hpp:273:16:boost::multi::blas::{anonymous}::d* boost::multi::blas::core::scal(int64_t, const d*, boost::multi::blas::{anonymous}::d*, int64_t)	80	static
core.hpp:273:31:boost::multi::blas::core::scal(int64_t, const c*, boost::multi::blas::{anonymous}::c*, int64_t)::<lambda(auto:35)> [with auto:35 = long int]	32	static
core.hpp:273:31:boost::multi::blas::core::scal(int64_t, const c*, boost::multi::blas::{anonymous}::c*, int64_t)::<lambda(auto:36)> [with auto:36 = long int]	32	static
core.hpp:273:31:boost::multi::blas::{anonymous}::c* boost::multi::blas::core::scal(int64_t, const c*, boost::multi::blas::{anonymous}::c*, int64_t)	80	static
core.hpp:273:46:boost::multi::blas::core::scal(int64_t, const z*, boost::multi::blas::{anonymous}::z*, int64_t)::<lambda(auto:37)> [with auto:37 = long int]	32	static
core.hpp:273:46:boost::multi::blas::core::scal(int64_t, const z*, boost::multi::blas::{anonymous}::z*, int64_t)::<lambda(auto:38)> [with auto:38 = long int]	32	static
core.hpp:273:46:boost::multi::blas::{anonymous}::z* boost::multi::blas::core::scal(int64_t, const z*, boost::multi::blas::{anonymous}::z*, int64_t)	80	static
core.hpp:273:61:boost::multi::blas::core::scal(int64_t, const d*, boost::multi::blas::{anonymous}::z*, int64_t)::<lambda(auto:39)> [with auto:39 = long int]	32	static
core.hpp:273:61:boost::multi::blas::core::scal(int64_t, const d*, boost::multi::blas::{anonymous}::z*, int64_t)::<lambda(auto:40)> [with auto:40 = long int]	32	static
core.hpp:273:61:boost::multi::blas::{anonymous}::z* boost::multi::blas::core::scal(int64_t, const d*, boost::multi::blas::{anonymous}::z*, int64_t)	80	static
core.hpp:273:77:boost::multi::blas::core::scal(int64_t, const s*, boost::multi::blas::{anonymous}::c*, int64_t)::<lambda(auto:41)> [with auto:41 = long int]	32	static
core.hpp:273:77:boost::multi::blas::core::scal(int64_t, const s*, boost::multi::blas::{anonymous}::c*, int64_t)::<lambda(auto:42)> [with auto:42 = long int]	32	static
core.hpp:273:77:boost::multi::blas::{anonymous}::c* boost::multi::blas::core::scal(int64_t, const s*, boost::multi::blas::{anonymous}::c*, int64_t)	80	static
index_range.hpp:96:12:constexpr boost::multi::range<IndexType, IndexTypeLast>::range(IndexType, IndexTypeLast) [with IndexType = long int; IndexTypeLast = long int]	16	static
layout.hpp:115:12:constexpr boost::multi::extensions_t<1>::extensions_t(const index_extension&)	32	static
layout.hpp:117:25:constexpr const base_& boost::multi::extensions_t<1>::base() const	16	static
layout.hpp:118:12:constexpr boost::multi::extensions_t<1>::extensions_t(const std::tuple<boost::multi::extension_t<long int, long int> >&)	16	static
layout.hpp:298:56:constexpr boost::multi::layout_t<1>::extensions_type boost::multi::operator*(const index_extension&, const extensions_type&)	80	static
layout.hpp:466:56:constexpr boost::multi::layout_t<2>::extensions_type boost::multi::operator*(const index_extension&, const extensions_type&)	48	static
wrap_stringstream.hpp:40:7:boost::basic_wrap_stringstream<char>::~basic_wrap_stringstream()	32	static
gemv.cpp:39:1:void multi_blas_gemv_invoker()	496	static
adl.hpp:105:39:) const [with As = {boost::multi::array_iterator<double, 1, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::array_iterator<double, 1, double*>}]	96	dynamic,bounded
initializer_list:75:7:constexpr const _E* std::initializer_list<_E>::begin() const [with _E = boost::multi::array<double, 1, std::allocator<double> >]	16	static
initializer_list:75:7:constexpr const _E* std::initializer_list<_E>::begin() const [with _E = double]	16	static
array.hpp:743:17:constexpr boost::multi::array<double, 1, std::allocator<double> >::array(std::initializer_list<double>) [inherited from boost::multi::static_array<double, 1, std::allocator<double> >]	48	static
array.hpp:929:2:boost::multi::array<T, D, A>::~array() [with T = double; long int D = 1; Alloc = std::allocator<double>]	32	static
array.hpp:247:12:constexpr boost::multi::static_array<T, D, Alloc>::static_array(std::initializer_list<typename std::conditional<(boost::multi::static_array<T, D, Alloc>::dimensionality > 1), boost::multi::array<typename boost::multi::static_array<T, D, Alloc>::element, (boost::multi::static_array<T, D, Alloc>::dimensionality - 1), typename boost::multi::static_array<T, D, Alloc>::allocator_type>, typename std::conditional<(boost::multi::static_array<T, D, Alloc>::dimensionality == 1), typename boost::multi::static_array<T, D, Alloc>::element, typename boost::multi::static_array<T, D, Alloc>::element>::type>::type>) [with T = double; long int D = 1; Alloc = std::allocator<double>]	80	static
array.hpp:743:17:constexpr boost::multi::array<double, 2>::array(std::initializer_list<boost::multi::array<double, 1, std::allocator<double> > >) [inherited from boost::multi::static_array<double, 2, std::allocator<double> >]	48	static
array.hpp:929:2:boost::multi::array<T, D, A>::~array() [with T = double; long int D = 2; Alloc = std::allocator<double>]	32	static
layout.hpp:114:37:>()) && (1 >= 1)), bool>::type <anonymous> = true][inherited from std::tuple<boost::multi::extension_t<long int, long int> >]	32	static
array.hpp:743:17:boost::multi::array<double, 1, std::allocator<double> >::array(boost::multi::layout_t<1>::extensions_type, const allocator_type&) [inherited from boost::multi::static_array<double, 1, std::allocator<double> >]	48	static
array_ref.hpp:247:27:constexpr decltype(auto) boost::multi::array_iterator<Element, D, ElementPtr>::operator->() const [with Element = double; long int D = 2; ElementPtr = const double*]	16	static
layout.hpp:252:17:constexpr auto boost::multi::layout_t<1, SSize>::stride(boost::multi::dimensionality_type) const [with SSize = long int]	32	static
array_ref.hpp:182:17:constexpr Ref* boost::multi::basic_array_ptr<Ref, Layout>::operator->() [with Ref = boost::multi::basic_array<double, 1, const double*, boost::multi::layout_t<1> >; Layout = boost::multi::layout_t<1>]	16	static
array_ref.hpp:283:31:constexpr boost::multi::array_iterator<Element, D, ElementPtr>::stride_type boost::multi::array_iterator<Element, D, ElementPtr>::stride() const & [with Element = double; long int D = 2; ElementPtr = const double*]	16	static
array_ref.hpp:1003:31:constexpr boost::multi::array_iterator<Element, 1, Ptr>::element_ptr boost::multi::array_iterator<Element, 1, Ptr>::base() const & [with Element = double; Ptr = double*]	16	static
array_ref.hpp:1003:31:constexpr boost::multi::array_iterator<Element, 1, Ptr>::element_ptr boost::multi::array_iterator<Element, 1, Ptr>::base() const & [with Element = double; Ptr = const double*]	16	static
array_ref.hpp:281:31:constexpr boost::multi::array_iterator<Element, D, ElementPtr>::element_ptr boost::multi::array_iterator<Element, D, ElementPtr>::base() const & [with Element = double; long int D = 2; ElementPtr = const double*]	16	static
array_ref.hpp:292:28:constexpr boost::multi::array_iterator<Element, D, ElementPtr>& boost::multi::array_iterator<Element, D, ElementPtr>::operator+=(boost::multi::array_iterator<Element, D, ElementPtr>::difference_type) [with Element = double; long int D = 2; ElementPtr = const double*]	32	static
array_ref.hpp:248:30:constexpr boost::multi::array_iterator<Element, D, ElementPtr> boost::multi::array_iterator<Element, D, ElementPtr>::operator+(boost::multi::array_iterator<Element, D, ElementPtr>::difference_type) const [with Element = double; long int D = 2; ElementPtr = const double*]	80	static
array_ref.hpp:1013:28:constexpr boost::multi::array_iterator<Element, 1, Ptr>& boost::multi::array_iterator<Element, 1, Ptr>::operator+=(boost::multi::array_iterator<Element, 1, Ptr>::difference_type) [with Element = double; Ptr = double*]	16	static
array_ref.hpp:1000:30:constexpr boost::multi::array_iterator<Element, 1, Ptr> boost::multi::array_iterator<Element, 1, Ptr>::operator+(boost::multi::array_iterator<Element, 1, Ptr>::difference_type) const [with Element = double; Ptr = double*]	64	static
gemv.hpp:19:6:auto boost::multi::blas::gemv_n(Context&&, A, MIt, Size, XIt, B, YIt) [with Context = boost::multi::blas::context; A = double; MIt = boost::multi::array_iterator<double, 2, const double*>; Size = long int; XIt = boost::multi::array_iterator<double, 1, const double*>; B = double; YIt = boost::multi::array_iterator<double, 1, double*>]	240	dynamic,bounded
gemv.hpp:41:6:auto boost::multi::blas::gemv_n(A, MIt, Size, XIt, B, YIt) [with A = double; MIt = boost::multi::array_iterator<double, 2, const double*>; Size = long int; XIt = boost::multi::array_iterator<double, 1, const double*>; B = double; YIt = boost::multi::array_iterator<double, 1, double*>]	160	dynamic,bounded
array_ref.hpp:754:28:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout>::iterator boost::multi::basic_array<T, D, ElementPtr, Layout>::begin() && [with T = double; long int D = 2; ElementPtr = double*; Layout = boost::multi::layout_t<2>]	48	static
array_ref.hpp:759:28:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout>::const_iterator boost::multi::basic_array<T, D, ElementPtr, Layout>::begin() const & [with T = double; long int D = 2; ElementPtr = double*; Layout = boost::multi::layout_t<2>]	64	dynamic,bounded
array.hpp:743:17:>&, const allocator_type&) [with TT = double; Args = {double*, boost::multi::layout_t<2, long int>}; <template-parameter-1-3> = void; <template-parameter-1-4> = boost::multi::array_iterator<double, 2, double*>][inherited from boost::multi::static_array<double, 2, std::allocator<double> >]	48	static
array_ref.hpp:247:27:constexpr decltype(auto) boost::multi::array_iterator<Element, D, ElementPtr>::operator->() const [with Element = double; long int D = 2; ElementPtr = double*]	16	static
array_ref.hpp:182:17:constexpr Ref* boost::multi::basic_array_ptr<Ref, Layout>::operator->() [with Ref = boost::multi::basic_array<double, 1, double*, boost::multi::layout_t<1> >; Layout = boost::multi::layout_t<1>]	16	static
array_ref.hpp:283:31:constexpr boost::multi::array_iterator<Element, D, ElementPtr>::stride_type boost::multi::array_iterator<Element, D, ElementPtr>::stride() const & [with Element = double; long int D = 2; ElementPtr = double*]	16	static
array_ref.hpp:281:31:constexpr boost::multi::array_iterator<Element, D, ElementPtr>::element_ptr boost::multi::array_iterator<Element, D, ElementPtr>::base() const & [with Element = double; long int D = 2; ElementPtr = double*]	16	static
array_ref.hpp:292:28:constexpr boost::multi::array_iterator<Element, D, ElementPtr>& boost::multi::array_iterator<Element, D, ElementPtr>::operator+=(boost::multi::array_iterator<Element, D, ElementPtr>::difference_type) [with Element = double; long int D = 2; ElementPtr = double*]	32	static
array_ref.hpp:248:30:constexpr boost::multi::array_iterator<Element, D, ElementPtr> boost::multi::array_iterator<Element, D, ElementPtr>::operator+(boost::multi::array_iterator<Element, D, ElementPtr>::difference_type) const [with Element = double; long int D = 2; ElementPtr = double*]	80	static
gemv.hpp:19:6:auto boost::multi::blas::gemv_n(Context&&, A, MIt, Size, XIt, B, YIt) [with Context = boost::multi::blas::context; A = double; MIt = boost::multi::array_iterator<double, 2, double*>; Size = long int; XIt = boost::multi::array_iterator<double, 1, const double*>; B = double; YIt = boost::multi::array_iterator<double, 1, double*>]	240	dynamic,bounded
gemv.hpp:41:6:auto boost::multi::blas::gemv_n(A, MIt, Size, XIt, B, YIt) [with A = double; MIt = boost::multi::array_iterator<double, 2, double*>; Size = long int; XIt = boost::multi::array_iterator<double, 1, const double*>; B = double; YIt = boost::multi::array_iterator<double, 1, double*>]	160	dynamic,bounded
layout.hpp:378:29:constexpr boost::multi::layout_t<2>::size_type boost::multi::size(const boost::multi::layout_t<2>&)	32	static
array_ref.hpp:570:31:constexpr boost::multi::basic_array<double, 2, double*, boost::multi::layout_t<2> > boost::multi::operator~(const boost::multi::basic_array<double, 2, double*, boost::multi::layout_t<2> >&)	48	static
array_ref.hpp:566:24:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout> boost::multi::basic_array<T, D, ElementPtr, Layout>::transposed() const & [with T = double; long int D = 2; ElementPtr = double*; Layout = boost::multi::layout_t<2>]	96	static
array_ref.hpp:348:12:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout>::basic_array(const layout_type&, const ElementPtr&) [with T = double; long int D = 2; ElementPtr = double*; Layout = boost::multi::layout_t<2>]	48	static
array_ref.hpp:348:12:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout>::basic_array(const layout_type&, const ElementPtr&) [with T = double; long int D = 2; ElementPtr = double*; Layout = boost::multi::layout_t<2>]	48	static
layout.hpp:428:22:constexpr boost::multi::layout_t<D, SSize>& boost::multi::layout_t<D, SSize>::transpose() [with long int D = 2; SSize = long int]	32	static
range_access.h:242:5:size()) std::size(const _Container&) [with _Container = boost::multi::array<double, 1, std::allocator<double> >]	32	static
gemv.hpp:130:6:auto boost::multi::blas::gemv(Scalar, const M&, const V&) [with Scalar = double; M = boost::multi::array<double, 2>; V = boost::multi::array<double, 1, std::allocator<double> >]	272	dynamic,bounded
gemv.hpp:19:6:auto boost::multi::blas::gemv_n(Context&&, A, MIt, Size, XIt, B, YIt) [with Context = boost::multi::blas::context&; A = double; MIt = boost::multi::array_iterator<double, 2, const double*>; Size = long int; XIt = boost::multi::array_iterator<double, 1, const double*>; B = double; YIt = boost::multi::array_iterator<double, 1, double*>]	240	dynamic,bounded
gemv.hpp:73:14:auto boost::multi::blas::copy_n(boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>, boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>::difference_type, It1DOut) [with It1DOut = boost::multi::array_iterator<double, 1, double*>; Scalar = double; It2D = boost::multi::array_iterator<double, 2, const double*>; It1D = boost::multi::array_iterator<double, 1, const double*>; Context = boost::multi::blas::context]	176	dynamic,bounded
adl.hpp:59:39:) const [with As = {const double*, long int, double*}]	80	static
array.hpp:453:26:constexpr boost::multi::static_array<T, D, Alloc>& boost::multi::static_array<T, D, Alloc>::operator=(const boost::multi::static_array<T, D, Alloc>&) & [with T = double; long int D = 1; Alloc = std::allocator<double>]	96	static
array.hpp:743:17:boost::multi::array<double, 1, std::allocator<double> >::array(Range&&) [with Range = boost::multi::blas::gemv_range<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::array<double, 1, std::allocator<double> >, boost::multi::blas::context>; <template-parameter-1-2> = void; <template-parameter-1-3> = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>; <template-parameter-1-4> = void][inherited from boost::multi::static_array<double, 1, std::allocator<double> >]	32	static
array.hpp:743:17:boost::multi::array<double, 1, std::allocator<double> >::array(boost::multi::layout_t<1>::extensions_type, const element&) [inherited from boost::multi::static_array<double, 1, std::allocator<double> >]	48	static
gemv.cpp:39:1:void multi_blas_gemv::test_method()	1072	dynamic,bounded
gemv.cpp:91:1:void multi_blas_gemv_real_invoker()	496	static
layout.hpp:283:17:constexpr auto boost::multi::layout_t<1, SSize>::operator()(boost::multi::layout_t<1, SSize>::index) const [with SSize = long int]	16	static
array_ref.hpp:1157:53:constexpr typename boost::multi::basic_array<T, 1, ElementPtr, Layout>::reference boost::multi::basic_array<T, 1, ElementPtr, Layout>::operator[](boost::multi::index) & [with T = double; ElementPtr = double*; Layout = boost::multi::layout_t<1>]	48	static
array_ref.hpp:93:29:constexpr boost::multi::array_types<T, D, ElementPtr, Layout>::element_ptr boost::multi::array_types<T, D, ElementPtr, Layout>::base() const [with T = double; long int D = 1; ElementPtr = double*; Layout = boost::multi::layout_t<1>]	16	static
index_range.hpp:171:17:constexpr auto boost::multi::range<IndexType, IndexTypeLast>::contains(const value_type&) const [with IndexType = long int; IndexTypeLast = long int]	16	static
layout.hpp:269:35:constexpr boost::multi::layout_t<1, SSize>::index_extension boost::multi::layout_t<1, SSize>::extension() const & [with SSize = long int]	64	static
array_ref.hpp:1154:53:constexpr typename boost::multi::basic_array<T, 1, ElementPtr, Layout>::const_reference boost::multi::basic_array<T, 1, ElementPtr, Layout>::operator[](boost::multi::index) const & [with T = double; ElementPtr = double*; Layout = boost::multi::layout_t<1>]	80	static
gemv.hpp:119:14:auto boost::multi::blas::operator+(const boost::multi::blas::gemv_range<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::array<double, 1, std::allocator<double> >, boost::multi::blas::context>&)	48	static
array.hpp:746:2:boost::multi::array<T, D, A>::array(const boost::multi::array<T, D, A>&) [with T = double; long int D = 1; Alloc = std::allocator<double>]	32	static
index_range.hpp:212:12:constexpr boost::multi::extension_t<IndexType, IndexTypeLast>::extension_t(IndexType, IndexTypeLast) [with IndexType = long int; IndexTypeLast = long int]	48	static
gemv.hpp:130:6:auto boost::multi::blas::gemv(Scalar, const M&, const V&) [with Scalar = double; M = boost::multi::basic_array<double, 2, double*, boost::multi::layout_t<2> >; V = boost::multi::array<double, 1, std::allocator<double> >]	272	dynamic,bounded
gemv.cpp:91:1:void multi_blas_gemv_real::test_method()	1088	dynamic,bounded
gemv.cpp:128:1:void multi_blas_gemv_real_complex_invoker()	496	static
adl.hpp:105:39:) const [with As = {boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>}]	80	static
initializer_list:75:7:constexpr const _E* std::initializer_list<_E>::begin() const [with _E = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >]	16	static
initializer_list:75:7:constexpr const _E* std::initializer_list<_E>::begin() const [with _E = std::complex<double>]	16	static
array.hpp:743:17:constexpr boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >::array(std::initializer_list<std::complex<double> >) [inherited from boost::multi::static_array<std::complex<double>, 1, std::allocator<std::complex<double> > >]	48	static
array.hpp:929:2:boost::multi::array<T, D, A>::~array() [with T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	32	static
array.hpp:247:12:constexpr boost::multi::static_array<T, D, Alloc>::static_array(std::initializer_list<typename std::conditional<(boost::multi::static_array<T, D, Alloc>::dimensionality > 1), boost::multi::array<typename boost::multi::static_array<T, D, Alloc>::element, (boost::multi::static_array<T, D, Alloc>::dimensionality - 1), typename boost::multi::static_array<T, D, Alloc>::allocator_type>, typename std::conditional<(boost::multi::static_array<T, D, Alloc>::dimensionality == 1), typename boost::multi::static_array<T, D, Alloc>::element, typename boost::multi::static_array<T, D, Alloc>::element>::type>::type>) [with T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	80	static
array.hpp:743:17:constexpr boost::multi::array<std::complex<double>, 2>::array(std::initializer_list<boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > > >) [inherited from boost::multi::static_array<std::complex<double>, 2, std::allocator<std::complex<double> > >]	48	static
array.hpp:929:2:boost::multi::array<T, D, A>::~array() [with T = std::complex<double>; long int D = 2; Alloc = std::allocator<std::complex<double> >]	32	static
gemv.cpp:128:1:void multi_blas_gemv_real_complex::test_method()	848	dynamic,bounded
gemv.cpp:152:1:void multi_blas_gemv_real_complex_thrust_invoker()	496	static
initializer_list:75:7:constexpr const _E* std::initializer_list<_E>::begin() const [with _E = boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >]	16	static
initializer_list:75:7:constexpr const _E* std::initializer_list<_E>::begin() const [with _E = thrust::complex<double>]	16	static
array.hpp:743:17:constexpr boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >::array(std::initializer_list<thrust::complex<double> >) [inherited from boost::multi::static_array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >]	48	static
array.hpp:929:2:boost::multi::array<T, D, A>::~array() [with T = thrust::complex<double>; long int D = 1; Alloc = std::allocator<thrust::complex<double> >]	32	static
array.hpp:743:17:constexpr boost::multi::array<thrust::complex<double>, 2>::array(std::initializer_list<boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > > >) [inherited from boost::multi::static_array<thrust::complex<double>, 2, std::allocator<thrust::complex<double> > >]	48	static
array.hpp:929:2:boost::multi::array<T, D, A>::~array() [with T = thrust::complex<double>; long int D = 2; Alloc = std::allocator<thrust::complex<double> >]	32	static
gemv.cpp:152:1:void multi_blas_gemv_real_complex_thrust::test_method()	784	dynamic,bounded
gemv.cpp:178:1:void multi_blas_gemv_complex_invoker()	496	static
range_access.h:242:5:size()) std::size(const _Container&) [with _Container = boost::multi::basic_array<std::complex<double>, 2, std::complex<double>*, boost::multi::layout_t<2> >]	32	static
array_ref.hpp:570:31:constexpr boost::multi::basic_array<std::complex<double>, 2, std::complex<double>*, boost::multi::layout_t<2> > boost::multi::operator~(const boost::multi::basic_array<std::complex<double>, 2, std::complex<double>*, boost::multi::layout_t<2> >&)	48	static
array_ref.hpp:566:24:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout> boost::multi::basic_array<T, D, ElementPtr, Layout>::transposed() const & [with T = std::complex<double>; long int D = 2; ElementPtr = std::complex<double>*; Layout = boost::multi::layout_t<2>]	96	static
array_ref.hpp:348:12:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout>::basic_array(const layout_type&, const ElementPtr&) [with T = std::complex<double>; long int D = 2; ElementPtr = std::complex<double>*; Layout = boost::multi::layout_t<2>]	48	static
array_ref.hpp:348:12:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout>::basic_array(const layout_type&, const ElementPtr&) [with T = std::complex<double>; long int D = 2; ElementPtr = std::complex<double>*; Layout = boost::multi::layout_t<2>]	48	static
range_access.h:242:5:size()) std::size(const _Container&) [with _Container = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >]	32	static
gemv.hpp:130:6:auto boost::multi::blas::gemv(Scalar, const M&, const V&) [with Scalar = double; M = boost::multi::array<std::complex<double>, 2>; V = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >]	272	dynamic,bounded
gemv.hpp:119:14:auto boost::multi::blas::operator+(const boost::multi::blas::gemv_range<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >, boost::multi::blas::context>&)	48	static
gemv.hpp:130:6:auto boost::multi::blas::gemv(Scalar, const M&, const V&) [with Scalar = double; M = boost::multi::basic_array<std::complex<double>, 2, std::complex<double>*, boost::multi::layout_t<2> >; V = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >]	272	dynamic,bounded
gemv.cpp:178:1:void multi_blas_gemv_complex::test_method()	1216	dynamic,bounded
gemv.cpp:201:1:void multi_blas_gemv_temporary_invoker()	496	static
layout.hpp:132:15:constexpr boost::multi::extensions_t<2>::extensions_t(_U1&&, _U2&&) [with _U1 = int; _U2 = int; typename std::enable_if<((_MoveConstructibleTuple<_U1, _U2>() && _ImplicitlyMoveConvertibleTuple<_U1, _U2>()) && (! std::is_same<typename std::remove_cv<typename std::remove_reference<_Tp>::type>::type, std::allocator_arg_t>::value)), bool>::type <anonymous> = true][inherited from std::tuple<boost::multi::extension_t<long int, long int>, boost::multi::extension_t<long int, long int> >]	48	static
array.hpp:743:17:boost::multi::array<std::complex<double>, 2>::array(boost::multi::layout_t<2>::extensions_type, const allocator_type&) [inherited from boost::multi::static_array<std::complex<double>, 2, std::allocator<std::complex<double> > >]	48	static
gemv.cpp:213:15:multi_blas_gemv_temporary::test_method()::<lambda()>::<lambda()> mutable	64	static
gemv.cpp:211:17:multi_blas_gemv_temporary::test_method()::<lambda()>	10224	dynamic,bounded
gemv.cpp:201:1:void multi_blas_gemv_temporary::test_method()	496	static
gemv.cpp:227:1:void multi_blas_gemv_context_invoker()	496	static
gemv.hpp:19:6:auto boost::multi::blas::gemv_n(Context&&, A, MIt, Size, XIt, B, YIt) [with Context = boost::multi::blas::context&; A = double; MIt = boost::multi::array_iterator<double, 2, double*>; Size = long int; XIt = boost::multi::array_iterator<double, 1, const double*>; B = double; YIt = boost::multi::array_iterator<double, 1, double*>]	240	dynamic,bounded
gemv.hpp:136:6:auto boost::multi::blas::gemv(Context&&, Scalar, const M&, const V&) [with Context = boost::multi::blas::context&; Scalar = double; M = boost::multi::array<double, 2>; V = boost::multi::array<double, 1, std::allocator<double> >]	288	dynamic,bounded
gemv.hpp:73:14:auto boost::multi::blas::copy_n(boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>, boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>::difference_type, It1DOut) [with It1DOut = boost::multi::array_iterator<double, 1, double*>; Scalar = double; It2D = boost::multi::array_iterator<double, 2, const double*>; It1D = boost::multi::array_iterator<double, 1, const double*>; Context = boost::multi::blas::context&]	176	dynamic,bounded
array.hpp:743:17:boost::multi::array<double, 1, std::allocator<double> >::array(Range&&) [with Range = boost::multi::blas::gemv_range<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::array<double, 1, std::allocator<double> >, boost::multi::blas::context&>; <template-parameter-1-2> = void; <template-parameter-1-3> = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context&>; <template-parameter-1-4> = void][inherited from boost::multi::static_array<double, 1, std::allocator<double> >]	32	static
gemv.cpp:227:1:void multi_blas_gemv_context::test_method()	1072	dynamic,bounded
basic_cstring.hpp:197:1:boost::unit_test::basic_cstring<CharT>::basic_cstring(const boost::unit_test::basic_cstring<CharT>&) [with CharT = const char]	16	static
basic_cstring.hpp:187:1:boost::unit_test::basic_cstring<CharT>::basic_cstring() [with CharT = const char]	32	static
atomic_base.h:279:17:constexpr std::__atomic_base<_IntTp>::__atomic_base(std::__atomic_base<_IntTp>::__int_type) [with _ITp = int]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = int]	16	static
shared_ptr.hpp:352:21:constexpr boost::shared_ptr<T>::shared_ptr() [with T = boost::basic_wrap_stringstream<char>]	32	static
class_properties.hpp:60:21:bool boost::unit_test::class_property<PropertyType>::operator!() const [with PropertyType = bool]	16	static
class_properties.hpp:131:21:boost::unit_test::readonly_property<PropertyType>::readonly_property(boost::unit_test::readonly_property<PropertyType>::write_param_t) [with PropertyType = bool]	32	static
operator_bool.hpp:61:10:bool boost::shared_ptr<T>::operator!() const [with T = boost::basic_wrap_stringstream<char>]	16	static
shared_ptr.hpp:696:28:void boost::shared_ptr<T>::reset(Y*) [with Y = boost::basic_wrap_stringstream<char>; T = boost::basic_wrap_stringstream<char>]	64	static
shared_ptr.hpp:726:55:typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = boost::basic_wrap_stringstream<char>]	32	static
shared_ptr.hpp:732:57:typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = boost::basic_wrap_stringstream<char>]	32	static
wrap_stringstream.hpp:92:1:const std::__cxx11::basic_string<_CharT>& boost::basic_wrap_stringstream<CharT>::str() [with CharT = char]	80	static
basic_cstring.hpp:207:1:boost::unit_test::basic_cstring<CharT>::basic_cstring(const std_string&) [with CharT = const char]	48	static
function_template.hpp:756:5:boost::function0<R>::~function0() [with R = void]	32	static
shared_ptr.hpp:422:5:boost::shared_ptr<T>::shared_ptr(const boost::shared_ptr<T>&) [with T = boost::unit_test::test_unit_fixture]	32	static
basic_cstring.hpp:479:1:boost::unit_test::basic_cstring<CharT>::value_type* boost::unit_test::basic_cstring<CharT>::begin() [with CharT = const char]	16	static
basic_cstring.hpp:258:1:boost::unit_test::basic_cstring<CharT>::size_type boost::unit_test::basic_cstring<CharT>::size() const [with CharT = const char]	16	static
basic_cstring.hpp:79:5:boost::unit_test::basic_cstring<CharT>::basic_cstring(boost::unit_test::basic_cstring<CharT>::pointer, LenType) [with LenType = long unsigned int; CharT = const char]	16	static
basic_cstring.hpp:217:1:boost::unit_test::basic_cstring<CharT>::basic_cstring(boost::unit_test::basic_cstring<CharT>::pointer) [with CharT = const char]	48	static
basic_cstring.hpp:393:1:boost::unit_test::basic_cstring<CharT>::self_type& boost::unit_test::basic_cstring<CharT>::trim(boost::unit_test::basic_cstring<CharT>) [with CharT = const char]	64	static
tuple:588:19: (_Elements) >= 1)), bool>::type <anonymous> = true; _Elements = {boost::multi::extension_t<long int, long int>}]	32	static
tuple:1326:5:>&) [with long unsigned int __i = 0; _Elements = {boost::multi::extension_t<long int, long int>}]	32	static
index_range.hpp:143:22:constexpr boost::multi::range<IndexType, IndexTypeLast>::size_type boost::multi::range<IndexType, IndexTypeLast>::size() const [with IndexType = long int; IndexTypeLast = long int]	16	static
tuple:1470:5:) [with _Elements = {const boost::multi::extension_t<long int, long int>&}]	32	static
layout.hpp:164:12:I = {0, 1}; <template-parameter-2-3> = std::tuple<boost::multi::extension_t<long int, long int>, boost::multi::extension_t<long int, long int> >; long int D = 2]	48	static
layout.hpp:137:12:constexpr boost::multi::extensions_t<D>::extensions_t(const Array&) [with Array = std::tuple<boost::multi::extension_t<long int, long int>, boost::multi::extension_t<long int, long int> >; <template-parameter-2-2> = boost::multi::extension_t<long int>&&; long int D = 2]	32	static
tuple:1597:5:) [with _Tpls = {std::tuple<boost::multi::extension_t<long int, long int> >, const std::tuple<boost::multi::extension_t<long int, long int> >&}; <template-parameter-1-2> = void]	80	static
layout.hpp:138:12:constexpr boost::multi::extensions_t<D>::extensions_t(const index_extension&, const typename boost::multi::layout_t<(D - 1)>::extensions_type&) [with long int D = 2]	128	static
wrap_stringstream.hpp:83:1:boost::basic_wrap_stringstream<CharT>& boost::basic_wrap_stringstream<CharT>::ref() [with CharT = char]	16	static
wrap_stringstream.hpp:64:1:boost::basic_wrap_stringstream<CharT>& boost::operator<<(boost::basic_wrap_stringstream<CharT>&, const T&) [with CharT = char; T = char]	32	static
wrap_stringstream.hpp:64:1:boost::basic_wrap_stringstream<CharT>& boost::operator<<(boost::basic_wrap_stringstream<CharT>&, const T&) [with CharT = char; T = char [16]]	32	static
wrap_stringstream.hpp:64:1:boost::basic_wrap_stringstream<CharT>& boost::operator<<(boost::basic_wrap_stringstream<CharT>&, const T&) [with CharT = char; T = char [15]]	32	static
fixture.hpp:112:6:void boost::unit_test::setup_conditional(U&) [with U = multi_blas_gemv]	48	static
wrap_stringstream.hpp:64:1:boost::basic_wrap_stringstream<CharT>& boost::operator<<(boost::basic_wrap_stringstream<CharT>&, const T&) [with CharT = char; T = char [13]]	32	static
wrap_stringstream.hpp:64:1:boost::basic_wrap_stringstream<CharT>& boost::operator<<(boost::basic_wrap_stringstream<CharT>&, const T&) [with CharT = char; T = char [19]]	32	static
fixture.hpp:118:6:void boost::unit_test::teardown_conditional(U&) [with U = multi_blas_gemv]	48	static
function_template.hpp:1061:3:boost::function<R()>::function(Functor, typename boost::enable_if_<(! boost::is_integral<Functor>::value), int>::type) [with Functor = void (*)(); R = void]	48	static
fpc_tolerance.hpp:76:1:boost::unit_test::decorator::fixture_t boost::unit_test::decorator::tolerance(FPT) [with FPT = double]	80	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::array_iterator<double, 1, const double*>]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::array_iterator<double, 1, double*>]	16	static
adl.hpp:96:48:constexpr decltype (std::copy(first, last, d_first)) boost::multi::adl_copy_fn__::_(boost::multi::priority<1>, InputIt, InputIt, OutputIt) const [with InputIt = boost::multi::array_iterator<double, 1, const double*>; OutputIt = boost::multi::array_iterator<double, 1, double*>; <template-parameter-1-3> = void]	80	static
array.hpp:25:34:boost::multi::array_allocator<std::allocator<double> >::~array_allocator()	32	static
array.hpp:278:2:boost::multi::static_array<T, D, Alloc>::~static_array() [with T = double; long int D = 1; Alloc = std::allocator<double>]	32	static
initializer_list:79:7:constexpr const _E* std::initializer_list<_E>::end() const [with _E = double]	48	static
allocator.h:138:7:std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = double]	32	static
allocator.h:153:7:std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = double]	32	static
layout.hpp:261:22:constexpr boost::multi::layout_t<1, SSize>::size_type boost::multi::layout_t<1, SSize>::num_elements() const [with SSize = long int]	32	static
layout.hpp:223:12:constexpr boost::multi::layout_t<1, SSize>::layout_t(boost::multi::layout_t<1, SSize>::index_extension, const boost::multi::layout_t<0>&) [with SSize = long int]	48	static
tuple:1320:5:>&) [with long unsigned int __i = 0; _Elements = {boost::multi::extension_t<long int, long int>}]	32	static
layout.hpp:192:12:constexpr boost::multi::layout_t<0, SSize>::layout_t(const extensions_type&) [with SSize = long int]	16	static
layout.hpp:230:12:constexpr boost::multi::layout_t<1, SSize>::layout_t(boost::multi::layout_t<1, SSize>::extensions_type) [with SSize = long int]	80	static
index_range.hpp:213:12:constexpr boost::multi::extension_t<IndexType, IndexTypeLast>::extension_t(IndexType) [with IndexType = long int; IndexTypeLast = long int]	32	static
adl.hpp:392:39:) const [with As = {const double*&, const double*&}]	80	static
utility.hpp:375:64:constexpr boost::multi::layout_t<0>::extensions_type boost::multi::extensions(const T&) [with T = double; <template-parameter-1-2> = void]	16	static
adl.hpp:387:48:) const [with As = {const double*&, const double*&}]	64	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const double*&]	16	static
stl_iterator_base_funcs.h:138:5:constexpr typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const double*]	32	static
adl.hpp:343:16:constexpr auto boost::multi::xtd::alloc_uninitialized_copy(std::allocator<_CharT>&, InputIt, InputIt, ForwardIt) [with T = double; InputIt = const double*; ForwardIt = boost::multi::array_iterator<double, 1, double*>]	64	static
adl.hpp:482:39:) const [with As = {std::allocator<double>&, const double*&, const double*&, boost::multi::array_iterator<double, 1, double*>}]	112	static
array.hpp:146:2:boost::multi::static_array<T, D, Alloc>::static_array(It, It, const allocator_type&) [with It = const double*; <template-parameter-2-2> = long int; T = double; long int D = 1; Alloc = std::allocator<double>]	176	static
array.hpp:247:12:constexpr boost::multi::static_array<T, D, Alloc>::static_array(std::initializer_list<typename std::conditional<(boost::multi::static_array<T, D, Alloc>::dimensionality > 1), boost::multi::array<typename boost::multi::static_array<T, D, Alloc>::element, (boost::multi::static_array<T, D, Alloc>::dimensionality - 1), typename boost::multi::static_array<T, D, Alloc>::allocator_type>, typename std::conditional<(boost::multi::static_array<T, D, Alloc>::dimensionality == 1), typename boost::multi::static_array<T, D, Alloc>::element, typename boost::multi::static_array<T, D, Alloc>::element>::type>::type>) [with T = double; long int D = 2; Alloc = std::allocator<double>]	80	static
array.hpp:278:2:boost::multi::static_array<T, D, Alloc>::~static_array() [with T = double; long int D = 2; Alloc = std::allocator<double>]	32	static
range_access.h:242:5:size()) std::size(const _Container&) [with _Container = boost::multi::array<double, 2>]	32	static
tuple:626:19: (_Elements) >= 1)), bool>::type <anonymous> = true; _Elements = {boost::multi::extension_t<long int, long int>}]	48	static
adl.hpp:446:39:) const [with As = {std::allocator<double>&, double*&, long int}]	80	static
array.hpp:78:7:auto boost::multi::static_array<T, D, Alloc>::uninitialized_default_construct() [with T = double; long int D = 1; Alloc = std::allocator<double>]	64	static
array.hpp:210:11:boost::multi::static_array<T, D, Alloc>::static_array(typename boost::multi::static_array<T, D, Alloc>::extensions_type, const allocator_type&) [with T = double; long int D = 1; Alloc = std::allocator<double>]	128	static
range_access.h:58:5:begin()) std::begin(const _Container&) [with _Container = boost::multi::array<double, 2>]	48	static
range_access.h:58:5:begin()) std::begin(const _Container&) [with _Container = boost::multi::array<double, 1, std::allocator<double> >]	32	static
range_access.h:48:5:begin()) std::begin(_Container&) [with _Container = boost::multi::array<double, 1, std::allocator<double> >]	32	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::blas::context]	16	static
layout.hpp:240:22:constexpr boost::multi::layout_t<1, SSize>::size_type boost::multi::layout_t<1, SSize>::size() const [with SSize = long int]	16	static
array_ref.hpp:1005:24:constexpr boost::multi::array_iterator<Element, 1, Ptr>::stride_type boost::multi::array_iterator<Element, 1, Ptr>::stride() const & [with Element = double; Ptr = const double*]	16	static
array_ref.hpp:1005:24:constexpr boost::multi::array_iterator<Element, 1, Ptr>::stride_type boost::multi::array_iterator<Element, 1, Ptr>::stride() const & [with Element = double; Ptr = double*]	16	static
core.hpp:522:14:) [with As = {char, long int, long int, double, const double*, long int, const double*, long int, double, double*, long int}]	112	dynamic,bounded
array_ref.hpp:272:17:constexpr void boost::multi::array_iterator<Element, D, ElementPtr>::advance(boost::multi::array_iterator<Element, D, ElementPtr>::difference_type) [with Element = double; long int D = 2; ElementPtr = const double*]	16	static
assertion.hpp:393:5:boost::test_tools::assertion::value_expr<T> boost::test_tools::assertion::seed::operator->*(T&&) const [with T = double&]	48	static
assertion.hpp:216:5:boost::test_tools::assertion::binary_expr<ExprType, T, boost::test_tools::assertion::op::EQ<ValType, typename boost::test_tools::assertion::expression_base<ExprType, ValType>::RhsT<T>::type> > boost::test_tools::assertion::expression_base<ExprType, ValType>::operator==(T&&) [with T = double; ExprType = boost::test_tools::assertion::value_expr<double&>; ValType = double]	64	static
assertion_result.hpp:39:23:boost::test_tools::assertion_result::assertion_result(const boost::test_tools::assertion_result&)	32	static
assertion.hpp:361:33:boost::test_tools::assertion_result boost::test_tools::assertion::binary_expr<Lhs, Rhs, OP>::evaluate(bool) const [with LExpr = boost::test_tools::assertion::value_expr<double&>; Rhs = double; OP = boost::test_tools::assertion::op::EQ<double, double, void>]	576	static
lazy_ostream.hpp:79:1:boost::unit_test::lazy_ostream_impl<boost::unit_test::lazy_ostream, T> boost::unit_test::operator<<(const boost::unit_test::lazy_ostream&, const T&) [with T = boost::unit_test::basic_cstring<const char>]	48	static
layout.hpp:327:17:constexpr auto boost::multi::layout_t<D, SSize>::operator()(boost::multi::layout_t<D, SSize>::index) const [with long int D = 2; SSize = long int]	16	static
array_ref.hpp:1077:15:constexpr boost::multi::basic_array<double, 1, double*, boost::multi::layout_t<1> >::basic_array(const layout_t&, double* const&) [inherited from boost::multi::array_types<double, 1, double*, boost::multi::layout_t<1> >]	48	static
array_ref.hpp:404:20:constexpr auto boost::multi::basic_array<T, D, ElementPtr, Layout>::at_(boost::multi::index) const [with T = double; long int D = 2; ElementPtr = double*; Layout = boost::multi::layout_t<2>]	144	static
array_ref.hpp:408:31:constexpr typename boost::multi::basic_array<T, D, ElementPtr, Layout>::types::const_reference boost::multi::basic_array<T, D, ElementPtr, Layout>::operator[](boost::multi::index) const & [with T = double; long int D = 2; ElementPtr = double*; Layout = boost::multi::layout_t<2>]	96	static
dot.hpp:87:30:boost::multi::blas::dot_ref<boost::multi::blas::context, X, Y> boost::multi::blas::dot(const X&, const Y&) [with X = boost::multi::basic_array<double, 1, const double*, boost::multi::layout_t<1> >; Y = boost::multi::array<double, 1, std::allocator<double> >]	64	static
dot.hpp:80:13:boost::multi::blas::dot_ref<Context, X, Y, Ptr>::decay_type boost::multi::blas::dot_ref<Context, X, Y, Ptr>::operator+() const [with Context = boost::multi::blas::context; X = boost::multi::basic_array<double, 1, const double*, boost::multi::layout_t<1> >; Y = boost::multi::array<double, 1, std::allocator<double> >; Ptr = boost::multi::blas::dot_ptr<boost::multi::blas::context, boost::multi::array_iterator<double, 1, const double*>, long int, boost::multi::array_iterator<double, 1, const double*> >]	32	static
array_ref.hpp:749:28:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout>::iterator boost::multi::basic_array<T, D, ElementPtr, Layout>::begin() & [with T = double; long int D = 2; ElementPtr = double*; Layout = boost::multi::layout_t<2>]	64	dynamic,bounded
array_ref.hpp:1077:15:constexpr boost::multi::basic_array<double, 1, const double*, boost::multi::layout_t<1> >::basic_array(const layout_t&, const double* const&) [inherited from boost::multi::array_types<double, 1, const double*, boost::multi::layout_t<1> >]	48	static
array_ref.hpp:186:12:constexpr boost::multi::basic_array_ptr<Ref, Layout>::basic_array_ptr(typename Ref::element_ptr, const Layout&) [with Ref = boost::multi::basic_array<double, 1, const double*, boost::multi::layout_t<1> >; Layout = boost::multi::layout_t<1>]	48	static
array_ref.hpp:252:12:constexpr boost::multi::array_iterator<Element, D, ElementPtr>::array_iterator(typename boost::multi::basic_array<Element, (D - 1), ElementPtr>::element_ptr, boost::multi::layout_t<(D - 1), long int>, boost::multi::index) [with Element = double; long int D = 2; ElementPtr = const double*]	48	static
adl.hpp:105:39:) const [with As = {boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 2, double*>}]	224	dynamic,bounded
array.hpp:220:2:>&, const allocator_type&) [with TT = double; Args = {double*, boost::multi::layout_t<2, long int>}; <template-parameter-2-3> = void; <template-parameter-2-4> = boost::multi::array_iterator<double, 2, double*>; T = double; long int D = 2; Alloc = std::allocator<double>]	256	static
array_ref.hpp:756:28:constexpr boost::multi::basic_array<double, 2, double*, boost::multi::layout_t<2> >::iterator boost::multi::begin(boost::multi::basic_array<double, 2, double*, boost::multi::layout_t<2> >&&)	48	static
core.hpp:522:14:) [with As = {char, long int, long int, double, double*, long int, const double*, long int, double, double*, long int}]	112	dynamic,bounded
array_ref.hpp:272:17:constexpr void boost::multi::array_iterator<Element, D, ElementPtr>::advance(boost::multi::array_iterator<Element, D, ElementPtr>::difference_type) [with Element = double; long int D = 2; ElementPtr = double*]	16	static
layout.hpp:373:22:constexpr boost::multi::layout_t<D, SSize>::size_type boost::multi::layout_t<D, SSize>::size() const [with long int D = 2; SSize = long int]	32	static
array_ref.hpp:345:24:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout>::layout_type boost::multi::basic_array<T, D, ElementPtr, Layout>::layout() const [with T = double; long int D = 2; ElementPtr = double*; Layout = boost::multi::layout_t<2>]	48	static
array_ref.hpp:109:12:constexpr boost::multi::array_types<T, D, ElementPtr, Layout>::array_types(const layout_t&, const element_ptr&) [with T = double; long int D = 2; ElementPtr = double*; Layout = boost::multi::layout_t<2>]	24	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = long int&]	16	static
move.h:182:5:typename std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<_Tp> >, std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&) [with _Tp = long int]	48	static
array.hpp:441:27:constexpr boost::multi::static_array<T, D, Alloc>::const_iterator boost::multi::static_array<T, D, Alloc>::begin() const [with T = double; long int D = 2; Alloc = std::allocator<double>]	80	static
array.hpp:442:27:constexpr boost::multi::static_array<T, D, Alloc>::const_iterator boost::multi::static_array<T, D, Alloc>::end() const [with T = double; long int D = 2; Alloc = std::allocator<double>]	80	static
array.hpp:441:27:constexpr boost::multi::static_array<T, D, Alloc>::const_iterator boost::multi::static_array<T, D, Alloc>::begin() const [with T = double; long int D = 1; Alloc = std::allocator<double>]	80	static
gemv.hpp:100:2:boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::gemv_range(Scalar, It2D, It2D, It1D) [with Scalar = double; It2D = boost::multi::array_iterator<double, 2, const double*>; It1D = boost::multi::array_iterator<double, 1, const double*>; DecayType = boost::multi::array<double, 1, std::allocator<double> >; Context = boost::multi::blas::context]	64	static
gemv.hpp:110:11:boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::iterator boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::begin() const [with Scalar = double; It2D = boost::multi::array_iterator<double, 2, const double*>; It1D = boost::multi::array_iterator<double, 1, const double*>; DecayType = boost::multi::array<double, 1, std::allocator<double> >; Context = boost::multi::blas::context]	80	dynamic,bounded
gemv.hpp:112:12:boost::multi::size_type boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::size() const [with Scalar = double; It2D = boost::multi::array_iterator<double, 2, const double*>; It1D = boost::multi::array_iterator<double, 1, const double*>; DecayType = boost::multi::array<double, 1, std::allocator<double> >; Context = boost::multi::blas::context]	192	static
array.hpp:435:44:constexpr boost::multi::static_array<T, D, Alloc>::iterator boost::multi::static_array<T, D, Alloc>::begin() [with T = double; long int D = 1; Alloc = std::allocator<double>]	32	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::blas::context&]	16	static
gemv.cpp:32:6:void MV(const M&, const VI&, VO&&) [with M = boost::multi::array<double, 2>; VI = boost::multi::array<double, 1, std::allocator<double> >; VO = boost::multi::array<double, 1, std::allocator<double> >&]	256	dynamic,bounded
assertion.hpp:393:5:boost::test_tools::assertion::value_expr<T> boost::test_tools::assertion::seed::operator->*(T&&) const [with T = boost::multi::array<double, 1, std::allocator<double> >&]	48	static
assertion.hpp:216:5:boost::test_tools::assertion::binary_expr<ExprType, T, boost::test_tools::assertion::op::EQ<ValType, typename boost::test_tools::assertion::expression_base<ExprType, ValType>::RhsT<T>::type> > boost::test_tools::assertion::expression_base<ExprType, ValType>::operator==(T&&) [with T = boost::multi::array<double, 1, std::allocator<double> >&; ExprType = boost::test_tools::assertion::value_expr<boost::multi::array<double, 1, std::allocator<double> >&>; ValType = boost::multi::array<double, 1, std::allocator<double> >]	64	static
assertion.hpp:361:33:boost::test_tools::assertion_result boost::test_tools::assertion::binary_expr<Lhs, Rhs, OP>::evaluate(bool) const [with LExpr = boost::test_tools::assertion::value_expr<boost::multi::array<double, 1, std::allocator<double> >&>; Rhs = boost::multi::array<double, 1, std::allocator<double> >&; OP = boost::test_tools::assertion::op::EQ<boost::multi::array<double, 1, std::allocator<double> >, boost::multi::array<double, 1, std::allocator<double> >, void>]	576	static
utility.hpp:370:6:extensions()) boost::multi::extensions(const T&) [with T = boost::multi::static_array<double, 1, std::allocator<double> >; <template-parameter-1-2> = void]	48	static
layout.hpp:114:37:>()) && (1 >= 1)), bool>::type <anonymous> = true][inherited from std::tuple<boost::multi::extension_t<long int, long int> >]	32	static
layout.hpp:274:28:constexpr boost::multi::layout_t<1, SSize>::extensions_type boost::multi::layout_t<1, SSize>::extensions() const [with SSize = long int]	64	static
tuple:1419:5:>&) [with _TElements = {boost::multi::extension_t<long int, long int>}; _UElements = {boost::multi::extension_t<long int, long int>}]	32	static
array.hpp:317:38:boost::multi::static_array<T, D, Alloc>::element_const_ptr boost::multi::static_array<T, D, Alloc>::data_elements() const & [with T = double; long int D = 1; Alloc = std::allocator<double>]	16	static
array.hpp:318:38:typename boost::multi::static_array<T, D, Alloc>::element_ptr boost::multi::static_array<T, D, Alloc>::data_elements() & [with T = double; long int D = 1; Alloc = std::allocator<double>]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const double*]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = long int]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = double*]	16	static
adl.hpp:51:48:) const [with As = {const double*, long int, double*}]	64	static
array.hpp:743:17:boost::multi::array<double, 1, std::allocator<double> >::array(Range&&) [with Range = boost::multi::blas::gemv_range<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::array<double, 1, std::allocator<double> >, boost::multi::blas::context>&; <template-parameter-1-2> = void; <template-parameter-1-3> = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>; <template-parameter-1-4> = void][inherited from boost::multi::static_array<double, 1, std::allocator<double> >]	32	static
array.hpp:860:7:decltype ((boost::multi::array<T, D, A>::static_::operator=(o), declval<boost::multi::array<T, D, A>&>())) boost::multi::array<T, D, A>::operator=(Range&&) [with Range = boost::multi::blas::gemv_range<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::array<double, 1, std::allocator<double> >, boost::multi::blas::context>; <template-parameter-2-2> = void; T = double; long int D = 1; Alloc = std::allocator<double>]	176	static
array.hpp:163:2:boost::multi::static_array<T, D, Alloc>::static_array(Range&&) [with Range = boost::multi::blas::gemv_range<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::array<double, 1, std::allocator<double> >, boost::multi::blas::context>; <template-parameter-2-2> = void; <template-parameter-2-3> = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>; <template-parameter-2-4> = void; T = double; long int D = 1; Alloc = std::allocator<double>]	368	dynamic,bounded
array.hpp:35:7:auto boost::multi::array_allocator<Allocator>::uninitialized_fill_n(typename std::allocator_traits<_Alloc>::pointer, typename std::allocator_traits<_Alloc>::size_type, typename std::allocator_traits<_Alloc>::value_type) [with Allocator = std::allocator<double>]	48	static
array.hpp:190:2:boost::multi::static_array<T, D, Alloc>::static_array(typename boost::multi::static_array<T, D, Alloc>::extensions_type, const typename boost::multi::static_array<T, D, Alloc>::element&) [with T = double; long int D = 1; Alloc = std::allocator<double>]	128	static
gemv.hpp:19:6:auto boost::multi::blas::gemv_n(Context&&, A, MIt, Size, XIt, B, YIt) [with Context = const boost::multi::blas::context&; A = double; MIt = boost::multi::array_iterator<double, 2, const double*>; Size = long int; XIt = boost::multi::array_iterator<double, 1, const double*>; B = double; YIt = boost::multi::array_iterator<double, 1, double*>]	240	dynamic,bounded
gemv.hpp:121:13:V&& boost::multi::blas::operator+=(V&&, const boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>&) [with V = boost::multi::array<double, 1, std::allocator<double> >&; Scalar = double; It2D = boost::multi::array_iterator<double, 2, const double*>; It1D = boost::multi::array_iterator<double, 1, const double*>; DecayType = boost::multi::array<double, 1, std::allocator<double> >; Context = boost::multi::blas::context]	176	dynamic,bounded
gemv.hpp:46:5:W&& boost::multi::blas::gemv(const A&, const M&, const V&, const B&, W&&) [with A = double; M = boost::multi::array<double, 2>; V = boost::multi::array<double, 1, std::allocator<double> >; B = double; W = boost::multi::array<double, 1, std::allocator<double> >&]	272	dynamic,bounded
wrap_stringstream.hpp:64:1:boost::basic_wrap_stringstream<CharT>& boost::operator<<(boost::basic_wrap_stringstream<CharT>&, const T&) [with CharT = char; T = char [21]]	32	static
fixture.hpp:112:6:void boost::unit_test::setup_conditional(U&) [with U = multi_blas_gemv_real]	48	static
fixture.hpp:118:6:void boost::unit_test::teardown_conditional(U&) [with U = multi_blas_gemv_real]	48	static
array.hpp:277:2:boost::multi::static_array<T, D, Alloc>::static_array() [with T = double; long int D = 1; Alloc = std::allocator<double>]	48	static
array.hpp:745:2:boost::multi::array<T, D, A>::array() [with T = double; long int D = 1; Alloc = std::allocator<double>]	32	static
gemv.hpp:114:13:boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::decay_type boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::decay() const [with Scalar = double; It2D = boost::multi::array_iterator<double, 2, const double*>; It1D = boost::multi::array_iterator<double, 1, const double*>; DecayType = boost::multi::array<double, 1, std::allocator<double> >; Context = boost::multi::blas::context]	64	static
utility.hpp:156:16:num_elements())> boost::multi::num_elements(const A&) [with A = boost::multi::static_array<double, 1, std::allocator<double> >; <template-parameter-1-2> = void]	32	static
adl.hpp:292:39:) const [with As = {const double*&, long int&, double*&}]	80	static
adl.hpp:307:16:constexpr auto boost::multi::xtd::alloc_uninitialized_copy_n(std::allocator<_CharT>&, InputIt, Size, ForwardIt) [with T = double; InputIt = const double*; Size = long int; ForwardIt = double*]	48	static
adl.hpp:486:48:) const [with As = {std::allocator<double>&, const double*&, long int&, double*&}]	96	static
adl.hpp:490:39:) const [with As = {std::allocator<double>&, const double*&, long int&, double*&}]	112	static
array.hpp:39:7:auto boost::multi::array_allocator<Allocator>::uninitialized_copy_n(It, boost::multi::size_type, typename std::allocator_traits<_Alloc>::pointer) [with It = const double*; Allocator = std::allocator<double>]	48	static
array.hpp:82:29:auto boost::multi::static_array<T, D, Alloc>::uninitialized_copy_elements(It) [with It = const double*; T = double; long int D = 1; Alloc = std::allocator<double>]	48	static
array.hpp:239:2:boost::multi::static_array<T, D, Alloc>::static_array(const boost::multi::static_array<T, D, Alloc>&) [with T = double; long int D = 1; Alloc = std::allocator<double>]	80	static
dot.hpp:87:30:boost::multi::blas::dot_ref<boost::multi::blas::context, X, Y> boost::multi::blas::dot(const X&, const Y&) [with X = boost::multi::array<double, 1, std::allocator<double> >; Y = boost::multi::array<double, 1, std::allocator<double> >]	64	static
dot.hpp:79:2:boost::multi::blas::dot_ref<Context, X, Y, Ptr>::operator boost::multi::blas::dot_ref<Context, X, Y, Ptr>::decay_type() const [with Context = boost::multi::blas::context; X = boost::multi::array<double, 1, std::allocator<double> >; Y = boost::multi::array<double, 1, std::allocator<double> >; Ptr = boost::multi::blas::dot_ptr<boost::multi::blas::context, boost::multi::array_iterator<double, 1, const double*>, long int, boost::multi::array_iterator<double, 1, const double*> >]	32	static
array_ref.hpp:399:20:boost::multi::basic_array<double, 2, double*, boost::multi::layout_t<2> >::decay_type boost::multi::operator+(const boost::multi::basic_array<double, 2, double*, boost::multi::layout_t<2> >&)	48	static
array_ref.hpp:760:28:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout>::const_iterator boost::multi::basic_array<T, D, ElementPtr, Layout>::end() const & [with T = double; long int D = 2; ElementPtr = double*; Layout = boost::multi::layout_t<2>]	64	dynamic,bounded
gemv.hpp:143:7:0e+0, m, v)) boost::multi::blas::operators::operator%(const M&, const V&) [with M = boost::multi::basic_array<double, 2, double*, boost::multi::layout_t<2> >; V = boost::multi::array<double, 1, std::allocator<double> >]	176	static
gemv.hpp:143:7:0e+0, m, v)) boost::multi::blas::operators::operator%(const M&, const V&) [with M = boost::multi::array<double, 2>; V = boost::multi::array<double, 1, std::allocator<double> >]	176	static
axpy.hpp:82:37:decay())> boost::multi::blas::operators::operator-(const X1D&, const Y1D&) [with X1D = boost::multi::array<double, 1, std::allocator<double> >; Y1D = boost::multi::array<double, 1, std::allocator<double> >]	80	static
nrm2.hpp:67:21:decltype (std::pow(boost::multi::blas::nrm2(a), n)) boost::multi::blas::operators::operator^(const A1D&, int) [with A1D = boost::multi::array<double, 1, std::allocator<double> >]	96	static
assertion.hpp:393:5:boost::test_tools::assertion::value_expr<T> boost::test_tools::assertion::seed::operator->*(T&&) const [with T = double]	48	static
assertion.hpp:216:5:boost::test_tools::assertion::binary_expr<ExprType, T, boost::test_tools::assertion::op::EQ<ValType, typename boost::test_tools::assertion::expression_base<ExprType, ValType>::RhsT<T>::type> > boost::test_tools::assertion::expression_base<ExprType, ValType>::operator==(T&&) [with T = double; ExprType = boost::test_tools::assertion::value_expr<double>; ValType = double]	64	static
indirections.hpp:47:1:boost::test_tools::tt_detail::assertion_evaluate_t<E> boost::test_tools::tt_detail::assertion_evaluate(const E&) [with E = boost::test_tools::assertion::binary_expr<boost::test_tools::assertion::value_expr<double>, double, boost::test_tools::assertion::op::EQ<double, double, void> >]	48	static
tolerance_manip.hpp:93:1:boost::test_tools::tt_detail::tolerance_manip<FPT> boost::test_tools::tolerance(FPT) [with FPT = double]	48	static
tolerance_manip.hpp:62:1:boost::test_tools::assertion_result boost::test_tools::tt_detail::operator<<(const boost::test_tools::tt_detail::assertion_evaluate_t<E>&, const boost::test_tools::tt_detail::tolerance_manip<FPT>&) [with E = boost::test_tools::assertion::binary_expr<boost::test_tools::assertion::value_expr<double>, double, boost::test_tools::assertion::op::EQ<double, double, void> >; FPT = double]	80	static
tolerance_manip.hpp:73:1:int boost::test_tools::tt_detail::operator<<(const boost::unit_test::lazy_ostream&, const boost::test_tools::tt_detail::tolerance_manip<FPT>&) [with FPT = double]	16	static
tolerance_manip.hpp:79:1:boost::test_tools::tt_detail::check_type boost::test_tools::tt_detail::operator<<(const boost::test_tools::tt_detail::assertion_type&, const boost::test_tools::tt_detail::tolerance_manip<FPT>&) [with FPT = double]	16	static
wrap_stringstream.hpp:64:1:boost::basic_wrap_stringstream<CharT>& boost::operator<<(boost::basic_wrap_stringstream<CharT>&, const T&) [with CharT = char; T = char [29]]	32	static
fixture.hpp:112:6:void boost::unit_test::setup_conditional(U&) [with U = multi_blas_gemv_real_complex]	48	static
fixture.hpp:118:6:void boost::unit_test::teardown_conditional(U&) [with U = multi_blas_gemv_real_complex]	48	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>]	16	static
adl.hpp:101:48:) const [with As = {boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>}]	64	static
array.hpp:25:34:boost::multi::array_allocator<std::allocator<std::complex<double> > >::~array_allocator()	32	static
array.hpp:278:2:boost::multi::static_array<T, D, Alloc>::~static_array() [with T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	32	static
initializer_list:79:7:constexpr const _E* std::initializer_list<_E>::end() const [with _E = std::complex<double>]	48	static
allocator.h:138:7:std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::complex<double>]	32	static
allocator.h:153:7:std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::complex<double>]	32	static
adl.hpp:392:39:) const [with As = {const std::complex<double>*&, const std::complex<double>*&}]	80	static
utility.hpp:375:64:constexpr boost::multi::layout_t<0>::extensions_type boost::multi::extensions(const T&) [with T = std::complex<double>; <template-parameter-1-2> = void]	16	static
adl.hpp:388:48:) const [with As = {const std::complex<double>*&, const std::complex<double>*&}]	64	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::complex<double>*&]	16	static
stl_iterator_base_funcs.h:138:5:constexpr typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const std::complex<double>*]	32	static
adl.hpp:343:16:constexpr auto boost::multi::xtd::alloc_uninitialized_copy(std::allocator<_CharT>&, InputIt, InputIt, ForwardIt) [with T = std::complex<double>; InputIt = const std::complex<double>*; ForwardIt = boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>]	64	static
adl.hpp:482:39:) const [with As = {std::allocator<std::complex<double> >&, const std::complex<double>*&, const std::complex<double>*&, boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>}]	112	static
array.hpp:146:2:boost::multi::static_array<T, D, Alloc>::static_array(It, It, const allocator_type&) [with It = const std::complex<double>*; <template-parameter-2-2> = long int; T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	176	static
array.hpp:247:12:constexpr boost::multi::static_array<T, D, Alloc>::static_array(std::initializer_list<typename std::conditional<(boost::multi::static_array<T, D, Alloc>::dimensionality > 1), boost::multi::array<typename boost::multi::static_array<T, D, Alloc>::element, (boost::multi::static_array<T, D, Alloc>::dimensionality - 1), typename boost::multi::static_array<T, D, Alloc>::allocator_type>, typename std::conditional<(boost::multi::static_array<T, D, Alloc>::dimensionality == 1), typename boost::multi::static_array<T, D, Alloc>::element, typename boost::multi::static_array<T, D, Alloc>::element>::type>::type>) [with T = std::complex<double>; long int D = 2; Alloc = std::allocator<std::complex<double> >]	80	static
array.hpp:278:2:boost::multi::static_array<T, D, Alloc>::~static_array() [with T = std::complex<double>; long int D = 2; Alloc = std::allocator<std::complex<double> >]	32	static
range_access.h:242:5:size()) std::size(const _Container&) [with _Container = boost::multi::array<std::complex<double>, 2>]	32	static
array_ref.hpp:247:27:constexpr decltype(auto) boost::multi::array_iterator<Element, D, ElementPtr>::operator->() const [with Element = std::complex<double>; long int D = 2; ElementPtr = const std::complex<double>*]	16	static
array_ref.hpp:182:17:constexpr Ref* boost::multi::basic_array_ptr<Ref, Layout>::operator->() [with Ref = boost::multi::basic_array<std::complex<double>, 1, const std::complex<double>*, boost::multi::layout_t<1> >; Layout = boost::multi::layout_t<1>]	16	static
array_ref.hpp:283:31:constexpr boost::multi::array_iterator<Element, D, ElementPtr>::stride_type boost::multi::array_iterator<Element, D, ElementPtr>::stride() const & [with Element = std::complex<double>; long int D = 2; ElementPtr = const std::complex<double>*]	16	static
array_ref.hpp:1003:31:constexpr boost::multi::array_iterator<Element, 1, Ptr>::element_ptr boost::multi::array_iterator<Element, 1, Ptr>::base() const & [with Element = std::complex<double>; Ptr = std::complex<double>*]	16	static
array_ref.hpp:1003:31:constexpr boost::multi::array_iterator<Element, 1, Ptr>::element_ptr boost::multi::array_iterator<Element, 1, Ptr>::base() const & [with Element = std::complex<double>; Ptr = const std::complex<double>*]	16	static
array_ref.hpp:281:31:constexpr boost::multi::array_iterator<Element, D, ElementPtr>::element_ptr boost::multi::array_iterator<Element, D, ElementPtr>::base() const & [with Element = std::complex<double>; long int D = 2; ElementPtr = const std::complex<double>*]	16	static
array_ref.hpp:292:28:constexpr boost::multi::array_iterator<Element, D, ElementPtr>& boost::multi::array_iterator<Element, D, ElementPtr>::operator+=(boost::multi::array_iterator<Element, D, ElementPtr>::difference_type) [with Element = std::complex<double>; long int D = 2; ElementPtr = const std::complex<double>*]	32	static
array_ref.hpp:248:30:constexpr boost::multi::array_iterator<Element, D, ElementPtr> boost::multi::array_iterator<Element, D, ElementPtr>::operator+(boost::multi::array_iterator<Element, D, ElementPtr>::difference_type) const [with Element = std::complex<double>; long int D = 2; ElementPtr = const std::complex<double>*]	80	static
array_ref.hpp:1013:28:constexpr boost::multi::array_iterator<Element, 1, Ptr>& boost::multi::array_iterator<Element, 1, Ptr>::operator+=(boost::multi::array_iterator<Element, 1, Ptr>::difference_type) [with Element = std::complex<double>; Ptr = std::complex<double>*]	16	static
array_ref.hpp:1000:30:constexpr boost::multi::array_iterator<Element, 1, Ptr> boost::multi::array_iterator<Element, 1, Ptr>::operator+(boost::multi::array_iterator<Element, 1, Ptr>::difference_type) const [with Element = std::complex<double>; Ptr = std::complex<double>*]	64	static
gemv.hpp:19:6:auto boost::multi::blas::gemv_n(Context&&, A, MIt, Size, XIt, B, YIt) [with Context = boost::multi::blas::context; A = double; MIt = boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>; Size = long int; XIt = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>; B = double; YIt = boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>]	240	dynamic,bounded
gemv.hpp:41:6:auto boost::multi::blas::gemv_n(A, MIt, Size, XIt, B, YIt) [with A = double; MIt = boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>; Size = long int; XIt = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>; B = double; YIt = boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>]	160	dynamic,bounded
gemv.hpp:46:5:W&& boost::multi::blas::gemv(const A&, const M&, const V&, const B&, W&&) [with A = double; M = boost::multi::array<std::complex<double>, 2>; V = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >; B = double; W = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >&]	272	dynamic,bounded
array.hpp:746:2:boost::multi::array<T, D, A>::array(const boost::multi::array<T, D, A>&) [with T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	32	static
axpy.hpp:82:37:decay())> boost::multi::blas::operators::operator-(const X1D&, const Y1D&) [with X1D = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >; Y1D = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >]	80	static
nrm2.hpp:67:21:decltype (std::pow(boost::multi::blas::nrm2(a), n)) boost::multi::blas::operators::operator^(const A1D&, int) [with A1D = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >]	96	static
complex.h:402:5:T thrust::complex<T>::real() const [with T = double]	16	static
complex.h:407:5:T thrust::complex<T>::imag() const [with T = double]	16	static
complex.inl:290:6:bool thrust::operator==(const thrust::complex<T>&, const T1&) [with T0 = double; T1 = double]	32	static
wrap_stringstream.hpp:64:1:boost::basic_wrap_stringstream<CharT>& boost::operator<<(boost::basic_wrap_stringstream<CharT>&, const T&) [with CharT = char; T = char [36]]	32	static
fixture.hpp:112:6:void boost::unit_test::setup_conditional(U&) [with U = multi_blas_gemv_real_complex_thrust]	48	static
fixture.hpp:118:6:void boost::unit_test::teardown_conditional(U&) [with U = multi_blas_gemv_real_complex_thrust]	48	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::array_iterator<thrust::complex<double>, 1, const thrust::complex<double>*>]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::array_iterator<thrust::complex<double>, 1, thrust::complex<double>*>]	16	static
complex.inl:39:1:thrust::complex<T>::complex(const T&) [with T = double]	16	static
array.hpp:247:12:constexpr boost::multi::static_array<T, D, Alloc>::static_array(std::initializer_list<typename std::conditional<(boost::multi::static_array<T, D, Alloc>::dimensionality > 1), boost::multi::array<typename boost::multi::static_array<T, D, Alloc>::element, (boost::multi::static_array<T, D, Alloc>::dimensionality - 1), typename boost::multi::static_array<T, D, Alloc>::allocator_type>, typename std::conditional<(boost::multi::static_array<T, D, Alloc>::dimensionality == 1), typename boost::multi::static_array<T, D, Alloc>::element, typename boost::multi::static_array<T, D, Alloc>::element>::type>::type>) [with T = thrust::complex<double>; long int D = 1; Alloc = std::allocator<thrust::complex<double> >]	80	static
array.hpp:25:34:boost::multi::array_allocator<std::allocator<thrust::complex<double> > >::~array_allocator()	32	static
array.hpp:278:2:boost::multi::static_array<T, D, Alloc>::~static_array() [with T = thrust::complex<double>; long int D = 1; Alloc = std::allocator<thrust::complex<double> >]	32	static
array.hpp:247:12:constexpr boost::multi::static_array<T, D, Alloc>::static_array(std::initializer_list<typename std::conditional<(boost::multi::static_array<T, D, Alloc>::dimensionality > 1), boost::multi::array<typename boost::multi::static_array<T, D, Alloc>::element, (boost::multi::static_array<T, D, Alloc>::dimensionality - 1), typename boost::multi::static_array<T, D, Alloc>::allocator_type>, typename std::conditional<(boost::multi::static_array<T, D, Alloc>::dimensionality == 1), typename boost::multi::static_array<T, D, Alloc>::element, typename boost::multi::static_array<T, D, Alloc>::element>::type>::type>) [with T = thrust::complex<double>; long int D = 2; Alloc = std::allocator<thrust::complex<double> >]	80	static
array.hpp:278:2:boost::multi::static_array<T, D, Alloc>::~static_array() [with T = thrust::complex<double>; long int D = 2; Alloc = std::allocator<thrust::complex<double> >]	32	static
range_access.h:242:5:size()) std::size(const _Container&) [with _Container = boost::multi::array<thrust::complex<double>, 2>]	32	static
range_access.h:242:5:size()) std::size(const _Container&) [with _Container = boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >]	32	static
array_ref.hpp:570:31:constexpr boost::multi::basic_array<thrust::complex<double>, 2, thrust::complex<double>*, boost::multi::layout_t<2> > boost::multi::operator~(const boost::multi::basic_array<thrust::complex<double>, 2, thrust::complex<double>*, boost::multi::layout_t<2> >&)	48	static
array_ref.hpp:566:24:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout> boost::multi::basic_array<T, D, ElementPtr, Layout>::transposed() const & [with T = thrust::complex<double>; long int D = 2; ElementPtr = thrust::complex<double>*; Layout = boost::multi::layout_t<2>]	96	static
array_ref.hpp:348:12:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout>::basic_array(const layout_type&, const ElementPtr&) [with T = thrust::complex<double>; long int D = 2; ElementPtr = thrust::complex<double>*; Layout = boost::multi::layout_t<2>]	48	static
array_ref.hpp:247:27:constexpr decltype(auto) boost::multi::array_iterator<Element, D, ElementPtr>::operator->() const [with Element = thrust::complex<double>; long int D = 2; ElementPtr = const thrust::complex<double>*]	16	static
array_ref.hpp:182:17:constexpr Ref* boost::multi::basic_array_ptr<Ref, Layout>::operator->() [with Ref = boost::multi::basic_array<thrust::complex<double>, 1, const thrust::complex<double>*, boost::multi::layout_t<1> >; Layout = boost::multi::layout_t<1>]	16	static
array_ref.hpp:283:31:constexpr boost::multi::array_iterator<Element, D, ElementPtr>::stride_type boost::multi::array_iterator<Element, D, ElementPtr>::stride() const & [with Element = thrust::complex<double>; long int D = 2; ElementPtr = const thrust::complex<double>*]	16	static
array_ref.hpp:1003:31:constexpr boost::multi::array_iterator<Element, 1, Ptr>::element_ptr boost::multi::array_iterator<Element, 1, Ptr>::base() const & [with Element = thrust::complex<double>; Ptr = thrust::complex<double>*]	16	static
array_ref.hpp:1003:31:constexpr boost::multi::array_iterator<Element, 1, Ptr>::element_ptr boost::multi::array_iterator<Element, 1, Ptr>::base() const & [with Element = thrust::complex<double>; Ptr = const thrust::complex<double>*]	16	static
array_ref.hpp:281:31:constexpr boost::multi::array_iterator<Element, D, ElementPtr>::element_ptr boost::multi::array_iterator<Element, D, ElementPtr>::base() const & [with Element = thrust::complex<double>; long int D = 2; ElementPtr = const thrust::complex<double>*]	16	static
array_ref.hpp:292:28:constexpr boost::multi::array_iterator<Element, D, ElementPtr>& boost::multi::array_iterator<Element, D, ElementPtr>::operator+=(boost::multi::array_iterator<Element, D, ElementPtr>::difference_type) [with Element = thrust::complex<double>; long int D = 2; ElementPtr = const thrust::complex<double>*]	32	static
array_ref.hpp:248:30:constexpr boost::multi::array_iterator<Element, D, ElementPtr> boost::multi::array_iterator<Element, D, ElementPtr>::operator+(boost::multi::array_iterator<Element, D, ElementPtr>::difference_type) const [with Element = thrust::complex<double>; long int D = 2; ElementPtr = const thrust::complex<double>*]	80	static
array_ref.hpp:1013:28:constexpr boost::multi::array_iterator<Element, 1, Ptr>& boost::multi::array_iterator<Element, 1, Ptr>::operator+=(boost::multi::array_iterator<Element, 1, Ptr>::difference_type) [with Element = thrust::complex<double>; Ptr = thrust::complex<double>*]	16	static
array_ref.hpp:1000:30:constexpr boost::multi::array_iterator<Element, 1, Ptr> boost::multi::array_iterator<Element, 1, Ptr>::operator+(boost::multi::array_iterator<Element, 1, Ptr>::difference_type) const [with Element = thrust::complex<double>; Ptr = thrust::complex<double>*]	64	static
gemv.hpp:19:6:auto boost::multi::blas::gemv_n(Context&&, A, MIt, Size, XIt, B, YIt) [with Context = boost::multi::blas::context; A = double; MIt = boost::multi::array_iterator<thrust::complex<double>, 2, const thrust::complex<double>*>; Size = long int; XIt = boost::multi::array_iterator<thrust::complex<double>, 1, const thrust::complex<double>*>; B = double; YIt = boost::multi::array_iterator<thrust::complex<double>, 1, thrust::complex<double>*>]	240	dynamic,bounded
gemv.hpp:41:6:auto boost::multi::blas::gemv_n(A, MIt, Size, XIt, B, YIt) [with A = double; MIt = boost::multi::array_iterator<thrust::complex<double>, 2, const thrust::complex<double>*>; Size = long int; XIt = boost::multi::array_iterator<thrust::complex<double>, 1, const thrust::complex<double>*>; B = double; YIt = boost::multi::array_iterator<thrust::complex<double>, 1, thrust::complex<double>*>]	160	dynamic,bounded
gemv.hpp:46:5:W&& boost::multi::blas::gemv(const A&, const M&, const V&, const B&, W&&) [with A = double; M = boost::multi::array<thrust::complex<double>, 2>; V = boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >; B = double; W = boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >&]	272	dynamic,bounded
array_ref.hpp:1157:53:constexpr typename boost::multi::basic_array<T, 1, ElementPtr, Layout>::reference boost::multi::basic_array<T, 1, ElementPtr, Layout>::operator[](boost::multi::index) & [with T = thrust::complex<double>; ElementPtr = thrust::complex<double>*; Layout = boost::multi::layout_t<1>]	48	static
assertion.hpp:393:5:boost::test_tools::assertion::value_expr<T> boost::test_tools::assertion::seed::operator->*(T&&) const [with T = thrust::complex<double>&]	48	static
assertion.hpp:216:5:boost::test_tools::assertion::binary_expr<ExprType, T, boost::test_tools::assertion::op::EQ<ValType, typename boost::test_tools::assertion::expression_base<ExprType, ValType>::RhsT<T>::type> > boost::test_tools::assertion::expression_base<ExprType, ValType>::operator==(T&&) [with T = double; ExprType = boost::test_tools::assertion::value_expr<thrust::complex<double>&>; ValType = thrust::complex<double>]	64	static
assertion.hpp:361:33:boost::test_tools::assertion_result boost::test_tools::assertion::binary_expr<Lhs, Rhs, OP>::evaluate(bool) const [with LExpr = boost::test_tools::assertion::value_expr<thrust::complex<double>&>; Rhs = double; OP = boost::test_tools::assertion::op::EQ<thrust::complex<double>, double, void>]	576	static
wrap_stringstream.hpp:64:1:boost::basic_wrap_stringstream<CharT>& boost::operator<<(boost::basic_wrap_stringstream<CharT>&, const T&) [with CharT = char; T = char [24]]	32	static
fixture.hpp:112:6:void boost::unit_test::setup_conditional(U&) [with U = multi_blas_gemv_complex]	48	static
fixture.hpp:118:6:void boost::unit_test::teardown_conditional(U&) [with U = multi_blas_gemv_complex]	48	static
complex:409:5:std::complex<_Tp> std::operator*(const _Tp&, const std::complex<_Tp>&) [with _Tp = double]	64	static
complex:349:5:std::complex<_Tp> std::operator+(const _Tp&, const std::complex<_Tp>&) [with _Tp = double]	64	static
array_ref.hpp:345:24:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout>::layout_type boost::multi::basic_array<T, D, ElementPtr, Layout>::layout() const [with T = std::complex<double>; long int D = 2; ElementPtr = std::complex<double>*; Layout = boost::multi::layout_t<2>]	48	static
array_ref.hpp:109:12:constexpr boost::multi::array_types<T, D, ElementPtr, Layout>::array_types(const layout_t&, const element_ptr&) [with T = std::complex<double>; long int D = 2; ElementPtr = std::complex<double>*; Layout = boost::multi::layout_t<2>]	24	static
array.hpp:441:27:constexpr boost::multi::static_array<T, D, Alloc>::const_iterator boost::multi::static_array<T, D, Alloc>::begin() const [with T = std::complex<double>; long int D = 2; Alloc = std::allocator<std::complex<double> >]	80	static
array.hpp:442:27:constexpr boost::multi::static_array<T, D, Alloc>::const_iterator boost::multi::static_array<T, D, Alloc>::end() const [with T = std::complex<double>; long int D = 2; Alloc = std::allocator<std::complex<double> >]	80	static
array.hpp:441:27:constexpr boost::multi::static_array<T, D, Alloc>::const_iterator boost::multi::static_array<T, D, Alloc>::begin() const [with T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	80	static
gemv.hpp:100:2:boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::gemv_range(Scalar, It2D, It2D, It1D) [with Scalar = double; It2D = boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>; It1D = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>; DecayType = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >; Context = boost::multi::blas::context]	64	static
array.hpp:277:2:boost::multi::static_array<T, D, Alloc>::static_array() [with T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	48	static
array.hpp:745:2:boost::multi::array<T, D, A>::array() [with T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	32	static
adl.hpp:59:39:) const [with As = {const std::complex<double>*, long int, std::complex<double>*}]	80	static
array.hpp:453:26:constexpr boost::multi::static_array<T, D, Alloc>& boost::multi::static_array<T, D, Alloc>::operator=(const boost::multi::static_array<T, D, Alloc>&) & [with T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	96	static
gemv.hpp:114:13:boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::decay_type boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::decay() const [with Scalar = double; It2D = boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>; It1D = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>; DecayType = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >; Context = boost::multi::blas::context]	64	static
array.hpp:913:7:>&) const [with TT = std::complex<double>; Args = {std::complex<double>*, boost::multi::layout_t<1, long int>}; T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	32	static
array_ref.hpp:399:20:boost::multi::basic_array<std::complex<double>, 2, std::complex<double>*, boost::multi::layout_t<2> >::decay_type boost::multi::operator+(const boost::multi::basic_array<std::complex<double>, 2, std::complex<double>*, boost::multi::layout_t<2> >&)	48	static
array_ref.hpp:759:28:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout>::const_iterator boost::multi::basic_array<T, D, ElementPtr, Layout>::begin() const & [with T = std::complex<double>; long int D = 2; ElementPtr = std::complex<double>*; Layout = boost::multi::layout_t<2>]	64	dynamic,bounded
array_ref.hpp:760:28:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout>::const_iterator boost::multi::basic_array<T, D, ElementPtr, Layout>::end() const & [with T = std::complex<double>; long int D = 2; ElementPtr = std::complex<double>*; Layout = boost::multi::layout_t<2>]	64	dynamic,bounded
wrap_stringstream.hpp:64:1:boost::basic_wrap_stringstream<CharT>& boost::operator<<(boost::basic_wrap_stringstream<CharT>&, const T&) [with CharT = char; T = char [26]]	32	static
fixture.hpp:112:6:void boost::unit_test::setup_conditional(U&) [with U = multi_blas_gemv_temporary]	48	static
fixture.hpp:118:6:void boost::unit_test::teardown_conditional(U&) [with U = multi_blas_gemv_temporary]	48	static
tuple:968:19:constexpr std::tuple<_T1, _T2>::tuple(_U1&&, _U2&&) [with _U1 = int; _U2 = int; typename std::enable_if<((std::_TC<true, _T1, _T2>::_MoveConstructibleTuple<_U1, _U2>() && std::_TC<true, _T1, _T2>::_ImplicitlyMoveConvertibleTuple<_U1, _U2>()) && (! std::is_same<typename std::remove_cv<typename std::remove_reference<_SrcTuple>::type>::type, std::allocator_arg_t>::value)), bool>::type <anonymous> = true; _T1 = boost::multi::extension_t<long int>; _T2 = boost::multi::extension_t<long int>]	64	static
layout.hpp:366:22:constexpr boost::multi::layout_t<D, SSize>::size_type boost::multi::layout_t<D, SSize>::num_elements() const [with long int D = 2; SSize = long int]	48	static
types.hpp:83:16:Ns = {0}]	48	static
types.hpp:87:16:constexpr auto boost::multi::detail::tail(const Tuple&) [with Tuple = boost::multi::extensions_t<2>]	48	static
index_range.hpp:130:28:constexpr boost::multi::range<IndexType, IndexTypeLast>::const_reference boost::multi::range<IndexType, IndexTypeLast>::first() const [with IndexType = long int; IndexTypeLast = long int]	16	static
tuple:1326:5:>&) [with long unsigned int __i = 0; _Elements = {boost::multi::extension_t<long int, long int>, boost::multi::extension_t<long int, long int>}]	32	static
tuple:1314:5:>&) [with long unsigned int __i = 0; _Head = boost::multi::extension_t<long int>; _Tail = {boost::multi::extension_t<long int, long int>}]	32	static
tuple:198:7:>&) [with long unsigned int _Idx = 0; _Head = boost::multi::extension_t<long int>; _Tail = {boost::multi::extension_t<long int, long int>}]	32	static
tuple:163:7:static constexpr const _Head& std::_Head_base<_Idx, _Head, false>::_M_head(const std::_Head_base<_Idx, _Head, false>&) [with long unsigned int _Idx = 0; _Head = boost::multi::extension_t<long int>]	16	static
layout.hpp:340:12:constexpr boost::multi::layout_t<D, SSize>::layout_t(const extensions_type&) [with long int D = 2; SSize = long int]	96	static
tuple:1326:5:>&) [with long unsigned int __i = 1; _Elements = {boost::multi::extension_t<long int, long int>, boost::multi::extension_t<long int, long int>}]	32	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const boost::multi::extensions_t<2>&]	16	static
tuple:1314:5:>&) [with long unsigned int __i = 1; _Head = boost::multi::extension_t<long int>; _Tail = {}]	32	static
tuple:337:7:static constexpr const _Head& std::_Tuple_impl<_Idx, _Head>::_M_head(const std::_Tuple_impl<_Idx, _Head>&) [with long unsigned int _Idx = 1; _Head = boost::multi::extension_t<long int>]	32	static
tuple:163:7:static constexpr const _Head& std::_Head_base<_Idx, _Head, false>::_M_head(const std::_Head_base<_Idx, _Head, false>&) [with long unsigned int _Idx = 1; _Head = boost::multi::extension_t<long int>]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const boost::multi::extension_t<long int>&]	16	static
tuple:343:17:constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(const _Head&) [with long unsigned int _Idx = 0; _Head = boost::multi::extension_t<long int>]	32	static
tuple:125:17:constexpr std::_Head_base<_Idx, _Head, false>::_Head_base(const _Head&) [with long unsigned int _Idx = 0; _Head = boost::multi::extension_t<long int>]	16	static
adl.hpp:446:39:) const [with As = {std::allocator<std::complex<double> >&, std::complex<double>*&, long int}]	80	static
array.hpp:78:7:auto boost::multi::static_array<T, D, Alloc>::uninitialized_default_construct() [with T = std::complex<double>; long int D = 2; Alloc = std::allocator<std::complex<double> >]	64	static
array.hpp:210:11:boost::multi::static_array<T, D, Alloc>::static_array(typename boost::multi::static_array<T, D, Alloc>::extensions_type, const allocator_type&) [with T = std::complex<double>; long int D = 2; Alloc = std::allocator<std::complex<double> >]	160	static
random.h:2010:7:std::normal_distribution<_RealType>::normal_distribution() [with _RealType = double]	32	static
random.h:516:7:std::mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::mersenne_twister_engine() [with _UIntType = long unsigned int; long unsigned int __w = 32; long unsigned int __n = 624; long unsigned int __m = 397; long unsigned int __r = 31; _UIntType __a = 2567483615; long unsigned int __u = 11; _UIntType __d = 4294967295; long unsigned int __s = 7; _UIntType __b = 2636928640; long unsigned int __t = 15; _UIntType __c = 4022730752; long unsigned int __l = 18; _UIntType __f = 1812433253]	32	static
random.h:2082:2:std::normal_distribution<_RealType>::result_type std::normal_distribution<_RealType>::operator()(_UniformRandomNumberGenerator&) [with _UniformRandomNumberGenerator = std::mersenne_twister_engine<long unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253>; _RealType = double]	32	static
array_ref.hpp:1475:27:constexpr boost::multi::array_ref<T, D, ElementPtr>::elements_type boost::multi::array_ref<T, D, ElementPtr>::elements() & [with T = std::complex<double>; long int D = 2; ElementPtr = std::complex<double>*]	48	static
array_ref.hpp:1267:27:constexpr boost::multi::basic_array<T, 1, ElementPtr, Layout>::iterator boost::multi::basic_array<T, 1, ElementPtr, Layout>::begin() && [with T = std::complex<double>; ElementPtr = std::complex<double>*; Layout = boost::multi::layout_t<1>]	32	static
array_ref.hpp:1271:27:constexpr boost::multi::basic_array<T, 1, ElementPtr, Layout>::iterator boost::multi::basic_array<T, 1, ElementPtr, Layout>::end() && [with T = std::complex<double>; ElementPtr = std::complex<double>*; Layout = boost::multi::layout_t<1>]	32	static
array_ref.hpp:1007:28:constexpr boost::multi::array_iterator<Element, 1, Ptr>& boost::multi::array_iterator<Element, 1, Ptr>::operator++() [with Element = std::complex<double>; Ptr = std::complex<double>*]	16	static
stl_algo.h:4459:5:void std::generate(_FIter, _FIter, _Generator) [with _FIter = boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>; _Generator = multi_blas_gemv_temporary::test_method()::<lambda()>::<lambda()>]	64	static
array.hpp:435:44:constexpr boost::multi::static_array<T, D, Alloc>::iterator boost::multi::static_array<T, D, Alloc>::begin() [with T = std::complex<double>; long int D = 2; Alloc = std::allocator<std::complex<double> >]	48	static
fixture.hpp:112:6:void boost::unit_test::setup_conditional(U&) [with U = multi_blas_gemv_context]	48	static
fixture.hpp:118:6:void boost::unit_test::teardown_conditional(U&) [with U = multi_blas_gemv_context]	48	static
gemv.hpp:104:2:boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::gemv_range(Context&&, Scalar, It2D, It2D, It1D) [with Scalar = double; It2D = boost::multi::array_iterator<double, 2, const double*>; It1D = boost::multi::array_iterator<double, 1, const double*>; DecayType = boost::multi::array<double, 1, std::allocator<double> >; Context = boost::multi::blas::context&]	80	static
gemv.hpp:110:11:boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::iterator boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::begin() const [with Scalar = double; It2D = boost::multi::array_iterator<double, 2, const double*>; It1D = boost::multi::array_iterator<double, 1, const double*>; DecayType = boost::multi::array<double, 1, std::allocator<double> >; Context = boost::multi::blas::context&]	80	dynamic,bounded
gemv.hpp:112:12:boost::multi::size_type boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::size() const [with Scalar = double; It2D = boost::multi::array_iterator<double, 2, const double*>; It1D = boost::multi::array_iterator<double, 1, const double*>; DecayType = boost::multi::array<double, 1, std::allocator<double> >; Context = boost::multi::blas::context&]	192	static
array.hpp:743:17:boost::multi::array<double, 1, std::allocator<double> >::array(Range&&) [with Range = boost::multi::blas::gemv_range<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::array<double, 1, std::allocator<double> >, boost::multi::blas::context&>&; <template-parameter-1-2> = void; <template-parameter-1-3> = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context&>; <template-parameter-1-4> = void][inherited from boost::multi::static_array<double, 1, std::allocator<double> >]	32	static
array.hpp:860:7:decltype ((boost::multi::array<T, D, A>::static_::operator=(o), declval<boost::multi::array<T, D, A>&>())) boost::multi::array<T, D, A>::operator=(Range&&) [with Range = boost::multi::blas::gemv_range<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::array<double, 1, std::allocator<double> >, boost::multi::blas::context&>; <template-parameter-2-2> = void; T = double; long int D = 1; Alloc = std::allocator<double>]	176	static
array.hpp:163:2:boost::multi::static_array<T, D, Alloc>::static_array(Range&&) [with Range = boost::multi::blas::gemv_range<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::array<double, 1, std::allocator<double> >, boost::multi::blas::context&>; <template-parameter-2-2> = void; <template-parameter-2-3> = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context&>; <template-parameter-2-4> = void; T = double; long int D = 1; Alloc = std::allocator<double>]	368	dynamic,bounded
gemv.hpp:121:13:V&& boost::multi::blas::operator+=(V&&, const boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>&) [with V = boost::multi::array<double, 1, std::allocator<double> >&; Scalar = double; It2D = boost::multi::array_iterator<double, 2, const double*>; It1D = boost::multi::array_iterator<double, 1, const double*>; DecayType = boost::multi::array<double, 1, std::allocator<double> >; Context = boost::multi::blas::context&]	176	dynamic,bounded
basic_cstring.hpp:178:1:static boost::unit_test::basic_cstring<CharT>::value_type* boost::unit_test::basic_cstring<CharT>::null_str() [with CharT = const char]	16	static
class_properties.hpp:54:21:boost::unit_test::class_property<PropertyType>::class_property(boost::unit_test::class_property<PropertyType>::write_param_t) [with PropertyType = bool]	16	static
shared_ptr.hpp:377:14:boost::shared_ptr<T>::shared_ptr(Y*) [with Y = boost::basic_wrap_stringstream<char>; T = boost::basic_wrap_stringstream<char>]	48	static
shared_ptr.hpp:764:10:void boost::shared_ptr<T>::swap(boost::shared_ptr<T>&) [with T = boost::basic_wrap_stringstream<char>]	32	static
function_template.hpp:868:10:void boost::function0<R>::clear() [with R = void]	32	static
function_template.hpp:677:18:boost::function0<R>::vtable_type* boost::function0<R>::get_vtable() const [with R = void]	16	static
bcs_char_traits.hpp:82:24:static std::size_t boost::unit_test::ut_detail::bcs_char_traits_impl<CharT>::length(boost::unit_test::ut_detail::bcs_char_traits_impl<CharT>::const_char*) [with CharT = const char]	48	static
basic_cstring.hpp:330:1:boost::unit_test::basic_cstring<CharT>::self_type& boost::unit_test::basic_cstring<CharT>::trim_left(boost::unit_test::basic_cstring<CharT>) [with CharT = const char]	96	static
basic_cstring.hpp:374:1:boost::unit_test::basic_cstring<CharT>::self_type& boost::unit_test::basic_cstring<CharT>::trim_right(boost::unit_test::basic_cstring<CharT>) [with CharT = const char]	96	static
tuple:1314:5:>&) [with long unsigned int __i = 0; _Head = boost::multi::extension_t<long int>; _Tail = {}]	32	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = long int&]	16	static
tuple:945:19:constexpr std::tuple<_T1, _T2>::tuple(const _T1&, const _T2&) [with _Dummy = void; typename std::enable_if<(std::_TC<std::is_same<_Dummy, void>::value, _T1, _T2>::_ConstructibleTuple<_T1, _T2>() && std::_TC<std::is_same<_Dummy, void>::value, _T1, _T2>::_ImplicitlyConvertibleTuple<_T1, _T2>()), bool>::type <anonymous> = true; _T1 = boost::multi::extension_t<long int>; _T2 = boost::multi::extension_t<long int>]	48	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::tuple<boost::multi::extension_t<long int, long int> >]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::tuple<boost::multi::extension_t<long int, long int> >&]	16	static
tuple:1572:9:_Is = {0}; _Tp = std::tuple<boost::multi::extension_t<long int, long int> >; _Tpls = {const std::tuple<boost::multi::extension_t<long int, long int> >&}]	80	static
wrap_stringstream.hpp:74:1:boost::basic_wrap_stringstream<CharT>::wrapped_stream& boost::basic_wrap_stringstream<CharT>::stream() [with CharT = char]	16	static
fixture.hpp:98:58:void boost::unit_test::impl_fixture::call_setup<has_setup>::operator()(U&) [with U = multi_blas_gemv; bool has_setup = false]	16	static
fixture.hpp:104:58:void boost::unit_test::impl_fixture::call_teardown<has_teardown>::operator()(U&) [with U = multi_blas_gemv; bool has_teardown = false]	16	static
function_template.hpp:711:5:boost::function0<R>::function0(Functor, typename boost::enable_if_<(! boost::is_integral<Functor>::value), int>::type) [with Functor = void (*)(); R = void]	48	static
fixture.hpp:131:14:boost::unit_test::class_based_fixture<F, Arg>::class_based_fixture(const Arg&) [with F = boost::test_tools::local_fpc_tolerance<double>; Arg = double]	32	static
shared_ptr.hpp:377:14:boost::shared_ptr<T>::shared_ptr(Y*) [with Y = boost::unit_test::class_based_fixture<boost::test_tools::local_fpc_tolerance<double>, double>; T = boost::unit_test::test_unit_fixture]	48	static
stl_algobase.h:465:5:_OI std::copy(_II, _II, _OI) [with _II = boost::multi::array_iterator<double, 1, const double*>; _OI = boost::multi::array_iterator<double, 1, double*>]	96	static
array.hpp:87:7:void boost::multi::static_array<T, D, Alloc>::destroy() [with T = double; long int D = 1; Alloc = std::allocator<double>]	48	static
array.hpp:258:7:void boost::multi::static_array<T, D, Alloc>::deallocate() [with T = double; long int D = 1; Alloc = std::allocator<double>]	48	static
initializer_list:71:7:constexpr std::initializer_list<_E>::size_type std::initializer_list<_E>::size() const [with _E = double]	16	static
new_allocator.h:80:7:__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = double]	16	static
new_allocator.h:89:7:__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = double]	16	static
array.hpp:32:2:typename std::allocator_traits<_Alloc>::pointer boost::multi::array_allocator<Allocator>::allocate(typename std::allocator_traits<_Alloc>::size_type) [with Allocator = std::allocator<double>]	32	static
tuple:1309:5:>&) [with long unsigned int __i = 0; _Head = boost::multi::extension_t<long int>; _Tail = {}]	32	static
stl_iterator_base_types.h:205:5:constexpr typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = const double*]	16	static
stl_iterator_base_funcs.h:98:5:constexpr typename std::iterator_traits<_Iterator>::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const double*]	16	static
array.hpp:30:2:boost::multi::array_allocator<Allocator>::array_allocator(const allocator_type&) [with Allocator = std::allocator<double>]	32	static
array_ref.hpp:1426:12:constexpr boost::multi::array_ref<T, D, ElementPtr>::array_ref(typename boost::multi::array_ref<T, D, ElementPtr>::element_ptr, typename boost::multi::array_ref<T, D, ElementPtr>::extensions_type) [with T = double; long int D = 1; ElementPtr = double*]	112	static
array.hpp:29:18:boost::multi::array_allocator<Allocator>::allocator_type& boost::multi::array_allocator<Allocator>::alloc() [with Allocator = std::allocator<double>]	16	static
array_ref.hpp:1266:27:constexpr boost::multi::basic_array<T, 1, ElementPtr, Layout>::iterator boost::multi::basic_array<T, 1, ElementPtr, Layout>::begin() & [with T = double; ElementPtr = double*; Layout = boost::multi::layout_t<1>]	64	static
adl.hpp:249:39:) const [with As = {const double*&, const double*&, boost::multi::array_iterator<double, 1, double*>&}]	80	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::allocator<double>&]	16	static
adl.hpp:477:48:) const [with T = std::allocator<double>&; As = {const double*&, const double*&, boost::multi::array_iterator<double, 1, double*>}]	96	static
initializer_list:79:7:constexpr const _E* std::initializer_list<_E>::end() const [with _E = boost::multi::array<double, 1, std::allocator<double> >]	48	static
adl.hpp:401:39:) const [with As = {const boost::multi::array<double, 1, std::allocator<double> >&}]	32	static
adl.hpp:249:39:) const [with As = {boost::multi::array_iterator<double, 1, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::array_iterator<double, 1, double*>}]	96	dynamic,bounded
array_ref.hpp:285:28:constexpr boost::multi::array_iterator<Element, D, ElementPtr>& boost::multi::array_iterator<Element, D, ElementPtr>::operator++() [with Element = double; long int D = 2; ElementPtr = double*]	16	static
array_ref.hpp:1659:16:constexpr auto boost::multi::uninitialized_copy(In, In, boost::multi::array_iterator<T, N, TP>) [with In = const boost::multi::array<double, 1, std::allocator<double> >*; T = double; long int N = 2; TP = double*; <template-parameter-1-5> = void; <template-parameter-1-6> = boost::multi::array_iterator<double, 1, const double*>]	160	static
adl.hpp:343:16:constexpr auto boost::multi::xtd::alloc_uninitialized_copy(std::allocator<_CharT>&, InputIt, InputIt, ForwardIt) [with T = double; InputIt = const boost::multi::array<double, 1, std::allocator<double> >*; ForwardIt = boost::multi::array_iterator<double, 2, double*>]	64	static
adl.hpp:482:39:) const [with As = {std::allocator<double>&, const boost::multi::array<double, 1, std::allocator<double> >*&, const boost::multi::array<double, 1, std::allocator<double> >*&, boost::multi::array_iterator<double, 2, double*>}]	112	static
array.hpp:146:2:boost::multi::static_array<T, D, Alloc>::static_array(It, It, const allocator_type&) [with It = const boost::multi::array<double, 1, std::allocator<double> >*; <template-parameter-2-2> = long int; T = double; long int D = 2; Alloc = std::allocator<double>]	272	static
array.hpp:87:7:void boost::multi::static_array<T, D, Alloc>::destroy() [with T = double; long int D = 2; Alloc = std::allocator<double>]	48	static
array.hpp:258:7:void boost::multi::static_array<T, D, Alloc>::deallocate() [with T = double; long int D = 2; Alloc = std::allocator<double>]	48	static
tuple:348:19:constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(_UHead&&) [with _UHead = long int; long unsigned int _Idx = 0; _Head = boost::multi::extension_t<long int>]	48	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = double*&]	16	static
adl.hpp:441:48:) const [with As = {std::allocator<double>&, double*&, long int}]	64	static
core.hpp:402:175:void boost::multi::blas::core::gemv(char, size_t, size_t, const A&, M*, size_t, X*, size_t, B, Y*, size_t) [with A = double; M = const double; X = const double; B = double; Y = double; typename std::enable_if<(((boost::multi::blas::is_d<DY>{} && boost::multi::blas::is_d<SX>{}) && boost::multi::blas::is_d<SY>{}) && std::is_assignable<Y&, decltype ((((A{} * M{}) * X{}) + (B{} * Y{})))>{}), int>::type <anonymous> = 0]	192	dynamic,bounded
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = double&]	16	static
assertion.hpp:264:33:boost::test_tools::assertion::value_expr<T>::value_expr(T&&) [with T = double&]	32	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::test_tools::assertion::value_expr<double&>]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = double]	16	static
assertion.hpp:340:5:boost::test_tools::assertion::binary_expr<Lhs, Rhs, OP>::binary_expr(LExpr&&, Rhs&&) [with LExpr = boost::test_tools::assertion::value_expr<double&>; Rhs = double; OP = boost::test_tools::assertion::op::EQ<double, double, void>]	64	static
assertion.hpp:352:33:boost::test_tools::assertion::binary_expr<Lhs, Rhs, OP>::result_type boost::test_tools::assertion::binary_expr<Lhs, Rhs, OP>::value() const [with LExpr = boost::test_tools::assertion::value_expr<double&>; Rhs = double; OP = boost::test_tools::assertion::op::EQ<double, double, void>]	64	static
shared_ptr.hpp:422:5:boost::shared_ptr<T>::shared_ptr(const boost::shared_ptr<T>&) [with T = boost::basic_wrap_stringstream<char>]	32	static
assertion.hpp:356:33:void boost::test_tools::assertion::binary_expr<Lhs, Rhs, OP>::report(std::ostream&) const [with LExpr = boost::test_tools::assertion::value_expr<double&>; Rhs = double; OP = boost::test_tools::assertion::op::EQ<double, double, void>]	32	static
lazy_ostream.hpp:58:5:boost::unit_test::lazy_ostream_impl<PrevType, T, StorageT>::lazy_ostream_impl(const PrevType&, const T&) [with PrevType = boost::unit_test::lazy_ostream; T = boost::unit_test::basic_cstring<const char>; StorageT = const boost::unit_test::basic_cstring<const char>&]	48	static
array_ref.hpp:93:29:constexpr boost::multi::array_types<T, D, ElementPtr, Layout>::element_ptr boost::multi::array_types<T, D, ElementPtr, Layout>::base() const [with T = double; long int D = 2; ElementPtr = double*; Layout = boost::multi::layout_t<2>]	16	static
array_ref.hpp:109:12:constexpr boost::multi::array_types<T, D, ElementPtr, Layout>::array_types(const layout_t&, const element_ptr&) [with T = double; long int D = 1; ElementPtr = double*; Layout = boost::multi::layout_t<1>]	16	static
array_ref.hpp:1122:12:constexpr boost::multi::basic_array<T, 1, ElementPtr, Layout>::basic_array(BasicArray&&) [with BasicArray = boost::multi::basic_array<double, 1, double*, boost::multi::layout_t<1> >; <template-parameter-2-2> = void; <template-parameter-2-3> = boost::multi::array_types<double, 1, const double*, boost::multi::layout_t<1> >; T = double; ElementPtr = const double*; Layout = boost::multi::layout_t<1>]	48	static
layout.hpp:243:24:constexpr auto boost::multi::size(const boost::multi::layout_t<1>&)	32	static
dot.hpp:76:2:boost::multi::blas::dot_ref<Context, X, Y, Ptr>::dot_ref(Context&&, const X&, const Y&) [with Context = boost::multi::blas::context; X = boost::multi::basic_array<double, 1, const double*, boost::multi::layout_t<1> >; Y = boost::multi::array<double, 1, std::allocator<double> >; Ptr = boost::multi::blas::dot_ptr<boost::multi::blas::context, boost::multi::array_iterator<double, 1, const double*>, long int, boost::multi::array_iterator<double, 1, const double*> >]	112	dynamic,bounded
array_ref.hpp:1013:28:constexpr boost::multi::array_iterator<Element, 1, Ptr>& boost::multi::array_iterator<Element, 1, Ptr>::operator+=(boost::multi::array_iterator<Element, 1, Ptr>::difference_type) [with Element = double; Ptr = const double*]	16	static
array_ref.hpp:1000:30:constexpr boost::multi::array_iterator<Element, 1, Ptr> boost::multi::array_iterator<Element, 1, Ptr>::operator+(boost::multi::array_iterator<Element, 1, Ptr>::difference_type) const [with Element = double; Ptr = const double*]	64	static
dot.hpp:19:6:auto boost::multi::blas::dot_n(Context&&, XIt, Size, YIt, RPtr) [with Context = boost::multi::blas::context&; XIt = boost::multi::array_iterator<double, 1, const double*>; Size = long int; YIt = boost::multi::array_iterator<double, 1, const double*>; RPtr = double*]	128	static
dot.hpp:60:24:constexpr decltype ((boost::multi::blas::dot_n(declval<Context>(), declval<ItX>(), Size{}, declval<ItY>(), d_first), (d_first + count))) boost::multi::blas::copy_n(boost::multi::blas::dot_ptr<Context, ItX, Size, ItY>, Size2, ItOut) [with ItOut = double*; Size2 = int; Context = boost::multi::blas::context; ItX = boost::multi::array_iterator<double, 1, const double*>; Size = long int; ItY = boost::multi::array_iterator<double, 1, const double*>]	96	dynamic,bounded
dot.hpp:78:13:boost::multi::blas::dot_ref<Context, X, Y, Ptr>::decay_type boost::multi::blas::dot_ref<Context, X, Y, Ptr>::decay() const [with Context = boost::multi::blas::context; X = boost::multi::basic_array<double, 1, const double*, boost::multi::layout_t<1> >; Y = boost::multi::array<double, 1, std::allocator<double> >; Ptr = boost::multi::blas::dot_ptr<boost::multi::blas::context, boost::multi::array_iterator<double, 1, const double*>, long int, boost::multi::array_iterator<double, 1, const double*> >]	96	dynamic,bounded
array_ref.hpp:186:12:constexpr boost::multi::basic_array_ptr<Ref, Layout>::basic_array_ptr(typename Ref::element_ptr, const Layout&) [with Ref = boost::multi::basic_array<double, 1, double*, boost::multi::layout_t<1> >; Layout = boost::multi::layout_t<1>]	48	static
array_ref.hpp:252:12:constexpr boost::multi::array_iterator<Element, D, ElementPtr>::array_iterator(typename boost::multi::basic_array<Element, (D - 1), ElementPtr>::element_ptr, boost::multi::layout_t<(D - 1), long int>, boost::multi::index) [with Element = double; long int D = 2; ElementPtr = double*]	48	static
array_ref.hpp:109:12:constexpr boost::multi::array_types<T, D, ElementPtr, Layout>::array_types(const layout_t&, const element_ptr&) [with T = double; long int D = 1; ElementPtr = const double*; Layout = boost::multi::layout_t<1>]	16	static
layout.hpp:412:28:constexpr boost::multi::layout_t<D, SSize>::extensions_type boost::multi::layout_t<D, SSize>::extensions() const [with long int D = 2; SSize = long int]	144	static
array.hpp:78:7:auto boost::multi::static_array<T, D, Alloc>::uninitialized_default_construct() [with T = double; long int D = 2; Alloc = std::allocator<double>]	64	static
array.hpp:210:11:boost::multi::static_array<T, D, Alloc>::static_array(typename boost::multi::static_array<T, D, Alloc>::extensions_type, const allocator_type&) [with T = double; long int D = 2; Alloc = std::allocator<double>]	160	static
array.hpp:435:44:constexpr boost::multi::static_array<T, D, Alloc>::iterator boost::multi::static_array<T, D, Alloc>::begin() [with T = double; long int D = 2; Alloc = std::allocator<double>]	48	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::array_iterator<double, 2, const double*>]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::array_iterator<double, 2, double*>]	16	static
adl.hpp:96:48:constexpr decltype (std::copy(first, last, d_first)) boost::multi::adl_copy_fn__::_(boost::multi::priority<1>, InputIt, InputIt, OutputIt) const [with InputIt = boost::multi::array_iterator<double, 2, const double*>; OutputIt = boost::multi::array_iterator<double, 2, double*>; <template-parameter-1-3> = void]	176	dynamic,bounded
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = boost::multi::basic_array<double, 2, double*, boost::multi::layout_t<2> >&]	16	static
core.hpp:402:175:void boost::multi::blas::core::gemv(char, size_t, size_t, const A&, M*, size_t, X*, size_t, B, Y*, size_t) [with A = double; M = double; X = const double; B = double; Y = double; typename std::enable_if<(((boost::multi::blas::is_d<DY>{} && boost::multi::blas::is_d<SX>{}) && boost::multi::blas::is_d<SY>{}) && std::is_assignable<Y&, decltype ((((A{} * M{}) * X{}) + (B{} * Y{})))>{}), int>::type <anonymous> = 0]	192	dynamic,bounded
array_ref.hpp:96:28:constexpr const layout_t& boost::multi::array_types<T, D, ElementPtr, Layout>::layout() const [with T = double; long int D = 2; ElementPtr = double*; Layout = boost::multi::layout_t<2>]	16	static
array_ref.hpp:96:28:constexpr const layout_t& boost::multi::array_types<T, D, ElementPtr, Layout>::layout() const [with T = double; long int D = 1; ElementPtr = double*; Layout = boost::multi::layout_t<1>]	16	static
array_ref.hpp:242:12:constexpr boost::multi::array_iterator<Element, D, ElementPtr>::array_iterator(const Other&) [with Other = boost::multi::array_iterator<double, 2, double*>; <template-parameter-2-2> = const double*; Element = double; long int D = 2; ElementPtr = const double*]	48	static
array_ref.hpp:755:28:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout>::iterator boost::multi::basic_array<T, D, ElementPtr, Layout>::end() && [with T = double; long int D = 2; ElementPtr = double*; Layout = boost::multi::layout_t<2>]	48	static
array_ref.hpp:1267:27:constexpr boost::multi::basic_array<T, 1, ElementPtr, Layout>::iterator boost::multi::basic_array<T, 1, ElementPtr, Layout>::begin() && [with T = double; ElementPtr = double*; Layout = boost::multi::layout_t<1>]	32	static
array_ref.hpp:980:12:constexpr boost::multi::array_iterator<Element, 1, Ptr>::array_iterator(const boost::multi::array_iterator<EElement, 1, PPtr>&) [with EElement = double; PPtr = double*; <template-parameter-2-3> = const double*; Element = double; Ptr = const double*]	16	static
gemv.hpp:86:2:boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>::gemv_iterator(Scalar, It2D, It1D, Context) [with Scalar = double; It2D = boost::multi::array_iterator<double, 2, const double*>; It1D = boost::multi::array_iterator<double, 1, const double*>; Context = boost::multi::blas::context]	24	static
gemv.hpp:111:11:boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::iterator boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::end() const [with Scalar = double; It2D = boost::multi::array_iterator<double, 2, const double*>; It1D = boost::multi::array_iterator<double, 1, const double*>; DecayType = boost::multi::array<double, 1, std::allocator<double> >; Context = boost::multi::blas::context]	80	dynamic,bounded
array_ref.hpp:1009:17:constexpr bool boost::multi::array_iterator<Element, 1, Ptr>::operator==(const boost::multi::array_iterator<Element, 1, Ptr>&) const [with Element = double; Ptr = const double*]	16	static
gemv.hpp:69:25:boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>::difference_type boost::multi::blas::operator-(const boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>&, const boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>&)	32	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = boost::multi::static_array<double, 1, std::allocator<double> >&]	16	static
range_access.h:78:5:end()) std::end(const _Container&) [with _Container = boost::multi::array<double, 2>]	48	static
index_range.hpp:57:17:constexpr auto boost::multi::iterator_facade<Self, ValueType, AccessCategory, Reference, DifferenceType, Pointer>::operator!=(const self_type&) const [with Self = boost::multi::array_iterator<double, 2, const double*>; ValueType = void; AccessCategory = std::random_access_iterator_tag; Reference = const boost::multi::basic_array<double, 1, const double*, boost::multi::layout_t<1> >&; DifferenceType = long int; Pointer = void*]	32	static
array_ref.hpp:1007:28:constexpr boost::multi::array_iterator<Element, 1, Ptr>& boost::multi::array_iterator<Element, 1, Ptr>::operator++() [with Element = double; Ptr = double*]	16	static
array_ref.hpp:285:28:constexpr boost::multi::array_iterator<Element, D, ElementPtr>& boost::multi::array_iterator<Element, D, ElementPtr>::operator++() [with Element = double; long int D = 2; ElementPtr = const double*]	16	static
gemv.cpp:35:3:MV(const M&, const VI&, VO&&) [with M = boost::multi::array<double, 2>; VI = boost::multi::array<double, 1, std::allocator<double> >; VO = boost::multi::array<double, 1, std::allocator<double> >&]::<lambda(auto:185&&)> [with auto:185 = boost::multi::basic_array<double, 1, const double*, boost::multi::layout_t<1> >]	80	static
stl_algo.h:4326:5:_OIter std::transform(_IIter, _IIter, _OIter, _UnaryOperation) [with _IIter = boost::multi::array_iterator<double, 2, const double*>; _OIter = boost::multi::array_iterator<double, 1, double*>; _UnaryOperation = MV(const M&, const VI&, VO&&) [with M = boost::multi::array<double, 2>; VI = boost::multi::array<double, 1, std::allocator<double> >; VO = boost::multi::array<double, 1, std::allocator<double> >&]::<lambda(auto:185&&)>]	112	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::array<double, 1, std::allocator<double> >&]	16	static
assertion.hpp:264:33:boost::test_tools::assertion::value_expr<T>::value_expr(T&&) [with T = boost::multi::array<double, 1, std::allocator<double> >&]	32	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::test_tools::assertion::value_expr<boost::multi::array<double, 1, std::allocator<double> >&>]	16	static
assertion.hpp:340:5:boost::test_tools::assertion::binary_expr<Lhs, Rhs, OP>::binary_expr(LExpr&&, Rhs&&) [with LExpr = boost::test_tools::assertion::value_expr<boost::multi::array<double, 1, std::allocator<double> >&>; Rhs = boost::multi::array<double, 1, std::allocator<double> >&; OP = boost::test_tools::assertion::op::EQ<boost::multi::array<double, 1, std::allocator<double> >, boost::multi::array<double, 1, std::allocator<double> >, void>]	64	static
assertion.hpp:352:33:boost::test_tools::assertion::binary_expr<Lhs, Rhs, OP>::result_type boost::test_tools::assertion::binary_expr<Lhs, Rhs, OP>::value() const [with LExpr = boost::test_tools::assertion::value_expr<boost::multi::array<double, 1, std::allocator<double> >&>; Rhs = boost::multi::array<double, 1, std::allocator<double> >&; OP = boost::test_tools::assertion::op::EQ<boost::multi::array<double, 1, std::allocator<double> >, boost::multi::array<double, 1, std::allocator<double> >, void>]	64	static
assertion.hpp:356:33:void boost::test_tools::assertion::binary_expr<Lhs, Rhs, OP>::report(std::ostream&) const [with LExpr = boost::test_tools::assertion::value_expr<boost::multi::array<double, 1, std::allocator<double> >&>; Rhs = boost::multi::array<double, 1, std::allocator<double> >&; OP = boost::test_tools::assertion::op::EQ<boost::multi::array<double, 1, std::allocator<double> >, boost::multi::array<double, 1, std::allocator<double> >, void>]	32	static
tuple:626:19: (_Elements) >= 1)), bool>::type <anonymous> = true; _Elements = {boost::multi::extension_t<long int, long int>}]	48	static
index_range.hpp:141:17:constexpr bool boost::multi::range<IndexType, IndexTypeLast>::empty() const [with IndexType = long int; IndexTypeLast = long int]	16	static
index_range.hpp:151:24:constexpr auto boost::multi::operator==(const boost::multi::range<long int, long int>&, const boost::multi::range<long int, long int>&)	32	static
index_range.hpp:223:24:constexpr auto boost::multi::operator==(const boost::multi::extension_t<long int>&, const boost::multi::extension_t<long int>&)	32	static
tuple:337:7:static constexpr const _Head& std::_Tuple_impl<_Idx, _Head>::_M_head(const std::_Tuple_impl<_Idx, _Head>&) [with long unsigned int _Idx = 0; _Head = boost::multi::extension_t<long int>]	32	static
tuple:1392:7:static constexpr bool std::__tuple_compare<_Tp, _Up, __i, __size>::__eq(const _Tp&, const _Up&) [with _Tp = std::tuple<boost::multi::extension_t<long int, long int> >; _Up = std::tuple<boost::multi::extension_t<long int, long int> >; long unsigned int __i = 0; long unsigned int __size = 1]	48	static
stl_algo.h:799:5:_OIter std::copy_n(_IIter, _Size, _OIter) [with _IIter = const double*; _Size = long int; _OIter = double*]	48	static
gemv.hpp:113:39:typename boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::decay_type::extensions_type boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::extensions() const [with Scalar = double; It2D = boost::multi::array_iterator<double, 2, const double*>; It1D = boost::multi::array_iterator<double, 1, const double*>; DecayType = boost::multi::array<double, 1, std::allocator<double> >; Context = boost::multi::blas::context]	64	static
array.hpp:163:2:boost::multi::static_array<T, D, Alloc>::static_array(Range&&) [with Range = boost::multi::blas::gemv_range<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::array<double, 1, std::allocator<double> >, boost::multi::blas::context>&; <template-parameter-2-2> = void; <template-parameter-2-3> = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>; <template-parameter-2-4> = void; T = double; long int D = 1; Alloc = std::allocator<double>]	368	dynamic,bounded
layout.hpp:221:2:constexpr boost::multi::layout_t<1, SSize>::layout_t() [with SSize = long int]	16	static
array.hpp:843:9:boost::multi::array<T, D, A>& boost::multi::array<T, D, A>::operator=(boost::multi::array<T, D, A>&&) [with T = double; long int D = 1; Alloc = std::allocator<double>]	112	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::blas::gemv_range<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::array<double, 1, std::allocator<double> >, boost::multi::blas::context>]	16	static
gemv.hpp:80:14:auto boost::multi::blas::copy(boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>, boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>, It1DOut) [with It1DOut = boost::multi::array_iterator<double, 1, double*>; Scalar = double; It2D = boost::multi::array_iterator<double, 2, const double*>; It1D = boost::multi::array_iterator<double, 1, const double*>; Context = boost::multi::blas::context]	112	dynamic,bounded
gemv.hpp:82:14:auto boost::multi::blas::uninitialized_copy(boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>, boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>, It1DOut) [with It1DOut = boost::multi::array_iterator<double, 1, double*>; Scalar = double; It2D = boost::multi::array_iterator<double, 2, const double*>; It1D = boost::multi::array_iterator<double, 1, const double*>; Context = boost::multi::blas::context]	176	dynamic,bounded
adl.hpp:343:16:constexpr auto boost::multi::xtd::alloc_uninitialized_copy(std::allocator<_CharT>&, InputIt, InputIt, ForwardIt) [with T = double; InputIt = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>; ForwardIt = boost::multi::array_iterator<double, 1, double*>]	48	static
adl.hpp:482:39:) const [with As = {std::allocator<double>&, boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>&, boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>&, boost::multi::array_iterator<double, 1, double*>}]	112	static
array.hpp:146:2:boost::multi::static_array<T, D, Alloc>::static_array(It, It, const allocator_type&) [with It = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>; <template-parameter-2-2> = long int; T = double; long int D = 1; Alloc = std::allocator<double>]	176	static
adl.hpp:515:49:) const [with T1 = std::allocator<double>&; As = {double*&, long unsigned int&, double&}]	96	static
array.hpp:325:53:constexpr typename boost::multi::static_array<T, D, Alloc>::element_ptr boost::multi::static_array<T, D, Alloc>::base() [with T = double; long int D = 1; Alloc = std::allocator<double>]	32	static
array_ref.hpp:288:35:constexpr boost::multi::array_iterator<double, 2, const double*>::difference_type boost::multi::operator-(const boost::multi::array_iterator<double, 2, const double*>&, const boost::multi::array_iterator<double, 2, const double*>&)	32	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const boost::multi::blas::context&]	16	static
fixture.hpp:98:58:void boost::unit_test::impl_fixture::call_setup<has_setup>::operator()(U&) [with U = multi_blas_gemv_real; bool has_setup = false]	16	static
fixture.hpp:104:58:void boost::unit_test::impl_fixture::call_teardown<has_teardown>::operator()(U&) [with U = multi_blas_gemv_real; bool has_teardown = false]	16	static
array_ref.hpp:1403:12:constexpr boost::multi::array_ref<T, D, ElementPtr>::array_ref() [with T = double; long int D = 1; ElementPtr = double*]	96	static
array.hpp:743:17:boost::multi::array<double, 1, std::allocator<double> >::array(Range&&) [with Range = const boost::multi::blas::gemv_range<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::array<double, 1, std::allocator<double> >, boost::multi::blas::context>&; <template-parameter-1-2> = void; <template-parameter-1-3> = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>; <template-parameter-1-4> = void][inherited from boost::multi::static_array<double, 1, std::allocator<double> >]	32	static
array.hpp:860:7:decltype ((boost::multi::array<T, D, A>::static_::operator=(o), declval<boost::multi::array<T, D, A>&>())) boost::multi::array<T, D, A>::operator=(Range&&) [with Range = const boost::multi::blas::gemv_range<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::array<double, 1, std::allocator<double> >, boost::multi::blas::context>&; <template-parameter-2-2> = void; T = double; long int D = 1; Alloc = std::allocator<double>]	176	static
array.hpp:47:17:boost::multi::array_allocator<Allocator>::allocator_type boost::multi::array_allocator<Allocator>::get_allocator() const [with Allocator = std::allocator<double>]	32	static
array.hpp:310:37:typename boost::multi::static_array<T, D, Alloc>::element_ptr boost::multi::static_array<T, D, Alloc>::data() [with T = double; long int D = 1; Alloc = std::allocator<double>]	32	static
adl.hpp:287:48:) const [with As = {const double*&, long int&, double*&}]	64	static
dot.hpp:76:2:boost::multi::blas::dot_ref<Context, X, Y, Ptr>::dot_ref(Context&&, const X&, const Y&) [with Context = boost::multi::blas::context; X = boost::multi::array<double, 1, std::allocator<double> >; Y = boost::multi::array<double, 1, std::allocator<double> >; Ptr = boost::multi::blas::dot_ptr<boost::multi::blas::context, boost::multi::array_iterator<double, 1, const double*>, long int, boost::multi::array_iterator<double, 1, const double*> >]	112	dynamic,bounded
dot.hpp:78:13:boost::multi::blas::dot_ref<Context, X, Y, Ptr>::decay_type boost::multi::blas::dot_ref<Context, X, Y, Ptr>::decay() const [with Context = boost::multi::blas::context; X = boost::multi::array<double, 1, std::allocator<double> >; Y = boost::multi::array<double, 1, std::allocator<double> >; Ptr = boost::multi::blas::dot_ptr<boost::multi::blas::context, boost::multi::array_iterator<double, 1, const double*>, long int, boost::multi::array_iterator<double, 1, const double*> >]	96	dynamic,bounded
array_ref.hpp:394:23:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout>::decay_type boost::multi::basic_array<T, D, ElementPtr, Layout>::decay() const [with T = double; long int D = 2; ElementPtr = double*; Layout = boost::multi::layout_t<2>]	64	static
array_ref.hpp:1500:50:constexpr const typename boost::multi::array_ref<T, D, ElementPtr>::decay_type& boost::multi::array_ref<T, D, ElementPtr>::decay() const & [with T = double; long int D = 1; ElementPtr = double*]	16	static
axpy.hpp:79:37:0e+0, other, forward<X1D>(x))) boost::multi::blas::operators::operator-=(X1D&&, const Y1D&) [with X1D = boost::multi::array<double, 1, std::allocator<double> >&; Y1D = boost::multi::array<double, 1, std::allocator<double> >]	32	static
nrm2.hpp:51:6:std::decay_t<decltype (boost::multi::blas::nrm2(x, (boost::multi::static_array<T, 0, Alloc>)(<brace-enclosed initializer list>())))> boost::multi::blas::nrm2(const A1D&) [with A1D = boost::multi::array<double, 1, std::allocator<double> >; T = double; Alloc = std::allocator<double>]	112	static
array.hpp:591:2:boost::multi::static_array<T, 0, Alloc>::~static_array() [with T = double; Alloc = std::allocator<double>]	32	static
array.hpp:631:12:constexpr boost::multi::static_array<T, 0, Alloc>::operator typename std::add_rvalue_reference<typename std::iterator_traits<typename boost::multi::static_array<T, 0, Alloc>::element_ptr>::reference>::type() && [with T = double; Alloc = std::allocator<double>]	16	static
assertion.hpp:264:33:boost::test_tools::assertion::value_expr<T>::value_expr(T&&) [with T = double]	32	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::test_tools::assertion::value_expr<double>]	16	static
assertion.hpp:340:5:boost::test_tools::assertion::binary_expr<Lhs, Rhs, OP>::binary_expr(LExpr&&, Rhs&&) [with LExpr = boost::test_tools::assertion::value_expr<double>; Rhs = double; OP = boost::test_tools::assertion::op::EQ<double, double, void>]	64	static
indirections.hpp:37:5:boost::test_tools::tt_detail::assertion_evaluate_t<E>::assertion_evaluate_t(const E&) [with E = boost::test_tools::assertion::binary_expr<boost::test_tools::assertion::value_expr<double>, double, boost::test_tools::assertion::op::EQ<double, double, void> >]	16	static
tolerance_manip.hpp:39:14:boost::test_tools::tt_detail::tolerance_manip<FPT>::tolerance_manip(const FPT&) [with FPT = double]	16	static
fpc_tolerance.hpp:47:5:boost::test_tools::local_fpc_tolerance<FPT>::local_fpc_tolerance(FPT) [with FPT = double]	48	static
fpc_tolerance.hpp:52:5:boost::test_tools::local_fpc_tolerance<FPT>::~local_fpc_tolerance() [with FPT = double]	32	static
assertion.hpp:361:33:boost::test_tools::assertion_result boost::test_tools::assertion::binary_expr<Lhs, Rhs, OP>::evaluate(bool) const [with LExpr = boost::test_tools::assertion::value_expr<double>; Rhs = double; OP = boost::test_tools::assertion::op::EQ<double, double, void>]	576	static
fixture.hpp:98:58:void boost::unit_test::impl_fixture::call_setup<has_setup>::operator()(U&) [with U = multi_blas_gemv_real_complex; bool has_setup = false]	16	static
fixture.hpp:104:58:void boost::unit_test::impl_fixture::call_teardown<has_teardown>::operator()(U&) [with U = multi_blas_gemv_real_complex; bool has_teardown = false]	16	static
stl_algobase.h:465:5:_OI std::copy(_II, _II, _OI) [with _II = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>; _OI = boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>]	96	static
array.hpp:87:7:void boost::multi::static_array<T, D, Alloc>::destroy() [with T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	48	static
array.hpp:258:7:void boost::multi::static_array<T, D, Alloc>::deallocate() [with T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	48	static
initializer_list:71:7:constexpr std::initializer_list<_E>::size_type std::initializer_list<_E>::size() const [with _E = std::complex<double>]	16	static
new_allocator.h:80:7:__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::complex<double>]	16	static
new_allocator.h:89:7:__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::complex<double>]	16	static
array.hpp:32:2:typename std::allocator_traits<_Alloc>::pointer boost::multi::array_allocator<Allocator>::allocate(typename std::allocator_traits<_Alloc>::size_type) [with Allocator = std::allocator<std::complex<double> >]	32	static
stl_iterator_base_types.h:205:5:constexpr typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = const std::complex<double>*]	16	static
stl_iterator_base_funcs.h:98:5:constexpr typename std::iterator_traits<_Iterator>::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const std::complex<double>*]	16	static
array.hpp:30:2:boost::multi::array_allocator<Allocator>::array_allocator(const allocator_type&) [with Allocator = std::allocator<std::complex<double> >]	32	static
array_ref.hpp:1077:15:constexpr boost::multi::basic_array<std::complex<double>, 1, std::complex<double>*, boost::multi::layout_t<1> >::basic_array(const layout_t&, std::complex<double>* const&) [inherited from boost::multi::array_types<std::complex<double>, 1, std::complex<double>*, boost::multi::layout_t<1> >]	48	static
array_ref.hpp:1426:12:constexpr boost::multi::array_ref<T, D, ElementPtr>::array_ref(typename boost::multi::array_ref<T, D, ElementPtr>::element_ptr, typename boost::multi::array_ref<T, D, ElementPtr>::extensions_type) [with T = std::complex<double>; long int D = 1; ElementPtr = std::complex<double>*]	112	static
array.hpp:29:18:boost::multi::array_allocator<Allocator>::allocator_type& boost::multi::array_allocator<Allocator>::alloc() [with Allocator = std::allocator<std::complex<double> >]	16	static
array_ref.hpp:1266:27:constexpr boost::multi::basic_array<T, 1, ElementPtr, Layout>::iterator boost::multi::basic_array<T, 1, ElementPtr, Layout>::begin() & [with T = std::complex<double>; ElementPtr = std::complex<double>*; Layout = boost::multi::layout_t<1>]	64	static
adl.hpp:249:39:) const [with As = {const std::complex<double>*&, const std::complex<double>*&, boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>&}]	80	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::allocator<std::complex<double> >&]	16	static
adl.hpp:477:48:) const [with T = std::allocator<std::complex<double> >&; As = {const std::complex<double>*&, const std::complex<double>*&, boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>}]	96	static
initializer_list:79:7:constexpr const _E* std::initializer_list<_E>::end() const [with _E = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >]	48	static
adl.hpp:401:39:) const [with As = {const boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >&}]	32	static
adl.hpp:249:39:) const [with As = {boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>}]	80	static
array_ref.hpp:285:28:constexpr boost::multi::array_iterator<Element, D, ElementPtr>& boost::multi::array_iterator<Element, D, ElementPtr>::operator++() [with Element = std::complex<double>; long int D = 2; ElementPtr = std::complex<double>*]	16	static
array_ref.hpp:1659:16:constexpr auto boost::multi::uninitialized_copy(In, In, boost::multi::array_iterator<T, N, TP>) [with In = const boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >*; T = std::complex<double>; long int N = 2; TP = std::complex<double>*; <template-parameter-1-5> = void; <template-parameter-1-6> = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>]	160	static
adl.hpp:343:16:constexpr auto boost::multi::xtd::alloc_uninitialized_copy(std::allocator<_CharT>&, InputIt, InputIt, ForwardIt) [with T = std::complex<double>; InputIt = const boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >*; ForwardIt = boost::multi::array_iterator<std::complex<double>, 2, std::complex<double>*>]	64	static
adl.hpp:482:39:) const [with As = {std::allocator<std::complex<double> >&, const boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >*&, const boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >*&, boost::multi::array_iterator<std::complex<double>, 2, std::complex<double>*>}]	112	static
array.hpp:146:2:boost::multi::static_array<T, D, Alloc>::static_array(It, It, const allocator_type&) [with It = const boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >*; <template-parameter-2-2> = long int; T = std::complex<double>; long int D = 2; Alloc = std::allocator<std::complex<double> >]	272	static
array.hpp:87:7:void boost::multi::static_array<T, D, Alloc>::destroy() [with T = std::complex<double>; long int D = 2; Alloc = std::allocator<std::complex<double> >]	48	static
array.hpp:258:7:void boost::multi::static_array<T, D, Alloc>::deallocate() [with T = std::complex<double>; long int D = 2; Alloc = std::allocator<std::complex<double> >]	48	static
range_access.h:58:5:begin()) std::begin(const _Container&) [with _Container = boost::multi::array<std::complex<double>, 2>]	48	static
range_access.h:58:5:begin()) std::begin(const _Container&) [with _Container = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >]	32	static
range_access.h:48:5:begin()) std::begin(_Container&) [with _Container = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >]	32	static
array_ref.hpp:1005:24:constexpr boost::multi::array_iterator<Element, 1, Ptr>::stride_type boost::multi::array_iterator<Element, 1, Ptr>::stride() const & [with Element = std::complex<double>; Ptr = const std::complex<double>*]	16	static
array_ref.hpp:1005:24:constexpr boost::multi::array_iterator<Element, 1, Ptr>::stride_type boost::multi::array_iterator<Element, 1, Ptr>::stride() const & [with Element = std::complex<double>; Ptr = std::complex<double>*]	16	static
core.hpp:522:14:) [with As = {char, long int, long int, double, const std::complex<double>*, long int, const std::complex<double>*, long int, double, std::complex<double>*, long int}]	112	dynamic,bounded
array_ref.hpp:272:17:constexpr void boost::multi::array_iterator<Element, D, ElementPtr>::advance(boost::multi::array_iterator<Element, D, ElementPtr>::difference_type) [with Element = std::complex<double>; long int D = 2; ElementPtr = const std::complex<double>*]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >&]	16	static
array_ref.hpp:1500:50:constexpr const typename boost::multi::array_ref<T, D, ElementPtr>::decay_type& boost::multi::array_ref<T, D, ElementPtr>::decay() const & [with T = std::complex<double>; long int D = 1; ElementPtr = std::complex<double>*]	16	static
utility.hpp:156:16:num_elements())> boost::multi::num_elements(const A&) [with A = boost::multi::static_array<std::complex<double>, 1, std::allocator<std::complex<double> > >; <template-parameter-1-2> = void]	32	static
adl.hpp:292:39:) const [with As = {const std::complex<double>*&, long int&, std::complex<double>*&}]	80	static
adl.hpp:307:16:constexpr auto boost::multi::xtd::alloc_uninitialized_copy_n(std::allocator<_CharT>&, InputIt, Size, ForwardIt) [with T = std::complex<double>; InputIt = const std::complex<double>*; Size = long int; ForwardIt = std::complex<double>*]	48	static
adl.hpp:486:48:) const [with As = {std::allocator<std::complex<double> >&, const std::complex<double>*&, long int&, std::complex<double>*&}]	96	static
adl.hpp:490:39:) const [with As = {std::allocator<std::complex<double> >&, const std::complex<double>*&, long int&, std::complex<double>*&}]	112	static
array.hpp:39:7:auto boost::multi::array_allocator<Allocator>::uninitialized_copy_n(It, boost::multi::size_type, typename std::allocator_traits<_Alloc>::pointer) [with It = const std::complex<double>*; Allocator = std::allocator<std::complex<double> >]	48	static
array.hpp:82:29:auto boost::multi::static_array<T, D, Alloc>::uninitialized_copy_elements(It) [with It = const std::complex<double>*; T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	48	static
array.hpp:239:2:boost::multi::static_array<T, D, Alloc>::static_array(const boost::multi::static_array<T, D, Alloc>&) [with T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	80	static
axpy.hpp:79:37:0e+0, other, forward<X1D>(x))) boost::multi::blas::operators::operator-=(X1D&&, const Y1D&) [with X1D = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >&; Y1D = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >]	80	static
nrm2.hpp:51:6:std::decay_t<decltype (boost::multi::blas::nrm2(x, (boost::multi::static_array<T, 0, Alloc>)(<brace-enclosed initializer list>())))> boost::multi::blas::nrm2(const A1D&) [with A1D = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >; T = double; Alloc = std::allocator<double>]	112	static
fixture.hpp:98:58:void boost::unit_test::impl_fixture::call_setup<has_setup>::operator()(U&) [with U = multi_blas_gemv_real_complex_thrust; bool has_setup = false]	16	static
fixture.hpp:104:58:void boost::unit_test::impl_fixture::call_teardown<has_teardown>::operator()(U&) [with U = multi_blas_gemv_real_complex_thrust; bool has_teardown = false]	16	static
stl_algobase.h:465:5:_OI std::copy(_II, _II, _OI) [with _II = boost::multi::array_iterator<thrust::complex<double>, 1, const thrust::complex<double>*>; _OI = boost::multi::array_iterator<thrust::complex<double>, 1, thrust::complex<double>*>]	96	static
initializer_list:79:7:constexpr const _E* std::initializer_list<_E>::end() const [with _E = thrust::complex<double>]	48	static
allocator.h:138:7:std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = thrust::complex<double>]	32	static
allocator.h:153:7:std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = thrust::complex<double>]	32	static
adl.hpp:392:39:) const [with As = {const thrust::complex<double>*&, const thrust::complex<double>*&}]	80	static
utility.hpp:375:64:constexpr boost::multi::layout_t<0>::extensions_type boost::multi::extensions(const T&) [with T = thrust::complex<double>; <template-parameter-1-2> = void]	16	static
adl.hpp:387:48:) const [with As = {const thrust::complex<double>*&, const thrust::complex<double>*&}]	64	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const thrust::complex<double>*&]	16	static
stl_iterator_base_funcs.h:138:5:constexpr typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const thrust::complex<double>*]	32	static
adl.hpp:343:16:constexpr auto boost::multi::xtd::alloc_uninitialized_copy(std::allocator<_CharT>&, InputIt, InputIt, ForwardIt) [with T = thrust::complex<double>; InputIt = const thrust::complex<double>*; ForwardIt = boost::multi::array_iterator<thrust::complex<double>, 1, thrust::complex<double>*>]	64	static
adl.hpp:482:39:) const [with As = {std::allocator<thrust::complex<double> >&, const thrust::complex<double>*&, const thrust::complex<double>*&, boost::multi::array_iterator<thrust::complex<double>, 1, thrust::complex<double>*>}]	112	static
array.hpp:146:2:boost::multi::static_array<T, D, Alloc>::static_array(It, It, const allocator_type&) [with It = const thrust::complex<double>*; <template-parameter-2-2> = long int; T = thrust::complex<double>; long int D = 1; Alloc = std::allocator<thrust::complex<double> >]	176	static
array.hpp:87:7:void boost::multi::static_array<T, D, Alloc>::destroy() [with T = thrust::complex<double>; long int D = 1; Alloc = std::allocator<thrust::complex<double> >]	48	static
array.hpp:258:7:void boost::multi::static_array<T, D, Alloc>::deallocate() [with T = thrust::complex<double>; long int D = 1; Alloc = std::allocator<thrust::complex<double> >]	48	static
initializer_list:79:7:constexpr const _E* std::initializer_list<_E>::end() const [with _E = boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >]	48	static
adl.hpp:401:39:) const [with As = {const boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >&}]	32	static
adl.hpp:249:39:) const [with As = {boost::multi::array_iterator<thrust::complex<double>, 1, const thrust::complex<double>*>, boost::multi::array_iterator<thrust::complex<double>, 1, const thrust::complex<double>*>, boost::multi::array_iterator<thrust::complex<double>, 1, thrust::complex<double>*>}]	96	dynamic,bounded
array_ref.hpp:285:28:constexpr boost::multi::array_iterator<Element, D, ElementPtr>& boost::multi::array_iterator<Element, D, ElementPtr>::operator++() [with Element = thrust::complex<double>; long int D = 2; ElementPtr = thrust::complex<double>*]	16	static
array_ref.hpp:1659:16:constexpr auto boost::multi::uninitialized_copy(In, In, boost::multi::array_iterator<T, N, TP>) [with In = const boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >*; T = thrust::complex<double>; long int N = 2; TP = thrust::complex<double>*; <template-parameter-1-5> = void; <template-parameter-1-6> = boost::multi::array_iterator<thrust::complex<double>, 1, const thrust::complex<double>*>]	160	static
adl.hpp:343:16:constexpr auto boost::multi::xtd::alloc_uninitialized_copy(std::allocator<_CharT>&, InputIt, InputIt, ForwardIt) [with T = thrust::complex<double>; InputIt = const boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >*; ForwardIt = boost::multi::array_iterator<thrust::complex<double>, 2, thrust::complex<double>*>]	64	static
adl.hpp:482:39:) const [with As = {std::allocator<thrust::complex<double> >&, const boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >*&, const boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >*&, boost::multi::array_iterator<thrust::complex<double>, 2, thrust::complex<double>*>}]	112	static
array.hpp:146:2:boost::multi::static_array<T, D, Alloc>::static_array(It, It, const allocator_type&) [with It = const boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >*; <template-parameter-2-2> = long int; T = thrust::complex<double>; long int D = 2; Alloc = std::allocator<thrust::complex<double> >]	272	static
array.hpp:87:7:void boost::multi::static_array<T, D, Alloc>::destroy() [with T = thrust::complex<double>; long int D = 2; Alloc = std::allocator<thrust::complex<double> >]	48	static
array.hpp:258:7:void boost::multi::static_array<T, D, Alloc>::deallocate() [with T = thrust::complex<double>; long int D = 2; Alloc = std::allocator<thrust::complex<double> >]	48	static
array_ref.hpp:345:24:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout>::layout_type boost::multi::basic_array<T, D, ElementPtr, Layout>::layout() const [with T = thrust::complex<double>; long int D = 2; ElementPtr = thrust::complex<double>*; Layout = boost::multi::layout_t<2>]	48	static
array_ref.hpp:109:12:constexpr boost::multi::array_types<T, D, ElementPtr, Layout>::array_types(const layout_t&, const element_ptr&) [with T = thrust::complex<double>; long int D = 2; ElementPtr = thrust::complex<double>*; Layout = boost::multi::layout_t<2>]	24	static
range_access.h:58:5:begin()) std::begin(const _Container&) [with _Container = boost::multi::array<thrust::complex<double>, 2>]	48	static
range_access.h:58:5:begin()) std::begin(const _Container&) [with _Container = boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >]	32	static
range_access.h:48:5:begin()) std::begin(_Container&) [with _Container = boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >]	32	static
array_ref.hpp:1005:24:constexpr boost::multi::array_iterator<Element, 1, Ptr>::stride_type boost::multi::array_iterator<Element, 1, Ptr>::stride() const & [with Element = thrust::complex<double>; Ptr = const thrust::complex<double>*]	16	static
array_ref.hpp:1005:24:constexpr boost::multi::array_iterator<Element, 1, Ptr>::stride_type boost::multi::array_iterator<Element, 1, Ptr>::stride() const & [with Element = thrust::complex<double>; Ptr = thrust::complex<double>*]	16	static
core.hpp:522:14:) [with As = {char, long int, long int, double, const thrust::complex<double>*, long int, const thrust::complex<double>*, long int, double, thrust::complex<double>*, long int}]	112	dynamic,bounded
array_ref.hpp:272:17:constexpr void boost::multi::array_iterator<Element, D, ElementPtr>::advance(boost::multi::array_iterator<Element, D, ElementPtr>::difference_type) [with Element = thrust::complex<double>; long int D = 2; ElementPtr = const thrust::complex<double>*]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >&]	16	static
array_ref.hpp:93:29:constexpr boost::multi::array_types<T, D, ElementPtr, Layout>::element_ptr boost::multi::array_types<T, D, ElementPtr, Layout>::base() const [with T = thrust::complex<double>; long int D = 1; ElementPtr = thrust::complex<double>*; Layout = boost::multi::layout_t<1>]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = thrust::complex<double>&]	16	static
assertion.hpp:264:33:boost::test_tools::assertion::value_expr<T>::value_expr(T&&) [with T = thrust::complex<double>&]	32	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::test_tools::assertion::value_expr<thrust::complex<double>&>]	16	static
assertion.hpp:340:5:boost::test_tools::assertion::binary_expr<Lhs, Rhs, OP>::binary_expr(LExpr&&, Rhs&&) [with LExpr = boost::test_tools::assertion::value_expr<thrust::complex<double>&>; Rhs = double; OP = boost::test_tools::assertion::op::EQ<thrust::complex<double>, double, void>]	64	static
assertion.hpp:352:33:boost::test_tools::assertion::binary_expr<Lhs, Rhs, OP>::result_type boost::test_tools::assertion::binary_expr<Lhs, Rhs, OP>::value() const [with LExpr = boost::test_tools::assertion::value_expr<thrust::complex<double>&>; Rhs = double; OP = boost::test_tools::assertion::op::EQ<thrust::complex<double>, double, void>]	48	static
assertion.hpp:356:33:void boost::test_tools::assertion::binary_expr<Lhs, Rhs, OP>::report(std::ostream&) const [with LExpr = boost::test_tools::assertion::value_expr<thrust::complex<double>&>; Rhs = double; OP = boost::test_tools::assertion::op::EQ<thrust::complex<double>, double, void>]	32	static
fixture.hpp:98:58:void boost::unit_test::impl_fixture::call_setup<has_setup>::operator()(U&) [with U = multi_blas_gemv_complex; bool has_setup = false]	16	static
fixture.hpp:104:58:void boost::unit_test::impl_fixture::call_teardown<has_teardown>::operator()(U&) [with U = multi_blas_gemv_complex; bool has_teardown = false]	16	static
array_ref.hpp:96:28:constexpr const layout_t& boost::multi::array_types<T, D, ElementPtr, Layout>::layout() const [with T = std::complex<double>; long int D = 2; ElementPtr = std::complex<double>*; Layout = boost::multi::layout_t<2>]	16	static
array_ref.hpp:754:28:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout>::iterator boost::multi::basic_array<T, D, ElementPtr, Layout>::begin() && [with T = std::complex<double>; long int D = 2; ElementPtr = std::complex<double>*; Layout = boost::multi::layout_t<2>]	48	static
array_ref.hpp:1077:15:constexpr boost::multi::basic_array<std::complex<double>, 1, const std::complex<double>*, boost::multi::layout_t<1> >::basic_array(const layout_t&, const std::complex<double>* const&) [inherited from boost::multi::array_types<std::complex<double>, 1, const std::complex<double>*, boost::multi::layout_t<1> >]	48	static
array_ref.hpp:186:12:constexpr boost::multi::basic_array_ptr<Ref, Layout>::basic_array_ptr(typename Ref::element_ptr, const Layout&) [with Ref = boost::multi::basic_array<std::complex<double>, 1, const std::complex<double>*, boost::multi::layout_t<1> >; Layout = boost::multi::layout_t<1>]	48	static
array_ref.hpp:96:28:constexpr const layout_t& boost::multi::array_types<T, D, ElementPtr, Layout>::layout() const [with T = std::complex<double>; long int D = 1; ElementPtr = std::complex<double>*; Layout = boost::multi::layout_t<1>]	16	static
array_ref.hpp:242:12:constexpr boost::multi::array_iterator<Element, D, ElementPtr>::array_iterator(const Other&) [with Other = boost::multi::array_iterator<std::complex<double>, 2, std::complex<double>*>; <template-parameter-2-2> = const std::complex<double>*; Element = std::complex<double>; long int D = 2; ElementPtr = const std::complex<double>*]	48	static
array_ref.hpp:755:28:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout>::iterator boost::multi::basic_array<T, D, ElementPtr, Layout>::end() && [with T = std::complex<double>; long int D = 2; ElementPtr = std::complex<double>*; Layout = boost::multi::layout_t<2>]	48	static
array_ref.hpp:980:12:constexpr boost::multi::array_iterator<Element, 1, Ptr>::array_iterator(const boost::multi::array_iterator<EElement, 1, PPtr>&) [with EElement = std::complex<double>; PPtr = std::complex<double>*; <template-parameter-2-3> = const std::complex<double>*; Element = std::complex<double>; Ptr = const std::complex<double>*]	16	static
array_ref.hpp:1403:12:constexpr boost::multi::array_ref<T, D, ElementPtr>::array_ref() [with T = std::complex<double>; long int D = 1; ElementPtr = std::complex<double>*]	96	static
utility.hpp:370:6:extensions()) boost::multi::extensions(const T&) [with T = boost::multi::static_array<std::complex<double>, 1, std::allocator<std::complex<double> > >; <template-parameter-1-2> = void]	48	static
array.hpp:317:38:boost::multi::static_array<T, D, Alloc>::element_const_ptr boost::multi::static_array<T, D, Alloc>::data_elements() const & [with T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	16	static
array.hpp:318:38:typename boost::multi::static_array<T, D, Alloc>::element_ptr boost::multi::static_array<T, D, Alloc>::data_elements() & [with T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::complex<double>*]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::complex<double>*]	16	static
adl.hpp:55:48:) const [with As = {const std::complex<double>*, long int, std::complex<double>*}]	64	static
array.hpp:743:17:boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >::array(Range&&) [with Range = const boost::multi::blas::gemv_range<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >, boost::multi::blas::context>&; <template-parameter-1-2> = void; <template-parameter-1-3> = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::blas::context>; <template-parameter-1-4> = void][inherited from boost::multi::static_array<std::complex<double>, 1, std::allocator<std::complex<double> > >]	32	static
array.hpp:860:7:decltype ((boost::multi::array<T, D, A>::static_::operator=(o), declval<boost::multi::array<T, D, A>&>())) boost::multi::array<T, D, A>::operator=(Range&&) [with Range = const boost::multi::blas::gemv_range<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >, boost::multi::blas::context>&; <template-parameter-2-2> = void; T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	176	static
array.hpp:140:7:>&) const [with TT = std::complex<double>; Args = {std::complex<double>*, boost::multi::layout_t<1, long int>}; T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	32	static
array.hpp:743:17:>&, const allocator_type&) [with TT = std::complex<double>; Args = {std::complex<double>*, boost::multi::layout_t<2, long int>}; <template-parameter-1-3> = void; <template-parameter-1-4> = boost::multi::array_iterator<std::complex<double>, 2, std::complex<double>*>][inherited from boost::multi::static_array<std::complex<double>, 2, std::allocator<std::complex<double> > >]	48	static
array_ref.hpp:394:23:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout>::decay_type boost::multi::basic_array<T, D, ElementPtr, Layout>::decay() const [with T = std::complex<double>; long int D = 2; ElementPtr = std::complex<double>*; Layout = boost::multi::layout_t<2>]	64	static
array_ref.hpp:252:12:constexpr boost::multi::array_iterator<Element, D, ElementPtr>::array_iterator(typename boost::multi::basic_array<Element, (D - 1), ElementPtr>::element_ptr, boost::multi::layout_t<(D - 1), long int>, boost::multi::index) [with Element = std::complex<double>; long int D = 2; ElementPtr = const std::complex<double>*]	48	static
fixture.hpp:98:58:void boost::unit_test::impl_fixture::call_setup<has_setup>::operator()(U&) [with U = multi_blas_gemv_temporary; bool has_setup = false]	16	static
fixture.hpp:104:58:void boost::unit_test::impl_fixture::call_teardown<has_teardown>::operator()(U&) [with U = multi_blas_gemv_temporary; bool has_teardown = false]	16	static
tuple:216:19:) [with _UHead = int; _UTail = {int}; <template-parameter-2-3> = void; long unsigned int _Idx = 0; _Head = boost::multi::extension_t<long int>; _Tail = {boost::multi::extension_t<long int, long int>}]	64	static
array_ref.hpp:1426:12:constexpr boost::multi::array_ref<T, D, ElementPtr>::array_ref(typename boost::multi::array_ref<T, D, ElementPtr>::element_ptr, typename boost::multi::array_ref<T, D, ElementPtr>::extensions_type) [with T = std::complex<double>; long int D = 2; ElementPtr = std::complex<double>*]	128	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::complex<double>*&]	16	static
adl.hpp:441:48:) const [with As = {std::allocator<std::complex<double> >&, std::complex<double>*&, long int}]	64	static
random.h:2017:7:std::normal_distribution<_RealType>::normal_distribution(std::normal_distribution<_RealType>::result_type, std::normal_distribution<_RealType>::result_type) [with _RealType = double]	48	static
random.h:519:7:std::mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::mersenne_twister_engine(std::mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::result_type) [with _UIntType = long unsigned int; long unsigned int __w = 32; long unsigned int __n = 624; long unsigned int __m = 397; long unsigned int __r = 31; _UIntType __a = 2567483615; long unsigned int __u = 11; _UIntType __d = 4294967295; long unsigned int __s = 7; _UIntType __b = 2636928640; long unsigned int __t = 15; _UIntType __c = 4022730752; long unsigned int __l = 18; _UIntType __f = 1812433253]	32	static
random.tcc:1788:7:std::normal_distribution<_RealType>::result_type std::normal_distribution<_RealType>::operator()(_UniformRandomNumberGenerator&, const std::normal_distribution<_RealType>::param_type&) [with _UniformRandomNumberGenerator = std::mersenne_twister_engine<long unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253>; _RealType = double]	112	static
array_ref.hpp:1473:26:constexpr boost::multi::array_ref<T, D, ElementPtr>::elements_type boost::multi::array_ref<T, D, ElementPtr>::elements_() const [with T = std::complex<double>; long int D = 2; ElementPtr = std::complex<double>*]	96	static
array_ref.hpp:1270:27:constexpr boost::multi::basic_array<T, 1, ElementPtr, Layout>::iterator boost::multi::basic_array<T, 1, ElementPtr, Layout>::end() & [with T = std::complex<double>; ElementPtr = std::complex<double>*; Layout = boost::multi::layout_t<1>]	64	static
array_ref.hpp:1010:17:constexpr bool boost::multi::array_iterator<Element, 1, Ptr>::operator!=(const boost::multi::array_iterator<Element, 1, Ptr>&) const [with Element = std::complex<double>; Ptr = std::complex<double>*]	16	static
array_ref.hpp:1011:69:constexpr typename std::iterator_traits<_II>::reference boost::multi::array_iterator<Element, 1, Ptr>::operator*() const [with Element = std::complex<double>; Ptr = std::complex<double>*]	16	static
array.hpp:47:17:boost::multi::array_allocator<Allocator>::allocator_type boost::multi::array_allocator<Allocator>::get_allocator() const [with Allocator = std::allocator<std::complex<double> >]	32	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = boost::multi::static_array<std::complex<double>, 2, std::allocator<std::complex<double> > >&]	16	static
fixture.hpp:98:58:void boost::unit_test::impl_fixture::call_setup<has_setup>::operator()(U&) [with U = multi_blas_gemv_context; bool has_setup = false]	16	static
fixture.hpp:104:58:void boost::unit_test::impl_fixture::call_teardown<has_teardown>::operator()(U&) [with U = multi_blas_gemv_context; bool has_teardown = false]	16	static
gemv.hpp:86:2:boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>::gemv_iterator(Scalar, It2D, It1D, Context) [with Scalar = double; It2D = boost::multi::array_iterator<double, 2, const double*>; It1D = boost::multi::array_iterator<double, 1, const double*>; Context = boost::multi::blas::context&]	24	static
gemv.hpp:111:11:boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::iterator boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::end() const [with Scalar = double; It2D = boost::multi::array_iterator<double, 2, const double*>; It1D = boost::multi::array_iterator<double, 1, const double*>; DecayType = boost::multi::array<double, 1, std::allocator<double> >; Context = boost::multi::blas::context&]	80	dynamic,bounded
gemv.hpp:69:25:boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context&>::difference_type boost::multi::blas::operator-(const boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context&>&, const boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context&>&)	32	static
gemv.hpp:113:39:typename boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::decay_type::extensions_type boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::extensions() const [with Scalar = double; It2D = boost::multi::array_iterator<double, 2, const double*>; It1D = boost::multi::array_iterator<double, 1, const double*>; DecayType = boost::multi::array<double, 1, std::allocator<double> >; Context = boost::multi::blas::context&]	64	static
array.hpp:163:2:boost::multi::static_array<T, D, Alloc>::static_array(Range&&) [with Range = boost::multi::blas::gemv_range<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::array<double, 1, std::allocator<double> >, boost::multi::blas::context&>&; <template-parameter-2-2> = void; <template-parameter-2-3> = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context&>; <template-parameter-2-4> = void; T = double; long int D = 1; Alloc = std::allocator<double>]	368	dynamic,bounded
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::blas::gemv_range<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::array<double, 1, std::allocator<double> >, boost::multi::blas::context&>]	16	static
gemv.hpp:80:14:auto boost::multi::blas::copy(boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>, boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>, It1DOut) [with It1DOut = boost::multi::array_iterator<double, 1, double*>; Scalar = double; It2D = boost::multi::array_iterator<double, 2, const double*>; It1D = boost::multi::array_iterator<double, 1, const double*>; Context = boost::multi::blas::context&]	112	dynamic,bounded
gemv.hpp:82:14:auto boost::multi::blas::uninitialized_copy(boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>, boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>, It1DOut) [with It1DOut = boost::multi::array_iterator<double, 1, double*>; Scalar = double; It2D = boost::multi::array_iterator<double, 2, const double*>; It1D = boost::multi::array_iterator<double, 1, const double*>; Context = boost::multi::blas::context&]	176	dynamic,bounded
adl.hpp:343:16:constexpr auto boost::multi::xtd::alloc_uninitialized_copy(std::allocator<_CharT>&, InputIt, InputIt, ForwardIt) [with T = double; InputIt = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context&>; ForwardIt = boost::multi::array_iterator<double, 1, double*>]	48	static
adl.hpp:482:39:) const [with As = {std::allocator<double>&, boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context&>&, boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context&>&, boost::multi::array_iterator<double, 1, double*>}]	112	static
array.hpp:146:2:boost::multi::static_array<T, D, Alloc>::static_array(It, It, const allocator_type&) [with It = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context&>; <template-parameter-2-2> = long int; T = double; long int D = 1; Alloc = std::allocator<double>]	176	static
shared_ptr.hpp:283:42:void boost::detail::sp_pointer_construct(boost::shared_ptr<X>*, Y*, boost::detail::shared_count&) [with T = boost::basic_wrap_stringstream<char>; Y = boost::basic_wrap_stringstream<char>]	64	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = boost::basic_wrap_stringstream<char>*&]	16	static
move.h:182:5:typename std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<_Tp> >, std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&) [with _Tp = boost::basic_wrap_stringstream<char>*]	48	static
function_template.hpp:502:14:void boost::detail::function::basic_vtable0<R>::clear(boost::detail::function::function_buffer&) const [with R = void]	32	static
bcs_char_traits.hpp:60:17:static bool boost::unit_test::ut_detail::bcs_char_traits_impl<CharT>::eq(CharT, CharT) [with CharT = const char]	16	static
basic_cstring.hpp:267:1:bool boost::unit_test::basic_cstring<CharT>::is_empty() const [with CharT = const char]	16	static
basic_cstring.hpp:572:1:static boost::unit_test::basic_cstring<CharT>::self_type boost::unit_test::basic_cstring<CharT>::default_trim_ex() [with CharT = const char]	32	static
basic_cstring.hpp:405:1:boost::unit_test::basic_cstring<CharT>& boost::unit_test::basic_cstring<CharT>::operator=(const boost::unit_test::basic_cstring<CharT>&) [with CharT = const char]	16	static
basic_cstring.hpp:497:1:boost::unit_test::basic_cstring<CharT>::value_type* boost::unit_test::basic_cstring<CharT>::end() [with CharT = const char]	16	static
bcs_char_traits.hpp:93:24:static boost::unit_test::ut_detail::bcs_char_traits_impl<CharT>::const_char* boost::unit_test::ut_detail::bcs_char_traits_impl<CharT>::find(boost::unit_test::ut_detail::bcs_char_traits_impl<CharT>::const_char*, std::size_t, CharT) [with CharT = const char]	48	static
basic_cstring.hpp:317:1:boost::unit_test::basic_cstring<CharT>::self_type& boost::unit_test::basic_cstring<CharT>::trim_left(boost::unit_test::basic_cstring<CharT>::iterator) [with CharT = const char]	32	static
basic_cstring.hpp:361:1:boost::unit_test::basic_cstring<CharT>::self_type& boost::unit_test::basic_cstring<CharT>::trim_right(boost::unit_test::basic_cstring<CharT>::iterator) [with CharT = const char]	32	static
tuple:210:17:) [with long unsigned int _Idx = 0; _Head = boost::multi::extension_t<long int>; _Tail = {boost::multi::extension_t<long int, long int>}]	48	static
tuple:1332:5:>&&) [with long unsigned int __i = 0; _Elements = {boost::multi::extension_t<long int, long int>}]	32	static
tuple:1572:9:_Is = {0}; _Tp = const std::tuple<boost::multi::extension_t<long int, long int> >&; _Tpls = {}]	80	static
function_template.hpp:912:10:void boost::function0<R>::assign_to(Functor) [with Functor = void (*)(); R = void]	48	static
scoped_ptr.hpp:65:14:boost::scoped_ptr<T>::scoped_ptr(T*) [with T = boost::test_tools::local_fpc_tolerance<double>]	16	static
scoped_ptr.hpp:83:5:boost::scoped_ptr<T>::~scoped_ptr() [with T = boost::test_tools::local_fpc_tolerance<double>]	32	static
shared_ptr.hpp:283:42:void boost::detail::sp_pointer_construct(boost::shared_ptr<X>*, Y*, boost::detail::shared_count&) [with T = boost::unit_test::test_unit_fixture; Y = boost::unit_test::class_based_fixture<boost::test_tools::local_fpc_tolerance<double>, double>]	64	static
cpp_type_traits.h:428:5:_Iterator std::__miter_base(_Iterator) [with _Iterator = boost::multi::array_iterator<double, 1, const double*>]	16	static
stl_algobase.h:438:5:_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = boost::multi::array_iterator<double, 1, const double*>; _OI = boost::multi::array_iterator<double, 1, double*>]	112	static
array.hpp:86:7:void boost::multi::static_array<T, D, Alloc>::destroy_aux(std::true_type) [with T = double; long int D = 1; Alloc = std::allocator<double>]	16	static
alloc_traits.h:469:7:static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = double]	48	static
alloc_traits.h:443:7:static _Tp* std::allocator_traits<std::allocator<_CharT> >::allocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = double]	32	static
tuple:334:7:static constexpr _Head& std::_Tuple_impl<_Idx, _Head>::_M_head(std::_Tuple_impl<_Idx, _Head>&) [with long unsigned int _Idx = 0; _Head = boost::multi::extension_t<long int>]	32	static
allocator.h:141:7:std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = double]	32	static
array_ref.hpp:990:12:constexpr boost::multi::array_iterator<Element, 1, Ptr>::array_iterator(Ptr, typename boost::multi::basic_array<Element, 1, Ptr>::index) [with Element = double; Ptr = double*]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::array_iterator<double, 1, double*>&]	16	static
adl.hpp:244:48:constexpr decltype (std::uninitialized_copy(f, l, d)) boost::multi::adl_uninitialized_copy_fn__::_(boost::multi::priority<1>, InIt, InIt, FwdIt) const [with InIt = const double*; FwdIt = boost::multi::array_iterator<double, 1, double*>; <template-parameter-1-3> = double*]	64	static
initializer_list:71:7:constexpr std::initializer_list<_E>::size_type std::initializer_list<_E>::size() const [with _E = boost::multi::array<double, 1, std::allocator<double> >]	16	static
adl.hpp:392:39:) const [with As = {const boost::multi::array<double, 1, std::allocator<double> >*&, const boost::multi::array<double, 1, std::allocator<double> >*&}]	80	static
utility.hpp:370:6:extensions()) boost::multi::extensions(const T&) [with T = boost::multi::array<double, 1, std::allocator<double> >; <template-parameter-1-2> = void]	48	static
array_ref.hpp:1426:12:constexpr boost::multi::array_ref<T, D, ElementPtr>::array_ref(typename boost::multi::array_ref<T, D, ElementPtr>::element_ptr, typename boost::multi::array_ref<T, D, ElementPtr>::extensions_type) [with T = double; long int D = 2; ElementPtr = double*]	128	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const boost::multi::array<double, 1, std::allocator<double> >&]	16	static
adl.hpp:399:48:) const [with T = const boost::multi::array<double, 1, std::allocator<double> >&; As = {}]	32	static
adl.hpp:410:39:) const [with As = {const boost::multi::array<double, 1, std::allocator<double> >&}]	32	static
array_ref.hpp:246:54:constexpr boost::multi::basic_array<Element, (D - 1), ElementPtr> boost::multi::array_iterator<Element, D, ElementPtr>::operator*() const [with Element = double; long int D = 2; ElementPtr = double*]	48	static
adl.hpp:401:39:) const [with As = {boost::multi::basic_array<double, 1, double*, boost::multi::layout_t<1, long int> >}]	32	static
adl.hpp:244:48:constexpr decltype (std::uninitialized_copy(f, l, d)) boost::multi::adl_uninitialized_copy_fn__::_(boost::multi::priority<1>, InIt, InIt, FwdIt) const [with InIt = boost::multi::array_iterator<double, 1, const double*>; FwdIt = boost::multi::array_iterator<double, 1, double*>; <template-parameter-1-3> = double*]	80	static
adl.hpp:249:39:) const [with As = {const boost::multi::array<double, 1, std::allocator<double> >*&, const boost::multi::array<double, 1, std::allocator<double> >*&, boost::multi::array_iterator<double, 2, double*>&}]	96	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const boost::multi::array<double, 1, std::allocator<double> >*&]	16	static
adl.hpp:477:48:) const [with T = std::allocator<double>&; As = {const boost::multi::array<double, 1, std::allocator<double> >*&, const boost::multi::array<double, 1, std::allocator<double> >*&, boost::multi::array_iterator<double, 2, double*>}]	160	dynamic,bounded
array.hpp:86:7:void boost::multi::static_array<T, D, Alloc>::destroy_aux(std::true_type) [with T = double; long int D = 2; Alloc = std::allocator<double>]	16	static
tuple:132:19:constexpr std::_Head_base<_Idx, _Head, false>::_Head_base(_UHead&&) [with _UHead = long int; long unsigned int _Idx = 0; _Head = boost::multi::extension_t<long int>]	48	static
adl.hpp:177:6:std::decay_t<decltype ((std::allocator_traits<_Alloc>::construct(alloc, std::addressof((* first))), first))> boost::multi::xtd::alloc_uninitialized_default_construct_n(Alloc&, ForwardIt, Size) [with Alloc = std::allocator<double>; ForwardIt = double*; Size = long int; T = double]	80	static
assertion.hpp:261:5:boost::test_tools::assertion::value_expr<T>::value_expr(boost::test_tools::assertion::value_expr<T>&&) [with T = double&]	32	static
fpc_op.hpp:207:1:static boost::test_tools::assertion_result boost::test_tools::assertion::op::EQ<Lhs, Rhs, typename boost::enable_if_c<(((boost::math::fpc::tolerance_based<T>::value && boost::math::fpc::tolerance_based<Rhs>::value) || (boost::math::fpc::tolerance_based<T>::value && boost::is_arithmetic<To>::value)) || (boost::is_arithmetic<T>::value && boost::math::fpc::tolerance_based<Rhs>::value))>::type>::eval(const Lhs&, const Rhs&) [with Lhs = double; Rhs = double]	64	static
assertion.hpp:274:33:const T& boost::test_tools::assertion::value_expr<T>::value() const [with T = double&]	16	static
fpc_op.hpp:207:1:static void boost::test_tools::assertion::op::EQ<Lhs, Rhs, typename boost::enable_if_c<(((boost::math::fpc::tolerance_based<T>::value && boost::math::fpc::tolerance_based<Rhs>::value) || (boost::math::fpc::tolerance_based<T>::value && boost::is_arithmetic<To>::value)) || (boost::is_arithmetic<T>::value && boost::math::fpc::tolerance_based<Rhs>::value))>::type>::report(std::ostream&, const PrevExprType&, const Rhs&) [with PrevExprType = boost::test_tools::assertion::value_expr<double&>; Lhs = double; Rhs = double]	80	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::basic_array<double, 1, double*, boost::multi::layout_t<1> >]	16	static
array_ref.hpp:116:12:constexpr boost::multi::array_types<T, D, ElementPtr, Layout>::array_types(const ArrayTypes&) [with ArrayTypes = boost::multi::basic_array<double, 1, double*, boost::multi::layout_t<1> >; <template-parameter-2-2> = void; <template-parameter-2-3> = const double*; T = double; long int D = 1; ElementPtr = const double*; Layout = boost::multi::layout_t<1>]	16	static
array_ref.hpp:1273:34:constexpr boost::multi::basic_array<double, 1, const double*, boost::multi::layout_t<1> >::const_iterator boost::multi::begin(const boost::multi::basic_array<double, 1, const double*, boost::multi::layout_t<1> >&)	32	static
dot.hpp:56:2:boost::multi::blas::dot_ptr<Context, ItX, Size, ItY>::dot_ptr(Context&&, ItX, Size, ItY) [with Context = boost::multi::blas::context; ItX = boost::multi::array_iterator<double, 1, const double*>; Size = long int; ItY = boost::multi::array_iterator<double, 1, const double*>]	64	static
dot.hpp:77:23:constexpr const Ptr& boost::multi::blas::dot_ref<Context, X, Y, Ptr>::operator&() const & [with Context = boost::multi::blas::context; X = boost::multi::basic_array<double, 1, const double*, boost::multi::layout_t<1> >; Y = boost::multi::array<double, 1, std::allocator<double> >; Ptr = boost::multi::blas::dot_ptr<boost::multi::blas::context, boost::multi::array_iterator<double, 1, const double*>, long int, boost::multi::array_iterator<double, 1, const double*> >]	16	static
array_ref.hpp:1004:31:constexpr const double* boost::multi::base(const boost::multi::array_iterator<double, 1, const double*>&)	32	static
array_ref.hpp:1006:24:constexpr boost::multi::array_iterator<double, 1, const double*>::stride_type boost::multi::stride(const boost::multi::array_iterator<double, 1, const double*>&)	16	static
core.hpp:532:14:) [with As = {long int&, const double*, long int, const double*, long int, double*&}]	112	static
layout.hpp:401:28:constexpr boost::multi::layout_t<D, SSize>::index_extension boost::multi::layout_t<D, SSize>::extension() const & [with long int D = 2; SSize = long int]	64	static
tuple:1470:5:) [with _Elements = {boost::multi::extension_t<long int, long int>}]	32	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = boost::multi::static_array<double, 2, std::allocator<double> >&]	16	static
stl_algobase.h:465:5:_OI std::copy(_II, _II, _OI) [with _II = boost::multi::array_iterator<double, 2, const double*>; _OI = boost::multi::array_iterator<double, 2, double*>]	256	dynamic,bounded
array_ref.hpp:750:28:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout>::iterator boost::multi::basic_array<T, D, ElementPtr, Layout>::end() & [with T = double; long int D = 2; ElementPtr = double*; Layout = boost::multi::layout_t<2>]	64	dynamic,bounded
index_range.hpp:49:29:constexpr const self_type& boost::multi::iterator_facade<Self, ValueType, AccessCategory, Reference, DifferenceType, Pointer>::self() const [with Self = boost::multi::array_iterator<double, 2, const double*>; ValueType = void; AccessCategory = std::random_access_iterator_tag; Reference = const boost::multi::basic_array<double, 1, const double*, boost::multi::layout_t<1> >&; DifferenceType = long int; Pointer = void*]	16	static
array_ref.hpp:287:17:constexpr bool boost::multi::array_iterator<Element, D, ElementPtr>::operator==(const boost::multi::array_iterator<Element, D, ElementPtr>&) const [with Element = double; long int D = 2; ElementPtr = const double*]	32	static
array_ref.hpp:1011:69:constexpr typename std::iterator_traits<_II>::reference boost::multi::array_iterator<Element, 1, Ptr>::operator*() const [with Element = double; Ptr = double*]	16	static
array_ref.hpp:246:54:constexpr boost::multi::basic_array<Element, (D - 1), ElementPtr> boost::multi::array_iterator<Element, D, ElementPtr>::operator*() const [with Element = double; long int D = 2; ElementPtr = const double*]	48	static
array_ref.hpp:1274:34:constexpr boost::multi::basic_array<double, 1, const double*, boost::multi::layout_t<1> >::iterator boost::multi::begin(boost::multi::basic_array<double, 1, const double*, boost::multi::layout_t<1> >&)	32	static
array_ref.hpp:1278:34:constexpr boost::multi::basic_array<double, 1, const double*, boost::multi::layout_t<1> >::iterator boost::multi::end(boost::multi::basic_array<double, 1, const double*, boost::multi::layout_t<1> >&)	32	static
array_ref.hpp:1007:28:constexpr boost::multi::array_iterator<Element, 1, Ptr>& boost::multi::array_iterator<Element, 1, Ptr>::operator++() [with Element = double; Ptr = const double*]	16	static
array_ref.hpp:1011:69:constexpr typename std::iterator_traits<_II>::reference boost::multi::array_iterator<Element, 1, Ptr>::operator*() const [with Element = double; Ptr = const double*]	16	static
stl_numeric.h:186:5:_Tp std::inner_product(_InputIterator1, _InputIterator1, _InputIterator2, _Tp) [with _InputIterator1 = boost::multi::array_iterator<double, 1, const double*>; _InputIterator2 = boost::multi::array_iterator<double, 1, const double*>; _Tp = double]	80	static
assertion.hpp:261:5:boost::test_tools::assertion::value_expr<T>::value_expr(boost::test_tools::assertion::value_expr<T>&&) [with T = boost::multi::array<double, 1, std::allocator<double> >&]	32	static
collection_comparison_op.hpp:438:1:static boost::test_tools::assertion_result boost::test_tools::assertion::op::EQ<Lhs, Rhs, typename boost::enable_if_c<(((boost::unit_test::is_forward_iterable<T>::value && (! boost::unit_test::is_cstring_comparable<Lhs>::value)) && boost::unit_test::is_forward_iterable<Lhs>::value) && (! boost::unit_test::is_cstring_comparable<Rhs>::value))>::type>::eval(const Lhs&, const Rhs&) [with Lhs = boost::multi::array<double, 1, std::allocator<double> >; Rhs = boost::multi::array<double, 1, std::allocator<double> >]	64	static
assertion.hpp:274:33:const T& boost::test_tools::assertion::value_expr<T>::value() const [with T = boost::multi::array<double, 1, std::allocator<double> >&]	16	static
collection_comparison_op.hpp:438:1:static void boost::test_tools::assertion::op::EQ<Lhs, Rhs, typename boost::enable_if_c<(((boost::unit_test::is_forward_iterable<T>::value && (! boost::unit_test::is_cstring_comparable<Lhs>::value)) && boost::unit_test::is_forward_iterable<Lhs>::value) && (! boost::unit_test::is_cstring_comparable<Rhs>::value))>::type>::report(std::ostream&, const PrevExprType&, const Rhs&) [with PrevExprType = boost::test_tools::assertion::value_expr<boost::multi::array<double, 1, std::allocator<double> >&>; Lhs = boost::multi::array<double, 1, std::allocator<double> >; Rhs = boost::multi::array<double, 1, std::allocator<double> >]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::extension_t<long int>]	16	static
tuple:348:19:constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(_UHead&&) [with _UHead = boost::multi::extension_t<long int>; long unsigned int _Idx = 0; _Head = boost::multi::extension_t<long int>]	48	static
tuple:1411:7:static constexpr bool std::__tuple_compare<_Tp, _Up, __size, __size>::__eq(const _Tp&, const _Up&) [with _Tp = std::tuple<boost::multi::extension_t<long int, long int> >; _Up = std::tuple<boost::multi::extension_t<long int, long int> >; long unsigned int __size = 1]	16	static
stl_algo.h:780:5:_OutputIterator std::__copy_n(_RandomAccessIterator, _Size, _OutputIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const double*; _Size = long int; _OutputIterator = double*]	48	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::blas::gemv_range<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::array<double, 1, std::allocator<double> >, boost::multi::blas::context>&]	16	static
array.hpp:261:7:void boost::multi::static_array<T, D, Alloc>::clear() [with T = double; long int D = 1; Alloc = std::allocator<double>]	64	static
utility:286:5:_Tp std::exchange(_Tp&, _Up&&) [with _Tp = double*; _Up = std::nullptr_t]	32	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::allocator<double>&]	16	static
utility:286:5:_Tp std::exchange(_Tp&, _Up&&) [with _Tp = boost::multi::layout_t<1>; _Up = boost::multi::layout_t<1>]	64	static
adl.hpp:392:39:) const [with As = {boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>&, boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>&}]	80	static
gemv.hpp:88:13:boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>::value_type boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>::operator*() const [with Scalar = double; It2D = boost::multi::array_iterator<double, 2, const double*>; It1D = boost::multi::array_iterator<double, 1, const double*>; Context = boost::multi::blas::context]	16	static
adl.hpp:249:39:) const [with As = {boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>&, boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>&, boost::multi::array_iterator<double, 1, double*>&}]	80	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>&]	16	static
adl.hpp:477:48:) const [with T = std::allocator<double>&; As = {boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>&, boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>&, boost::multi::array_iterator<double, 1, double*>}]	240	dynamic,bounded
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = long unsigned int&]	16	static
adl.hpp:511:48:) const [with As = {std::allocator<double>&, double*&, long unsigned int&, double&}]	96	static
array.hpp:163:2:boost::multi::static_array<T, D, Alloc>::static_array(Range&&) [with Range = const boost::multi::blas::gemv_range<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::array<double, 1, std::allocator<double> >, boost::multi::blas::context>&; <template-parameter-2-2> = void; <template-parameter-2-3> = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>; <template-parameter-2-4> = void; T = double; long int D = 1; Alloc = std::allocator<double>]	368	dynamic,bounded
array_ref.hpp:1494:51:constexpr typename boost::multi::array_ref<T, D, ElementPtr>::element_ptr boost::multi::array_ref<T, D, ElementPtr>::data() const & [with T = double; long int D = 1; ElementPtr = double*]	16	static
stl_uninitialized.h:830:5:_ForwardIterator std::uninitialized_copy_n(_InputIterator, _Size, _ForwardIterator) [with _InputIterator = const double*; _Size = long int; _ForwardIterator = double*]	48	static
dot.hpp:77:23:constexpr const Ptr& boost::multi::blas::dot_ref<Context, X, Y, Ptr>::operator&() const & [with Context = boost::multi::blas::context; X = boost::multi::array<double, 1, std::allocator<double> >; Y = boost::multi::array<double, 1, std::allocator<double> >; Ptr = boost::multi::blas::dot_ptr<boost::multi::blas::context, boost::multi::array_iterator<double, 1, const double*>, long int, boost::multi::array_iterator<double, 1, const double*> >]	16	static
array_ref.hpp:53:22:T& boost::multi::modify(const T&) [with T = boost::multi::basic_array<double, 2, double*, boost::multi::layout_t<2> >]	16	static
axpy.hpp:27:6:begin()), forward<Y1D>(y))) boost::multi::blas::axpy(typename X1D::element, const X1D&, Y1D&&) [with X1D = boost::multi::array<double, 1, std::allocator<double> >; Y1D = boost::multi::array<double, 1, std::allocator<double> >&; <template-parameter-1-3> = double&]	80	static
array.hpp:519:2:boost::multi::static_array<T, 0, Alloc>::static_array(const typename boost::multi::static_array<T, 0, Alloc>::element_type&, const allocator_type&) [with T = double; Alloc = std::allocator<double>]	64	static
nrm2.hpp:30:6:stride(), boost::multi::base(r)), forward<A0D>(r))) boost::multi::blas::nrm2(const A1D&, A0D&&) [with A1D = boost::multi::array<double, 1, std::allocator<double> >; A0D = boost::multi::static_array<double, 0, std::allocator<double> >]	64	static
layout.hpp:197:24:constexpr boost::multi::layout_t<0, SSize>::nelems_type boost::multi::layout_t<0, SSize>::num_elements() const [with SSize = long int]	16	static
adl.hpp:301:39:) const [with As = {double*&, long int&, double*&}]	80	static
adl.hpp:311:16:constexpr auto boost::multi::xtd::alloc_uninitialized_move_n(std::allocator<_CharT>&, InputIt, Size, ForwardIt) [with T = double; InputIt = double*; Size = long int; ForwardIt = double*]	48	static
adl.hpp:494:48:) const [with As = {std::allocator<double>&, double*&, long int, double*}]	96	static
adl.hpp:498:39:) const [with As = {std::allocator<double>&, double*&, long int, double*}]	112	static
array.hpp:489:7:auto boost::multi::static_array<T, 0, Alloc>::uninitialized_move(It) [with It = double*; T = double; Alloc = std::allocator<double>]	64	static
array.hpp:573:2:boost::multi::static_array<T, 0, Alloc>::static_array(boost::multi::static_array<T, 0, Alloc>&&) [with T = double; Alloc = std::allocator<double>]	64	static
move.h:138:5:constexpr _Tp* std::addressof(_Tp&) [with _Tp = double]	32	static
array.hpp:43:7:auto boost::multi::array_allocator<Allocator>::destroy_n(It, boost::multi::size_type) [with It = double*; Allocator = std::allocator<double>]	48	static
array.hpp:492:7:void boost::multi::static_array<T, 0, Alloc>::destroy() [with T = double; Alloc = std::allocator<double>]	48	static
array.hpp:581:7:void boost::multi::static_array<T, 0, Alloc>::deallocate() [with T = double; Alloc = std::allocator<double>]	48	static
assertion.hpp:261:5:boost::test_tools::assertion::value_expr<T>::value_expr(boost::test_tools::assertion::value_expr<T>&&) [with T = double]	32	static
fpc_tolerance.hpp:37:1:FPT& boost::test_tools::fpc_tolerance() [with FPT = double]	16	static
assertion.hpp:352:33:boost::test_tools::assertion::binary_expr<Lhs, Rhs, OP>::result_type boost::test_tools::assertion::binary_expr<Lhs, Rhs, OP>::value() const [with LExpr = boost::test_tools::assertion::value_expr<double>; Rhs = double; OP = boost::test_tools::assertion::op::EQ<double, double, void>]	64	static
assertion.hpp:356:33:void boost::test_tools::assertion::binary_expr<Lhs, Rhs, OP>::report(std::ostream&) const [with LExpr = boost::test_tools::assertion::value_expr<double>; Rhs = double; OP = boost::test_tools::assertion::op::EQ<double, double, void>]	32	static
cpp_type_traits.h:428:5:_Iterator std::__miter_base(_Iterator) [with _Iterator = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>]	16	static
stl_algobase.h:438:5:_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>; _OI = boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>]	112	static
array.hpp:86:7:void boost::multi::static_array<T, D, Alloc>::destroy_aux(std::true_type) [with T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	16	static
alloc_traits.h:469:7:static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = std::complex<double>]	48	static
alloc_traits.h:443:7:static _Tp* std::allocator_traits<std::allocator<_CharT> >::allocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = std::complex<double>]	32	static
allocator.h:141:7:std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = std::complex<double>]	32	static
array_ref.hpp:109:12:constexpr boost::multi::array_types<T, D, ElementPtr, Layout>::array_types(const layout_t&, const element_ptr&) [with T = std::complex<double>; long int D = 1; ElementPtr = std::complex<double>*; Layout = boost::multi::layout_t<1>]	16	static
array_ref.hpp:990:12:constexpr boost::multi::array_iterator<Element, 1, Ptr>::array_iterator(Ptr, typename boost::multi::basic_array<Element, 1, Ptr>::index) [with Element = std::complex<double>; Ptr = std::complex<double>*]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>&]	16	static
adl.hpp:245:48:) const [with As = {const std::complex<double>*&, const std::complex<double>*&, boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>&}]	64	static
initializer_list:71:7:constexpr std::initializer_list<_E>::size_type std::initializer_list<_E>::size() const [with _E = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >]	16	static
adl.hpp:392:39:) const [with As = {const boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >*&, const boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >*&}]	80	static
utility.hpp:370:6:extensions()) boost::multi::extensions(const T&) [with T = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >; <template-parameter-1-2> = void]	48	static
array_ref.hpp:749:28:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout>::iterator boost::multi::basic_array<T, D, ElementPtr, Layout>::begin() & [with T = std::complex<double>; long int D = 2; ElementPtr = std::complex<double>*; Layout = boost::multi::layout_t<2>]	64	dynamic,bounded
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >&]	16	static
adl.hpp:399:48:) const [with T = const boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >&; As = {}]	32	static
adl.hpp:410:39:) const [with As = {const boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >&}]	32	static
array_ref.hpp:246:54:constexpr boost::multi::basic_array<Element, (D - 1), ElementPtr> boost::multi::array_iterator<Element, D, ElementPtr>::operator*() const [with Element = std::complex<double>; long int D = 2; ElementPtr = std::complex<double>*]	48	static
adl.hpp:401:39:) const [with As = {boost::multi::basic_array<std::complex<double>, 1, std::complex<double>*, boost::multi::layout_t<1, long int> >}]	32	static
adl.hpp:245:48:) const [with As = {boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>}]	64	static
adl.hpp:249:39:) const [with As = {const boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >*&, const boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >*&, boost::multi::array_iterator<std::complex<double>, 2, std::complex<double>*>&}]	96	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >*&]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::array_iterator<std::complex<double>, 2, std::complex<double>*>]	16	static
adl.hpp:477:48:) const [with T = std::allocator<std::complex<double> >&; As = {const boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >*&, const boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >*&, boost::multi::array_iterator<std::complex<double>, 2, std::complex<double>*>}]	160	dynamic,bounded
array.hpp:86:7:void boost::multi::static_array<T, D, Alloc>::destroy_aux(std::true_type) [with T = std::complex<double>; long int D = 2; Alloc = std::allocator<std::complex<double> >]	16	static
array.hpp:435:44:constexpr boost::multi::static_array<T, D, Alloc>::iterator boost::multi::static_array<T, D, Alloc>::begin() [with T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	32	static
core.hpp:404:175:void boost::multi::blas::core::gemv(char, size_t, size_t, const A&, M*, size_t, X*, size_t, B, Y*, size_t) [with A = double; M = const std::complex<double>; X = const std::complex<double>; B = double; Y = std::complex<double>; typename std::enable_if<(((boost::multi::blas::is_z<ZY>{} && boost::multi::blas::is_z<SX>{}) && boost::multi::blas::is_z<SY>{}) && std::is_assignable<Y&, decltype ((((A{} * M{}) * X{}) + (B{} * Y{})))>{}), int>::type <anonymous> = 0]	240	dynamic,bounded
array.hpp:310:37:typename boost::multi::static_array<T, D, Alloc>::element_ptr boost::multi::static_array<T, D, Alloc>::data() [with T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	32	static
adl.hpp:288:48:) const [with As = {const std::complex<double>*&, long int&, std::complex<double>*&}]	64	static
axpy.hpp:27:6:begin()), forward<Y1D>(y))) boost::multi::blas::axpy(typename X1D::element, const X1D&, Y1D&&) [with X1D = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >; Y1D = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >&; <template-parameter-1-3> = std::complex<double>&]	80	static
allocator.h:151:2:std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::complex<double>; _Tp = double]	32	static
nrm2.hpp:30:6:stride(), boost::multi::base(r)), forward<A0D>(r))) boost::multi::blas::nrm2(const A1D&, A0D&&) [with A1D = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >; A0D = boost::multi::static_array<double, 0, std::allocator<double> >]	64	static
cpp_type_traits.h:428:5:_Iterator std::__miter_base(_Iterator) [with _Iterator = boost::multi::array_iterator<thrust::complex<double>, 1, const thrust::complex<double>*>]	16	static
stl_algobase.h:438:5:_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = boost::multi::array_iterator<thrust::complex<double>, 1, const thrust::complex<double>*>; _OI = boost::multi::array_iterator<thrust::complex<double>, 1, thrust::complex<double>*>]	112	static
initializer_list:71:7:constexpr std::initializer_list<_E>::size_type std::initializer_list<_E>::size() const [with _E = thrust::complex<double>]	16	static
new_allocator.h:80:7:__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = thrust::complex<double>]	16	static
new_allocator.h:89:7:__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = thrust::complex<double>]	16	static
array.hpp:32:2:typename std::allocator_traits<_Alloc>::pointer boost::multi::array_allocator<Allocator>::allocate(typename std::allocator_traits<_Alloc>::size_type) [with Allocator = std::allocator<thrust::complex<double> >]	32	static
stl_iterator_base_types.h:205:5:constexpr typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = const thrust::complex<double>*]	16	static
stl_iterator_base_funcs.h:98:5:constexpr typename std::iterator_traits<_Iterator>::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const thrust::complex<double>*]	16	static
array.hpp:30:2:boost::multi::array_allocator<Allocator>::array_allocator(const allocator_type&) [with Allocator = std::allocator<thrust::complex<double> >]	32	static
array_ref.hpp:1077:15:constexpr boost::multi::basic_array<thrust::complex<double>, 1, thrust::complex<double>*, boost::multi::layout_t<1> >::basic_array(const layout_t&, thrust::complex<double>* const&) [inherited from boost::multi::array_types<thrust::complex<double>, 1, thrust::complex<double>*, boost::multi::layout_t<1> >]	48	static
array_ref.hpp:1426:12:constexpr boost::multi::array_ref<T, D, ElementPtr>::array_ref(typename boost::multi::array_ref<T, D, ElementPtr>::element_ptr, typename boost::multi::array_ref<T, D, ElementPtr>::extensions_type) [with T = thrust::complex<double>; long int D = 1; ElementPtr = thrust::complex<double>*]	112	static
array.hpp:29:18:boost::multi::array_allocator<Allocator>::allocator_type& boost::multi::array_allocator<Allocator>::alloc() [with Allocator = std::allocator<thrust::complex<double> >]	16	static
array_ref.hpp:1266:27:constexpr boost::multi::basic_array<T, 1, ElementPtr, Layout>::iterator boost::multi::basic_array<T, 1, ElementPtr, Layout>::begin() & [with T = thrust::complex<double>; ElementPtr = thrust::complex<double>*; Layout = boost::multi::layout_t<1>]	64	static
adl.hpp:249:39:) const [with As = {const thrust::complex<double>*&, const thrust::complex<double>*&, boost::multi::array_iterator<thrust::complex<double>, 1, thrust::complex<double>*>&}]	80	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::allocator<thrust::complex<double> >&]	16	static
adl.hpp:477:48:) const [with T = std::allocator<thrust::complex<double> >&; As = {const thrust::complex<double>*&, const thrust::complex<double>*&, boost::multi::array_iterator<thrust::complex<double>, 1, thrust::complex<double>*>}]	96	static
array.hpp:86:7:void boost::multi::static_array<T, D, Alloc>::destroy_aux(std::true_type) [with T = thrust::complex<double>; long int D = 1; Alloc = std::allocator<thrust::complex<double> >]	16	static
alloc_traits.h:469:7:static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = thrust::complex<double>]	48	static
initializer_list:71:7:constexpr std::initializer_list<_E>::size_type std::initializer_list<_E>::size() const [with _E = boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >]	16	static
adl.hpp:392:39:) const [with As = {const boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >*&, const boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >*&}]	80	static
utility.hpp:370:6:extensions()) boost::multi::extensions(const T&) [with T = boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >; <template-parameter-1-2> = void]	48	static
array_ref.hpp:1426:12:constexpr boost::multi::array_ref<T, D, ElementPtr>::array_ref(typename boost::multi::array_ref<T, D, ElementPtr>::element_ptr, typename boost::multi::array_ref<T, D, ElementPtr>::extensions_type) [with T = thrust::complex<double>; long int D = 2; ElementPtr = thrust::complex<double>*]	128	static
array_ref.hpp:749:28:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout>::iterator boost::multi::basic_array<T, D, ElementPtr, Layout>::begin() & [with T = thrust::complex<double>; long int D = 2; ElementPtr = thrust::complex<double>*; Layout = boost::multi::layout_t<2>]	64	dynamic,bounded
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >&]	16	static
adl.hpp:399:48:) const [with T = const boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >&; As = {}]	32	static
adl.hpp:410:39:) const [with As = {const boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >&}]	32	static
array_ref.hpp:246:54:constexpr boost::multi::basic_array<Element, (D - 1), ElementPtr> boost::multi::array_iterator<Element, D, ElementPtr>::operator*() const [with Element = thrust::complex<double>; long int D = 2; ElementPtr = thrust::complex<double>*]	48	static
adl.hpp:401:39:) const [with As = {boost::multi::basic_array<thrust::complex<double>, 1, thrust::complex<double>*, boost::multi::layout_t<1, long int> >}]	32	static
adl.hpp:244:48:constexpr decltype (std::uninitialized_copy(f, l, d)) boost::multi::adl_uninitialized_copy_fn__::_(boost::multi::priority<1>, InIt, InIt, FwdIt) const [with InIt = boost::multi::array_iterator<thrust::complex<double>, 1, const thrust::complex<double>*>; FwdIt = boost::multi::array_iterator<thrust::complex<double>, 1, thrust::complex<double>*>; <template-parameter-1-3> = thrust::complex<double>*]	80	static
adl.hpp:249:39:) const [with As = {const boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >*&, const boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >*&, boost::multi::array_iterator<thrust::complex<double>, 2, thrust::complex<double>*>&}]	96	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >*&]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::array_iterator<thrust::complex<double>, 2, thrust::complex<double>*>]	16	static
adl.hpp:477:48:) const [with T = std::allocator<thrust::complex<double> >&; As = {const boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >*&, const boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >*&, boost::multi::array_iterator<thrust::complex<double>, 2, thrust::complex<double>*>}]	160	dynamic,bounded
array.hpp:86:7:void boost::multi::static_array<T, D, Alloc>::destroy_aux(std::true_type) [with T = thrust::complex<double>; long int D = 2; Alloc = std::allocator<thrust::complex<double> >]	16	static
array_ref.hpp:96:28:constexpr const layout_t& boost::multi::array_types<T, D, ElementPtr, Layout>::layout() const [with T = thrust::complex<double>; long int D = 2; ElementPtr = thrust::complex<double>*; Layout = boost::multi::layout_t<2>]	16	static
array.hpp:441:27:constexpr boost::multi::static_array<T, D, Alloc>::const_iterator boost::multi::static_array<T, D, Alloc>::begin() const [with T = thrust::complex<double>; long int D = 2; Alloc = std::allocator<thrust::complex<double> >]	80	static
array.hpp:441:27:constexpr boost::multi::static_array<T, D, Alloc>::const_iterator boost::multi::static_array<T, D, Alloc>::begin() const [with T = thrust::complex<double>; long int D = 1; Alloc = std::allocator<thrust::complex<double> >]	80	static
array.hpp:435:44:constexpr boost::multi::static_array<T, D, Alloc>::iterator boost::multi::static_array<T, D, Alloc>::begin() [with T = thrust::complex<double>; long int D = 1; Alloc = std::allocator<thrust::complex<double> >]	32	static
core.hpp:404:175:void boost::multi::blas::core::gemv(char, size_t, size_t, const A&, M*, size_t, X*, size_t, B, Y*, size_t) [with A = double; M = const thrust::complex<double>; X = const thrust::complex<double>; B = double; Y = thrust::complex<double>; typename std::enable_if<(((boost::multi::blas::is_z<ZY>{} && boost::multi::blas::is_z<SX>{}) && boost::multi::blas::is_z<SY>{}) && std::is_assignable<Y&, decltype ((((A{} * M{}) * X{}) + (B{} * Y{})))>{}), int>::type <anonymous> = 0]	240	dynamic,bounded
assertion.hpp:261:5:boost::test_tools::assertion::value_expr<T>::value_expr(boost::test_tools::assertion::value_expr<T>&&) [with T = thrust::complex<double>&]	32	static
assertion.hpp:163:1:static boost::test_tools::assertion::op::EQ<Lhs, Rhs, Enabler>::result_type boost::test_tools::assertion::op::EQ<Lhs, Rhs, Enabler>::eval(const Lhs&, const Rhs&) [with Lhs = thrust::complex<double>; Rhs = double; Enabler = void]	32	static
assertion.hpp:274:33:const T& boost::test_tools::assertion::value_expr<T>::value() const [with T = thrust::complex<double>&]	16	static
assertion.hpp:163:1:static void boost::test_tools::assertion::op::EQ<Lhs, Rhs, Enabler>::report(std::ostream&, const PrevExprType&, const Rhs&) [with PrevExprType = boost::test_tools::assertion::value_expr<thrust::complex<double>&>; Lhs = thrust::complex<double>; Rhs = double; Enabler = void]	80	static
array_ref.hpp:109:12:constexpr boost::multi::array_types<T, D, ElementPtr, Layout>::array_types(const layout_t&, const element_ptr&) [with T = std::complex<double>; long int D = 1; ElementPtr = const std::complex<double>*; Layout = boost::multi::layout_t<1>]	16	static
array_ref.hpp:750:28:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout>::iterator boost::multi::basic_array<T, D, ElementPtr, Layout>::end() & [with T = std::complex<double>; long int D = 2; ElementPtr = std::complex<double>*; Layout = boost::multi::layout_t<2>]	64	dynamic,bounded
stl_algo.h:799:5:_OIter std::copy_n(_IIter, _Size, _OIter) [with _IIter = const std::complex<double>*; _Size = long int; _OIter = std::complex<double>*]	48	static
gemv.hpp:113:39:typename boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::decay_type::extensions_type boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::extensions() const [with Scalar = double; It2D = boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>; It1D = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>; DecayType = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >; Context = boost::multi::blas::context]	64	static
array.hpp:163:2:boost::multi::static_array<T, D, Alloc>::static_array(Range&&) [with Range = const boost::multi::blas::gemv_range<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >, boost::multi::blas::context>&; <template-parameter-2-2> = void; <template-parameter-2-3> = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::blas::context>; <template-parameter-2-4> = void; T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	368	dynamic,bounded
array.hpp:843:9:boost::multi::array<T, D, A>& boost::multi::array<T, D, A>::operator=(boost::multi::array<T, D, A>&&) [with T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	112	static
layout.hpp:270:35:constexpr boost::multi::layout_t<1>::index_extension boost::multi::extension(const boost::multi::layout_t<1>&)	32	static
array_ref.hpp:1298:17:constexpr bool boost::multi::basic_array<T, 1, ElementPtr, Layout>::operator==(const Array&) const & [with Array = boost::multi::basic_array<std::complex<double>, 1, std::complex<double>*, boost::multi::layout_t<1> >; T = std::complex<double>; ElementPtr = std::complex<double>*; Layout = boost::multi::layout_t<1>]	144	dynamic,bounded
array_ref.hpp:53:22:T& boost::multi::modify(const T&) [with T = boost::multi::basic_array<std::complex<double>, 2, std::complex<double>*, boost::multi::layout_t<2> >]	16	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = boost::multi::basic_array<std::complex<double>, 2, std::complex<double>*, boost::multi::layout_t<2> >&]	16	static
adl.hpp:105:39:) const [with As = {boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 2, std::complex<double>*>}]	96	static
array.hpp:220:2:>&, const allocator_type&) [with TT = std::complex<double>; Args = {std::complex<double>*, boost::multi::layout_t<2, long int>}; <template-parameter-2-3> = void; <template-parameter-2-4> = boost::multi::array_iterator<std::complex<double>, 2, std::complex<double>*>; T = std::complex<double>; long int D = 2; Alloc = std::allocator<std::complex<double> >]	256	static
tuple:348:19:constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(_UHead&&) [with _UHead = int; long unsigned int _Idx = 1; _Head = boost::multi::extension_t<long int>]	48	static
tuple:132:19:constexpr std::_Head_base<_Idx, _Head, false>::_Head_base(_UHead&&) [with _UHead = int; long unsigned int _Idx = 0; _Head = boost::multi::extension_t<long int>]	48	static
adl.hpp:177:6:std::decay_t<decltype ((std::allocator_traits<_Alloc>::construct(alloc, std::addressof((* first))), first))> boost::multi::xtd::alloc_uninitialized_default_construct_n(Alloc&, ForwardIt, Size) [with Alloc = std::allocator<std::complex<double> >; ForwardIt = std::complex<double>*; Size = long int; T = std::complex<double>]	96	static
random.h:1981:2:std::normal_distribution<_RealType>::param_type::param_type(_RealType, _RealType) [with _RealType = double]	16	static
random.tcc:325:5:void std::mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::seed(std::mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::result_type) [with _UIntType = long unsigned int; long unsigned int __w = 32; long unsigned int __n = 624; long unsigned int __m = 397; long unsigned int __r = 31; _UIntType __a = 2567483615; long unsigned int __u = 11; _UIntType __d = 4294967295; long unsigned int __s = 7; _UIntType __b = 2636928640; long unsigned int __t = 15; _UIntType __c = 4022730752; long unsigned int __l = 18; _UIntType __f = 1812433253]	48	static
random.h:160:2:std::__detail::_Adaptor<_Engine, _DInputType>::_Adaptor(_Engine&) [with _Engine = std::mersenne_twister_engine<long unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253>; _DInputType = double]	16	static
random.h:177:2:_DInputType std::__detail::_Adaptor<_Engine, _DInputType>::operator()() [with _Engine = std::mersenne_twister_engine<long unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253>; _DInputType = double]	32	static
random.h:1992:2:_RealType std::normal_distribution<_RealType>::param_type::stddev() const [with _RealType = double]	16	static
random.h:1988:2:_RealType std::normal_distribution<_RealType>::param_type::mean() const [with _RealType = double]	16	static
array_ref.hpp:1455:44:constexpr typename boost::multi::array_ref<T, D, ElementPtr>::element_ptr boost::multi::array_ref<T, D, ElementPtr>::data_elements() const & [with T = std::complex<double>; long int D = 2; ElementPtr = std::complex<double>*]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::blas::gemv_range<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::array<double, 1, std::allocator<double> >, boost::multi::blas::context&>&]	16	static
adl.hpp:392:39:) const [with As = {boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context&>&, boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context&>&}]	80	static
gemv.hpp:88:13:boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>::value_type boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>::operator*() const [with Scalar = double; It2D = boost::multi::array_iterator<double, 2, const double*>; It1D = boost::multi::array_iterator<double, 1, const double*>; Context = boost::multi::blas::context&]	16	static
adl.hpp:249:39:) const [with As = {boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context&>&, boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context&>&, boost::multi::array_iterator<double, 1, double*>&}]	80	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context&>&]	16	static
adl.hpp:477:48:) const [with T = std::allocator<double>&; As = {boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context&>&, boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context&>&, boost::multi::array_iterator<double, 1, double*>}]	240	dynamic,bounded
shared_count.hpp:136:32:boost::detail::shared_count::shared_count(Y*) [with Y = boost::basic_wrap_stringstream<char>]	48	static
decorator.hpp:230:23:boost::unit_test::decorator::fixture_t::~fixture_t()	32	static
decorator.hpp:230:23:virtual boost::unit_test::decorator::fixture_t::~fixture_t()	32	static
basic_cstring.hpp:79:5:boost::unit_test::basic_cstring<CharT>::basic_cstring(boost::unit_test::basic_cstring<CharT>::pointer, LenType) [with LenType = int; CharT = const char]	16	static
basic_cstring.hpp:285:1:void boost::unit_test::basic_cstring<CharT>::clear() [with CharT = const char]	16	static
tuple:343:17:constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(const _Head&) [with long unsigned int _Idx = 1; _Head = boost::multi::extension_t<long int>]	32	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::extension_t<long int>&&]	16	static
tuple:1587:2:) [with _Us = {boost::multi::extension_t<long int, long int>, const boost::multi::extension_t<long int, long int>&}; _Ret = std::tuple<boost::multi::extension_t<long int, long int>, boost::multi::extension_t<long int, long int> >]	64	static
function_base.hpp:395:9:static void boost::detail::function::functor_manager<Functor>::manage(const boost::detail::function::function_buffer&, boost::detail::function::function_buffer&, boost::detail::function::functor_manager_operation_type) [with Functor = void (*)()]	64	static
function_template.hpp:112:9:static void boost::detail::function::void_function_invoker0<FunctionPtr, R>::invoke(boost::detail::function::function_buffer&) [with FunctionPtr = void (*)(); R = void]	48	static
function_template.hpp:490:14:bool boost::detail::function::basic_vtable0<R>::assign_to(F, boost::detail::function::function_buffer&) const [with F = void (*)(); R = void]	48	static
checked_delete.hpp:31:31:void boost::checked_delete(T*) [with T = boost::test_tools::local_fpc_tolerance<double>]	48	static
shared_count.hpp:136:32:boost::detail::shared_count::shared_count(Y*) [with Y = boost::unit_test::class_based_fixture<boost::test_tools::local_fpc_tolerance<double>, double>]	48	static
stl_algobase.h:280:5:_Iterator std::__niter_base(_Iterator) [with _Iterator = boost::multi::array_iterator<double, 1, const double*>]	16	static
stl_algobase.h:280:5:_Iterator std::__niter_base(_Iterator) [with _Iterator = boost::multi::array_iterator<double, 1, double*>]	16	static
stl_algobase.h:393:5:_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = boost::multi::array_iterator<double, 1, const double*>; _OI = boost::multi::array_iterator<double, 1, double*>]	96	static
stl_algobase.h:295:5:_Iterator std::__niter_wrap(const _Iterator&, _Iterator) [with _Iterator = boost::multi::array_iterator<double, 1, double*>]	16	static
new_allocator.h:119:7:void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = double]	48	static
new_allocator.h:102:7:_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = double]	48	static
tuple:160:7:static constexpr _Head& std::_Head_base<_Idx, _Head, false>::_M_head(std::_Head_base<_Idx, _Head, false>&) [with long unsigned int _Idx = 0; _Head = boost::multi::extension_t<long int>]	16	static
new_allocator.h:83:7:__gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = double]	16	static
stl_uninitialized.h:115:5:_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const double*; _ForwardIterator = boost::multi::array_iterator<double, 1, double*>]	64	static
adl.hpp:388:48:) const [with As = {const boost::multi::array<double, 1, std::allocator<double> >*&, const boost::multi::array<double, 1, std::allocator<double> >*&}]	64	static
adl.hpp:408:48:) const [with T = const boost::multi::array<double, 1, std::allocator<double> >&; As = {}]	32	static
array_ref.hpp:180:20:constexpr Ref boost::multi::basic_array_ptr<Ref, Layout>::operator*() const [with Ref = boost::multi::basic_array<double, 1, double*, boost::multi::layout_t<1> >; Layout = boost::multi::layout_t<1>]	16	static
adl.hpp:399:48:) const [with T = boost::multi::basic_array<double, 1, double*, boost::multi::layout_t<1> >; As = {}]	32	static
stl_uninitialized.h:115:5:_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = boost::multi::array_iterator<double, 1, const double*>; _ForwardIterator = boost::multi::array_iterator<double, 1, double*>]	96	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::array_iterator<double, 2, double*>&]	16	static
adl.hpp:245:48:) const [with As = {const boost::multi::array<double, 1, std::allocator<double> >*&, const boost::multi::array<double, 1, std::allocator<double> >*&, boost::multi::array_iterator<double, 2, double*>&}]	144	dynamic,bounded
stl_iterator_base_funcs.h:202:5:constexpr void std::advance(_InputIterator&, _Distance) [with _InputIterator = double*; _Distance = long int]	48	static
alloc_traits.h:482:2:) [with _Up = double; _Args = {}; _Tp = double]	32	static
alloc_traits.h:495:2:static void std::allocator_traits<std::allocator<_CharT> >::destroy(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*) [with _Up = double; _Tp = double]	32	static
fpc_op.hpp:207:1:static bool boost::test_tools::assertion::op::EQ<Lhs, Rhs, typename boost::enable_if_c<(((boost::math::fpc::tolerance_based<T>::value && boost::math::fpc::tolerance_based<Rhs>::value) || (boost::math::fpc::tolerance_based<T>::value && boost::is_arithmetic<To>::value)) || (boost::is_arithmetic<T>::value && boost::math::fpc::tolerance_based<Rhs>::value))>::type>::eval_direct(const Lhs&, const Rhs&) [with Lhs = double; Rhs = double]	16	static
assertion_result.hpp:39:23:boost::test_tools::assertion_result::assertion_result(boost::test_tools::assertion_result&&)	32	static
fpc_op.hpp:109:1:boost::test_tools::assertion_result boost::test_tools::assertion::op::compare_fpv(const Lhs&, const Rhs&, boost::test_tools::assertion::op::EQ<Lhs, Rhs>*) [with FPT = double; Lhs = double; Rhs = double]	160	static
assertion.hpp:278:33:void boost::test_tools::assertion::value_expr<T>::report(std::ostream&) const [with T = double&]	48	static
fpc_op.hpp:207:1:static const char* boost::test_tools::assertion::op::EQ<Lhs, Rhs, typename boost::enable_if_c<(((boost::math::fpc::tolerance_based<T>::value && boost::math::fpc::tolerance_based<Rhs>::value) || (boost::math::fpc::tolerance_based<T>::value && boost::is_arithmetic<To>::value)) || (boost::is_arithmetic<T>::value && boost::math::fpc::tolerance_based<Rhs>::value))>::type>::revert() [with Lhs = double; Rhs = double]	16	static
print_helper.hpp:209:1:boost::test_tools::tt_detail::print_helper_t<T> boost::test_tools::tt_detail::print_helper(const T&) [with T = double]	48	static
print_helper.hpp:218:1:std::ostream& boost::test_tools::tt_detail::operator<<(std::ostream&, const boost::test_tools::tt_detail::print_helper_t<T>&) [with T = double]	48	static
array_ref.hpp:1265:27:constexpr boost::multi::basic_array<T, 1, ElementPtr, Layout>::const_iterator boost::multi::basic_array<T, 1, ElementPtr, Layout>::begin() const & [with T = double; ElementPtr = const double*; Layout = boost::multi::layout_t<1>]	64	static
core.hpp:282:16:boost::multi::blas::core::dot(S, const d*, S, const d*, S, boost::multi::blas::{anonymous}::d*) [with S = long int]::<lambda(auto:46)> [with auto:46 = long int]	32	static
core.hpp:282:16:boost::multi::blas::core::dot(S, const d*, S, const d*, S, boost::multi::blas::{anonymous}::d*) [with S = long int]::<lambda(auto:47)> [with auto:47 = long int]	32	static
core.hpp:282:16:boost::multi::blas::core::dot(S, const d*, S, const d*, S, boost::multi::blas::{anonymous}::d*) [with S = long int]::<lambda(auto:48)> [with auto:48 = long int]	32	static
core.hpp:282:16:boost::multi::blas::{anonymous}::v boost::multi::blas::core::dot(S, const d*, S, const d*, S, boost::multi::blas::{anonymous}::d*) [with S = long int]	112	static
index_range.hpp:91:2:constexpr boost::multi::range<IndexType, IndexTypeLast>::range() [with IndexType = long int; IndexTypeLast = long int]	16	static
index_range.hpp:214:12:constexpr boost::multi::extension_t<IndexType, IndexTypeLast>::extension_t() [with IndexType = long int; IndexTypeLast = long int]	32	static
cpp_type_traits.h:428:5:_Iterator std::__miter_base(_Iterator) [with _Iterator = boost::multi::array_iterator<double, 2, const double*>]	24	static
stl_algobase.h:438:5:_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = boost::multi::array_iterator<double, 2, const double*>; _OI = boost::multi::array_iterator<double, 2, double*>]	352	dynamic,bounded
array_ref.hpp:193:17:constexpr bool boost::multi::basic_array_ptr<Ref, Layout>::operator==(const boost::multi::basic_array_ptr<Ref, Layout>&) const [with Ref = boost::multi::basic_array<double, 1, const double*, boost::multi::layout_t<1> >; Layout = boost::multi::layout_t<1>]	48	static
array_ref.hpp:270:17:constexpr bool boost::multi::array_iterator<Element, D, ElementPtr>::equal(const boost::multi::array_iterator<Element, D, ElementPtr>&) const [with Element = double; long int D = 2; ElementPtr = const double*]	32	static
array_ref.hpp:180:20:constexpr Ref boost::multi::basic_array_ptr<Ref, Layout>::operator*() const [with Ref = boost::multi::basic_array<double, 1, const double*, boost::multi::layout_t<1> >; Layout = boost::multi::layout_t<1>]	16	static
array_ref.hpp:1266:27:constexpr boost::multi::basic_array<T, 1, ElementPtr, Layout>::iterator boost::multi::basic_array<T, 1, ElementPtr, Layout>::begin() & [with T = double; ElementPtr = const double*; Layout = boost::multi::layout_t<1>]	64	static
array_ref.hpp:1270:27:constexpr boost::multi::basic_array<T, 1, ElementPtr, Layout>::iterator boost::multi::basic_array<T, 1, ElementPtr, Layout>::end() & [with T = double; ElementPtr = const double*; Layout = boost::multi::layout_t<1>]	64	static
array_ref.hpp:1010:17:constexpr bool boost::multi::array_iterator<Element, 1, Ptr>::operator!=(const boost::multi::array_iterator<Element, 1, Ptr>&) const [with Element = double; Ptr = const double*]	16	static
collection_comparison_op.hpp:303:1:boost::test_tools::assertion_result boost::test_tools::assertion::op::compare_collections(const Lhs&, const Rhs&, boost::type<boost::test_tools::assertion::op::EQ<L, R> >*, mpl_::false_) [with Lhs = boost::multi::array<double, 1, std::allocator<double> >; Rhs = boost::multi::array<double, 1, std::allocator<double> >; L = double; R = double]	48	static
tuple:132:19:constexpr std::_Head_base<_Idx, _Head, false>::_Head_base(_UHead&&) [with _UHead = boost::multi::extension_t<long int>; long unsigned int _Idx = 0; _Head = boost::multi::extension_t<long int>]	32	static
stl_algobase.h:465:5:_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]	64	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::nullptr_t]	16	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = double*&]	16	static
move.h:149:5:_Tp std::__exchange(_Tp&, _Up&&) [with _Tp = double*; _Up = std::nullptr_t]	48	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::layout_t<1>]	16	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = boost::multi::layout_t<1>&]	16	static
move.h:149:5:_Tp std::__exchange(_Tp&, _Up&&) [with _Tp = boost::multi::layout_t<1>; _Up = boost::multi::layout_t<1>]	64	static
adl.hpp:387:48:) const [with As = {boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>&, boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>&}]	208	dynamic,bounded
adl.hpp:245:48:) const [with As = {boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>&, boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>&, boost::multi::array_iterator<double, 1, double*>&}]	208	dynamic,bounded
adl.hpp:367:6:std::decay_t<decltype ((std::allocator_traits<_Alloc>::construct(a, std::addressof((* first)), v), first))> boost::multi::xtd::alloc_uninitialized_fill_n(Alloc&, ForwardIt, Size, const T&) [with Alloc = std::allocator<double>; ForwardIt = double*; Size = long unsigned int; T = double]	64	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const boost::multi::blas::gemv_range<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::array<double, 1, std::allocator<double> >, boost::multi::blas::context>&]	16	static
stl_uninitialized.h:782:5:_ForwardIterator std::__uninitialized_copy_n(_RandomAccessIterator, _Size, _ForwardIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const double*; _Size = long int; _ForwardIterator = double*]	48	static
array_ref.hpp:1006:24:constexpr boost::multi::array_iterator<double, 1, double*>::stride_type boost::multi::stride(const boost::multi::array_iterator<double, 1, double*>&)	16	static
axpy.hpp:17:6:decltype ((boost::multi::blas::core::axpy(n, alpha, boost::multi::base(first), boost::multi::stride(first), boost::multi::base(d_first), boost::multi::stride(d_first)), (d_first + n))) boost::multi::blas::axpy_n(T, It1, Size, OutIt) [with T = double; It1 = boost::multi::array_iterator<double, 1, const double*>; Size = long int; OutIt = boost::multi::array_iterator<double, 1, double*>]	96	static
array.hpp:521:7:auto boost::multi::static_array<T, 0, Alloc>::uninitialized_fill(const typename boost::multi::static_array<T, 0, Alloc>::element&) [with T = double; Alloc = std::allocator<double>]	48	static
array.hpp:513:2:boost::multi::static_array<T, 0, Alloc>::static_array(typename boost::multi::static_array<T, 0, Alloc>::extensions_type, const typename boost::multi::static_array<T, 0, Alloc>::element&, const allocator_type&) [with T = double; Alloc = std::allocator<double>]	96	static
array.hpp:326:53:constexpr boost::multi::static_array<T, D, Alloc>::element_const_ptr boost::multi::static_array<T, D, Alloc>::base() const [with T = double; long int D = 1; Alloc = std::allocator<double>]	32	static
array.hpp:611:60:constexpr double* boost::multi::base(boost::multi::static_array<double, 0, std::allocator<double> >&)	32	static
core.hpp:370:17:boost::multi::blas::core::nrm2(S, boost::multi::blas::add_const_ptr_t<double>, S, boost::multi::blas::{anonymous}::d*) [with S = long int]::<lambda(auto:65)> [with auto:65 = long int]	32	static
core.hpp:370:17:boost::multi::blas::core::nrm2(S, boost::multi::blas::add_const_ptr_t<double>, S, boost::multi::blas::{anonymous}::d*) [with S = long int]::<lambda(auto:66)> [with auto:66 = long int]	32	static
core.hpp:370:17:boost::multi::blas::{anonymous}::v boost::multi::blas::core::nrm2(S, boost::multi::blas::add_const_ptr_t<double>, S, boost::multi::blas::{anonymous}::d*) [with S = long int]	80	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::static_array<double, 0, std::allocator<double> >]	16	static
layout.hpp:193:28:constexpr boost::multi::layout_t<0, SSize>::extensions_type boost::multi::layout_t<0, SSize>::extensions() const [with SSize = long int]	16	static
array_ref.hpp:1025:15:constexpr boost::multi::basic_array<double, 0, double*, boost::multi::layout_t<0> >::basic_array(const layout_t&, double* const&) [inherited from boost::multi::array_types<double, 0, double*, boost::multi::layout_t<0> >]	48	static
array_ref.hpp:1426:12:constexpr boost::multi::array_ref<T, D, ElementPtr>::array_ref(typename boost::multi::array_ref<T, D, ElementPtr>::element_ptr, typename boost::multi::array_ref<T, D, ElementPtr>::extensions_type) [with T = double; long int D = 0; ElementPtr = double*]	96	static
array_ref.hpp:1455:44:constexpr typename boost::multi::array_ref<T, D, ElementPtr>::element_ptr boost::multi::array_ref<T, D, ElementPtr>::data_elements() const & [with T = double; long int D = 0; ElementPtr = double*]	16	static
adl.hpp:296:48:) const [with As = {double*&, long int&, double*&}]	64	static
move.h:47:5:constexpr _Tp* std::__addressof(_Tp&) [with _Tp = double]	16	static
adl.hpp:473:39:) const [with As = {std::allocator<double>&, double*&, long int&}]	80	static
assertion.hpp:274:33:const T& boost::test_tools::assertion::value_expr<T>::value() const [with T = double]	16	static
fpc_op.hpp:207:1:static void boost::test_tools::assertion::op::EQ<Lhs, Rhs, typename boost::enable_if_c<(((boost::math::fpc::tolerance_based<T>::value && boost::math::fpc::tolerance_based<Rhs>::value) || (boost::math::fpc::tolerance_based<T>::value && boost::is_arithmetic<To>::value)) || (boost::is_arithmetic<T>::value && boost::math::fpc::tolerance_based<Rhs>::value))>::type>::report(std::ostream&, const PrevExprType&, const Rhs&) [with PrevExprType = boost::test_tools::assertion::value_expr<double>; Lhs = double; Rhs = double]	80	static
stl_algobase.h:280:5:_Iterator std::__niter_base(_Iterator) [with _Iterator = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>]	16	static
stl_algobase.h:280:5:_Iterator std::__niter_base(_Iterator) [with _Iterator = boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>]	16	static
stl_algobase.h:393:5:_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>; _OI = boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>]	96	static
stl_algobase.h:295:5:_Iterator std::__niter_wrap(const _Iterator&, _Iterator) [with _Iterator = boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>]	16	static
new_allocator.h:119:7:void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::complex<double>]	48	static
new_allocator.h:102:7:_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::complex<double>]	48	static
new_allocator.h:83:7:__gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = std::complex<double>]	16	static
stl_uninitialized.h:115:5:_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::complex<double>*; _ForwardIterator = boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>]	64	static
adl.hpp:388:48:) const [with As = {const boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >*&, const boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >*&}]	64	static
array_ref.hpp:186:12:constexpr boost::multi::basic_array_ptr<Ref, Layout>::basic_array_ptr(typename Ref::element_ptr, const Layout&) [with Ref = boost::multi::basic_array<std::complex<double>, 1, std::complex<double>*, boost::multi::layout_t<1> >; Layout = boost::multi::layout_t<1>]	48	static
array_ref.hpp:252:12:constexpr boost::multi::array_iterator<Element, D, ElementPtr>::array_iterator(typename boost::multi::basic_array<Element, (D - 1), ElementPtr>::element_ptr, boost::multi::layout_t<(D - 1), long int>, boost::multi::index) [with Element = std::complex<double>; long int D = 2; ElementPtr = std::complex<double>*]	48	static
adl.hpp:408:48:) const [with T = const boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >&; As = {}]	32	static
array_ref.hpp:180:20:constexpr Ref boost::multi::basic_array_ptr<Ref, Layout>::operator*() const [with Ref = boost::multi::basic_array<std::complex<double>, 1, std::complex<double>*, boost::multi::layout_t<1> >; Layout = boost::multi::layout_t<1>]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::basic_array<std::complex<double>, 1, std::complex<double>*, boost::multi::layout_t<1> >]	16	static
adl.hpp:399:48:) const [with T = boost::multi::basic_array<std::complex<double>, 1, std::complex<double>*, boost::multi::layout_t<1> >; As = {}]	32	static
stl_uninitialized.h:115:5:_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>; _ForwardIterator = boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>]	96	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::array_iterator<std::complex<double>, 2, std::complex<double>*>&]	16	static
adl.hpp:245:48:) const [with As = {const boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >*&, const boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >*&, boost::multi::array_iterator<std::complex<double>, 2, std::complex<double>*>&}]	144	dynamic,bounded
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = boost::multi::static_array<std::complex<double>, 1, std::allocator<std::complex<double> > >&]	16	static
array_ref.hpp:1494:51:constexpr typename boost::multi::array_ref<T, D, ElementPtr>::element_ptr boost::multi::array_ref<T, D, ElementPtr>::data() const & [with T = std::complex<double>; long int D = 1; ElementPtr = std::complex<double>*]	16	static
stl_uninitialized.h:830:5:_ForwardIterator std::uninitialized_copy_n(_InputIterator, _Size, _ForwardIterator) [with _InputIterator = const std::complex<double>*; _Size = long int; _ForwardIterator = std::complex<double>*]	48	static
array_ref.hpp:1006:24:constexpr boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>::stride_type boost::multi::stride(const boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>&)	16	static
array_ref.hpp:1006:24:constexpr boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>::stride_type boost::multi::stride(const boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>&)	16	static
axpy.hpp:17:6:decltype ((boost::multi::blas::core::axpy(n, alpha, boost::multi::base(first), boost::multi::stride(first), boost::multi::base(d_first), boost::multi::stride(d_first)), (d_first + n))) boost::multi::blas::axpy_n(T, It1, Size, OutIt) [with T = std::complex<double>; It1 = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>; Size = long int; OutIt = boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>]	112	static
array_ref.hpp:93:29:constexpr boost::multi::array_types<T, D, ElementPtr, Layout>::element_ptr boost::multi::array_types<T, D, ElementPtr, Layout>::base() const [with T = std::complex<double>; long int D = 1; ElementPtr = std::complex<double>*; Layout = boost::multi::layout_t<1>]	16	static
array.hpp:326:53:constexpr boost::multi::static_array<T, D, Alloc>::element_const_ptr boost::multi::static_array<T, D, Alloc>::base() const [with T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	32	static
core.hpp:229:2:boost::multi::blas::complex_const_ptr<T>::complex_const_ptr(TT) [with TT = const std::complex<double>*; <template-parameter-2-2> = void; T = double]	16	static
core.hpp:370:49:boost::multi::blas::core::nrm2(S, boost::multi::blas::add_const_ptr_t<std::complex<double> >, S, boost::multi::blas::{anonymous}::d*) [with S = long int]::<lambda(auto:69)> [with auto:69 = long int]	32	static
core.hpp:370:49:boost::multi::blas::core::nrm2(S, boost::multi::blas::add_const_ptr_t<std::complex<double> >, S, boost::multi::blas::{anonymous}::d*) [with S = long int]::<lambda(auto:70)> [with auto:70 = long int]	32	static
core.hpp:370:49:boost::multi::blas::{anonymous}::v boost::multi::blas::core::nrm2(S, boost::multi::blas::add_const_ptr_t<std::complex<double> >, S, boost::multi::blas::{anonymous}::d*) [with S = long int]	96	static
stl_algobase.h:280:5:_Iterator std::__niter_base(_Iterator) [with _Iterator = boost::multi::array_iterator<thrust::complex<double>, 1, const thrust::complex<double>*>]	16	static
stl_algobase.h:280:5:_Iterator std::__niter_base(_Iterator) [with _Iterator = boost::multi::array_iterator<thrust::complex<double>, 1, thrust::complex<double>*>]	16	static
stl_algobase.h:393:5:_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = boost::multi::array_iterator<thrust::complex<double>, 1, const thrust::complex<double>*>; _OI = boost::multi::array_iterator<thrust::complex<double>, 1, thrust::complex<double>*>]	96	static
stl_algobase.h:295:5:_Iterator std::__niter_wrap(const _Iterator&, _Iterator) [with _Iterator = boost::multi::array_iterator<thrust::complex<double>, 1, thrust::complex<double>*>]	16	static
alloc_traits.h:443:7:static _Tp* std::allocator_traits<std::allocator<_CharT> >::allocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = thrust::complex<double>]	32	static
allocator.h:141:7:std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = thrust::complex<double>]	32	static
array_ref.hpp:109:12:constexpr boost::multi::array_types<T, D, ElementPtr, Layout>::array_types(const layout_t&, const element_ptr&) [with T = thrust::complex<double>; long int D = 1; ElementPtr = thrust::complex<double>*; Layout = boost::multi::layout_t<1>]	16	static
array_ref.hpp:990:12:constexpr boost::multi::array_iterator<Element, 1, Ptr>::array_iterator(Ptr, typename boost::multi::basic_array<Element, 1, Ptr>::index) [with Element = thrust::complex<double>; Ptr = thrust::complex<double>*]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::array_iterator<thrust::complex<double>, 1, thrust::complex<double>*>&]	16	static
adl.hpp:244:48:constexpr decltype (std::uninitialized_copy(f, l, d)) boost::multi::adl_uninitialized_copy_fn__::_(boost::multi::priority<1>, InIt, InIt, FwdIt) const [with InIt = const thrust::complex<double>*; FwdIt = boost::multi::array_iterator<thrust::complex<double>, 1, thrust::complex<double>*>; <template-parameter-1-3> = thrust::complex<double>*]	64	static
new_allocator.h:119:7:void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = thrust::complex<double>]	48	static
adl.hpp:388:48:) const [with As = {const boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >*&, const boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >*&}]	64	static
array_ref.hpp:186:12:constexpr boost::multi::basic_array_ptr<Ref, Layout>::basic_array_ptr(typename Ref::element_ptr, const Layout&) [with Ref = boost::multi::basic_array<thrust::complex<double>, 1, thrust::complex<double>*, boost::multi::layout_t<1> >; Layout = boost::multi::layout_t<1>]	48	static
array_ref.hpp:252:12:constexpr boost::multi::array_iterator<Element, D, ElementPtr>::array_iterator(typename boost::multi::basic_array<Element, (D - 1), ElementPtr>::element_ptr, boost::multi::layout_t<(D - 1), long int>, boost::multi::index) [with Element = thrust::complex<double>; long int D = 2; ElementPtr = thrust::complex<double>*]	48	static
adl.hpp:408:48:) const [with T = const boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >&; As = {}]	32	static
array_ref.hpp:180:20:constexpr Ref boost::multi::basic_array_ptr<Ref, Layout>::operator*() const [with Ref = boost::multi::basic_array<thrust::complex<double>, 1, thrust::complex<double>*, boost::multi::layout_t<1> >; Layout = boost::multi::layout_t<1>]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::basic_array<thrust::complex<double>, 1, thrust::complex<double>*, boost::multi::layout_t<1> >]	16	static
adl.hpp:399:48:) const [with T = boost::multi::basic_array<thrust::complex<double>, 1, thrust::complex<double>*, boost::multi::layout_t<1> >; As = {}]	32	static
stl_uninitialized.h:115:5:_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = boost::multi::array_iterator<thrust::complex<double>, 1, const thrust::complex<double>*>; _ForwardIterator = boost::multi::array_iterator<thrust::complex<double>, 1, thrust::complex<double>*>]	96	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::array_iterator<thrust::complex<double>, 2, thrust::complex<double>*>&]	16	static
adl.hpp:245:48:) const [with As = {const boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >*&, const boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >*&, boost::multi::array_iterator<thrust::complex<double>, 2, thrust::complex<double>*>&}]	144	dynamic,bounded
array_ref.hpp:754:28:constexpr boost::multi::basic_array<T, D, ElementPtr, Layout>::iterator boost::multi::basic_array<T, D, ElementPtr, Layout>::begin() && [with T = thrust::complex<double>; long int D = 2; ElementPtr = thrust::complex<double>*; Layout = boost::multi::layout_t<2>]	48	static
array_ref.hpp:1077:15:constexpr boost::multi::basic_array<thrust::complex<double>, 1, const thrust::complex<double>*, boost::multi::layout_t<1> >::basic_array(const layout_t&, const thrust::complex<double>* const&) [inherited from boost::multi::array_types<thrust::complex<double>, 1, const thrust::complex<double>*, boost::multi::layout_t<1> >]	48	static
array_ref.hpp:186:12:constexpr boost::multi::basic_array_ptr<Ref, Layout>::basic_array_ptr(typename Ref::element_ptr, const Layout&) [with Ref = boost::multi::basic_array<thrust::complex<double>, 1, const thrust::complex<double>*, boost::multi::layout_t<1> >; Layout = boost::multi::layout_t<1>]	48	static
array_ref.hpp:96:28:constexpr const layout_t& boost::multi::array_types<T, D, ElementPtr, Layout>::layout() const [with T = thrust::complex<double>; long int D = 1; ElementPtr = thrust::complex<double>*; Layout = boost::multi::layout_t<1>]	16	static
array_ref.hpp:242:12:constexpr boost::multi::array_iterator<Element, D, ElementPtr>::array_iterator(const Other&) [with Other = boost::multi::array_iterator<thrust::complex<double>, 2, thrust::complex<double>*>; <template-parameter-2-2> = const thrust::complex<double>*; Element = thrust::complex<double>; long int D = 2; ElementPtr = const thrust::complex<double>*]	48	static
array_ref.hpp:1267:27:constexpr boost::multi::basic_array<T, 1, ElementPtr, Layout>::iterator boost::multi::basic_array<T, 1, ElementPtr, Layout>::begin() && [with T = thrust::complex<double>; ElementPtr = thrust::complex<double>*; Layout = boost::multi::layout_t<1>]	32	static
array_ref.hpp:980:12:constexpr boost::multi::array_iterator<Element, 1, Ptr>::array_iterator(const boost::multi::array_iterator<EElement, 1, PPtr>&) [with EElement = thrust::complex<double>; PPtr = thrust::complex<double>*; <template-parameter-2-3> = const thrust::complex<double>*; Element = thrust::complex<double>; Ptr = const thrust::complex<double>*]	16	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = boost::multi::static_array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >&]	16	static
assertion.hpp:278:33:void boost::test_tools::assertion::value_expr<T>::report(std::ostream&) const [with T = thrust::complex<double>&]	48	static
assertion.hpp:163:1:static const char* boost::test_tools::assertion::op::EQ<Lhs, Rhs, Enabler>::revert() [with Lhs = thrust::complex<double>; Rhs = double; Enabler = void]	16	static
stl_algo.h:780:5:_OutputIterator std::__copy_n(_RandomAccessIterator, _Size, _OutputIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const std::complex<double>*; _Size = long int; _OutputIterator = std::complex<double>*]	48	static
gemv.hpp:112:12:boost::multi::size_type boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::size() const [with Scalar = double; It2D = boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>; It1D = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>; DecayType = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >; Context = boost::multi::blas::context]	192	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const boost::multi::blas::gemv_range<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >, boost::multi::blas::context>&]	16	static
gemv.hpp:110:11:boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::iterator boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::begin() const [with Scalar = double; It2D = boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>; It1D = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>; DecayType = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >; Context = boost::multi::blas::context]	80	dynamic,bounded
gemv.hpp:111:11:boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::iterator boost::multi::blas::gemv_range<Scalar, It2D, It1D, DecayType, Context>::end() const [with Scalar = double; It2D = boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>; It1D = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>; DecayType = boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >; Context = boost::multi::blas::context]	80	dynamic,bounded
gemv.hpp:19:6:auto boost::multi::blas::gemv_n(Context&&, A, MIt, Size, XIt, B, YIt) [with Context = boost::multi::blas::context&; A = double; MIt = boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>; Size = long int; XIt = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>; B = double; YIt = boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>]	240	dynamic,bounded
gemv.hpp:73:14:auto boost::multi::blas::copy_n(boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>, boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>::difference_type, It1DOut) [with It1DOut = boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>; Scalar = double; It2D = boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>; It1D = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>; Context = boost::multi::blas::context]	176	dynamic,bounded
gemv.hpp:80:14:auto boost::multi::blas::copy(boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>, boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>, It1DOut) [with It1DOut = boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>; Scalar = double; It2D = boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>; It1D = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>; Context = boost::multi::blas::context]	112	dynamic,bounded
gemv.hpp:82:14:auto boost::multi::blas::uninitialized_copy(boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>, boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>, It1DOut) [with It1DOut = boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>; Scalar = double; It2D = boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>; It1D = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>; Context = boost::multi::blas::context]	176	dynamic,bounded
adl.hpp:343:16:constexpr auto boost::multi::xtd::alloc_uninitialized_copy(std::allocator<_CharT>&, InputIt, InputIt, ForwardIt) [with T = std::complex<double>; InputIt = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::blas::context>; ForwardIt = boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>]	48	static
adl.hpp:482:39:) const [with As = {std::allocator<std::complex<double> >&, boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::blas::context>&, boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::blas::context>&, boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>}]	112	static
array.hpp:146:2:boost::multi::static_array<T, D, Alloc>::static_array(It, It, const allocator_type&) [with It = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::blas::context>; <template-parameter-2-2> = long int; T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	192	static
array.hpp:261:7:void boost::multi::static_array<T, D, Alloc>::clear() [with T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	64	static
utility:286:5:_Tp std::exchange(_Tp&, _Up&&) [with _Tp = std::complex<double>*; _Up = std::nullptr_t]	32	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::allocator<std::complex<double> >&]	16	static
array_ref.hpp:1265:27:constexpr boost::multi::basic_array<T, 1, ElementPtr, Layout>::const_iterator boost::multi::basic_array<T, 1, ElementPtr, Layout>::begin() const & [with T = std::complex<double>; ElementPtr = std::complex<double>*; Layout = boost::multi::layout_t<1>]	64	static
array_ref.hpp:1269:27:constexpr boost::multi::basic_array<T, 1, ElementPtr, Layout>::const_iterator boost::multi::basic_array<T, 1, ElementPtr, Layout>::end() const & [with T = std::complex<double>; ElementPtr = std::complex<double>*; Layout = boost::multi::layout_t<1>]	64	static
adl.hpp:401:39:) const [with As = {const boost::multi::basic_array<std::complex<double>, 1, std::complex<double>*, boost::multi::layout_t<1, long int> >&}]	32	static
adl.hpp:85:38:) const [with As = {boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>}]	96	dynamic,bounded
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>]	16	static
adl.hpp:101:48:) const [with As = {boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 2, std::complex<double>*>}]	224	dynamic,bounded
tuple:132:19:constexpr std::_Head_base<_Idx, _Head, false>::_Head_base(_UHead&&) [with _UHead = int; long unsigned int _Idx = 1; _Head = boost::multi::extension_t<long int>]	48	static
stl_iterator_base_funcs.h:202:5:constexpr void std::advance(_InputIterator&, _Distance) [with _InputIterator = std::complex<double>*; _Distance = long int]	48	static
move.h:138:5:constexpr _Tp* std::addressof(_Tp&) [with _Tp = std::complex<double>]	32	static
alloc_traits.h:482:2:) [with _Up = std::complex<double>; _Args = {}; _Tp = std::complex<double>]	32	static
alloc_traits.h:495:2:static void std::allocator_traits<std::allocator<_CharT> >::destroy(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*) [with _Up = std::complex<double>; _Tp = std::complex<double>]	32	static
random.h:146:7:_Tp std::__detail::__mod(_Tp) [with _Tp = long unsigned int; _Tp __m = 4294967296; _Tp __a = 1; _Tp __c = 0]	32	static
random.h:146:7:_Tp std::__detail::__mod(_Tp) [with _Tp = long unsigned int; _Tp __m = 624; _Tp __a = 1; _Tp __c = 0]	32	static
random.h:544:7:static constexpr std::mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::result_type std::mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::min() [with _UIntType = long unsigned int; long unsigned int __w = 32; long unsigned int __n = 624; long unsigned int __m = 397; long unsigned int __r = 31; _UIntType __a = 2567483615; long unsigned int __u = 11; _UIntType __d = 4294967295; long unsigned int __s = 7; _UIntType __b = 2636928640; long unsigned int __t = 15; _UIntType __c = 4022730752; long unsigned int __l = 18; _UIntType __f = 1812433253]	16	static
random.tcc:3316:5:_RealType std::generate_canonical(_UniformRandomNumberGenerator&) [with _RealType = double; long unsigned int __bits = 53; _UniformRandomNumberGenerator = std::mersenne_twister_engine<long unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253>]	128	static
adl.hpp:387:48:) const [with As = {boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context&>&, boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context&>&}]	208	dynamic,bounded
adl.hpp:245:48:) const [with As = {boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context&>&, boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context&>&, boost::multi::array_iterator<double, 1, double*>&}]	208	dynamic,bounded
sp_counted_impl.hpp:81:14:boost::detail::sp_counted_impl_p<X>::sp_counted_impl_p(X*) [with X = boost::basic_wrap_stringstream<char>]	32	static
checked_delete.hpp:31:31:void boost::checked_delete(T*) [with T = boost::basic_wrap_stringstream<char>]	48	static
tuple:125:17:constexpr std::_Head_base<_Idx, _Head, false>::_Head_base(const _Head&) [with long unsigned int _Idx = 1; _Head = boost::multi::extension_t<long int>]	16	static
tuple:968:19:constexpr std::tuple<_T1, _T2>::tuple(_U1&&, _U2&&) [with _U1 = boost::multi::extension_t<long int>; _U2 = const boost::multi::extension_t<long int>&; typename std::enable_if<((std::_TC<true, _T1, _T2>::_MoveConstructibleTuple<_U1, _U2>() && std::_TC<true, _T1, _T2>::_ImplicitlyMoveConvertibleTuple<_U1, _U2>()) && (! std::is_same<typename std::remove_cv<typename std::remove_reference<_SrcTuple>::type>::type, std::allocator_arg_t>::value)), bool>::type <anonymous> = true; _T1 = boost::multi::extension_t<long int>; _T2 = boost::multi::extension_t<long int>]	64	static
type_index.hpp:211:19:boost::typeindex::type_index boost::typeindex::type_id() [with T = void (*)()]	16	static
function_base.hpp:322:9:static void boost::detail::function::functor_manager<Functor>::manager(const boost::detail::function::function_buffer&, boost::detail::function::function_buffer&, boost::detail::function::functor_manager_operation_type, boost::detail::function::function_ptr_tag) [with Functor = void (*)()]	48	static
function_template.hpp:512:9:bool boost::detail::function::basic_vtable0<R>::assign_to(FunctionPtr, boost::detail::function::function_buffer&, boost::detail::function::function_ptr_tag) const [with FunctionPtr = void (*)(); R = void]	48	static
sp_counted_impl.hpp:81:14:boost::detail::sp_counted_impl_p<X>::sp_counted_impl_p(X*) [with X = boost::unit_test::class_based_fixture<boost::test_tools::local_fpc_tolerance<double>, double>]	32	static
fixture.hpp:128:7:boost::unit_test::class_based_fixture<boost::test_tools::local_fpc_tolerance<double>, double>::~class_based_fixture()	32	static
fixture.hpp:128:7:virtual boost::unit_test::class_based_fixture<boost::test_tools::local_fpc_tolerance<double>, double>::~class_based_fixture()	32	static
checked_delete.hpp:31:31:void boost::checked_delete(T*) [with T = boost::unit_test::class_based_fixture<boost::test_tools::local_fpc_tolerance<double>, double>]	32	static
array_ref.hpp:1012:28:constexpr boost::multi::array_iterator<Element, 1, Ptr>::difference_type boost::multi::array_iterator<Element, 1, Ptr>::operator-(const boost::multi::array_iterator<Element, 1, Ptr>&) const [with Element = double; Ptr = const double*]	32	static
array_ref.hpp:995:28:constexpr boost::multi::array_iterator<Element, 1, Ptr>::difference_type boost::multi::array_iterator<Element, 1, Ptr>::distance_to(const boost::multi::array_iterator<Element, 1, Ptr>&) const [with Element = double; Ptr = const double*]	32	static
stl_algobase.h:337:2:static _OI std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m(_II, _II, _OI) [with _II = boost::multi::array_iterator<double, 1, const double*>; _OI = boost::multi::array_iterator<double, 1, double*>]	96	static
new_allocator.h:132:7:__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = double]	16	static
stl_uninitialized.h:99:9:static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const double*; _ForwardIterator = boost::multi::array_iterator<double, 1, double*>]	48	static
stl_iterator_base_funcs.h:138:5:constexpr typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const boost::multi::array<double, 1, std::allocator<double> >*]	32	static
array.hpp:442:27:constexpr boost::multi::static_array<T, D, Alloc>::const_iterator boost::multi::static_array<T, D, Alloc>::end() const [with T = double; long int D = 1; Alloc = std::allocator<double>]	80	static
stl_uninitialized.h:99:9:static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = boost::multi::array_iterator<double, 1, const double*>; _ForwardIterator = boost::multi::array_iterator<double, 1, double*>]	80	static
stl_iterator_base_types.h:205:5:constexpr typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = double*]	16	static
stl_iterator_base_funcs.h:174:5:constexpr void std::__advance(_RandomAccessIterator&, _Distance, std::random_access_iterator_tag) [with _RandomAccessIterator = double*; _Distance = long int]	16	static
new_allocator.h:144:2:) [with _Up = double; _Args = {}; _Tp = double]	32	static
new_allocator.h:151:2:void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = double; _Tp = double]	16	static
fpc_op.hpp:80:1:boost::test_tools::assertion_result boost::test_tools::assertion::op::compare_fpv_near_zero(const FPT&, boost::test_tools::assertion::op::EQ<Lhs, Rhs>*) [with FPT = double; Lhs = double; Rhs = double]	96	static
floating_point_comparison.hpp:233:17:boost::math::fpc::close_at_tolerance<FPT>::close_at_tolerance(ToleranceType, boost::math::fpc::strength) [with ToleranceType = double; FPT = double]	48	static
stl_algobase.h:222:5:constexpr const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = double]	16	static
stl_algobase.h:198:5:constexpr const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = double]	16	static
floating_point_comparison.hpp:262:25:bool boost::math::fpc::close_at_tolerance<FPT>::operator()(FPT, FPT) const [with FPT = double]	96	static
wrap_stringstream.hpp:64:1:boost::basic_wrap_stringstream<CharT>& boost::operator<<(boost::basic_wrap_stringstream<CharT>&, const T&) [with CharT = char; T = char [40]]	32	static
floating_point_comparison.hpp:249:25:FPT boost::math::fpc::close_at_tolerance<FPT>::tested_rel_diff() const [with FPT = double]	16	static
wrap_stringstream.hpp:64:1:boost::basic_wrap_stringstream<CharT>& boost::operator<<(boost::basic_wrap_stringstream<CharT>&, const T&) [with CharT = char; T = double]	32	static
wrap_stringstream.hpp:64:1:boost::basic_wrap_stringstream<CharT>& boost::operator<<(boost::basic_wrap_stringstream<CharT>&, const T&) [with CharT = char; T = char [4]]	32	static
floating_point_comparison.hpp:243:25:FPT boost::math::fpc::close_at_tolerance<FPT>::fraction_tolerance() const [with FPT = double]	16	static
shared_ptr.hpp:634:5:boost::shared_ptr<T>::shared_ptr(boost::shared_ptr<T>&&) [with T = boost::basic_wrap_stringstream<char>]	32	static
print_helper.hpp:188:17:boost::test_tools::tt_detail::print_helper_t<T>::print_helper_t(const T&) [with T = double]	16	static
print_helper.hpp:83:13:void boost::test_tools::tt_detail::print_log_value<T>::operator()(std::ostream&, const T&) [with T = double]	80	static
array_ref.hpp:990:12:constexpr boost::multi::array_iterator<Element, 1, Ptr>::array_iterator(Ptr, typename boost::multi::basic_array<Element, 1, Ptr>::index) [with Element = double; Ptr = const double*]	16	static
stl_algobase.h:280:5:_Iterator std::__niter_base(_Iterator) [with _Iterator = boost::multi::array_iterator<double, 2, const double*>]	24	static
stl_algobase.h:280:5:_Iterator std::__niter_base(_Iterator) [with _Iterator = boost::multi::array_iterator<double, 2, double*>]	24	static
stl_algobase.h:393:5:_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = boost::multi::array_iterator<double, 2, const double*>; _OI = boost::multi::array_iterator<double, 2, double*>]	176	dynamic,bounded
stl_algobase.h:295:5:_Iterator std::__niter_wrap(const _Iterator&, _Iterator) [with _Iterator = boost::multi::array_iterator<double, 2, double*>]	24	static
array_ref.hpp:96:28:constexpr const layout_t& boost::multi::array_types<T, D, ElementPtr, Layout>::layout() const [with T = double; long int D = 1; ElementPtr = const double*; Layout = boost::multi::layout_t<1>]	16	static
layout.hpp:287:17:constexpr bool boost::multi::layout_t<1, SSize>::operator==(const boost::multi::layout_t<1, SSize>&) const [with SSize = long int]	16	static
array.hpp:913:7:>&) const [with TT = double; Args = {double*, boost::multi::layout_t<1, long int>}; T = double; long int D = 1; Alloc = std::allocator<double>]	32	static
cpp_type_traits.h:428:5:_Iterator std::__miter_base(_Iterator) [with _Iterator = const double*]	16	static
stl_algobase.h:438:5:_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]	64	static
stl_iterator_base_funcs.h:138:5:constexpr typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>]	160	dynamic,bounded
alloc_traits.h:482:2:) [with _Up = double; _Args = {const double&}; _Tp = double]	48	static
stl_uninitialized.h:115:5:_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const double*; _ForwardIterator = double*]	64	static
array_ref.hpp:1004:31:constexpr double* boost::multi::base(const boost::multi::array_iterator<double, 1, double*>&)	32	static
core.hpp:295:16:void boost::multi::blas::core::axpy(size_t, A, SXP, size_t, SYP, size_t) [with A = double; SXP = const double*; SX = const double; SYP = double*; SY = double; typename std::enable_if<((((boost::multi::blas::is_d<SX>{} && boost::multi::blas::is_d<SY>{}) && std::is_assignable<SY&, decltype ((A{} * SX{}))>{}) && is_convertible_v<SXP, SX*>) && is_convertible_v<SYP, SY*>), int>::type <anonymous> = 0]	96	static
array.hpp:609:60:constexpr typename boost::multi::static_array<T, 0, Alloc>::element_ptr boost::multi::static_array<T, 0, Alloc>::base() & [with T = double; Alloc = std::allocator<double>]	32	static
array_ref.hpp:109:12:constexpr boost::multi::array_types<T, D, ElementPtr, Layout>::array_types(const layout_t&, const element_ptr&) [with T = double; long int D = 0; ElementPtr = double*; Layout = boost::multi::layout_t<0>]	16	static
adl.hpp:270:6:std::decay_t<decltype ((::new(static_cast<void*>(std::addressof(*boost::multi::xtd::uninitialized_move_n::d_first))) Value, d_first))> boost::multi::xtd::uninitialized_move_n(InputIt, Size, ForwardIt) [with InputIt = double*; Size = long int; ForwardIt = double*; Value = double]	64	static
adl.hpp:469:48:) const [with As = {std::allocator<double>&, double*&, long int&}]	64	static
assertion.hpp:278:33:void boost::test_tools::assertion::value_expr<T>::report(std::ostream&) const [with T = double]	48	static
array_ref.hpp:1012:28:constexpr boost::multi::array_iterator<Element, 1, Ptr>::difference_type boost::multi::array_iterator<Element, 1, Ptr>::operator-(const boost::multi::array_iterator<Element, 1, Ptr>&) const [with Element = std::complex<double>; Ptr = const std::complex<double>*]	32	static
array_ref.hpp:995:28:constexpr boost::multi::array_iterator<Element, 1, Ptr>::difference_type boost::multi::array_iterator<Element, 1, Ptr>::distance_to(const boost::multi::array_iterator<Element, 1, Ptr>&) const [with Element = std::complex<double>; Ptr = const std::complex<double>*]	32	static
array_ref.hpp:1007:28:constexpr boost::multi::array_iterator<Element, 1, Ptr>& boost::multi::array_iterator<Element, 1, Ptr>::operator++() [with Element = std::complex<double>; Ptr = const std::complex<double>*]	16	static
stl_algobase.h:337:2:static _OI std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m(_II, _II, _OI) [with _II = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>; _OI = boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>]	96	static
new_allocator.h:132:7:__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = std::complex<double>]	16	static
stl_uninitialized.h:76:9:static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::complex<double>*; _ForwardIterator = boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>; bool _TrivialValueTypes = false]	80	static
stl_iterator_base_funcs.h:138:5:constexpr typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >*]	32	static
array.hpp:442:27:constexpr boost::multi::static_array<T, D, Alloc>::const_iterator boost::multi::static_array<T, D, Alloc>::end() const [with T = std::complex<double>; long int D = 1; Alloc = std::allocator<std::complex<double> >]	80	static
stl_uninitialized.h:76:9:static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>; _ForwardIterator = boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>; bool _TrivialValueTypes = false]	112	static
stl_uninitialized.h:782:5:_ForwardIterator std::__uninitialized_copy_n(_RandomAccessIterator, _Size, _ForwardIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const std::complex<double>*; _Size = long int; _ForwardIterator = std::complex<double>*]	48	static
array_ref.hpp:1004:31:constexpr const std::complex<double>* boost::multi::base(const boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>&)	32	static
array_ref.hpp:1004:31:constexpr std::complex<double>* boost::multi::base(const boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>&)	32	static
core.hpp:295:46:void boost::multi::blas::core::axpy(size_t, A, SXP, size_t, SYP, size_t) [with A = std::complex<double>; SXP = const std::complex<double>*; SX = const std::complex<double>; SYP = std::complex<double>*; SY = std::complex<double>; typename std::enable_if<((((boost::multi::blas::is_z<SX>{} && boost::multi::blas::is_z<SY>{}) && std::is_assignable<SY&, decltype ((A{} * SX{}))>{}) && is_convertible_v<SXP, SX*>) && is_convertible_v<SYP, SY*>), int>::type <anonymous> = 0]	112	static
core.hpp:231:2:boost::multi::blas::complex_const_ptr<T>::operator const std::complex<_Tp>*() const [with T = double]	16	static
array_ref.hpp:1012:28:constexpr boost::multi::array_iterator<Element, 1, Ptr>::difference_type boost::multi::array_iterator<Element, 1, Ptr>::operator-(const boost::multi::array_iterator<Element, 1, Ptr>&) const [with Element = thrust::complex<double>; Ptr = const thrust::complex<double>*]	32	static
array_ref.hpp:995:28:constexpr boost::multi::array_iterator<Element, 1, Ptr>::difference_type boost::multi::array_iterator<Element, 1, Ptr>::distance_to(const boost::multi::array_iterator<Element, 1, Ptr>&) const [with Element = thrust::complex<double>; Ptr = const thrust::complex<double>*]	32	static
array_ref.hpp:1007:28:constexpr boost::multi::array_iterator<Element, 1, Ptr>& boost::multi::array_iterator<Element, 1, Ptr>::operator++() [with Element = thrust::complex<double>; Ptr = const thrust::complex<double>*]	16	static
array_ref.hpp:1007:28:constexpr boost::multi::array_iterator<Element, 1, Ptr>& boost::multi::array_iterator<Element, 1, Ptr>::operator++() [with Element = thrust::complex<double>; Ptr = thrust::complex<double>*]	16	static
stl_algobase.h:337:2:static _OI std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m(_II, _II, _OI) [with _II = boost::multi::array_iterator<thrust::complex<double>, 1, const thrust::complex<double>*>; _OI = boost::multi::array_iterator<thrust::complex<double>, 1, thrust::complex<double>*>]	96	static
new_allocator.h:102:7:_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = thrust::complex<double>]	48	static
new_allocator.h:83:7:__gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = thrust::complex<double>]	16	static
stl_uninitialized.h:115:5:_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const thrust::complex<double>*; _ForwardIterator = boost::multi::array_iterator<thrust::complex<double>, 1, thrust::complex<double>*>]	64	static
stl_iterator_base_funcs.h:138:5:constexpr typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >*]	32	static
array.hpp:442:27:constexpr boost::multi::static_array<T, D, Alloc>::const_iterator boost::multi::static_array<T, D, Alloc>::end() const [with T = thrust::complex<double>; long int D = 1; Alloc = std::allocator<thrust::complex<double> >]	80	static
stl_uninitialized.h:99:9:static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = boost::multi::array_iterator<thrust::complex<double>, 1, const thrust::complex<double>*>; _ForwardIterator = boost::multi::array_iterator<thrust::complex<double>, 1, thrust::complex<double>*>]	80	static
array_ref.hpp:109:12:constexpr boost::multi::array_types<T, D, ElementPtr, Layout>::array_types(const layout_t&, const element_ptr&) [with T = thrust::complex<double>; long int D = 1; ElementPtr = const thrust::complex<double>*; Layout = boost::multi::layout_t<1>]	16	static
print_helper.hpp:209:1:boost::test_tools::tt_detail::print_helper_t<T> boost::test_tools::tt_detail::print_helper(const T&) [with T = thrust::complex<double>]	48	static
print_helper.hpp:218:1:std::ostream& boost::test_tools::tt_detail::operator<<(std::ostream&, const boost::test_tools::tt_detail::print_helper_t<T>&) [with T = thrust::complex<double>]	48	static
stl_algobase.h:465:5:_OI std::copy(_II, _II, _OI) [with _II = const std::complex<double>*; _OI = std::complex<double>*]	64	static
array_ref.hpp:1009:17:constexpr bool boost::multi::array_iterator<Element, 1, Ptr>::operator==(const boost::multi::array_iterator<Element, 1, Ptr>&) const [with Element = std::complex<double>; Ptr = const std::complex<double>*]	16	static
gemv.hpp:69:25:boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::blas::context>::difference_type boost::multi::blas::operator-(const boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::blas::context>&, const boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::blas::context>&)	32	static
gemv.hpp:86:2:boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>::gemv_iterator(Scalar, It2D, It1D, Context) [with Scalar = double; It2D = boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>; It1D = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>; Context = boost::multi::blas::context]	24	static
adl.hpp:392:39:) const [with As = {boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::blas::context>&, boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::blas::context>&}]	80	static
gemv.hpp:88:13:boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>::value_type boost::multi::blas::gemv_iterator<Scalar, It2D, It1D, Context>::operator*() const [with Scalar = double; It2D = boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>; It1D = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>; Context = boost::multi::blas::context]	64	static
adl.hpp:249:39:) const [with As = {boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::blas::context>&, boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::blas::context>&, boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>&}]	80	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::blas::context>&]	16	static
adl.hpp:477:48:) const [with T = std::allocator<std::complex<double> >&; As = {boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::blas::context>&, boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::blas::context>&, boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>}]	240	dynamic,bounded
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::complex<double>*&]	16	static
move.h:149:5:_Tp std::__exchange(_Tp&, _Up&&) [with _Tp = std::complex<double>*; _Up = std::nullptr_t]	48	static
array_ref.hpp:990:12:constexpr boost::multi::array_iterator<Element, 1, Ptr>::array_iterator(Ptr, typename boost::multi::basic_array<Element, 1, Ptr>::index) [with Element = std::complex<double>; Ptr = const std::complex<double>*]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const boost::multi::basic_array<std::complex<double>, 1, std::complex<double>*, boost::multi::layout_t<1> >&]	16	static
adl.hpp:399:48:) const [with T = const boost::multi::basic_array<std::complex<double>, 1, std::complex<double>*, boost::multi::layout_t<1> >&; As = {}]	32	static
adl.hpp:81:47:) const [with As = {boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>}]	80	static
stl_algobase.h:465:5:_OI std::copy(_II, _II, _OI) [with _II = boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>; _OI = boost::multi::array_iterator<std::complex<double>, 2, std::complex<double>*>]	256	dynamic,bounded
stl_iterator_base_types.h:205:5:constexpr typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = std::complex<double>*]	16	static
stl_iterator_base_funcs.h:174:5:constexpr void std::__advance(_RandomAccessIterator&, _Distance, std::random_access_iterator_tag) [with _RandomAccessIterator = std::complex<double>*; _Distance = long int]	16	static
move.h:47:5:constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::complex<double>]	16	static
new_allocator.h:144:2:) [with _Up = std::complex<double>; _Args = {}; _Tp = std::complex<double>]	32	static
new_allocator.h:151:2:void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = std::complex<double>; _Tp = std::complex<double>]	16	static
random.h:135:2:static _Tp std::__detail::_Mod<_Tp, __m, __a, __c, true, __s>::__calc(_Tp) [with _Tp = long unsigned int; _Tp __m = 4294967296; _Tp __a = 1; _Tp __c = 0; bool __s = true]	16	static
random.h:135:2:static _Tp std::__detail::_Mod<_Tp, __m, __a, __c, true, __s>::__calc(_Tp) [with _Tp = long unsigned int; _Tp __m = 624; _Tp __a = 1; _Tp __c = 0; bool __s = true]	16	static
random.tcc:452:5:std::mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::result_type std::mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::operator()() [with _UIntType = long unsigned int; long unsigned int __w = 32; long unsigned int __n = 624; long unsigned int __m = 397; long unsigned int __r = 31; _UIntType __a = 2567483615; long unsigned int __u = 11; _UIntType __d = 4294967295; long unsigned int __s = 7; _UIntType __b = 2636928640; long unsigned int __t = 15; _UIntType __c = 4022730752; long unsigned int __l = 18; _UIntType __f = 1812433253]	48	static
stl_iterator_base_funcs.h:138:5:constexpr typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context&>]	160	dynamic,bounded
tuple:216:19:) [with _UHead = boost::multi::extension_t<long int>; _UTail = {const boost::multi::extension_t<long int, long int>&}; <template-parameter-2-3> = void; long unsigned int _Idx = 0; _Head = boost::multi::extension_t<long int>; _Tail = {boost::multi::extension_t<long int, long int>}]	64	static
stl_type_index.hpp:226:23:static boost::typeindex::stl_type_index boost::typeindex::stl_type_index::type_id() [with T = void (*)()]	32	static
function_base.hpp:259:9:static void boost::detail::function::functor_manager_common<Functor>::manage_ptr(const boost::detail::function::function_buffer&, boost::detail::function::function_buffer&, boost::detail::function::functor_manager_operation_type) [with Functor = void (*)()]	64	static
stl_algobase.h:465:5:_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = boost::multi::array_iterator<double, 1, double*>]	64	static
stl_iterator_base_types.h:205:5:constexpr typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = const boost::multi::array<double, 1, std::allocator<double> >*]	16	static
stl_iterator_base_funcs.h:98:5:constexpr typename std::iterator_traits<_Iterator>::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const boost::multi::array<double, 1, std::allocator<double> >*]	16	static
array_ref.hpp:1271:27:constexpr boost::multi::basic_array<T, 1, ElementPtr, Layout>::iterator boost::multi::basic_array<T, 1, ElementPtr, Layout>::end() && [with T = double; ElementPtr = double*; Layout = boost::multi::layout_t<1>]	32	static
floating_point_comparison.hpp:300:17:boost::math::fpc::small_with_tolerance<FPT>::small_with_tolerance(FPT) [with FPT = double]	32	static
floating_point_comparison.hpp:307:17:bool boost::math::fpc::small_with_tolerance<FPT>::operator()(FPT) const [with FPT = double]	32	static
wrap_stringstream.hpp:64:1:boost::basic_wrap_stringstream<CharT>& boost::operator<<(boost::basic_wrap_stringstream<CharT>&, const T&) [with CharT = char; T = char [5]]	32	static
floating_point_comparison.hpp:193:1:FPT boost::math::fpc::fpc_detail::fraction_tolerance(ToleranceType) [with FPT = double; ToleranceType = double]	16	static
floating_point_comparison.hpp:142:1:FPT boost::math::fpc::fpc_detail::fpt_abs(FPT) [with FPT = double]	16	static
floating_point_comparison.hpp:175:1:FPT boost::math::fpc::fpc_detail::safe_fpt_division(FPT, FPT) [with FPT = double]	32	static
print_helper.hpp:97:21:std::streamsize boost::test_tools::tt_detail::print_log_value<T>::set_precision(std::ostream&, mpl_::false_) [with T = double]	32	static
print_helper.hpp:61:27:std::ostream& boost::test_tools::tt_detail::impl::boost_test_print_type_impl::operator()(std::ostream&, const R&) const [with R = double]	48	static
stl_algobase.h:337:2:static _OI std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m(_II, _II, _OI) [with _II = boost::multi::array_iterator<double, 2, const double*>; _OI = boost::multi::array_iterator<double, 2, double*>]	144	static
array.hpp:140:7:>&) const [with TT = double; Args = {double*, boost::multi::layout_t<1, long int>}; T = double; long int D = 1; Alloc = std::allocator<double>]	32	static
stl_algobase.h:280:5:_Iterator std::__niter_base(_Iterator) [with _Iterator = const double*]	16	static
stl_algobase.h:280:5:_Iterator std::__niter_base(_Iterator) [with _Iterator = double*]	16	static
stl_algobase.h:393:5:_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]	64	static
stl_algobase.h:295:5:_Iterator std::__niter_wrap(const _Iterator&, _Iterator) [with _Iterator = double*]	16	static
stl_iterator_base_types.h:205:5:constexpr typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>]	16	static
stl_iterator_base_funcs.h:98:5:constexpr typename std::iterator_traits<_Iterator>::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context>]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const double&]	16	static
new_allocator.h:144:2:) [with _Up = double; _Args = {const double&}; _Tp = double]	48	static
stl_uninitialized.h:99:9:static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const double*; _ForwardIterator = double*]	48	static
array_ref.hpp:93:29:constexpr boost::multi::array_types<T, D, ElementPtr, Layout>::element_ptr boost::multi::array_types<T, D, ElementPtr, Layout>::base() const [with T = double; long int D = 0; ElementPtr = double*; Layout = boost::multi::layout_t<0>]	16	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = double&]	16	static
adl.hpp:231:16:constexpr std::decay_t<decltype ((std::addressof((*(first - 1))), first))> boost::multi::alloc_destroy_n(Alloc&, BidirIt, Size) [with Alloc = std::allocator<double>; BidirIt = double*; Size = long int; T = double]	48	static
array_ref.hpp:1011:69:constexpr typename std::iterator_traits<_II>::reference boost::multi::array_iterator<Element, 1, Ptr>::operator*() const [with Element = std::complex<double>; Ptr = const std::complex<double>*]	16	static
stl_construct.h:74:5:) [with _T1 = std::complex<double>; _Args = {const std::complex<double>&}]	48	static
stl_iterator_base_types.h:205:5:constexpr typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = const boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >*]	16	static
stl_iterator_base_funcs.h:98:5:constexpr typename std::iterator_traits<_Iterator>::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const boost::multi::array<std::complex<double>, 1, std::allocator<std::complex<double> > >*]	16	static
array_ref.hpp:1010:17:constexpr bool boost::multi::array_iterator<Element, 1, Ptr>::operator!=(const boost::multi::array_iterator<Element, 1, Ptr>&) const [with Element = std::complex<double>; Ptr = const std::complex<double>*]	16	static
stl_uninitialized.h:115:5:_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::complex<double>*; _ForwardIterator = std::complex<double>*]	64	static
array_ref.hpp:1011:69:constexpr typename std::iterator_traits<_II>::reference boost::multi::array_iterator<Element, 1, Ptr>::operator*() const [with Element = thrust::complex<double>; Ptr = thrust::complex<double>*]	16	static
array_ref.hpp:1011:69:constexpr typename std::iterator_traits<_II>::reference boost::multi::array_iterator<Element, 1, Ptr>::operator*() const [with Element = thrust::complex<double>; Ptr = const thrust::complex<double>*]	16	static
new_allocator.h:132:7:__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = thrust::complex<double>]	16	static
stl_uninitialized.h:99:9:static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const thrust::complex<double>*; _ForwardIterator = boost::multi::array_iterator<thrust::complex<double>, 1, thrust::complex<double>*>]	48	static
stl_iterator_base_types.h:205:5:constexpr typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = const boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >*]	16	static
stl_iterator_base_funcs.h:98:5:constexpr typename std::iterator_traits<_Iterator>::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const boost::multi::array<thrust::complex<double>, 1, std::allocator<thrust::complex<double> > >*]	16	static
array_ref.hpp:1271:27:constexpr boost::multi::basic_array<T, 1, ElementPtr, Layout>::iterator boost::multi::basic_array<T, 1, ElementPtr, Layout>::end() && [with T = thrust::complex<double>; ElementPtr = thrust::complex<double>*; Layout = boost::multi::layout_t<1>]	32	static
print_helper.hpp:188:17:boost::test_tools::tt_detail::print_helper_t<T>::print_helper_t(const T&) [with T = thrust::complex<double>]	16	static
print_helper.hpp:83:13:void boost::test_tools::tt_detail::print_log_value<T>::operator()(std::ostream&, const T&) [with T = thrust::complex<double>]	80	static
cpp_type_traits.h:428:5:_Iterator std::__miter_base(_Iterator) [with _Iterator = const std::complex<double>*]	16	static
stl_algobase.h:438:5:_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const std::complex<double>*; _OI = std::complex<double>*]	64	static
array_ref.hpp:288:35:constexpr boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>::difference_type boost::multi::operator-(const boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>&, const boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>&)	32	static
adl.hpp:388:48:) const [with As = {boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::blas::context>&, boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::blas::context>&}]	208	dynamic,bounded
adl.hpp:245:48:) const [with As = {boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::blas::context>&, boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::blas::context>&, boost::multi::array_iterator<std::complex<double>, 1, std::complex<double>*>&}]	208	dynamic,bounded
stl_algobase.h:1059:5:bool std::equal(_II1, _II1, _II2) [with _II1 = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>; _II2 = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>]	112	static
cpp_type_traits.h:428:5:_Iterator std::__miter_base(_Iterator) [with _Iterator = boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>]	24	static
stl_algobase.h:438:5:_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>; _OI = boost::multi::array_iterator<std::complex<double>, 2, std::complex<double>*>]	352	dynamic,bounded
random.tcc:396:5:void std::mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::_M_gen_rand() [with _UIntType = long unsigned int; long unsigned int __w = 32; long unsigned int __n = 624; long unsigned int __m = 397; long unsigned int __r = 31; _UIntType __a = 2567483615; long unsigned int __u = 11; _UIntType __d = 4294967295; long unsigned int __s = 7; _UIntType __b = 2636928640; long unsigned int __t = 15; _UIntType __c = 4022730752; long unsigned int __l = 18; _UIntType __f = 1812433253]	16	static
stl_iterator_base_types.h:205:5:constexpr typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context&>]	16	static
stl_iterator_base_funcs.h:98:5:constexpr typename std::iterator_traits<_Iterator>::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<double, 2, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::blas::context&>]	16	static
type_index_facade.hpp:187:13:bool boost::typeindex::operator==(const TypeInfo&, const boost::typeindex::type_index_facade<Derived, TypeInfo>&) [with Derived = boost::typeindex::stl_type_index; TypeInfo = std::type_info]	48	static
stl_algobase.h:438:5:_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = boost::multi::array_iterator<double, 1, double*>]	80	static
array_ref.hpp:1270:27:constexpr boost::multi::basic_array<T, 1, ElementPtr, Layout>::iterator boost::multi::basic_array<T, 1, ElementPtr, Layout>::end() & [with T = double; ElementPtr = double*; Layout = boost::multi::layout_t<1>]	64	static
floating_point_comparison.hpp:153:17:static FPT boost::math::fpc::fpc_detail::fpt_specialized_limits<FPT>::max_value() [with FPT = double]	16	static
floating_point_comparison.hpp:152:17:static FPT boost::math::fpc::fpc_detail::fpt_specialized_limits<FPT>::min_value() [with FPT = double]	16	static
print_helper.hpp:52:23:std::ostream& boost::test_tools::tt_detail::impl::boost_test_print_type(std::ostream&, const T&) [with T = double]	32	static
array_ref.hpp:1283:7:>&) && [with TT = double; As = {const double*, boost::multi::layout_t<1, long int>}; T = double; ElementPtr = double*; Layout = boost::multi::layout_t<1>]	96	static
array_ref.hpp:1298:17:constexpr bool boost::multi::basic_array<T, 1, ElementPtr, Layout>::operator==(const Array&) const & [with Array = boost::multi::basic_array<double, 1, double*, boost::multi::layout_t<1> >; T = double; ElementPtr = double*; Layout = boost::multi::layout_t<1>]	144	dynamic,bounded
stl_algobase.h:375:2:static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]	64	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::complex<double>&]	16	static
stl_uninitialized.h:76:9:static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const std::complex<double>*; _ForwardIterator = std::complex<double>*; bool _TrivialValueTypes = false]	64	static
stl_algobase.h:465:5:_OI std::copy(_II, _II, _OI) [with _II = const thrust::complex<double>*; _OI = boost::multi::array_iterator<thrust::complex<double>, 1, thrust::complex<double>*>]	64	static
array_ref.hpp:1270:27:constexpr boost::multi::basic_array<T, 1, ElementPtr, Layout>::iterator boost::multi::basic_array<T, 1, ElementPtr, Layout>::end() & [with T = thrust::complex<double>; ElementPtr = thrust::complex<double>*; Layout = boost::multi::layout_t<1>]	64	static
print_helper.hpp:97:21:std::streamsize boost::test_tools::tt_detail::print_log_value<T>::set_precision(std::ostream&, mpl_::false_) [with T = thrust::complex<double>]	16	static
print_helper.hpp:61:27:std::ostream& boost::test_tools::tt_detail::impl::boost_test_print_type_impl::operator()(std::ostream&, const R&) const [with R = thrust::complex<double>]	48	static
stl_algobase.h:280:5:_Iterator std::__niter_base(_Iterator) [with _Iterator = const std::complex<double>*]	16	static
stl_algobase.h:280:5:_Iterator std::__niter_base(_Iterator) [with _Iterator = std::complex<double>*]	16	static
stl_algobase.h:393:5:_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const std::complex<double>*; _OI = std::complex<double>*]	64	static
stl_algobase.h:295:5:_Iterator std::__niter_wrap(const _Iterator&, _Iterator) [with _Iterator = std::complex<double>*]	16	static
stl_iterator_base_funcs.h:138:5:constexpr typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::blas::context>]	160	dynamic,bounded
stl_algobase.h:841:5:bool std::__equal_aux(_II1, _II1, _II2) [with _II1 = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>; _II2 = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>]	96	static
stl_algobase.h:280:5:_Iterator std::__niter_base(_Iterator) [with _Iterator = boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>]	24	static
stl_algobase.h:280:5:_Iterator std::__niter_base(_Iterator) [with _Iterator = boost::multi::array_iterator<std::complex<double>, 2, std::complex<double>*>]	24	static
stl_algobase.h:393:5:_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>; _OI = boost::multi::array_iterator<std::complex<double>, 2, std::complex<double>*>]	176	dynamic,bounded
stl_algobase.h:295:5:_Iterator std::__niter_wrap(const _Iterator&, _Iterator) [with _Iterator = boost::multi::array_iterator<std::complex<double>, 2, std::complex<double>*>]	24	static
type_index_facade.hpp:154:35:constexpr bool boost::typeindex::operator==(const boost::typeindex::type_index_facade<Derived, TypeInfo>&, const boost::typeindex::type_index_facade<Derived, TypeInfo>&) [with Derived = boost::typeindex::stl_type_index; TypeInfo = std::type_info]	32	static
stl_algobase.h:393:5:_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = boost::multi::array_iterator<double, 1, double*>]	64	static
array_ref.hpp:1269:27:constexpr boost::multi::basic_array<T, 1, ElementPtr, Layout>::const_iterator boost::multi::basic_array<T, 1, ElementPtr, Layout>::end() const & [with T = double; ElementPtr = const double*; Layout = boost::multi::layout_t<1>]	64	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = boost::multi::basic_array<double, 1, double*, boost::multi::layout_t<1> >&]	16	static
array_ref.hpp:1265:27:constexpr boost::multi::basic_array<T, 1, ElementPtr, Layout>::const_iterator boost::multi::basic_array<T, 1, ElementPtr, Layout>::begin() const & [with T = double; ElementPtr = double*; Layout = boost::multi::layout_t<1>]	64	static
array_ref.hpp:1269:27:constexpr boost::multi::basic_array<T, 1, ElementPtr, Layout>::const_iterator boost::multi::basic_array<T, 1, ElementPtr, Layout>::end() const & [with T = double; ElementPtr = double*; Layout = boost::multi::layout_t<1>]	64	static
adl.hpp:401:39:) const [with As = {const boost::multi::basic_array<double, 1, double*, boost::multi::layout_t<1, long int> >&}]	32	static
adl.hpp:85:38:) const [with As = {boost::multi::array_iterator<double, 1, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::array_iterator<double, 1, const double*>}]	96	dynamic,bounded
cpp_type_traits.h:428:5:_Iterator std::__miter_base(_Iterator) [with _Iterator = const thrust::complex<double>*]	16	static
stl_algobase.h:438:5:_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const thrust::complex<double>*; _OI = boost::multi::array_iterator<thrust::complex<double>, 1, thrust::complex<double>*>]	80	static
print_helper.hpp:52:23:std::ostream& boost::test_tools::tt_detail::impl::boost_test_print_type(std::ostream&, const T&) [with T = thrust::complex<double>]	32	static
stl_algobase.h:375:2:static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = std::complex<double>; bool _IsMove = false]	64	static
stl_iterator_base_types.h:205:5:constexpr typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::blas::context>]	16	static
stl_iterator_base_funcs.h:98:5:constexpr typename std::iterator_traits<_Iterator>::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = boost::multi::blas::gemv_iterator<double, boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>, boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>, boost::multi::blas::context>]	16	static
complex:463:5:constexpr bool std::operator==(const std::complex<_Tp>&, const std::complex<_Tp>&) [with _Tp = double]	48	static
stl_algobase.h:817:2:static bool std::__equal<_BoolType>::equal(_II1, _II1, _II2) [with _II1 = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>; _II2 = boost::multi::array_iterator<std::complex<double>, 1, const std::complex<double>*>; bool _BoolType = false]	80	static
array_ref.hpp:285:28:constexpr boost::multi::array_iterator<Element, D, ElementPtr>& boost::multi::array_iterator<Element, D, ElementPtr>::operator++() [with Element = std::complex<double>; long int D = 2; ElementPtr = const std::complex<double>*]	16	static
stl_algobase.h:337:2:static _OI std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m(_II, _II, _OI) [with _II = boost::multi::array_iterator<std::complex<double>, 2, const std::complex<double>*>; _OI = boost::multi::array_iterator<std::complex<double>, 2, std::complex<double>*>]	144	static
stl_algobase.h:337:2:static _OI std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m(_II, _II, _OI) [with _II = const double*; _OI = boost::multi::array_iterator<double, 1, double*>]	80	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const boost::multi::basic_array<double, 1, double*, boost::multi::layout_t<1> >&]	16	static
adl.hpp:399:48:) const [with T = const boost::multi::basic_array<double, 1, double*, boost::multi::layout_t<1> >&; As = {}]	32	static
adl.hpp:76:47:) const [with As = {boost::multi::array_iterator<double, 1, const double*>, boost::multi::array_iterator<double, 1, const double*>, boost::multi::array_iterator<double, 1, const double*>}]	80	static
stl_algobase.h:280:5:_Iterator std::__niter_base(_Iterator) [with _Iterator = const thrust::complex<double>*]	16	static
stl_algobase.h:393:5:_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const thrust::complex<double>*; _OI = boost::multi::array_iterator<thrust::complex<double>, 1, thrust::complex<double>*>]	64	static
stream.h:23:36:std::basic_ostream<Elem, Tr>& thrust::operator<<(std::basic_ostream<Elem, Tr>&, const thrust::complex<T>&) [with T = double; CharT = char; Traits = std::char_traits<char>]	48	static
array_ref.hpp:246:54:constexpr boost::multi::basic_array<Element, (D - 1), ElementPtr> boost::multi::array_iterator<Element, D, ElementPtr>::operator*() const [with Element = std::complex<double>; long int D = 2; ElementPtr = const std::complex<double>*]	48	static
array_ref.hpp:1283:7:>&) && [with TT = std::complex<double>; As = {const std::complex<double>*, boost::multi::layout_t<1, long int>}; T = std::complex<double>; ElementPtr = std::complex<double>*; Layout = boost::multi::layout_t<1>]	96	static
stl_algobase.h:1059:5:bool std::equal(_II1, _II1, _II2) [with _II1 = boost::multi::array_iterator<double, 1, const double*>; _II2 = boost::multi::array_iterator<double, 1, const double*>]	112	static
stl_algobase.h:337:2:static _OI std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m(_II, _II, _OI) [with _II = const thrust::complex<double>*; _OI = boost::multi::array_iterator<thrust::complex<double>, 1, thrust::complex<double>*>]	64	static
array_ref.hpp:180:20:constexpr Ref boost::multi::basic_array_ptr<Ref, Layout>::operator*() const [with Ref = boost::multi::basic_array<std::complex<double>, 1, const std::complex<double>*, boost::multi::layout_t<1> >; Layout = boost::multi::layout_t<1>]	16	static
array_ref.hpp:1265:27:constexpr boost::multi::basic_array<T, 1, ElementPtr, Layout>::const_iterator boost::multi::basic_array<T, 1, ElementPtr, Layout>::begin() const & [with T = std::complex<double>; ElementPtr = const std::complex<double>*; Layout = boost::multi::layout_t<1>]	64	static
array_ref.hpp:1269:27:constexpr boost::multi::basic_array<T, 1, ElementPtr, Layout>::const_iterator boost::multi::basic_array<T, 1, ElementPtr, Layout>::end() const & [with T = std::complex<double>; ElementPtr = const std::complex<double>*; Layout = boost::multi::layout_t<1>]	64	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = boost::multi::basic_array<std::complex<double>, 1, std::complex<double>*, boost::multi::layout_t<1> >&]	16	static
stl_algobase.h:841:5:bool std::__equal_aux(_II1, _II1, _II2) [with _II1 = boost::multi::array_iterator<double, 1, const double*>; _II2 = boost::multi::array_iterator<double, 1, const double*>]	96	static
stl_algobase.h:817:2:static bool std::__equal<_BoolType>::equal(_II1, _II1, _II2) [with _II1 = boost::multi::array_iterator<double, 1, const double*>; _II2 = boost::multi::array_iterator<double, 1, const double*>; bool _BoolType = false]	80	static
sp_counted_impl.hpp:68:46:boost::detail::sp_counted_impl_p<boost::unit_test::class_based_fixture<boost::test_tools::local_fpc_tolerance<double>, double> >::~sp_counted_impl_p()	32	static
sp_counted_impl.hpp:68:46:virtual boost::detail::sp_counted_impl_p<boost::unit_test::class_based_fixture<boost::test_tools::local_fpc_tolerance<double>, double> >::~sp_counted_impl_p()	32	static
sp_counted_impl.hpp:68:46:boost::detail::sp_counted_impl_p<boost::basic_wrap_stringstream<char> >::~sp_counted_impl_p()	32	static
sp_counted_impl.hpp:68:46:virtual boost::detail::sp_counted_impl_p<boost::basic_wrap_stringstream<char> >::~sp_counted_impl_p()	32	static
lazy_ostream.hpp:56:7:boost::unit_test::lazy_ostream_impl<boost::unit_test::lazy_ostream, boost::unit_test::basic_cstring<const char>, const boost::unit_test::basic_cstring<const char>&>::~lazy_ostream_impl()	32	static
lazy_ostream.hpp:56:7:virtual boost::unit_test::lazy_ostream_impl<boost::unit_test::lazy_ostream, boost::unit_test::basic_cstring<const char>, const boost::unit_test::basic_cstring<const char>&>::~lazy_ostream_impl()	32	static
gemv.cpp:276:1:void __static_initialization_and_destruction_0(int, int)	160	static
sp_counted_impl.hpp:88:18:void boost::detail::sp_counted_impl_p<X>::dispose() [with X = boost::unit_test::class_based_fixture<boost::test_tools::local_fpc_tolerance<double>, double>]	32	static
sp_counted_impl.hpp:96:20:void* boost::detail::sp_counted_impl_p<X>::get_deleter(const sp_typeinfo_&) [with X = boost::unit_test::class_based_fixture<boost::test_tools::local_fpc_tolerance<double>, double>]	16	static
sp_counted_impl.hpp:101:20:void* boost::detail::sp_counted_impl_p<X>::get_local_deleter(const sp_typeinfo_&) [with X = boost::unit_test::class_based_fixture<boost::test_tools::local_fpc_tolerance<double>, double>]	16	static
sp_counted_impl.hpp:106:20:void* boost::detail::sp_counted_impl_p<X>::get_untyped_deleter() [with X = boost::unit_test::class_based_fixture<boost::test_tools::local_fpc_tolerance<double>, double>]	16	static
sp_counted_impl.hpp:88:18:void boost::detail::sp_counted_impl_p<X>::dispose() [with X = boost::basic_wrap_stringstream<char>]	32	static
sp_counted_impl.hpp:96:20:void* boost::detail::sp_counted_impl_p<X>::get_deleter(const sp_typeinfo_&) [with X = boost::basic_wrap_stringstream<char>]	16	static
sp_counted_impl.hpp:101:20:void* boost::detail::sp_counted_impl_p<X>::get_local_deleter(const sp_typeinfo_&) [with X = boost::basic_wrap_stringstream<char>]	16	static
sp_counted_impl.hpp:106:20:void* boost::detail::sp_counted_impl_p<X>::get_untyped_deleter() [with X = boost::basic_wrap_stringstream<char>]	16	static
fixture.hpp:135:21:void boost::unit_test::class_based_fixture<F, Arg>::setup() [with F = boost::test_tools::local_fpc_tolerance<double>; Arg = double]	48	static
fixture.hpp:136:21:void boost::unit_test::class_based_fixture<F, Arg>::teardown() [with F = boost::test_tools::local_fpc_tolerance<double>; Arg = double]	32	static
lazy_ostream.hpp:65:29:std::ostream& boost::unit_test::lazy_ostream_impl<PrevType, T, StorageT>::operator()(std::ostream&) const [with PrevType = boost::unit_test::lazy_ostream; T = boost::unit_test::basic_cstring<const char>; StorageT = const boost::unit_test::basic_cstring<const char>&]	32	static
scoped_ptr.hpp:91:10:void boost::scoped_ptr<T>::reset(T*) [with T = boost::test_tools::local_fpc_tolerance<double>]	48	static
scoped_ptr.hpp:97:9:T& boost::scoped_ptr<T>::operator*() const [with T = boost::test_tools::local_fpc_tolerance<double>]	32	static
fixture.hpp:112:6:void boost::unit_test::setup_conditional(U&) [with U = boost::test_tools::local_fpc_tolerance<double>]	48	static
fixture.hpp:118:6:void boost::unit_test::teardown_conditional(U&) [with U = boost::test_tools::local_fpc_tolerance<double>]	48	static
io.hpp:51:1:std::basic_ostream<_CharT, _Traits>& boost::unit_test::operator<<(std::basic_ostream<_CharT, _Traits>&, const boost::unit_test::basic_cstring<CharT2>&) [with CharT1 = char; Tr = std::char_traits<char>; CharT2 = const char]	128	static
scoped_ptr.hpp:117:10:void boost::scoped_ptr<T>::swap(boost::scoped_ptr<T>&) [with T = boost::test_tools::local_fpc_tolerance<double>]	16	static
fixture.hpp:98:58:void boost::unit_test::impl_fixture::call_setup<has_setup>::operator()(U&) [with U = boost::test_tools::local_fpc_tolerance<double>; bool has_setup = false]	16	static
fixture.hpp:104:58:void boost::unit_test::impl_fixture::call_teardown<has_teardown>::operator()(U&) [with U = boost::test_tools::local_fpc_tolerance<double>; bool has_teardown = false]	16	static
basic_cstring.hpp:488:1:const value_type* boost::unit_test::basic_cstring<CharT>::begin() const [with CharT = const char]	16	static
basic_cstring.hpp:506:1:const value_type* boost::unit_test::basic_cstring<CharT>::end() const [with CharT = const char]	16	static
gemv.cpp:276:1:cpp)	16	static
