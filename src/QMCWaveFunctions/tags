!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	Experimental/NoCuspFunctor.h	/^  real_type A, B, AB2;$/;"	m	struct:qmcplusplus::NoCuspFunctor
A	Fermion/BFsplineFunctor.h	/^  const TinyVector<real_type,16> A, dA, d2A, d3A;$/;"	m	struct:qmcplusplus::BFsplineFunctor
A	Fermion/determinant_update.h	/^  void *A, *Ainv, *newRow, *AinvDelta, *AinvColk, *gradLapl, *newGradLapl, *dummy;$/;"	m	struct:updateJob
A	Jastrow/BsplineFunctor.cpp	/^const double  BsplineFunctor<double>::A[16] =$/;"	m	class:qmcplusplus::BsplineFunctor	file:
A	Jastrow/BsplineFunctor.h	/^  const TinyVector<real_type,16> A, dA, d2A, d3A;$/;"	m	struct:qmcplusplus::BsplineFunctor
A	Jastrow/BsplineFunctor3D.h	/^  const TinyVector<real_type,16> A, dA, d2A, d3A;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
A	Jastrow/CompositeFunctor.h	/^  real_type A;$/;"	m	struct:qmcplusplus::TruncatedPadeFunctor
A	Jastrow/DerivPadeFunctors.h	/^  real_type A;$/;"	m	struct:qmcplusplus::D2PadeDB2Functor
A	Jastrow/DerivPadeFunctors.h	/^  real_type A;$/;"	m	struct:qmcplusplus::DPadeDBFunctor
A	Jastrow/GaussianFunctor.h	/^  real_type A, B, C, RC;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
A	Jastrow/GaussianFunctor.h	/^  real_type A;$/;"	m	struct:qmcplusplus::GaussianFunctor
A	Jastrow/McMillanJ2Functor.h	/^  real_type A;$/;"	m	struct:qmcplusplus::McMillanJ2Functor
A	Jastrow/McMillanJ2Functor.h	/^  real_type A;$/;"	m	struct:qmcplusplus::ModMcMillanJ2Functor
A	Jastrow/McMillanJ2Functor.h	/^  real_type A;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
A	Jastrow/McMillanJ2GFunctor.h	/^  real_type A, B, R0, c1, c2;$/;"	m	struct:qmcplusplus::McMillanJ2GFunctor
A	Jastrow/ModPadeFunctor.h	/^  real_type A;$/;"	m	struct:qmcplusplus::ModPadeFunctor
A	Jastrow/OpenGaussianSlaterFunctor.h	/^  real_type A;$/;"	m	struct:qmcplusplus::OpenGaussianSlaterFunctor
A	Jastrow/PadeFunctors.h	/^  real_type A, B, C, C2;$/;"	m	struct:qmcplusplus::Pade2ndOrderFunctor
A	Jastrow/PadeFunctors.h	/^  real_type A, B, C, D;$/;"	m	struct:qmcplusplus::PadeTwo2ndOrderFunctor
A	Jastrow/PadeFunctors.h	/^  real_type A, B, C;$/;"	m	struct:qmcplusplus::ScaledPadeFunctor
A	Jastrow/PadeFunctors.h	/^  real_type A;$/;"	m	struct:qmcplusplus::PadeFunctor
A	Jastrow/RPAJastrowFunctor.h	/^  real_type A, B, AB, ABB;$/;"	m	struct:qmcplusplus::RPAJastrowFunctor
A12	Jastrow/DerivPadeFunctors.h	/^  real_type A12;$/;"	m	struct:qmcplusplus::D2PadeDB2Functor
A2	Jastrow/DerivPadeFunctors.h	/^  real_type A2;$/;"	m	struct:qmcplusplus::D2PadeDB2Functor
A2	Jastrow/DerivPadeFunctors.h	/^  real_type A2;$/;"	m	struct:qmcplusplus::DPadeDBFunctor
A6	Jastrow/DerivPadeFunctors.h	/^  real_type A6;$/;"	m	struct:qmcplusplus::D2PadeDB2Functor
AB	Jastrow/CompositeFunctor.h	/^  real_type AB;$/;"	m	struct:qmcplusplus::TruncatedPadeFunctor
AB	Jastrow/PadeFunctors.h	/^  real_type AB;$/;"	m	struct:qmcplusplus::PadeFunctor
AB	Jastrow/RPAJastrowFunctor.h	/^  real_type A, B, AB, ABB;$/;"	m	struct:qmcplusplus::RPAJastrowFunctor
AB2	Experimental/NoCuspFunctor.h	/^  real_type A, B, AB2;$/;"	m	struct:qmcplusplus::NoCuspFunctor
ABB	Jastrow/RPAJastrowFunctor.h	/^  real_type A, B, AB, ABB;$/;"	m	struct:qmcplusplus::RPAJastrowFunctor
ACCEPT_TIMER	TrialWaveFunction.cpp	/^typedef enum { V_TIMER, VGL_TIMER, ACCEPT_TIMER, NL_TIMER,$/;"	e	enum:qmcplusplus::__anon33	file:
ACCEPT_TIMER	TrialWaveFunction_CUDA.cpp	/^typedef enum { V_TIMER, VGL_TIMER, ACCEPT_TIMER, NL_TIMER,$/;"	e	enum:qmcplusplus::__anon34	file:
AFMSPOBuilder	AFMSPOBuilder.cpp	/^AFMSPOBuilder::AFMSPOBuilder$/;"	f	class:qmcplusplus::AFMSPOBuilder
AFMSPOBuilder	AFMSPOBuilder.h	/^class AFMSPOBuilder : public BasisSetBuilder$/;"	c	namespace:qmcplusplus
AFMSPOSet	AFMSPOSet.h	/^  AFMSPOSet() : N(0), GSOrbitals(0), BasisOrbitals(0), theta(0), pm(1)$/;"	f	class:qmcplusplus::AFMSPOSet
AFMSPOSet	AFMSPOSet.h	/^  AFMSPOSet(int num_orbs, SPOSetBase *gsOrbs, SPOSetBase* basisOrbs):$/;"	f	class:qmcplusplus::AFMSPOSet
AFMSPOSet	AFMSPOSet.h	/^class AFMSPOSet : public SPOSetBase$/;"	c	namespace:qmcplusplus
AFM_SPO_BUILDER_H	AFMSPOBuilder.h	17;"	d
AFM_SPO_SET_H	AFMSPOSet.h	16;"	d
AGPDeterminant	AGPDeterminant.cpp	/^AGPDeterminant::AGPDeterminant(BasisSetType* bs):$/;"	f	class:qmcplusplus::AGPDeterminant
AGPDeterminant	AGPDeterminant.h	/^class AGPDeterminant: public OrbitalBase$/;"	c	namespace:qmcplusplus
AGPDeterminantBuilder	AGPDeterminantBuilder.cpp	/^AGPDeterminantBuilder::AGPDeterminantBuilder(ParticleSet& els, TrialWaveFunction& wfs,$/;"	f	class:qmcplusplus::AGPDeterminantBuilder
AGPDeterminantBuilder	AGPDeterminantBuilder.h	/^class AGPDeterminantBuilder: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
AIJ	Fermion/BackflowFunctionBase.h	/^  HessMatrix_t AIJ;$/;"	m	class:qmcplusplus::BackflowFunctionBase
AIJ_temp	Fermion/BackflowFunctionBase.h	/^  HessVector_t AIJ_temp;$/;"	m	class:qmcplusplus::BackflowFunctionBase
AList	Fermion/DiracDeterminantCUDA.h	/^  std::vector<CudaValueType*> srcList, destList, AList, AinvList, newRowList,$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
AList_d	Fermion/DiracDeterminantCUDA.h	/^  gpu::device_vector<CudaValueType*> srcList_d, destList_d, AList_d, AinvList_d, newRowList_d, $/;"	m	class:qmcplusplus::DiracDeterminantCUDA
AOffset	Fermion/DiracDeterminantCUDA.h	/^  size_t AOffset, AinvOffset, newRowOffset, AinvDeltaOffset,$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
APWRadius	MuffinTin.h	/^  double APWRadius, BlendRadius;$/;"	m	class:qmcplusplus::MuffinTinClass
ATOMIC_ORBITAL_CUDA_H	AtomicOrbitalCuda.h	16;"	d
ATOMIC_ORBITAL_H	AtomicOrbital.h	19;"	d
ATOMIC_POLY_JOB	AtomicOrbitalCuda.h	/^typedef enum { BSPLINE_3D_JOB, ATOMIC_POLY_JOB, ATOMIC_SPLINE_JOB } HybridJobType;$/;"	e	enum:__anon1
ATOMIC_SPLINE_JOB	AtomicOrbitalCuda.h	/^typedef enum { BSPLINE_3D_JOB, ATOMIC_POLY_JOB, ATOMIC_SPLINE_JOB } HybridJobType;$/;"	e	enum:__anon1
AWorkList	Fermion/DiracDeterminantCUDA.h	/^                              AWorkList, AinvWorkList, GLList;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
AWorkList_d	Fermion/DiracDeterminantCUDA.h	/^                                    newGradLaplList_d, AWorkList_d, AinvWorkList_d, GLList_d;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
AWorkOffset	Fermion/DiracDeterminantCUDA.h	/^         AWorkOffset, AinvWorkOffset;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
AccRejTimer	Fermion/MultiSlaterDeterminant.h	/^  NewTimer Ratio1Timer,Ratio1GradTimer,Ratio1AllTimer,AccRejTimer,evalOrbTimer;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
AccRejTimer	Fermion/MultiSlaterDeterminantFast.h	/^  NewTimer Ratio1Timer,Ratio1GradTimer,Ratio1AllTimer, AccRejTimer;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
ActiveBasis	OptimizableSPOSet.h	/^  std::vector<std::vector<TinyVector<int,2> > > ActiveBasis;$/;"	m	class:qmcplusplus::OptimizableSPOSet
ActivePtcl	BasisSetBase.h	/^  IndexType ActivePtcl;$/;"	m	struct:qmcplusplus::BasisSetBase
ActivePtcl	SPOSetBase.h	/^  IndexType ActivePtcl;$/;"	m	class:qmcplusplus::SPOSetBase
AdoptorName	EinsplineAdoptor.h	/^  std::string AdoptorName;$/;"	m	struct:qmcplusplus::SplineAdoptorBase
Ainv	Fermion/determinant_update.h	/^  void *A, *Ainv, *newRow, *AinvDelta, *AinvColk, *gradLapl, *newGradLapl, *dummy;$/;"	m	struct:updateJob
AinvColk	Fermion/determinant_update.h	/^  void *A, *Ainv, *newRow, *AinvDelta, *AinvColk, *gradLapl, *newGradLapl, *dummy;$/;"	m	struct:updateJob
AinvColkList	Fermion/DiracDeterminantCUDA.h	/^                              AinvDeltaList, AinvColkList, gradLaplList, newGradLaplList, $/;"	m	class:qmcplusplus::DiracDeterminantCUDA
AinvColkList_d	Fermion/DiracDeterminantCUDA.h	/^                                    AinvDeltaList_d, AinvColkList_d, gradLaplList_d, $/;"	m	class:qmcplusplus::DiracDeterminantCUDA
AinvColkOffset	Fermion/DiracDeterminantCUDA.h	/^         AinvColkOffset, gradLaplOffset, newGradLaplOffset, $/;"	m	class:qmcplusplus::DiracDeterminantCUDA
AinvDelta	Fermion/determinant_update.h	/^  void *A, *Ainv, *newRow, *AinvDelta, *AinvColk, *gradLapl, *newGradLapl, *dummy;$/;"	m	struct:updateJob
AinvDeltaList	Fermion/DiracDeterminantCUDA.h	/^                              AinvDeltaList, AinvColkList, gradLaplList, newGradLaplList, $/;"	m	class:qmcplusplus::DiracDeterminantCUDA
AinvDeltaList_d	Fermion/DiracDeterminantCUDA.h	/^                                    AinvDeltaList_d, AinvColkList_d, gradLaplList_d, $/;"	m	class:qmcplusplus::DiracDeterminantCUDA
AinvDeltaOffset	Fermion/DiracDeterminantCUDA.h	/^  size_t AOffset, AinvOffset, newRowOffset, AinvDeltaOffset,$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
AinvList	Fermion/DiracDeterminantCUDA.h	/^  std::vector<CudaValueType*> srcList, destList, AList, AinvList, newRowList,$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
AinvList_d	Fermion/DiracDeterminantCUDA.h	/^  gpu::device_vector<CudaValueType*> srcList_d, destList_d, AList_d, AinvList_d, newRowList_d, $/;"	m	class:qmcplusplus::DiracDeterminantCUDA
AinvOffset	Fermion/DiracDeterminantCUDA.h	/^  size_t AOffset, AinvOffset, newRowOffset, AinvDeltaOffset,$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
AinvWorkList	Fermion/DiracDeterminantCUDA.h	/^                              AWorkList, AinvWorkList, GLList;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
AinvWorkList_d	Fermion/DiracDeterminantCUDA.h	/^                                    newGradLaplList_d, AWorkList_d, AinvWorkList_d, GLList_d;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
AinvWorkOffset	Fermion/DiracDeterminantCUDA.h	/^         AWorkOffset, AinvWorkOffset;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
Ajk_sum	Fermion/DiracDeterminantWithBackflow.h	/^  HessMatrix_t Ajk_sum,Qmat;$/;"	m	class:qmcplusplus::DiracDeterminantWithBackflow
Ajk_sum	Fermion/MultiDiracDeterminantWithBackflow.h	/^  HessMatrix_t Ajk_sum,Qmat;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
Algo	Experimental/LCOrbitalSetWithCorrection.h	/^  int Algo;$/;"	m	class:qmcplusplus::LCOrbitalSetWithCorrection
Algo	LCOrbitalSet.h	/^  int Algo;$/;"	m	class:qmcplusplus::LCOrbitalSet
Amat	Fermion/BackflowTransformation.h	/^  HessMatrix_t Amat, Amat_temp;$/;"	m	class:qmcplusplus::BackflowTransformation
Amat_temp	Fermion/BackflowTransformation.h	/^  HessMatrix_t Amat, Amat_temp;$/;"	m	class:qmcplusplus::BackflowTransformation
AnalyticDiffOrbital	DiffOrbitalBase.h	/^  AnalyticDiffOrbital(OrbitalBase* orb=0): DiffOrbitalBase(orb)  { }$/;"	f	struct:qmcplusplus::AnalyticDiffOrbital
AnalyticDiffOrbital	DiffOrbitalBase.h	/^struct AnalyticDiffOrbital: public DiffOrbitalBase$/;"	s	namespace:qmcplusplus
AnalyzeTwists	Experimental/EinsplineSetBuilder.cpp	/^EinsplineSetBuilder::AnalyzeTwists()$/;"	f	class:qmcplusplus::EinsplineSetBuilder
AnalyzeTwists2	EinsplineSetBuilderCommon.cpp	/^EinsplineSetBuilder::AnalyzeTwists2()$/;"	f	class:qmcplusplus::EinsplineSetBuilder
AnalyzeTwists2	Experimental/EinsplineSetBuilder.cpp	/^EinsplineSetBuilder::AnalyzeTwists2()$/;"	f	class:qmcplusplus::EinsplineSetBuilder
Any2GridBuilder	Experimental/Any2GridBuilder.cpp	/^Any2GridBuilder::Any2GridBuilder(xmlNodePtr cur):$/;"	f	class:qmcplusplus::Any2GridBuilder
Any2GridBuilder	Experimental/Any2GridBuilder.h	/^struct Any2GridBuilder: public RGFBuilderBase$/;"	s	namespace:qmcplusplus
AnyConstraints	Jastrow/Experimental/AnyConstraints.cpp	/^AnyConstraints::AnyConstraints(ParticleSet& p, TrialWaveFunction& psi):$/;"	f	class:qmcplusplus::AnyConstraints
AnyConstraints	Jastrow/Experimental/AnyConstraints.h	/^struct AnyConstraints: public OrbitalConstraintsBase$/;"	s	namespace:qmcplusplus
AnyTimesRnFunctor	Jastrow/CompositeFunctor.h	/^  AnyTimesRnFunctor(OptimizableFunctorBase* infunc=0, int n=1):$/;"	f	struct:qmcplusplus::AnyTimesRnFunctor
AnyTimesRnFunctor	Jastrow/CompositeFunctor.h	/^struct AnyTimesRnFunctor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
AoptInv	Fermion/DiracDeterminantAFM.h	/^  ValueMatrix_t AoptInv;$/;"	m	class:qmcplusplus::DiracDeterminantAFM
AoptInv	Fermion/DiracDeterminantOpt.h	/^  ValueMatrix_t AoptInv;$/;"	m	class:qmcplusplus::DiracDeterminantOpt
AoverB	Jastrow/CompositeFunctor.h	/^  real_type AoverB;$/;"	m	struct:qmcplusplus::TruncatedPadeFunctor
AoverB	Jastrow/PadeFunctors.h	/^  real_type AoverB;$/;"	m	struct:qmcplusplus::PadeFunctor
Atom	MuffinTin.h	/^  int Atom;$/;"	m	class:qmcplusplus::MuffinTinClass
AtomicBasisBuilder	MolecularOrbitals/AtomicBasisBuilder.h	/^AtomicBasisBuilder<RFB>::AtomicBasisBuilder(const std::string& eName):$/;"	f	class:qmcplusplus::AtomicBasisBuilder
AtomicBasisBuilder	MolecularOrbitals/AtomicBasisBuilder.h	/^struct AtomicBasisBuilder: public BasisSetBuilder$/;"	s	namespace:qmcplusplus
AtomicOrbital	AtomicOrbital.h	/^  AtomicOrbital() : RadialSpline(NULL),$/;"	f	class:qmcplusplus::AtomicOrbital
AtomicOrbital	AtomicOrbital.h	/^class AtomicOrbital$/;"	c	namespace:qmcplusplus
AtomicOrbitalCuda	AtomicOrbitalCuda.h	/^class AtomicOrbitalCuda$/;"	c
AtomicOrbitalTraits	AtomicOrbital.h	/^template<> struct AtomicOrbitalTraits<double>$/;"	s	namespace:qmcplusplus
AtomicOrbitalTraits	AtomicOrbital.h	/^template<> struct AtomicOrbitalTraits<std::complex<double> >$/;"	s	namespace:qmcplusplus
AtomicOrbitalTraits	AtomicOrbital.h	/^template<typename StorageType>  struct AtomicOrbitalTraits {};$/;"	s	namespace:qmcplusplus
AtomicOrbitals	EinsplineSet.h	/^  std::vector<AtomicOrbital<StorageType> > AtomicOrbitals;$/;"	m	class:qmcplusplus::EinsplineSetExtended
AtomicOrbitals	EinsplineSetBuilder.h	/^  std::vector<AtomicOrbital<std::complex<double> > > AtomicOrbitals;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
AtomicOrbitals_GPU	EinsplineSet.h	/^  gpu::device_vector<AtomicOrbitalCuda<CudaRealType> > AtomicOrbitals_GPU;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
AtomicPolyCoefs_GPU	EinsplineSet.h	/^         AtomicPolyCoefs_GPU;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
AtomicPolyJob	EinsplineSet.h	/^struct AtomicPolyJob$/;"	s	namespace:qmcplusplus
AtomicSplineCoefs_GPU	EinsplineSet.h	/^  std::vector<gpu::device_vector<CudaRealType> > AtomicSplineCoefs_GPU,$/;"	m	class:qmcplusplus::EinsplineSetHybrid
AtomicSplineJob	EinsplineSet.h	/^struct AtomicSplineJob$/;"	s	namespace:qmcplusplus
B	Experimental/NoCuspFunctor.h	/^  real_type A, B, AB2;$/;"	m	struct:qmcplusplus::NoCuspFunctor
B	Jastrow/ChebyshevFunctor.h	/^  T B, L;$/;"	m	struct:ChebyshevFunctor
B	Jastrow/CompositeFunctor.h	/^  real_type B;$/;"	m	struct:qmcplusplus::TruncatedPadeFunctor
B	Jastrow/DerivPadeFunctors.h	/^  real_type B;$/;"	m	struct:qmcplusplus::D2PadeDB2Functor
B	Jastrow/DerivPadeFunctors.h	/^  real_type B;$/;"	m	struct:qmcplusplus::DPadeDBFunctor
B	Jastrow/Experimental/PadeConstraints.h	/^  RealType B;$/;"	m	struct:qmcplusplus::PadeConstraints
B	Jastrow/Experimental/PadeConstraints.h	/^  RealType B;$/;"	m	struct:qmcplusplus::ScaledPadeConstraints
B	Jastrow/GaussianFunctor.h	/^  real_type A, B, C, RC;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
B	Jastrow/McMillanJ2Functor.h	/^  real_type B;$/;"	m	struct:qmcplusplus::McMillanJ2Functor
B	Jastrow/McMillanJ2Functor.h	/^  real_type B;$/;"	m	struct:qmcplusplus::ModMcMillanJ2Functor
B	Jastrow/McMillanJ2Functor.h	/^  real_type B;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
B	Jastrow/McMillanJ2GFunctor.h	/^  real_type A, B, R0, c1, c2;$/;"	m	struct:qmcplusplus::McMillanJ2GFunctor
B	Jastrow/ModPadeFunctor.h	/^  real_type B;$/;"	m	struct:qmcplusplus::ModPadeFunctor
B	Jastrow/OpenGaussianSlaterFunctor.h	/^  real_type B;$/;"	m	struct:qmcplusplus::OpenGaussianSlaterFunctor
B	Jastrow/PadeFunctors.h	/^  real_type A, B, C, C2;$/;"	m	struct:qmcplusplus::Pade2ndOrderFunctor
B	Jastrow/PadeFunctors.h	/^  real_type A, B, C, D;$/;"	m	struct:qmcplusplus::PadeTwo2ndOrderFunctor
B	Jastrow/PadeFunctors.h	/^  real_type A, B, C;$/;"	m	struct:qmcplusplus::ScaledPadeFunctor
B	Jastrow/PadeFunctors.h	/^  real_type B;$/;"	m	struct:qmcplusplus::PadeFunctor
B	Jastrow/RPAJastrowFunctor.h	/^  real_type A, B, AB, ABB;$/;"	m	struct:qmcplusplus::RPAJastrowFunctor
B0	Jastrow/DerivWMFunctor.h	/^  real_type B0;$/;"	m	struct:qmcplusplus::D2WMDB2Functor
B0	Jastrow/DerivWMFunctor.h	/^  real_type B0;$/;"	m	struct:qmcplusplus::DWMDBFunctor
B0	Jastrow/PadeFunctors.h	/^  real_type B0;$/;"	m	struct:qmcplusplus::PadeFunctor
B0	Jastrow/WMFunctor.h	/^  real_type B0;$/;"	m	struct:qmcplusplus::WMFunctor
B2	Jastrow/CompositeFunctor.h	/^  real_type B2;$/;"	m	struct:qmcplusplus::TruncatedPadeFunctor
B2	Jastrow/DerivPadeFunctors.h	/^  real_type B2;$/;"	m	struct:qmcplusplus::D2PadeDB2Functor
B2	Jastrow/DerivPadeFunctors.h	/^  real_type B2;$/;"	m	struct:qmcplusplus::DPadeDBFunctor
B2	Jastrow/PadeFunctors.h	/^  real_type B2;$/;"	m	struct:qmcplusplus::PadeFunctor
B2	Jastrow/PadeFunctors.h	/^  real_type OneOverC, B2;$/;"	m	struct:qmcplusplus::ScaledPadeFunctor
BCType	EinsplineAdoptor.h	/^  typedef BCtype_c            BCType;$/;"	t	struct:qmcplusplus::einspline_traits
BCType	EinsplineAdoptor.h	/^  typedef BCtype_d            BCType;$/;"	t	struct:qmcplusplus::einspline_traits
BCType	EinsplineAdoptor.h	/^  typedef BCtype_s            BCType;$/;"	t	struct:qmcplusplus::einspline_traits
BCType	EinsplineAdoptor.h	/^  typedef BCtype_z            BCType;$/;"	t	struct:qmcplusplus::einspline_traits
BCType	EinsplineSet.h	/^  typedef BCtype_c BCType;$/;"	t	struct:qmcplusplus::MultiOrbitalTraits
BCType	EinsplineSet.h	/^  typedef BCtype_d BCType;$/;"	t	struct:qmcplusplus::MultiOrbitalTraits
BCType	EinsplineSet.h	/^  typedef BCtype_s BCType;$/;"	t	struct:qmcplusplus::MultiOrbitalTraits
BCType	EinsplineSet.h	/^  typedef BCtype_z BCType;$/;"	t	struct:qmcplusplus::MultiOrbitalTraits
BCType	EinsplineSet.h	/^  typedef typename MultiOrbitalTraits<StorageType,OHMMS_DIM>::BCType     BCType;$/;"	t	class:qmcplusplus::EinsplineSetExtended
BCType	Experimental/EinsplineAdoptorPacked.h	/^  typedef typename einspline_traits<real_type,D>::BCType               BCType;$/;"	t	struct:qmcplusplus::SplineC2RAdoptorPacked
BCType	Experimental/EinsplineAdoptorPacked.h	/^  typedef typename einspline_traits<real_type,D>::BCType          BCType;$/;"	t	struct:qmcplusplus::SplineC2CAdoptorPacked
BCType	Experimental/EinsplineMixedAdoptor.h	/^  typedef typename einspline_traits<ST,D>::BCType     BCType;$/;"	t	struct:qmcplusplus::SplineMixedAdoptor
BCType	Experimental/EinsplineMixedAdoptor.h	/^  typedef typename einspline_traits<ST,D>::BCType     BCType;$/;"	t	struct:qmcplusplus::SplineOpenAdoptor
BCType	Experimental/SplineOpenAdoptor.h	/^  typedef typename einspline_traits<ST,D>::BCType     BCType;$/;"	t	struct:qmcplusplus::SplineOpenAdoptor
BCType	SplineC2XAdoptor.h	/^  typedef typename einspline_traits<ST,D>::BCType      BCType;$/;"	t	struct:qmcplusplus::SplineC2CPackedAdoptor
BCType	SplineC2XAdoptor.h	/^  typedef typename einspline_traits<ST,D>::BCType      BCType;$/;"	t	struct:qmcplusplus::SplineC2RPackedAdoptor
BCType	SplineMixedAdoptor.h	/^  typedef typename einspline_traits<ST,D>::BCType     BCType;$/;"	t	struct:qmcplusplus::SplineMixedAdoptor
BCType	SplineMixedAdoptor.h	/^  typedef typename einspline_traits<ST,D>::BCType     BCType;$/;"	t	struct:qmcplusplus::SplineOpenAdoptor
BCType	SplineR2RAdoptor.h	/^  typedef typename einspline_traits<ST,D>::BCType     BCType;$/;"	t	struct:qmcplusplus::SplineR2RAdoptor
BFTrans	ElectronGas/ElectronGasOrbitalBuilder.h	/^  BackflowTransformation *BFTrans;$/;"	m	class:qmcplusplus::ElectronGasOrbitalBuilder
BFTrans	Fermion/BackflowBuilder.h	/^  BackflowTransformation* BFTrans;$/;"	m	class:qmcplusplus::BackflowBuilder
BFTrans	Fermion/DiracDeterminantWithBackflow.h	/^  BackflowTransformation *BFTrans;$/;"	m	class:qmcplusplus::DiracDeterminantWithBackflow
BFTrans	Fermion/MultiDiracDeterminantWithBackflow.h	/^  BackflowTransformation *BFTrans;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
BFTrans	Fermion/MultiSlaterDeterminantFast.h	/^  BackflowTransformation *BFTrans;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
BFTrans	Fermion/MultiSlaterDeterminantWithBackflow.h	/^  BackflowTransformation *BFTrans;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
BFTrans	Fermion/SlaterDetBuilder.h	/^  BackflowTransformation *BFTrans;$/;"	m	class:qmcplusplus::SlaterDetBuilder
BFTrans	Fermion/SlaterDetWithBackflow.h	/^  BackflowTransformation *BFTrans;$/;"	m	class:qmcplusplus::SlaterDetWithBackflow
BFsplineFunctor	Fermion/BFsplineFunctor.h	/^  BFsplineFunctor(real_type cusp=0.0) :$/;"	f	struct:qmcplusplus::BFsplineFunctor
BFsplineFunctor	Fermion/BFsplineFunctor.h	/^struct BFsplineFunctor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
BGContainerType	Jastrow/Experimental/AnyConstraints.h	/^  typedef std::map<std::string,BasisGroupType*> BGContainerType;$/;"	t	struct:qmcplusplus::AnyConstraints
BGContainerType	Jastrow/PolyConstraints.h	/^  typedef std::map<std::string,BasisGroupType*> BGContainerType;$/;"	t	struct:qmcplusplus::PolyConstraints
BGContainerType	Jastrow/WMJastrowBuilder.h	/^  typedef std::map<std::string,BasisGroupType*> BGContainerType;$/;"	t	class:qmcplusplus::WMJastrowBuilder
BIJ	Fermion/BackflowFunctionBase.h	/^  GradMatrix_t BIJ;$/;"	m	class:qmcplusplus::BackflowFunctionBase
BIJ_temp	Fermion/BackflowFunctionBase.h	/^  GradVector_t BIJ_temp;$/;"	m	class:qmcplusplus::BackflowFunctionBase
BSPLINE_3D_JOB	AtomicOrbitalCuda.h	/^typedef enum { BSPLINE_3D_JOB, ATOMIC_POLY_JOB, ATOMIC_SPLINE_JOB } HybridJobType;$/;"	e	enum:__anon1
BSPLINE_CELL_BIT	Spline3D/EinsplineSetTemp.hpp	/^  enum {BSPLINE_TWIST_BIT, BSPLINE_TYPE_BIT, BSPLINE_CELL_BIT};$/;"	e	enum:qmcplusplus::__anon27
BSPLINE_JASTROW_CUDA_H	Jastrow/BsplineJastrowCuda.h	15;"	d
BSPLINE_JASTROW_CUDA_PBC_H	Jastrow/BsplineJastrowCudaPBC.h	16;"	d
BSPLINE_TWIST_BIT	Spline3D/EinsplineSetTemp.hpp	/^  enum {BSPLINE_TWIST_BIT, BSPLINE_TYPE_BIT, BSPLINE_CELL_BIT};$/;"	e	enum:qmcplusplus::__anon27
BSPLINE_TYPE_BIT	Spline3D/EinsplineSetTemp.hpp	/^  enum {BSPLINE_TWIST_BIT, BSPLINE_TYPE_BIT, BSPLINE_CELL_BIT};$/;"	e	enum:qmcplusplus::__anon27
BackflowBuilder	Fermion/BackflowBuilder.cpp	/^BackflowBuilder::BackflowBuilder(ParticleSet& els, PtclPoolType& pool, TrialWaveFunction& psi)$/;"	f	class:qmcplusplus::BackflowBuilder
BackflowBuilder	Fermion/BackflowBuilder.h	/^class BackflowBuilder: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
BackflowFunctionBase	Fermion/BackflowFunctionBase.h	/^  BackflowFunctionBase(ParticleSet& ions, ParticleSet& els):$/;"	f	class:qmcplusplus::BackflowFunctionBase
BackflowFunctionBase	Fermion/BackflowFunctionBase.h	/^class BackflowFunctionBase \/\/: public OrbitalSetTraits<QMCTraits::ValueType>$/;"	c	namespace:qmcplusplus
BackflowTransformation	Fermion/BackflowTransformation.h	/^  BackflowTransformation(ParticleSet& els):$/;"	f	class:qmcplusplus::BackflowTransformation
BackflowTransformation	Fermion/BackflowTransformation.h	/^class BackflowTransformation  \/\/: public OrbitalSetTraits<QMCTraits::ValueType>$/;"	c	namespace:qmcplusplus
Backflow_eI	Fermion/Backflow_eI.h	/^  Backflow_eI(ParticleSet& ions, ParticleSet& els): BackflowFunctionBase(ions,els)$/;"	f	class:qmcplusplus::Backflow_eI
Backflow_eI	Fermion/Backflow_eI.h	/^  Backflow_eI(ParticleSet& ions, ParticleSet& els, FT* RF): BackflowFunctionBase(ions,els)$/;"	f	class:qmcplusplus::Backflow_eI
Backflow_eI	Fermion/Backflow_eI.h	/^class Backflow_eI: public BackflowFunctionBase$/;"	c	namespace:qmcplusplus
Backflow_eI_spin	Fermion/Backflow_eI_spin.h	/^  Backflow_eI_spin(ParticleSet& ions, ParticleSet& els)$/;"	f	class:qmcplusplus::Backflow_eI_spin
Backflow_eI_spin	Fermion/Backflow_eI_spin.h	/^class Backflow_eI_spin: public BackflowFunctionBase$/;"	c	namespace:qmcplusplus
Backflow_ee	Fermion/Backflow_ee.h	/^  Backflow_ee(ParticleSet& ions, ParticleSet& els): BackflowFunctionBase(ions,els),first(true) \/\/,RadFun(0)$/;"	f	class:qmcplusplus::Backflow_ee
Backflow_ee	Fermion/Backflow_ee.h	/^class Backflow_ee: public BackflowFunctionBase$/;"	c	namespace:qmcplusplus
Backflow_ee_kSpace	Fermion/Backflow_ee_kSpace.h	/^  Backflow_ee_kSpace(ParticleSet& ions, ParticleSet& els): BackflowFunctionBase(ions,els)$/;"	f	class:qmcplusplus::Backflow_ee_kSpace
Backflow_ee_kSpace	Fermion/Backflow_ee_kSpace.h	/^class Backflow_ee_kSpace: public BackflowFunctionBase$/;"	c	namespace:qmcplusplus
BandGroup	BandInfo.h	/^  int BandGroup;$/;"	m	struct:qmcplusplus::BandInfo
BandIndex	BandInfo.h	/^  int BandIndex;$/;"	m	struct:qmcplusplus::BandInfo
BandInfo	BandInfo.h	/^  BandInfo()$/;"	f	struct:qmcplusplus::BandInfo
BandInfo	BandInfo.h	/^struct BandInfo$/;"	s	namespace:qmcplusplus
BandInfoGroup	BandInfo.cpp	/^  BandInfoGroup::BandInfoGroup(): FirstSPO(0), NumSPOs(0), FirstBand(0) {}$/;"	f	class:qmcplusplus::BandInfoGroup
BandInfoGroup	BandInfo.h	/^struct BandInfoGroup$/;"	s	namespace:qmcplusplus
BaseN	SplineC2XAdoptor.h	/^  int BaseN[3];$/;"	m	struct:qmcplusplus::SplineC2CPackedAdoptor
BaseN	SplineC2XAdoptor.h	/^  int BaseN[3];$/;"	m	struct:qmcplusplus::SplineC2RPackedAdoptor
BaseN	SplineR2RAdoptor.h	/^  int BaseN[3];$/;"	m	struct:qmcplusplus::SplineR2RAdoptor
BaseOffset	SplineC2XAdoptor.h	/^  int BaseOffset[3];$/;"	m	struct:qmcplusplus::SplineC2CPackedAdoptor
BaseOffset	SplineC2XAdoptor.h	/^  int BaseOffset[3];$/;"	m	struct:qmcplusplus::SplineC2RPackedAdoptor
BaseOffset	SplineR2RAdoptor.h	/^  int BaseOffset[3];$/;"	m	struct:qmcplusplus::SplineR2RAdoptor
BasisGrad	AFMSPOSet.h	/^  GradVector_t  GSGrad, BasisGrad;$/;"	m	class:qmcplusplus::AFMSPOSet
BasisGrad	Fermion/DiracDeterminantAFM.h	/^  GradMatrix_t  BasisGrad, dgrad_dC, G_gamma;$/;"	m	class:qmcplusplus::DiracDeterminantAFM
BasisGrad	Fermion/DiracDeterminantOpt.h	/^  GradMatrix_t  BasisGrad, dgrad_dC, G_gamma;$/;"	m	class:qmcplusplus::DiracDeterminantOpt
BasisGrad	OptimizableSPOSet.h	/^  GradVector_t  GSGrad, BasisGrad;$/;"	m	class:qmcplusplus::OptimizableSPOSet
BasisGradMatrix	AFMSPOSet.h	/^  GradMatrix_t  GSGradMatrix, BasisGradMatrix;$/;"	m	class:qmcplusplus::AFMSPOSet
BasisGradMatrix	OptimizableSPOSet.h	/^  GradMatrix_t  GSGradMatrix, BasisGradMatrix;$/;"	m	class:qmcplusplus::OptimizableSPOSet
BasisGroupType	Jastrow/Experimental/AnyConstraints.h	/^    BasisGroupType():In_(0),Deriv_(0),Out_(0),NumGridPoints(81),Rcut(8.0),Cusp(0.0) {}$/;"	f	struct:qmcplusplus::AnyConstraints::BasisGroupType
BasisGroupType	Jastrow/Experimental/AnyConstraints.h	/^  struct BasisGroupType$/;"	s	struct:qmcplusplus::AnyConstraints
BasisGroupType	Jastrow/PolyConstraints.h	/^  typedef PolyFunctor<RealType> BasisGroupType;$/;"	t	struct:qmcplusplus::PolyConstraints
BasisGroupType	Jastrow/WMJastrowBuilder.h	/^    BasisGroupType():In_(0),Deriv_(0),Out_(0),NumGridPoints(81),Rcut(8.0),Cusp(0.0) {}$/;"	f	struct:qmcplusplus::WMJastrowBuilder::BasisGroupType
BasisGroupType	Jastrow/WMJastrowBuilder.h	/^  struct BasisGroupType$/;"	s	class:qmcplusplus::WMJastrowBuilder
BasisGroups	Jastrow/Experimental/AnyConstraints.h	/^  BGContainerType BasisGroups;$/;"	m	struct:qmcplusplus::AnyConstraints
BasisGroups	Jastrow/PolyConstraints.h	/^  BGContainerType BasisGroups;$/;"	m	struct:qmcplusplus::PolyConstraints
BasisGroups	Jastrow/WMJastrowBuilder.h	/^  BGContainerType BasisGroups;$/;"	m	class:qmcplusplus::WMJastrowBuilder
BasisLapl	AFMSPOSet.h	/^  ValueVector_t GSVal, BasisVal, GSLapl, BasisLapl;$/;"	m	class:qmcplusplus::AFMSPOSet
BasisLapl	Fermion/DiracDeterminantAFM.h	/^  ValueMatrix_t BasisVals, BasisLapl;$/;"	m	class:qmcplusplus::DiracDeterminantAFM
BasisLapl	Fermion/DiracDeterminantOpt.h	/^  ValueMatrix_t BasisVals, BasisLapl;$/;"	m	class:qmcplusplus::DiracDeterminantOpt
BasisLapl	OptimizableSPOSet.h	/^  ValueVector_t GSVal, BasisVal, GSLapl, BasisLapl;$/;"	m	class:qmcplusplus::OptimizableSPOSet
BasisLaplMatrix	AFMSPOSet.h	/^  ValueMatrix_t GSValMatrix, BasisValMatrix, GSLaplMatrix, BasisLaplMatrix, GradTmpSrc, GradTmpDest;$/;"	m	class:qmcplusplus::AFMSPOSet
BasisLaplMatrix	OptimizableSPOSet.h	/^  ValueMatrix_t GSValMatrix, BasisValMatrix, GSLaplMatrix, BasisLaplMatrix, GradTmpSrc, GradTmpDest;$/;"	m	class:qmcplusplus::OptimizableSPOSet
BasisName	Experimental/DetSetBuilderWithBasisSet.h	/^  std::string BasisName;$/;"	m	struct:qmcplusplus::DetSetBuilderWithBasisSet
BasisOffset	Experimental/CorrectingOrbitalBasisSet.h	/^  std::vector<int>  BasisOffset;$/;"	m	struct:qmcplusplus::CorrectingOrbitalBasisSet
BasisOffset	LocalizedBasisSet.h	/^  std::vector<int>  BasisOffset;$/;"	m	struct:qmcplusplus::LocalizedBasisSet
BasisOffset	SparseLocalizedBasisSet.h	/^  std::vector<int> BasisOffset;$/;"	m	struct:qmcplusplus::SparseLocalizedBasisSet
BasisOrbitals	AFMSPOSet.h	/^  SPOSetBase *GSOrbitals, *BasisOrbitals;$/;"	m	class:qmcplusplus::AFMSPOSet
BasisOrbitals	OptimizableSPOSet.h	/^  SPOSetBase *GSOrbitals, *BasisOrbitals;$/;"	m	class:qmcplusplus::OptimizableSPOSet
BasisSet	Experimental/GTOMolecularOrbitals.h	/^  BasisSetType*      BasisSet;$/;"	m	class:qmcplusplus::GTOMolecularOrbitals
BasisSet	Experimental/PlaneWaveOrbitalSet.h	/^  BasisSet_t* BasisSet;$/;"	m	class:qmcplusplus::PlaneWaveOrbitalSet
BasisSet	Experimental/STOMolecularOrbitals.h	/^  BasisSetType*      BasisSet;$/;"	m	class:qmcplusplus::STOMolecularOrbitals
BasisSet	Experimental/SlaterDeterminant.h	/^  BasisSet_t* BasisSet;$/;"	m	class:qmcplusplus::SlaterDeterminant
BasisSet	LCOrbitals.h	/^  BS* BasisSet;$/;"	m	class:qmcplusplus::LCOrbitals
BasisSetBase	BasisSetBase.h	/^  BasisSetBase():BasisSetSize(0), ActivePtcl(-1), Counter(0) { }$/;"	f	struct:qmcplusplus::BasisSetBase
BasisSetBase	BasisSetBase.h	/^struct BasisSetBase: public OrbitalSetTraits<T>$/;"	s	namespace:qmcplusplus
BasisSetBuilder	BasisSetBase.h	/^struct BasisSetBuilder: public QMCTraits, public MPIObjectBase$/;"	s	namespace:qmcplusplus
BasisSetBuilder	BasisSetBuilder.cpp	/^  BasisSetBuilder::BasisSetBuilder()$/;"	f	class:qmcplusplus::BasisSetBuilder
BasisSetBuilderPtr	FermionBase.h	/^  typedef BasisSetBuilder* BasisSetBuilderPtr;$/;"	t	struct:qmcplusplus::FermionBase
BasisSetFactory	BasisSetFactory.cpp	/^BasisSetFactory::BasisSetFactory(ParticleSet& els, TrialWaveFunction& psi, PtclPoolType& psets):$/;"	f	class:qmcplusplus::BasisSetFactory
BasisSetFactory	BasisSetFactory.h	/^class BasisSetFactory: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
BasisSetSize	BasisSetBase.h	/^  IndexType BasisSetSize;$/;"	m	struct:qmcplusplus::BasisSetBase
BasisSetSize	SPOSetBase.h	/^  IndexType BasisSetSize;$/;"	m	class:qmcplusplus::SPOSetBase
BasisSetSize	SphericalBasisSet.h	/^  IndexType BasisSetSize;$/;"	m	struct:qmcplusplus::SphericalBasisSet
BasisSetSize	SphericalOrbitalSet.h	/^  IndexType BasisSetSize;$/;"	m	struct:qmcplusplus::SphericalOrbitalSet
BasisSetType	AGPDeterminant.h	/^  typedef BasisSetBase<RealType> BasisSetType;$/;"	t	class:qmcplusplus::AGPDeterminant
BasisSetType	Experimental/CorrectingOrbitalBasisSet.h	/^  typedef BasisSetBase<typename COT::value_type> BasisSetType;$/;"	t	struct:qmcplusplus::CorrectingOrbitalBasisSet
BasisSetType	Experimental/GTOMolecularOrbitals.h	/^  typedef MolecularOrbitalBasis<CenteredOrbitalType> BasisSetType;$/;"	t	class:qmcplusplus::GTOMolecularOrbitals
BasisSetType	Experimental/STOMolecularOrbitals.h	/^  typedef MolecularOrbitalBasis<CenteredOrbitalType> BasisSetType;$/;"	t	class:qmcplusplus::STOMolecularOrbitals
BasisSetType	Jastrow/Experimental/WMConstraints.h	/^  typedef std::vector<BasisType*> BasisSetType;$/;"	t	struct:qmcplusplus::WMConstraints
BasisSetType	Jastrow/ThreeBodyBlockSparse.h	/^  typedef BasisSetBase<RealType> BasisSetType;$/;"	t	class:qmcplusplus::ThreeBodyBlockSparse
BasisSetType	Jastrow/ThreeBodyGeminal.h	/^  typedef BasisSetBase<RealType> BasisSetType;$/;"	t	class:qmcplusplus::ThreeBodyGeminal
BasisSetType	LocalizedBasisSet.h	/^  typedef BasisSetBase<typename COT::value_type> BasisSetType;$/;"	t	struct:qmcplusplus::LocalizedBasisSet
BasisSetType	SparseLocalizedBasisSet.h	/^  typedef BasisSetBase<typename COT::value_type> BasisSetType;$/;"	t	struct:qmcplusplus::SparseLocalizedBasisSet
BasisSet_t	AtomicOrbitals/HFAtomicSTOSet.h	/^  typedef DummyBasisSet                     BasisSet_t;$/;"	t	struct:qmcplusplus::HFAtomicSTOSet
BasisSet_t	AtomicOrbitals/HeSTOClementiRottie.h	/^  typedef DummyBasisSet                     BasisSet_t;$/;"	t	struct:qmcplusplus::HePresetHF
BasisSet_t	Experimental/PlaneWaveOrbitalSet.h	/^  typedef PlaneWaveBasis BasisSet_t;$/;"	t	class:qmcplusplus::PlaneWaveOrbitalSet
BasisSet_t	Experimental/SlaterDeterminant.h	/^  typedef typename SPOSet::BasisSet_t BasisSet_t;$/;"	t	class:qmcplusplus::SlaterDeterminant
BasisSet_t	LCOrbitals.h	/^  typedef BS                     BasisSet_t;$/;"	t	class:qmcplusplus::LCOrbitals
BasisSet_t	MixedSPOSet.h	/^  typedef typename LOType::BasisSet_t          BasisSet_t;$/;"	t	class:qmcplusplus::MixedSPOSet
BasisSet_t	PlaneWave/PWOrbitalSet.h	/^  typedef PWBasis                    BasisSet_t;$/;"	t	class:qmcplusplus::PWOrbitalSet
BasisSet_t	PlaneWave/PWRealOrbitalSet.h	/^  typedef PWBasis                    BasisSet_t;$/;"	t	class:qmcplusplus::PWRealOrbitalSet
BasisSize	AGPDeterminant.h	/^  int BasisSize;$/;"	m	class:qmcplusplus::AGPDeterminant
BasisSize	Jastrow/ThreeBodyBlockSparse.h	/^  int BasisSize;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
BasisSize	Jastrow/ThreeBodyGeminal.h	/^  int BasisSize;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
BasisSize	LCOrbitals.h	/^  int BasisSize;$/;"	m	class:qmcplusplus::LCOrbitals
BasisType	Jastrow/Experimental/WMConstraints.h	/^  typedef OptimizableFunctorBase<RealType>  BasisType;$/;"	t	struct:qmcplusplus::WMConstraints
BasisVal	AFMSPOSet.h	/^  ValueVector_t GSVal, BasisVal, GSLapl, BasisLapl;$/;"	m	class:qmcplusplus::AFMSPOSet
BasisVal	OptimizableSPOSet.h	/^  ValueVector_t GSVal, BasisVal, GSLapl, BasisLapl;$/;"	m	class:qmcplusplus::OptimizableSPOSet
BasisValMatrix	AFMSPOSet.h	/^  ValueMatrix_t GSValMatrix, BasisValMatrix, GSLaplMatrix, BasisLaplMatrix, GradTmpSrc, GradTmpDest;$/;"	m	class:qmcplusplus::AFMSPOSet
BasisValMatrix	OptimizableSPOSet.h	/^  ValueMatrix_t GSValMatrix, BasisValMatrix, GSLaplMatrix, BasisLaplMatrix, GradTmpSrc, GradTmpDest;$/;"	m	class:qmcplusplus::OptimizableSPOSet
BasisVals	Fermion/DiracDeterminantAFM.h	/^  ValueMatrix_t BasisVals, BasisLapl;$/;"	m	class:qmcplusplus::DiracDeterminantAFM
BasisVals	Fermion/DiracDeterminantOpt.h	/^  ValueMatrix_t BasisVals, BasisLapl;$/;"	m	class:qmcplusplus::DiracDeterminantOpt
BesselZero	Jastrow/BesselZeroFunctor.h	/^  BesselZero():R_B(1.0)$/;"	f	struct:qmcplusplus::BesselZero
BesselZero	Jastrow/BesselZeroFunctor.h	/^struct BesselZero: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
BigDataSet	Experimental/TricubicBsplineSetBuilder.cpp	/^map<std::string,TricubicBsplineSetBuilder::RSOType*> TricubicBsplineSetBuilder::BigDataSet;$/;"	m	class:qmcplusplus::TricubicBsplineSetBuilder	file:
BigDataSet	Experimental/TricubicBsplineSetBuilder.h	/^  static std::map<std::string,RSOType*> BigDataSet;$/;"	m	class:qmcplusplus::TricubicBsplineSetBuilder
BlendGradVector	EinsplineSet.h	/^  StorageGradVector_t BlendGradVector;$/;"	m	class:qmcplusplus::EinsplineSetExtended
BlendHessVector	EinsplineSet.h	/^  StorageHessVector_t  BlendHessVector;$/;"	m	class:qmcplusplus::EinsplineSetExtended
BlendLaplVector	EinsplineSet.h	/^  StorageValueVector_t BlendValueVector, BlendLaplVector;$/;"	m	class:qmcplusplus::EinsplineSetExtended
BlendRadius	MuffinTin.h	/^  double APWRadius, BlendRadius;$/;"	m	class:qmcplusplus::MuffinTinClass
BlendValueVector	EinsplineSet.h	/^  StorageValueVector_t BlendValueVector, BlendLaplVector;$/;"	m	class:qmcplusplus::EinsplineSetExtended
BlockID	Jastrow/ThreeBodyBlockSparse.h	/^  std::vector<IndexType> BlockID;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
BlockOffset	Jastrow/ThreeBodyBlockSparse.h	/^  std::vector<IndexType> BlockOffset;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
Blocks	Jastrow/ThreeBodyBlockSparse.h	/^  std::vector<IndexType> Blocks;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
BlocksPerGroup	Jastrow/ThreeBodyBlockSparse.h	/^  std::vector<IndexType> BlocksPerGroup;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
Bmat	Fermion/BackflowTransformation.h	/^  GradVector_t Bmat;$/;"	m	class:qmcplusplus::BackflowTransformation
Bmat_full	Fermion/BackflowTransformation.h	/^  GradMatrix_t Bmat_full, Bmat_temp;$/;"	m	class:qmcplusplus::BackflowTransformation
Bmat_temp	Fermion/BackflowTransformation.h	/^  GradMatrix_t Bmat_full, Bmat_temp;$/;"	m	class:qmcplusplus::BackflowTransformation
BoxDup	Experimental/TricubicBsplineSetBuilder.h	/^  TinyVector<IndexType,DIM> BoxDup;$/;"	m	class:qmcplusplus::TricubicBsplineSetBuilder
BoxDup	PlaneWave/PWParameterSet.h	/^  TinyVector<int,OHMMS_DIM> BoxDup;$/;"	m	struct:qmcplusplus::PWParameterSet
BoxGrid	Experimental/TricubicBsplineSetBuilder.h	/^  TinyVector<IndexType,DIM> BoxGrid;$/;"	m	class:qmcplusplus::TricubicBsplineSetBuilder
Bplus2	Jastrow/DerivWMFunctor.h	/^  real_type Bplus2;$/;"	m	struct:qmcplusplus::D2WMDB2Functor
Bplus2	Jastrow/DerivWMFunctor.h	/^  real_type Bplus2;$/;"	m	struct:qmcplusplus::DWMDBFunctor
Bplus3	Jastrow/DerivWMFunctor.h	/^  real_type Bplus3;$/;"	m	struct:qmcplusplus::D2WMDB2Functor
BroadcastOrbitalInfo	EinsplineSetBuilderCommon.cpp	/^EinsplineSetBuilder::BroadcastOrbitalInfo()$/;"	f	class:qmcplusplus::EinsplineSetBuilder
BroadcastOrbitalInfo	Experimental/EinsplineSetBuilder.cpp	/^EinsplineSetBuilder::BroadcastOrbitalInfo()$/;"	f	class:qmcplusplus::EinsplineSetBuilder
BspilneSetType	DistributedSPOSet.h	/^  typedef TricubicBsplineSPOSet<ValueType,true,false> BspilneSetType;$/;"	t	struct:qmcplusplus::DistributedSPOSet
Bspline3DSet	Experimental/Bspline3DSetTemp.h	/^  Bspline3DSet() { }$/;"	f	class:qmcplusplus::Bspline3DSet
Bspline3DSet	Experimental/Bspline3DSetTemp.h	/^  Bspline3DSet()$/;"	f	class:qmcplusplus::Bspline3DSet
Bspline3DSet	Experimental/Bspline3DSetTemp.h	/^class Bspline3DSet: public Bspline3DSetBase {};$/;"	c	namespace:qmcplusplus
Bspline3DSet	Experimental/Bspline3DSetTemp.h	/^class Bspline3DSet<false,false>: public Bspline3DSetBase$/;"	c	namespace:qmcplusplus
Bspline3DSet	Experimental/Bspline3DSetTemp.h	/^class Bspline3DSet<false,true>: public Bspline3DSetBase$/;"	c	namespace:qmcplusplus
Bspline3DSet	Experimental/Bspline3DSetTemp.h	/^class Bspline3DSet<true,false>: public Bspline3DSetBase$/;"	c	namespace:qmcplusplus
Bspline3DSet	Experimental/Bspline3DSetTemp.h	/^class Bspline3DSet<true,true>: public Bspline3DSetBase$/;"	c	namespace:qmcplusplus
Bspline3DSetBase	Experimental/Bspline3DSetBase.cpp	/^Bspline3DSetBase::Bspline3DSetBase(): Orthorhombic(true),NumOrbitals(0)$/;"	f	class:qmcplusplus::Bspline3DSetBase
Bspline3DSetBase	Experimental/Bspline3DSetBase.h	/^struct Bspline3DSetBase: public SPOSetBase$/;"	s	namespace:qmcplusplus
Bspline3DSet_Gen	Experimental/Bspline3DSet.h	/^  Bspline3DSet_Gen()$/;"	f	struct:qmcplusplus::Bspline3DSet_Gen
Bspline3DSet_Gen	Experimental/Bspline3DSet.h	/^struct Bspline3DSet_Gen: public Bspline3DSetBase$/;"	s	namespace:qmcplusplus
Bspline3DSet_Gen_Trunc	Experimental/Bspline3DSet.h	/^  Bspline3DSet_Gen_Trunc()$/;"	f	struct:qmcplusplus::Bspline3DSet_Gen_Trunc
Bspline3DSet_Gen_Trunc	Experimental/Bspline3DSet.h	/^struct Bspline3DSet_Gen_Trunc: public Bspline3DSetBase$/;"	s	namespace:qmcplusplus
Bspline3DSet_MLW	Experimental/Bspline3DSetTrunc.cpp	/^Bspline3DSet_MLW::Bspline3DSet_MLW()$/;"	f	class:qmcplusplus::Bspline3DSet_MLW
Bspline3DSet_MLW	Experimental/Bspline3DSetTrunc.h	/^struct Bspline3DSet_MLW: public Bspline3DSetBase$/;"	s	namespace:qmcplusplus
Bspline3DSet_Ortho	Experimental/Bspline3DSet.h	/^  Bspline3DSet_Ortho() {}$/;"	f	struct:qmcplusplus::Bspline3DSet_Ortho
Bspline3DSet_Ortho	Experimental/Bspline3DSet.h	/^struct Bspline3DSet_Ortho: public Bspline3DSetBase$/;"	s	namespace:qmcplusplus
Bspline3DSet_Ortho_Trunc	Experimental/Bspline3DSet.h	/^  Bspline3DSet_Ortho_Trunc() {}$/;"	f	struct:qmcplusplus::Bspline3DSet_Ortho_Trunc
Bspline3DSet_Ortho_Trunc	Experimental/Bspline3DSet.h	/^struct Bspline3DSet_Ortho_Trunc: public Bspline3DSetBase$/;"	s	namespace:qmcplusplus
Bspline3DSet_Twist	Experimental/Bspline3DSet.h	/^  Bspline3DSet_Twist()$/;"	f	struct:qmcplusplus::Bspline3DSet_Twist
Bspline3DSet_Twist	Experimental/Bspline3DSet.h	/^struct Bspline3DSet_Twist: public Bspline3DSetBase$/;"	s	namespace:qmcplusplus
BsplineAOBuilder	MolecularOrbitals/BsplineAOBuilder.cpp	/^BsplineAOBuilder::BsplineAOBuilder(xmlNodePtr cur): m_orbitals(0)$/;"	f	class:qmcplusplus::BsplineAOBuilder
BsplineAOBuilder	MolecularOrbitals/BsplineAOBuilder.h	/^class BsplineAOBuilder: public QMCTraits$/;"	c	namespace:qmcplusplus
BsplineBasisType	Experimental/TricubicBsplineSetBuilder.h	/^  typedef Bspline3DSetBase              BsplineBasisType;$/;"	t	class:qmcplusplus::TricubicBsplineSetBuilder
BsplineClass_2d_d	legacy/EinsplineWrapper.h	/^class BsplineClass_2d_d$/;"	c	namespace:qmcplusplus
BsplineClass_2d_z	legacy/EinsplineWrapper.h	/^class BsplineClass_2d_z$/;"	c	namespace:qmcplusplus
BsplineFunctor	Jastrow/BsplineFunctor.h	/^  BsplineFunctor(real_type cusp=0.0) :$/;"	f	struct:qmcplusplus::BsplineFunctor
BsplineFunctor	Jastrow/BsplineFunctor.h	/^struct BsplineFunctor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
BsplineFunctor3D	Jastrow/BsplineFunctor3D.h	/^  BsplineFunctor3D(real_type ecusp=0.0, real_type icusp=0.0) :$/;"	f	struct:qmcplusplus::BsplineFunctor3D
BsplineFunctor3D	Jastrow/BsplineFunctor3D.h	/^struct BsplineFunctor3D: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
BsplineGradLapl_CPU	EinsplineSet.h	/^  gpu::host_vector<CudaStorageType*> BsplineVals_CPU, BsplineGradLapl_CPU;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
BsplineGradLapl_GPU	EinsplineSet.h	/^  gpu::device_vector<CudaStorageType*> BsplineVals_GPU, BsplineGradLapl_GPU;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
BsplineInitializer	Jastrow/BsplineJastrowBuilder.cpp	/^struct BsplineInitializer$/;"	s	namespace:qmcplusplus	file:
BsplineJastrowBuilder	Jastrow/BsplineJastrowBuilder.h	/^  BsplineJastrowBuilder(ParticleSet& target, TrialWaveFunction& psi) :$/;"	f	struct:qmcplusplus::BsplineJastrowBuilder
BsplineJastrowBuilder	Jastrow/BsplineJastrowBuilder.h	/^  BsplineJastrowBuilder(ParticleSet& target, TrialWaveFunction& psi,$/;"	f	struct:qmcplusplus::BsplineJastrowBuilder
BsplineJastrowBuilder	Jastrow/BsplineJastrowBuilder.h	/^struct BsplineJastrowBuilder: public OrbitalBuilderBase$/;"	s	namespace:qmcplusplus
BsplinePos_CPU	EinsplineSet.h	/^  gpu::host_vector<CudaRealType> BsplinePos_CPU;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
BsplinePos_GPU	EinsplineSet.h	/^  gpu::device_vector<CudaRealType> BsplinePos_GPU;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
BsplineReaderBase	BsplineReaderBase.cpp	/^  BsplineReaderBase::BsplineReaderBase(EinsplineSetBuilder* e)$/;"	f	class:qmcplusplus::BsplineReaderBase
BsplineReaderBase	BsplineReaderBase.h	/^struct BsplineReaderBase$/;"	s	namespace:qmcplusplus
BsplineReaderBase	legacy/SplineAdoptorReader.h	/^  BsplineReaderBase(EinsplineSetBuilder* e):mybuilder(e)$/;"	f	struct:qmcplusplus::BsplineReaderBase
BsplineReaderBase	legacy/SplineAdoptorReader.h	/^struct BsplineReaderBase$/;"	s	namespace:qmcplusplus
BsplineSet	EinsplineAdoptor.h	/^struct BsplineSet: public SPOSetBase, public SplineAdoptor$/;"	s	namespace:qmcplusplus
BsplineVals_CPU	EinsplineSet.h	/^  gpu::host_vector<CudaStorageType*> BsplineVals_CPU, BsplineGradLapl_CPU;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
BsplineVals_GPU	EinsplineSet.h	/^  gpu::device_vector<CudaStorageType*> BsplineVals_GPU, BsplineGradLapl_GPU;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
BufferCursor	TrialWaveFunction.h	/^  size_t BufferCursor;$/;"	m	class:qmcplusplus::TrialWaveFunction
BufferCursor_DP	TrialWaveFunction.h	/^  size_t BufferCursor_DP;$/;"	m	class:qmcplusplus::TrialWaveFunction
BufferLayer	EinsplineSetBuilder.h	/^  RealType BufferLayer;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
BufferRadius	PlaneWave/PWParameterSet.h	/^  double BufferRadius;$/;"	m	struct:qmcplusplus::PWParameterSet
BufferTimer	Fermion/DiracDeterminantBase.h	/^  NewTimer UpdateTimer, RatioTimer, InverseTimer, BufferTimer, SPOVTimer, SPOVGLTimer;$/;"	m	class:qmcplusplus::DiracDeterminantBase
BufferType	DistributedSPOSet.h	/^  typedef PooledBuffer<RealType> BufferType;$/;"	t	struct:qmcplusplus::DistributedSPOSet
BufferType	OrbitalBase.h	/^  typedef PooledData<RealType>      BufferType;$/;"	t	struct:qmcplusplus::OrbitalBase
BufferType	TrialWaveFunction.h	/^  typedef OrbitalBase::BufferType         BufferType;$/;"	t	class:qmcplusplus::TrialWaveFunction
BuildDotProducts	Fermion/ExcitationClass.h	/^  void BuildDotProducts(ValueMatrix_t &gs_inverse,ValueMatrix_t &psiM_actual)$/;"	f	class:qmcplusplus::ExcitationClass
BuildDotProductsAndCalculateRatios	Fermion/MultiDiracDeterminantBase.h	/^  inline void BuildDotProductsAndCalculateRatios(int ref, int iat, GradMatrix_t& ratios, ValueMatrix_t& psiinv, ValueMatrix_t& psi, ValueMatrix_t& dotProducts, std::vector<int>& data, std::vector<std::pair<int,int> >& pairs, std::vector<RealType>& sign, int dx)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
BuildDotProductsAndCalculateRatios	Fermion/MultiDiracDeterminantBase.h	/^  inline void BuildDotProductsAndCalculateRatios(int ref, int iat, ValueMatrix_t& ratios, ValueMatrix_t& psiinv, ValueMatrix_t& psi, ValueMatrix_t& dotProducts, std::vector<int>& data, std::vector<std::pair<int,int> >& pairs, std::vector<RealType>& sign)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
BuildDotProductsAndCalculateRatios	Fermion/MultiDiracDeterminantBase.h	/^  inline void BuildDotProductsAndCalculateRatios(int ref, int iat, ValueVector_t& ratios, ValueMatrix_t &psiinv, ValueMatrix_t &psi, ValueMatrix_t& dotProducts, std::vector<int>& data, std::vector<std::pair<int,int> >& pairs, std::vector<RealType>& sign)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
BuildDotProductsAndCalculateRatios	Fermion/MultiDiracDeterminantWithBackflow.h	/^  inline void BuildDotProductsAndCalculateRatios(int ref, int iat, GradMatrix_t& ratios, ValueMatrix_t& psiinv, ValueMatrix_t& psi, ValueMatrix_t& dotProducts, std::vector<int>& data, std::vector<std::pair<int,int> >& pairs, std::vector<double>& sign, int dx)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
BuildDotProductsAndCalculateRatios	Fermion/MultiDiracDeterminantWithBackflow.h	/^  inline void BuildDotProductsAndCalculateRatios(int ref, int iat, ValueMatrix_t& ratios, ValueMatrix_t& psiinv, ValueMatrix_t& psi, ValueMatrix_t& dotProducts, std::vector<int>& data, std::vector<std::pair<int,int> >& pairs, std::vector<double>& sign)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
BuildDotProductsAndCalculateRatios	Fermion/MultiDiracDeterminantWithBackflow.h	/^  inline void BuildDotProductsAndCalculateRatios(int ref, int iat, ValueVector_t& ratios, ValueMatrix_t &psiinv, ValueMatrix_t &psi, ValueMatrix_t& dotProducts, std::vector<int>& data, std::vector<std::pair<int,int> >& pairs, std::vector<double>& sign)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
BuildDotProducts_grad	Fermion/ExcitationClass.h	/^  void BuildDotProducts_grad(ValueMatrix_t &gs_inverse,ValueMatrix_t &psiM_actual,GradMatrix_t &dpsiM_actual, GradVector_t &op2,GradType one_over_ratio,int WorkingIndex)$/;"	f	class:qmcplusplus::ExcitationClass
BuildDotProducts_lapl	Fermion/ExcitationClass.h	/^  void BuildDotProducts_lapl(ValueMatrix_t &gs_inverse,ValueMatrix_t &psiM_actual,ValueMatrix_t &dpsiM_actual, ValueVector_t &op2,GradType one_over_ratio,int WorkingIndex)$/;"	f	class:qmcplusplus::ExcitationClass
BuildRecursionCoefs	Experimental/PlaneWaveBasis.h	/^  void BuildRecursionCoefs(Matrix<std::complex<RealType> > &C, const ParticleSet &P,$/;"	f	class:qmcplusplus::PlaneWaveBasis
BuildRecursionCoefs	PlaneWave/PWBasis.h	/^  inline void BuildRecursionCoefs(const PosType& pos)$/;"	f	class:qmcplusplus::PWBasis
C	AtomicOrbitals/HFAtomicSTOSet.h	/^  std::vector<T> C;$/;"	m	struct:qmcplusplus::ComboSTO
C	AtomicOrbitals/HeSTOClementiRottie.h	/^  TinyVector<RealType,N> C;$/;"	m	struct:qmcplusplus::HePresetHF
C	Experimental/CuspCorr.h	/^  RealType Rc_init,Rc,C,sg,Z,valAtZero,valAtRc,Rc_max;$/;"	m	class:qmcplusplus::CuspCorr
C	Fermion/MultiSlaterDeterminant.h	/^  std::vector<RealType> C;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
C	Fermion/MultiSlaterDeterminantFast.h	/^  std::vector<RealType> C;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
C	Jastrow/Experimental/PadeConstraints.h	/^  RealType C;$/;"	m	struct:qmcplusplus::ScaledPadeConstraints
C	Jastrow/GaussianFunctor.h	/^  real_type A, B, C, RC;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
C	Jastrow/GaussianFunctor.h	/^  real_type C;$/;"	m	struct:qmcplusplus::GaussianFunctor
C	Jastrow/LinearCombinationFunctor.h	/^  std::vector<real_type> C;$/;"	m	struct:LinearCombinationFunctor
C	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> C;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
C	Jastrow/PadeFunctors.h	/^  real_type A, B, C, C2;$/;"	m	struct:qmcplusplus::Pade2ndOrderFunctor
C	Jastrow/PadeFunctors.h	/^  real_type A, B, C, D;$/;"	m	struct:qmcplusplus::PadeTwo2ndOrderFunctor
C	Jastrow/PadeFunctors.h	/^  real_type A, B, C;$/;"	m	struct:qmcplusplus::ScaledPadeFunctor
C	Jastrow/PolyFunctor.h	/^  std::vector<T> C;$/;"	m	struct:qmcplusplus::PolyFunctor
C	Jastrow/PolynomialFunctor3D.h	/^  const int C;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
C	Jastrow/ThreeBodyJastrowOrbital.h	/^  Array<RealType,3> C;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
C	Jastrow/ThreeBodyPade.h	/^  std::vector<Coeff> C;$/;"	m	class:qmcplusplus::ThreeBodyPade
C	LCOrbitals.h	/^  Matrix<ValueType> C;$/;"	m	class:qmcplusplus::LCOrbitals
C	PlaneWave/PWBasis.h	/^  Matrix<ComplexType> C;$/;"	m	class:qmcplusplus::PWBasis
C	SPOSetBase.h	/^  ValueMatrix_t C;$/;"	m	class:qmcplusplus::SPOSetBase
C2	Jastrow/PadeFunctors.h	/^  real_type A, B, C, C2;$/;"	m	struct:qmcplusplus::Pade2ndOrderFunctor
C2node_dn	Fermion/MultiSlaterDeterminant.h	/^  std::vector<int> C2node_dn;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
C2node_dn	Fermion/MultiSlaterDeterminantFast.h	/^  std::vector<int> C2node_dn;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
C2node_up	Fermion/MultiSlaterDeterminant.h	/^  std::vector<int> C2node_up;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
C2node_up	Fermion/MultiSlaterDeterminantFast.h	/^  std::vector<int> C2node_up;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
CARTESIAN_EXPAND	MolecularOrbitals/AtomicBasisBuilder.h	/^  enum {DONOT_EXPAND=0, GAUSSIAN_EXPAND=1, NATURAL_EXPAND, CARTESIAN_EXPAND, MOD_NATURAL_EXPAND};$/;"	e	enum:qmcplusplus::AtomicBasisBuilder::__anon16
CBSOBuilder	Jastrow/CBSOBuilder.cpp	/^CBSOBuilder::CBSOBuilder(xmlNodePtr cur):$/;"	f	class:qmcplusplus::CBSOBuilder
CBSOBuilder	Jastrow/CBSOBuilder.h	/^class CBSOBuilder: public QMCTraits$/;"	c	namespace:qmcplusplus
CC	PlaneWave/PWRealOrbitalSet.h	/^  Matrix<ComplexType> CC;$/;"	m	class:qmcplusplus::PWRealOrbitalSet
COT	Experimental/LCOrbitalSetWithCorrection.h	/^  typedef typename NGOBuilder::CenteredOrbitalType COT;$/;"	t	class:qmcplusplus::LCOrbitalSetWithCorrection
COT	MolecularOrbitals/AtomicBasisBuilder.h	/^  typedef typename RFB::CenteredOrbitalType COT;$/;"	t	struct:qmcplusplus::AtomicBasisBuilder
COT	MolecularOrbitals/MolecularBasisBuilder.h	/^  typedef typename RFB::CenteredOrbitalType COT;$/;"	t	class:qmcplusplus::MolecularBasisBuilder
CRYSTAL	Jastrow/kSpaceJastrow.h	/^  typedef enum { CRYSTAL, ISOTROPIC, NOSYMM } SymmetryType;$/;"	e	enum:qmcplusplus::kSpaceJastrow::__anon15
CSFcoeff	Fermion/MultiSlaterDeterminant.h	/^  std::vector<RealType> CSFcoeff;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
CSFcoeff	Fermion/MultiSlaterDeterminantFast.h	/^  std::vector<RealType> CSFcoeff;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
CSFexpansion	Fermion/MultiSlaterDeterminant.h	/^  std::vector<RealType> CSFexpansion;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
CSFexpansion	Fermion/MultiSlaterDeterminantFast.h	/^  std::vector<RealType> CSFexpansion;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
CUDA_DETERMINANT_UPDATE_H	Fermion/determinant_update.h	15;"	d
CUDA_SPLINE_H	Jastrow/CudaSpline.h	16;"	d
C_0	Jastrow/BesselZeroFunctor.h	/^  real_type C_0,C_0inv;$/;"	m	struct:qmcplusplus::BesselZero
C_0inv	Jastrow/BesselZeroFunctor.h	/^  real_type C_0,C_0inv;$/;"	m	struct:qmcplusplus::BesselZero
CachedPos	OptimizableSPOSet.h	/^  std::vector<PosType> CachedPos;$/;"	m	class:qmcplusplus::OptimizableSPOSet
CalcDoubleExcitations	Fermion/ExcitationClass.h	/^  void CalcDoubleExcitations(ValueVector_t &coefs,ValueType &val,int &coefIndex)$/;"	f	class:qmcplusplus::ExcitationClass
CalcDoubleExcitations_grad	Fermion/ExcitationClass.h	/^  void CalcDoubleExcitations_grad(ValueVector_t &coefs,GradType &val,int &coefIndex)$/;"	f	class:qmcplusplus::ExcitationClass
CalcDoubleExcitations_lapl	Fermion/ExcitationClass.h	/^  void CalcDoubleExcitations_lapl(ValueVector_t &coefs,GradType &val,int &coefIndex)$/;"	f	class:qmcplusplus::ExcitationClass
CalcSingleExcitations	Fermion/ExcitationClass.h	/^  void CalcSingleExcitations(ValueVector_t &coefs,ValueType &val,int &coefIndex)$/;"	f	class:qmcplusplus::ExcitationClass
CalcSingleExcitations_grad	Fermion/ExcitationClass.h	/^  void CalcSingleExcitations_grad(ValueVector_t &coefs, GradType &val,int &coefIndex)$/;"	f	class:qmcplusplus::ExcitationClass
CalcSingleExcitations_lapl	Fermion/ExcitationClass.h	/^  void CalcSingleExcitations_lapl(ValueVector_t &coefs, GradType &val,int &coefIndex)$/;"	f	class:qmcplusplus::ExcitationClass
CalcYlm	AtomicOrbital.h	/^AtomicOrbital<StorageType>::CalcYlm (PosType rhat,$/;"	f	class:qmcplusplus::AtomicOrbital
CalculateRatioFromMatrixElements	Fermion/MultiDiracDeterminantBase.h	/^  inline ValueType CalculateRatioFromMatrixElements(int n, ValueMatrix_t& dotProducts, std::vector<int>::iterator it)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
CalculateRatioFromMatrixElements	Fermion/MultiDiracDeterminantWithBackflow.h	/^  inline ValueType CalculateRatioFromMatrixElements(int n, ValueMatrix_t& dotProducts, std::vector<int>::iterator it)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
CanNotChange	Jastrow/LinearCombinationFunctor.h	/^  std::vector<bool> CanNotChange;$/;"	m	struct:LinearCombinationFunctor
CartesianHarmonics_t	SphericalBasisSet.h	/^  typedef CartesianTensor<RealType,PosType>          CartesianHarmonics_t;$/;"	t	struct:qmcplusplus::SphericalBasisSet
CellVolume	Jastrow/LRTwoBodyJastrow.h	/^  RealType CellVolume;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
CellVolume	Jastrow/kSpaceJastrow.h	/^  RealType CellVolume, NormConstant;$/;"	m	class:qmcplusplus::kSpaceJastrow
Center	Experimental/TricubicBsplineSetBuilder.h	/^    PosType Center;$/;"	m	struct:qmcplusplus::TricubicBsplineSetBuilder::RSOType
Center	MuffinTin.h	/^  TinyVector<double,3> Center;$/;"	m	class:qmcplusplus::MuffinTinClass
Center	Spline3D/SplineGridHandler.h	/^  pos_type Center;$/;"	m	struct:qmcplusplus::SplineGridHandler
CenterFirst	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  std::vector<int> CenterFirst, CenterLast;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
CenterID	Experimental/GTOMolecularOrbitals.h	/^  std::map<std::string,int>    CenterID;$/;"	m	class:qmcplusplus::GTOMolecularOrbitals
CenterID	Experimental/STOMolecularOrbitals.h	/^  std::map<std::string,int>    CenterID;$/;"	m	class:qmcplusplus::STOMolecularOrbitals
CenterLast	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  std::vector<int> CenterFirst, CenterLast;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
CenterRef	IonOrbital.h	/^  ParticleSet &CenterRef, &PtclRef;$/;"	m	struct:qmcplusplus::IonOrbital
CenterRef	Jastrow/DiffOneBodyJastrowOrbital.h	/^  const ParticleSet& CenterRef;$/;"	m	class:qmcplusplus::DiffOneBodyJastrowOrbital
CenterRef	Jastrow/DiffOneBodySpinJastrowOrbital.h	/^  const ParticleSet& CenterRef;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
CenterRef	Jastrow/OneBodyJastrowOrbital.h	/^  const ParticleSet& CenterRef;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbital
CenterRef	Jastrow/OneBodySpinJastrowOrbital.h	/^  const ParticleSet& CenterRef;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
CenterRef	Jastrow/ThreeBodyBlockSparse.h	/^  const ParticleSet& CenterRef;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
CenterRef	Jastrow/ThreeBodyGeminal.h	/^  const ParticleSet& CenterRef;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
CenterRef	Jastrow/ThreeBodyJastrowOrbital.h	/^  const ParticleSet& CenterRef;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
CenterRef	SparseLocalizedBasisSet.h	/^  const ParticleSet& CenterRef;$/;"	m	struct:qmcplusplus::SparseLocalizedBasisSet
CenterSys	Experimental/CorrectingOrbitalBasisSet.h	/^  const ParticleSet& CenterSys;$/;"	m	struct:qmcplusplus::CorrectingOrbitalBasisSet
CenterSys	Fermion/BackflowFunctionBase.h	/^  ParticleSet& CenterSys;$/;"	m	class:qmcplusplus::BackflowFunctionBase
CenterSys	LocalizedBasisSet.h	/^  const ParticleSet& CenterSys;$/;"	m	struct:qmcplusplus::LocalizedBasisSet
CenteredOrbitalType	Experimental/GTOMolecularOrbitals.h	/^  typedef SphericalOrbitalSet<RadialOrbitalType>     CenteredOrbitalType;$/;"	t	class:qmcplusplus::GTOMolecularOrbitals
CenteredOrbitalType	Experimental/STOMolecularOrbitals.h	/^  typedef SphericalOrbitalSet<RadialOrbitalType>     CenteredOrbitalType;$/;"	t	class:qmcplusplus::STOMolecularOrbitals
CenteredOrbitalType	Jastrow/CBSOBuilder.h	/^  typedef SphericalBasisSet<RadialOrbitalType>         CenteredOrbitalType;$/;"	t	class:qmcplusplus::CBSOBuilder
CenteredOrbitalType	MolecularOrbitals/BsplineAOBuilder.h	/^  typedef SphericalBasisSet<RadialOrbitalType>     CenteredOrbitalType;$/;"	t	class:qmcplusplus::BsplineAOBuilder
CenteredOrbitalType	MolecularOrbitals/GTOBuilder.h	/^  typedef SphericalBasisSet<RadialOrbitalType>     CenteredOrbitalType;$/;"	t	class:qmcplusplus::GTOBuilder
CenteredOrbitalType	MolecularOrbitals/NGOBuilder.h	/^  typedef SphericalBasisSet<RadialOrbitalType,GridType> CenteredOrbitalType;$/;"	t	class:qmcplusplus::NGOBuilder
CenteredOrbitalType	MolecularOrbitals/STOBuilder.h	/^  typedef SphericalBasisSet<RadialOrbitalType>     CenteredOrbitalType;$/;"	t	class:qmcplusplus::STOBuilder
Centers	Experimental/Bspline3DSetBase.h	/^  std::vector<PosType> Centers;$/;"	m	struct:qmcplusplus::Bspline3DSetBase
ChebyshevFunctor	Jastrow/ChebyshevFunctor.h	/^  ChebyshevFunctor() { }$/;"	f	struct:ChebyshevFunctor
ChebyshevFunctor	Jastrow/ChebyshevFunctor.h	/^struct ChebyshevFunctor$/;"	s
CheckAlign	Fermion/DiracDeterminantCUDA.cpp	/^void CheckAlign (void *p, std::string var)$/;"	f	namespace:qmcplusplus
CheckLattice	EinsplineSetBuilderCommon.cpp	/^EinsplineSetBuilder::CheckLattice()$/;"	f	class:qmcplusplus::EinsplineSetBuilder
CheckLattice	Experimental/EinsplineSetBuilder.cpp	/^EinsplineSetBuilder::CheckLattice()$/;"	f	class:qmcplusplus::EinsplineSetBuilder
ChiesaKEcorrection	Jastrow/TwoBodyJastrowOrbital.h	/^  RealType ChiesaKEcorrection()$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
ChiesaKEcorrection	Jastrow/eeI_JastrowOrbital.h	/^  RealType ChiesaKEcorrection()$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
Children	OrbitalBuilderBase.h	/^  std::vector<OrbitalBuilderBase*> Children;$/;"	m	class:qmcplusplus::OrbitalBuilderBase
ChooseNearbyParticles	Fermion/DiracDeterminantTruncation.cpp	/^DiracDeterminantTruncation::ChooseNearbyParticles(int ptcl,std::list<int> &closePtcls)$/;"	f	class:qmcplusplus::DiracDeterminantTruncation
Cmat	Fermion/BackflowTransformation.h	/^  GradMatrix_t Cmat;$/;"	m	class:qmcplusplus::BackflowTransformation
Coeff	Jastrow/ModPadeFunctor.h	/^  real_type Coeff;$/;"	m	struct:qmcplusplus::ModPadeFunctor
Coeff	Jastrow/ThreeBodyPade.h	/^    Coeff(int m0, int n0, int o0, ValueType c0, ValueType d0): m(m0),n(n0),o(o0),c(c0),d(d0) {}$/;"	f	struct:qmcplusplus::ThreeBodyPade::Coeff
Coeff	Jastrow/ThreeBodyPade.h	/^  struct Coeff$/;"	s	class:qmcplusplus::ThreeBodyPade
CoefficientHolder	TrialWaveFunction.h	/^struct CoefficientHolder$/;"	s	namespace:qmcplusplus
Coeffs	Experimental/TricubicBsplineSetBuilder.h	/^    StorageType* Coeffs;$/;"	m	struct:qmcplusplus::TricubicBsplineSetBuilder::RSOType
Coefs	Experimental/PlaneWaveOrbitalSet.h	/^  Matrix<ValueType> Coefs;$/;"	m	class:qmcplusplus::PlaneWaveOrbitalSet
ComboSTO	AtomicOrbitals/HFAtomicSTOSet.h	/^  ComboSTO(const ComboSTO& aSTO):$/;"	f	struct:qmcplusplus::ComboSTO
ComboSTO	AtomicOrbitals/HFAtomicSTOSet.h	/^  ComboSTO(int lm, SphericalHarmonics_t& ylm,$/;"	f	struct:qmcplusplus::ComboSTO
ComboSTO	AtomicOrbitals/HFAtomicSTOSet.h	/^struct ComboSTO$/;"	s	namespace:qmcplusplus
ComplexGGGMatrix_t	EinsplineSet.h	/^  typedef Matrix<ComplexGGGType>                                ComplexGGGMatrix_t;$/;"	t	class:qmcplusplus::EinsplineSetExtended
ComplexGGGType	EinsplineSet.h	/^  typedef TinyVector<ComplexHessType, 3>                        ComplexGGGType;$/;"	t	class:qmcplusplus::EinsplineSetExtended
ComplexGGGVector_t	EinsplineSet.h	/^  typedef Vector<ComplexGGGType>                                ComplexGGGVector_t;$/;"	t	class:qmcplusplus::EinsplineSetExtended
ComplexGradMatrix_t	EinsplineSet.h	/^  typedef Matrix<TinyVector<std::complex<double>,OHMMS_DIM> >        ComplexGradMatrix_t;$/;"	t	class:qmcplusplus::EinsplineSetExtended
ComplexGradVector_t	AtomicOrbital.h	/^  typedef Vector<TinyVector<std::complex<double>,OHMMS_DIM> > ComplexGradVector_t;$/;"	t	class:qmcplusplus::AtomicOrbital
ComplexGradVector_t	EinsplineSet.h	/^  typedef Vector<TinyVector<std::complex<double>,OHMMS_DIM> >        ComplexGradVector_t;$/;"	t	class:qmcplusplus::EinsplineSetExtended
ComplexHessMatrix_t	EinsplineSet.h	/^  typedef Matrix<ComplexHessType>                               ComplexHessMatrix_t;$/;"	t	class:qmcplusplus::EinsplineSetExtended
ComplexHessType	EinsplineSet.h	/^  typedef Tensor<std::complex<double>,OHMMS_DIM>                     ComplexHessType;$/;"	t	class:qmcplusplus::EinsplineSetExtended
ComplexHessVector_t	AtomicOrbital.h	/^  typedef Vector<Tensor<std::complex<double>,OHMMS_DIM> >  ComplexHessVector_t;$/;"	t	class:qmcplusplus::AtomicOrbital
ComplexHessVector_t	EinsplineSet.h	/^  typedef Vector<ComplexHessType>                               ComplexHessVector_t;$/;"	t	class:qmcplusplus::EinsplineSetExtended
ComplexType	Fermion/Backflow_ee_kSpace.h	/^  typedef QMCTraits::ComplexType   ComplexType;$/;"	t	class:qmcplusplus::Backflow_ee_kSpace
ComplexType	Jastrow/kSpaceJastrow.h	/^  typedef std::complex<RealType> ComplexType;$/;"	t	class:qmcplusplus::kSpaceJastrow
ComplexValueMatrix_t	EinsplineSet.h	/^  typedef Matrix<std::complex<double> >                              ComplexValueMatrix_t;$/;"	t	class:qmcplusplus::EinsplineSetExtended
ComplexValueVector_t	AtomicOrbital.h	/^  typedef Vector<std::complex<double> >              ComplexValueVector_t;$/;"	t	class:qmcplusplus::AtomicOrbital
ComplexValueVector_t	EinsplineSet.h	/^  typedef Vector<std::complex<double> >                              ComplexValueVector_t;$/;"	t	class:qmcplusplus::EinsplineSetExtended
ComponentType	Jastrow/LinearCombinationFunctor.h	/^  typedef OptimizableFunctorBase ComponentType;$/;"	t	struct:LinearCombinationFunctor
CompositeSPOSet	CompositeSPOSet.cpp	/^  CompositeSPOSet::CompositeSPOSet()$/;"	f	class:qmcplusplus::CompositeSPOSet
CompositeSPOSet	CompositeSPOSet.h	/^  class CompositeSPOSet : public SPOSetBase$/;"	c	namespace:qmcplusplus
CompositeSPOSetBuilder	CompositeSPOSet.h	/^  struct CompositeSPOSetBuilder : public BasisSetBuilder$/;"	s	namespace:qmcplusplus
ConstantOrbital	ConstantOrbital.h	/^class ConstantOrbital: public OrbitalBase$/;"	c	namespace:qmcplusplus
ConstraintMatrix	Jastrow/PolynomialFunctor3D.h	/^  Matrix<real_type> ConstraintMatrix;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
Constraints	ProductOrbital.h	/^  OrbitalConstraintsBase* Constraints;$/;"	m	struct:qmcplusplus::ProductOrbital
ContainerType	SparseLocalizedBasisSet.h	/^  typedef std::vector<LOForCenter*> ContainerType;$/;"	t	struct:qmcplusplus::SparseLocalizedBasisSet
CopyBands	Experimental/EinsplineSetBuilder.cpp	/^EinsplineSetBuilder::CopyBands(int numOrbs)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
CoreRadii	MuffinTin.h	/^  std::vector<double> CoreRadii;$/;"	m	class:qmcplusplus::MuffinTinClass
CoreSplines	MuffinTin.h	/^  std::vector<NUBspline_1d_d*> CoreSplines;$/;"	m	class:qmcplusplus::MuffinTinClass
CoreStatePath	EinsplineSetBuilderOld.cpp	/^EinsplineSetBuilder::CoreStatePath(int ti, int cs)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
CoreStatePath	Experimental/EinsplineSetBuilder.cpp	/^EinsplineSetBuilder::CoreStatePath(int ti, int cs)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
Core_kVecs	MuffinTin.h	/^  std::vector<TinyVector<double,3> > Core_kVecs;$/;"	m	class:qmcplusplus::MuffinTinClass
Core_lm	MuffinTin.h	/^  std::vector<TinyVector<int,2> > Core_lm;$/;"	m	class:qmcplusplus::MuffinTinClass
CorrectingOrbitalBasisSet	Experimental/CorrectingOrbitalBasisSet.h	/^  CorrectingOrbitalBasisSet(const DistanceTableData* tbl, ParticleSet &ions, int nEls): myTable(tbl), CenterSys(ions), NumTargets(nEls)$/;"	f	struct:qmcplusplus::CorrectingOrbitalBasisSet
CorrectingOrbitalBasisSet	Experimental/CorrectingOrbitalBasisSet.h	/^struct CorrectingOrbitalBasisSet: public BasisSetBase<typename COT::value_type>$/;"	s	namespace:qmcplusplus
CosV	Experimental/EinsplineAdoptorPacked.h	/^  std::vector<real_type>   CosV;$/;"	m	struct:qmcplusplus::SplineC2RAdoptorPacked
CosV	SplineC2XAdoptor.h	/^  std::vector<ST>   CosV;$/;"	m	struct:qmcplusplus::SplineC2RPackedAdoptor
Counter	BasisSetBase.h	/^  unsigned long Counter;$/;"	m	struct:qmcplusplus::BasisSetBase
CreateIonParticleSet	Experimental/EinsplineSetBuilder.cpp	/^EinsplineSetBuilder::CreateIonParticleSet( std::string sourceName)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
CubicBsplineGroup	Jastrow/CubicBsplineGroup.h	/^  inline CubicBsplineGroup(): GridManager(true),numSiblings(1),OffSet(0.0), InFunc(0)$/;"	f	class:qmcplusplus::CubicBsplineGroup
CubicBsplineGroup	Jastrow/CubicBsplineGroup.h	/^class CubicBsplineGroup: public CubicBsplineGrid<T,GRIDTYPE,FIRSTDERIV_CONSTRAINTS>$/;"	c	namespace:qmcplusplus
CubicSplineBasisSet	Jastrow/SplineFunctors.h	/^  CubicSplineBasisSet(): InFunc(0), OutFunc(0) { }$/;"	f	struct:qmcplusplus::CubicSplineBasisSet
CubicSplineBasisSet	Jastrow/SplineFunctors.h	/^  CubicSplineBasisSet(FNIN* in_, grid_type* agrid)$/;"	f	struct:qmcplusplus::CubicSplineBasisSet
CubicSplineBasisSet	Jastrow/SplineFunctors.h	/^struct CubicSplineBasisSet: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
CubicSplineSingle	Jastrow/SplineFunctors.h	/^  CubicSplineSingle(): InFunc(0) { }$/;"	f	struct:qmcplusplus::CubicSplineSingle
CubicSplineSingle	Jastrow/SplineFunctors.h	/^  CubicSplineSingle(FNIN* in_, grid_type* agrid): InFunc(in_)$/;"	f	struct:qmcplusplus::CubicSplineSingle
CubicSplineSingle	Jastrow/SplineFunctors.h	/^  CubicSplineSingle(FNIN* in_, real_type rc, int npts):InFunc(in_)$/;"	f	struct:qmcplusplus::CubicSplineSingle
CubicSplineSingle	Jastrow/SplineFunctors.h	/^  CubicSplineSingle(const CubicSplineSingle& old):$/;"	f	struct:qmcplusplus::CubicSplineSingle
CubicSplineSingle	Jastrow/SplineFunctors.h	/^struct CubicSplineSingle: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
CudaComplexType	EinsplineSet.h	/^  typedef typename EinsplineSetExtended<StorageType>::CudaComplexType CudaComplexType;$/;"	t	class:qmcplusplus::EinsplineSetHybrid
CudaGradLaplPointers	EinsplineSet.h	/^  gpu::device_vector<CudaStorageType*> CudaValuePointers, CudaGradLaplPointers;$/;"	m	class:qmcplusplus::EinsplineSetExtended
CudaGradLaplVector	EinsplineSet.h	/^  gpu::device_vector<CudaStorageType> CudaValueVector, CudaGradLaplVector;$/;"	m	class:qmcplusplus::EinsplineSetExtended
CudaGradType	TrialWaveFunction.h	/^  typedef OrbitalBase::CudaGradType    CudaGradType;$/;"	t	class:qmcplusplus::TrialWaveFunction
CudaMakeTwoCopies	EinsplineSet.h	/^  gpu::device_vector<int> CudaMakeTwoCopies;$/;"	m	class:qmcplusplus::EinsplineSetExtended
CudaMultiSpline	EinsplineSet.h	/^  CudaSplineType *CudaMultiSpline;$/;"	m	class:qmcplusplus::EinsplineSetExtended
CudaReal	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  typedef CUDA_PRECISION CudaReal;$/;"	t	class:qmcplusplus::OneBodyJastrowOrbitalBspline
CudaReal	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  typedef CUDA_PRECISION CudaReal;$/;"	t	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
CudaRealType	EinsplineSet.h	/^  typedef typename EinsplineSetExtended<StorageType>::CudaRealType CudaRealType;$/;"	t	class:qmcplusplus::EinsplineSetHybrid
CudaRealType	TrialWaveFunction.h	/^  typedef OrbitalBase::CudaRealType    CudaRealType;$/;"	t	class:qmcplusplus::TrialWaveFunction
CudaSpline	Jastrow/CudaSpline.h	/^  CudaSpline (BsplineFunctor<T2> &func) : coefs("CudaSpline::coefs")$/;"	f	struct:qmcplusplus::CudaSpline
CudaSpline	Jastrow/CudaSpline.h	/^struct CudaSpline$/;"	s	namespace:qmcplusplus
CudaSplineType	AtomicOrbitalCuda.h	/^  typedef multi_UBspline_2d_c_cuda CudaSplineType;$/;"	t	struct:SplineTraits
CudaSplineType	AtomicOrbitalCuda.h	/^  typedef multi_UBspline_2d_d_cuda CudaSplineType;$/;"	t	struct:SplineTraits
CudaSplineType	AtomicOrbitalCuda.h	/^  typedef multi_UBspline_2d_s_cuda CudaSplineType;$/;"	t	struct:SplineTraits
CudaSplineType	AtomicOrbitalCuda.h	/^  typedef multi_UBspline_2d_z_cuda CudaSplineType;$/;"	t	struct:SplineTraits
CudaSplineType	AtomicOrbitalCuda.h	/^  typedef multi_UBspline_3d_c_cuda CudaSplineType;$/;"	t	struct:SplineTraits
CudaSplineType	AtomicOrbitalCuda.h	/^  typedef multi_UBspline_3d_d_cuda CudaSplineType;$/;"	t	struct:SplineTraits
CudaSplineType	AtomicOrbitalCuda.h	/^  typedef multi_UBspline_3d_s_cuda CudaSplineType;$/;"	t	struct:SplineTraits
CudaSplineType	AtomicOrbitalCuda.h	/^  typedef multi_UBspline_3d_z_cuda CudaSplineType;$/;"	t	struct:SplineTraits
CudaSplineType	EinsplineSet.h	/^  typedef multi_UBspline_2d_c_cuda CudaSplineType;$/;"	t	struct:qmcplusplus::MultiOrbitalTraits
CudaSplineType	EinsplineSet.h	/^  typedef multi_UBspline_2d_d_cuda CudaSplineType;$/;"	t	struct:qmcplusplus::MultiOrbitalTraits
CudaSplineType	EinsplineSet.h	/^  typedef multi_UBspline_2d_s_cuda CudaSplineType;$/;"	t	struct:qmcplusplus::MultiOrbitalTraits
CudaSplineType	EinsplineSet.h	/^  typedef multi_UBspline_2d_z_cuda CudaSplineType;$/;"	t	struct:qmcplusplus::MultiOrbitalTraits
CudaSplineType	EinsplineSet.h	/^  typedef multi_UBspline_3d_c_cuda CudaSplineType;$/;"	t	struct:qmcplusplus::MultiOrbitalTraits
CudaSplineType	EinsplineSet.h	/^  typedef multi_UBspline_3d_d_cuda CudaSplineType;$/;"	t	struct:qmcplusplus::MultiOrbitalTraits
CudaSplineType	EinsplineSet.h	/^  typedef multi_UBspline_3d_s_cuda CudaSplineType;$/;"	t	struct:qmcplusplus::MultiOrbitalTraits
CudaSplineType	EinsplineSet.h	/^  typedef multi_UBspline_3d_z_cuda CudaSplineType;$/;"	t	struct:qmcplusplus::MultiOrbitalTraits
CudaSplineType	EinsplineSet.h	/^  typedef typename MultiOrbitalTraits<CudaStorageType,OHMMS_DIM>::CudaSplineType CudaSplineType;$/;"	t	class:qmcplusplus::EinsplineSetExtended
CudaStorageType	EinsplineSet.h	/^  typedef double CudaStorageType;$/;"	t	struct:qmcplusplus::StorageTypeConverter
CudaStorageType	EinsplineSet.h	/^  typedef float CudaStorageType;$/;"	t	struct:qmcplusplus::StorageTypeConverter
CudaStorageType	EinsplineSet.h	/^  typedef std::complex<double> CudaStorageType;$/;"	t	struct:qmcplusplus::StorageTypeConverter
CudaStorageType	EinsplineSet.h	/^  typedef std::complex<float> CudaStorageType ;$/;"	t	struct:qmcplusplus::StorageTypeConverter
CudaStorageType	EinsplineSet.h	/^  typedef typename EinsplineSetExtended<StorageType>::CudaStorageType CudaStorageType;$/;"	t	class:qmcplusplus::EinsplineSetHybrid
CudaStorageType	EinsplineSet.h	/^  typedef typename StorageTypeConverter<StorageType,CUDA_PRECISION>::CudaStorageType CudaStorageType;$/;"	t	class:qmcplusplus::EinsplineSetExtended
CudaTwoCopiesIndex	EinsplineSet.h	/^  gpu::device_vector<int> CudaTwoCopiesIndex;$/;"	m	class:qmcplusplus::EinsplineSetExtended
CudaValuePointers	EinsplineSet.h	/^  gpu::device_vector<CudaStorageType*> CudaValuePointers, CudaGradLaplPointers;$/;"	m	class:qmcplusplus::EinsplineSetExtended
CudaValueType	TrialWaveFunction.h	/^  typedef OrbitalBase::CudaValueType   CudaValueType;$/;"	t	class:qmcplusplus::TrialWaveFunction
CudaValueVector	EinsplineSet.h	/^  gpu::device_vector<CudaStorageType> CudaValueVector, CudaGradLaplVector;$/;"	m	class:qmcplusplus::EinsplineSetExtended
CudakPoints	EinsplineSet.h	/^  gpu::device_vector<TinyVector<CUDA_PRECISION,OHMMS_DIM > > CudakPoints,$/;"	m	class:qmcplusplus::EinsplineSetExtended
CudakPoints_reduced	EinsplineSet.h	/^      CudakPoints_reduced;$/;"	m	class:qmcplusplus::EinsplineSetExtended
CurSPOSize	Experimental/TricubicBsplineSetBuilder.h	/^  int CurSPOSize;$/;"	m	class:qmcplusplus::TricubicBsplineSetBuilder
CurrentCenter	SphericalBasisSet.h	/^  IndexType CurrentCenter;$/;"	m	struct:qmcplusplus::SphericalBasisSet
CurrentCenter	SphericalOrbitalSet.h	/^  IndexType CurrentCenter;$/;"	m	struct:qmcplusplus::SphericalOrbitalSet
CurrentDet	Experimental/DiracDeterminant.h	/^  ValueType CurrentDet;$/;"	m	class:qmcplusplus::DiracDeterminant
CurrentOffset	SphericalBasisSet.h	/^  IndexType CurrentOffset;$/;"	m	struct:qmcplusplus::SphericalBasisSet
CurrentOffset	SphericalOrbitalSet.h	/^  IndexType CurrentOffset;$/;"	m	struct:qmcplusplus::SphericalOrbitalSet
CurrentWalkers	EinsplineSet.h	/^  int CurrentWalkers;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
Cusp	Jastrow/Experimental/AnyConstraints.h	/^    RealType Cusp;$/;"	m	struct:qmcplusplus::AnyConstraints::BasisGroupType
Cusp	Jastrow/WMJastrowBuilder.h	/^    RealType Cusp;$/;"	m	struct:qmcplusplus::WMJastrowBuilder::BasisGroupType
CuspCorr	Experimental/CuspCorr.h	/^  CuspCorr(RealType r, int nIntPnts, ParticleSet* targetP, ParticleSet* sourceP, bool print=true): Rc_init(r),Rc(r),Rc_max(r),printOrbs(print)$/;"	f	class:qmcplusplus::CuspCorr
CuspCorr	Experimental/CuspCorr.h	/^class CuspCorr : public QMCTraits$/;"	c	namespace:qmcplusplus
CuspCorrectionFunctor	Jastrow/CompositeFunctor.h	/^  CuspCorrectionFunctor():E(1.0),Rmax(1),Rcut(0), RmaxFixed(10) {}$/;"	f	struct:qmcplusplus::CuspCorrectionFunctor
CuspCorrectionFunctor	Jastrow/CompositeFunctor.h	/^  inline CuspCorrectionFunctor(real_type e, real_type rc)$/;"	f	struct:qmcplusplus::CuspCorrectionFunctor
CuspCorrectionFunctor	Jastrow/CompositeFunctor.h	/^struct CuspCorrectionFunctor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
CuspValue	Fermion/BFsplineFunctor.h	/^  real_type CuspValue;$/;"	m	struct:qmcplusplus::BFsplineFunctor
CuspValue	Jastrow/BsplineFunctor.h	/^  real_type CuspValue;$/;"	m	struct:qmcplusplus::BsplineFunctor
CutoffFunctor	Jastrow/NumericalJastrowFunctor.h	/^  CutoffFunctor() {}$/;"	f	struct:qmcplusplus::CutoffFunctor
CutoffFunctor	Jastrow/NumericalJastrowFunctor.h	/^  inline CutoffFunctor(T r1, T r2)$/;"	f	struct:qmcplusplus::CutoffFunctor
CutoffFunctor	Jastrow/NumericalJastrowFunctor.h	/^struct CutoffFunctor$/;"	s	namespace:qmcplusplus
CutoffRadii_GPU	EinsplineSet.h	/^  gpu::device_vector<CudaRealType>  CutoffRadii_GPU, PolyRadii_GPU;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
CutoffRadius	AtomicOrbital.h	/^  RealType CutoffRadius, SplineRadius, PolyRadius;$/;"	m	class:qmcplusplus::AtomicOrbital
D	Jastrow/PadeFunctors.h	/^  real_type A, B, C, D;$/;"	m	struct:qmcplusplus::PadeTwo2ndOrderFunctor
D2PadeDB2Functor	Jastrow/DerivPadeFunctors.h	/^  D2PadeDB2Functor(): ID_A("0"), ID_B("0") { }$/;"	f	struct:qmcplusplus::D2PadeDB2Functor
D2PadeDB2Functor	Jastrow/DerivPadeFunctors.h	/^  D2PadeDB2Functor(const PadeFunctor<T>& pade): ID_A(pade.ID_A), ID_B(pade.ID_B)$/;"	f	struct:qmcplusplus::D2PadeDB2Functor
D2PadeDB2Functor	Jastrow/DerivPadeFunctors.h	/^  explicit D2PadeDB2Functor(real_type a, real_type b): ID_A("0"),ID_B("0")$/;"	f	struct:qmcplusplus::D2PadeDB2Functor
D2PadeDB2Functor	Jastrow/DerivPadeFunctors.h	/^struct D2PadeDB2Functor:public OptimizableFunctorBase<T>$/;"	s	namespace:qmcplusplus
D2WMDB2Functor	Jastrow/DerivWMFunctor.h	/^  D2WMDB2Functor(real_type b, real_type rc=7.5, const std::string& bname="exponent"):$/;"	f	struct:qmcplusplus::D2WMDB2Functor
D2WMDB2Functor	Jastrow/DerivWMFunctor.h	/^struct D2WMDB2Functor: public OptimizableFunctorBase<T>$/;"	s	namespace:qmcplusplus
D2xDr2	Jastrow/WMFunctor.h	/^  real_type D2xDr2;$/;"	m	struct:qmcplusplus::WMFunctor
D2xDr2	Jastrow/WMFunctor.h	/^  real_type D2xDr2;$/;"	m	struct:qmcplusplus::WMFunctorSet
DCuspCorrectionDEFunctor	Jastrow/CompositeFunctor.h	/^  DCuspCorrectionDEFunctor():E(1.0),Rmax(1),Rcut(0), RmaxFixed(10) {}$/;"	f	struct:qmcplusplus::DCuspCorrectionDEFunctor
DCuspCorrectionDEFunctor	Jastrow/CompositeFunctor.h	/^  inline DCuspCorrectionDEFunctor(real_type e, real_type rc)$/;"	f	struct:qmcplusplus::DCuspCorrectionDEFunctor
DCuspCorrectionDEFunctor	Jastrow/CompositeFunctor.h	/^struct DCuspCorrectionDEFunctor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
DERIVS_TIMER	TrialWaveFunction.cpp	/^               RECOMPUTE_TIMER, DERIVS_TIMER, TIMER_SKIP$/;"	e	enum:qmcplusplus::__anon33	file:
DERIVS_TIMER	TrialWaveFunction_CUDA.cpp	/^               RECOMPUTE_TIMER, DERIVS_TIMER, TIMER_SKIP$/;"	e	enum:qmcplusplus::__anon34	file:
DIM	Fermion/BackflowFunctionBase.h	/^  enum {DIM=OHMMS_DIM};$/;"	e	enum:qmcplusplus::BackflowFunctionBase::__anon10
DIM	Fermion/BackflowTransformation.h	/^  enum {DIM=OHMMS_DIM};$/;"	e	enum:qmcplusplus::BackflowTransformation::__anon13
DIM	OrbitalSetTraits.h	/^  enum {DIM=OHMMS_DIM};$/;"	e	enum:qmcplusplus::OrbitalSetTraits::__anon21
DIM	SPOInfo.h	/^    enum{DIM=OHMMS_DIM};$/;"	e	enum:qmcplusplus::SPOInfo::__anon32
DIM	Spline3D/EinsplineSetTemp.hpp	/^      enum {DIM=bspline_engine_traits<EngT>::DIM};$/;"	e	enum:qmcplusplus::bspline_engine::__anon28
DIM	Spline3D/EinsplineSetTemp.hpp	/^      enum {DIM=bspline_engine_traits<EngT>::DIM};$/;"	e	enum:qmcplusplus::bspline_engine::__anon30
DIM	Spline3D/EinsplineSetTemp.hpp	/^      enum {DIM=bspline_engine_traits<EngT>::DIM};$/;"	e	enum:qmcplusplus::bspline_engine::__anon31
DIM	Spline3D/EinsplineSetTemp.hpp	/^    enum {DIM=3};$/;"	e	enum:qmcplusplus::bspline_engine_traits::__anon25
DIM	Spline3D/EinsplineSetTemp.hpp	/^    enum {DIM=3};$/;"	e	enum:qmcplusplus::bspline_engine_traits::__anon26
DIM	Spline3D/EinsplineSetTemp.hpp	/^    enum {DIM=bspline_engine_traits<EngT>::DIM};$/;"	e	enum:qmcplusplus::bspline_engine::__anon29
DIRAC_DETERMINANT_AFM_H	Fermion/DiracDeterminantAFM.h	16;"	d
DIRAC_DETERMINANT_OPT_H	Fermion/DiracDeterminantOpt.h	17;"	d
DONOT_EXPAND	Experimental/GTOMolecularOrbitals.h	/^  enum {DONOT_EXPAND=0, GAUSSIAN_EXPAND=1, NATURAL_EXPAND};$/;"	e	enum:qmcplusplus::GTOMolecularOrbitals::__anon9
DONOT_EXPAND	Experimental/STOMolecularOrbitals.h	/^  enum {DONOT_EXPAND=0, GAUSSIAN_EXPAND=1, NATURAL_EXPAND};$/;"	e	enum:qmcplusplus::STOMolecularOrbitals::__anon8
DONOT_EXPAND	MolecularOrbitals/AtomicBasisBuilder.h	/^  enum {DONOT_EXPAND=0, GAUSSIAN_EXPAND=1, NATURAL_EXPAND, CARTESIAN_EXPAND, MOD_NATURAL_EXPAND};$/;"	e	enum:qmcplusplus::AtomicBasisBuilder::__anon16
DPadeDBFunctor	Jastrow/DerivPadeFunctors.h	/^  DPadeDBFunctor(): ID_A("0"), ID_B("0") { }$/;"	f	struct:qmcplusplus::DPadeDBFunctor
DPadeDBFunctor	Jastrow/DerivPadeFunctors.h	/^  DPadeDBFunctor(const PadeFunctor<T>& pade): ID_A(pade.ID_A), ID_B(pade.ID_B)$/;"	f	struct:qmcplusplus::DPadeDBFunctor
DPadeDBFunctor	Jastrow/DerivPadeFunctors.h	/^  explicit DPadeDBFunctor(real_type a, real_type b): ID_A("0"),ID_B("0")$/;"	f	struct:qmcplusplus::DPadeDBFunctor
DPadeDBFunctor	Jastrow/DerivPadeFunctors.h	/^struct DPadeDBFunctor:public OptimizableFunctorBase<T>$/;"	s	namespace:qmcplusplus
DWMDBFunctor	Jastrow/DerivWMFunctor.h	/^struct DWMDBFunctor: public OptimizableFunctorBase<T>$/;"	s	namespace:qmcplusplus
DX	Experimental/CuspCorr.h	/^  RealType beta0,DX,eta0, ELorigAtRc;$/;"	m	class:qmcplusplus::CuspCorr
DataType	EinsplineAdoptor.h	/^  typedef double              DataType;$/;"	t	struct:qmcplusplus::einspline_traits
DataType	EinsplineAdoptor.h	/^  typedef float               DataType;$/;"	t	struct:qmcplusplus::einspline_traits
DataType	EinsplineAdoptor.h	/^  typedef std::complex<double>     DataType;$/;"	t	struct:qmcplusplus::einspline_traits
DataType	EinsplineAdoptor.h	/^  typedef std::complex<float>      DataType;$/;"	t	struct:qmcplusplus::einspline_traits
DataType	EinsplineAdoptor.h	/^  typedef typename einspline_traits<ST,D>::DataType   DataType;$/;"	t	struct:qmcplusplus::SplineAdoptorBase
DataType	EinsplineSet.h	/^  typedef double DataType;$/;"	t	struct:qmcplusplus::MultiOrbitalTraits
DataType	EinsplineSet.h	/^  typedef float DataType;$/;"	t	struct:qmcplusplus::MultiOrbitalTraits
DataType	EinsplineSet.h	/^  typedef std::complex<double> DataType;$/;"	t	struct:qmcplusplus::MultiOrbitalTraits
DataType	EinsplineSet.h	/^  typedef std::complex<float> DataType;$/;"	t	struct:qmcplusplus::MultiOrbitalTraits
DataType	Experimental/EinsplineMixedAdoptor.h	/^  typedef typename einspline_traits<ST,D>::DataType   DataType;$/;"	t	struct:qmcplusplus::SplineMixedAdoptor
DataType	Experimental/EinsplineMixedAdoptor.h	/^  typedef typename einspline_traits<ST,D>::DataType   DataType;$/;"	t	struct:qmcplusplus::SplineOpenAdoptor
DataType	Experimental/SplineOpenAdoptor.h	/^  typedef typename einspline_traits<ST,D>::DataType   DataType;$/;"	t	struct:qmcplusplus::SplineOpenAdoptor
DataType	MultiGridBsplineSet.h	/^    typedef typename SplineAdoptor::DataType DataType;$/;"	t	struct:qmcplusplus::MultiGridBsplineSet
DataType	SplineAdoptorReaderP.h	/^  typedef typename adoptor_type::DataType    DataType;$/;"	t	struct:qmcplusplus::SplineAdoptorReader
DataType	SplineMixedAdoptor.h	/^  typedef typename einspline_traits<ST,D>::DataType   DataType;$/;"	t	struct:qmcplusplus::SplineMixedAdoptor
DataType	SplineMixedAdoptor.h	/^  typedef typename einspline_traits<ST,D>::DataType   DataType;$/;"	t	struct:qmcplusplus::SplineOpenAdoptor
DataType	legacy/SplineAdoptorReader.h	/^  typedef typename adoptor_type::DataType    DataType;$/;"	t	struct:qmcplusplus::SplineAdoptorReader
DebugWithEG	Experimental/TricubicBsplineSetBuilder.h	/^  bool DebugWithEG;$/;"	m	class:qmcplusplus::TricubicBsplineSetBuilder
Delta	Jastrow/ThreeBodyPade.h	/^  inline ValueType Delta(int m, int n)$/;"	f	class:qmcplusplus::ThreeBodyPade
DeltaR	Fermion/BFsplineFunctor.h	/^  real_type DeltaR, DeltaRInv;$/;"	m	struct:qmcplusplus::BFsplineFunctor
DeltaR	Jastrow/BsplineFunctor.h	/^  real_type DeltaR, DeltaRInv;$/;"	m	struct:qmcplusplus::BsplineFunctor
DeltaRInv	Fermion/BFsplineFunctor.h	/^  real_type DeltaR, DeltaRInv;$/;"	m	struct:qmcplusplus::BFsplineFunctor
DeltaRInv	Jastrow/BsplineFunctor.h	/^  real_type DeltaR, DeltaRInv;$/;"	m	struct:qmcplusplus::BsplineFunctor
DeltaRInv_eI	Jastrow/BsplineFunctor3D.h	/^  real_type DeltaR_eI, DeltaRInv_eI;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
DeltaR_eI	Jastrow/BsplineFunctor3D.h	/^  real_type DeltaR_eI, DeltaRInv_eI;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
Delta_e2iGr	Jastrow/kSpaceJastrow.h	/^  Matrix<ComplexType> Delta_e2iGr;$/;"	m	class:qmcplusplus::kSpaceJastrow
Deltax	Jastrow/BsplineFunctor3D.h	/^  real_type Deltax, DeltaxInv;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
DeltaxInv	Jastrow/BsplineFunctor3D.h	/^  real_type Deltax, DeltaxInv;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
Density	Jastrow/LRBreakupUtilities.h	/^  T Density;$/;"	m	struct:qmcplusplus::DerivRPABreakup
Density	Jastrow/LRBreakupUtilities.h	/^  T Density;$/;"	m	struct:qmcplusplus::EPRPABreakup
Density	Jastrow/LRBreakupUtilities.h	/^  T Density;$/;"	m	struct:qmcplusplus::RPABFeeBreakup
Density	Jastrow/LRBreakupUtilities.h	/^  T Density;$/;"	m	struct:qmcplusplus::RPABreakup
Density	Jastrow/LRBreakupUtilities.h	/^  T Density;$/;"	m	struct:qmcplusplus::derivEPRPABreakup
DerivFuncType	Jastrow/Experimental/AnyConstraints.h	/^  typedef WMFunctorSet<RealType> DerivFuncType;$/;"	t	struct:qmcplusplus::AnyConstraints
DerivFuncType	Jastrow/WMJastrowBuilder.h	/^  typedef WMFunctorSet<RealType> DerivFuncType;$/;"	t	class:qmcplusplus::WMJastrowBuilder
DerivListGPU	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal*> DerivListGPU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
DerivListGPU	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal*> DerivListGPU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
DerivListHost	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal*> DerivListHost;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
DerivListHost	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal*> DerivListHost;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
DerivRPABreakup	Jastrow/LRBreakupUtilities.h	/^  inline DerivRPABreakup() {}$/;"	f	struct:qmcplusplus::DerivRPABreakup
DerivRPABreakup	Jastrow/LRBreakupUtilities.h	/^struct DerivRPABreakup$/;"	s	namespace:qmcplusplus
DerivSecondTaylorTerm	Jastrow/LRBreakupUtilities.h	/^  T DerivSecondTaylorTerm;$/;"	m	struct:qmcplusplus::DerivYukawaBreakup
DerivStorageType	OrbitalBase.h	/^  int DerivStorageType;$/;"	m	struct:qmcplusplus::OrbitalBase
DerivYukawaBreakup	Jastrow/LRBreakupUtilities.h	/^  inline DerivYukawaBreakup() {}$/;"	f	struct:qmcplusplus::DerivYukawaBreakup
DerivYukawaBreakup	Jastrow/LRBreakupUtilities.h	/^struct DerivYukawaBreakup$/;"	s	namespace:qmcplusplus
Deriv_	Jastrow/Experimental/AnyConstraints.h	/^    DerivFuncType* Deriv_;$/;"	m	struct:qmcplusplus::AnyConstraints::BasisGroupType
Deriv_	Jastrow/WMJastrowBuilder.h	/^    DerivFuncType* Deriv_;$/;"	m	struct:qmcplusplus::WMJastrowBuilder::BasisGroupType
DetCalculator	Fermion/MultiDiracDeterminantBase.h	/^  MyDeterminant<ValueType> DetCalculator;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
DetCalculator	Fermion/MultiDiracDeterminantWithBackflow.h	/^  MyDeterminant<ValueType> DetCalculator;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
DetID	Experimental/SlaterDeterminant.h	/^  std::vector<int> DetID;$/;"	m	class:qmcplusplus::SlaterDeterminant
DetID	Fermion/MultiSlaterDeterminant.h	/^  std::vector<int> DetID;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
DetID	Fermion/MultiSlaterDeterminantFast.h	/^  std::vector<int> DetID;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
DetID	Fermion/SlaterDet.h	/^  std::vector<int> DetID;$/;"	m	class:qmcplusplus::SlaterDet
DetSet	Experimental/NumericalOrbitalSetBuilder.h	/^  std::map<std::string,Det_t*>            DetSet;$/;"	m	class:qmcplusplus::NumericalOrbitalSetBuilder
DetSetBuilderWithBasisSet	Experimental/DetSetBuilderWithBasisSet.h	/^  DetSetBuilderWithBasisSet(ParticleSet& p, TrialWaveFunction& psi, BasisBuilderT& abuilder):$/;"	f	struct:qmcplusplus::DetSetBuilderWithBasisSet
DetSetBuilderWithBasisSet	Experimental/DetSetBuilderWithBasisSet.h	/^struct DetSetBuilderWithBasisSet: public OrbitalBuilderBase$/;"	s	namespace:qmcplusplus
DetSigns	Fermion/MultiDiracDeterminantBase.h	/^  std::vector<RealType> DetSigns;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
DetSigns	Fermion/MultiDiracDeterminantWithBackflow.h	/^  std::vector<double> DetSigns;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
Det_t	Experimental/NumericalOrbitalSetBuilder.h	/^  typedef DiracDeterminant<SPOSetType>  Det_t;$/;"	t	class:qmcplusplus::NumericalOrbitalSetBuilder
Det_t	Fermion/SlaterDetBuilder.h	/^  typedef DiracDeterminantBase Det_t;$/;"	t	class:qmcplusplus::SlaterDetBuilder
Determinant_t	Experimental/DiracDeterminant.h	/^  typedef blitz::Array<ValueType,2> Determinant_t;$/;"	t	class:qmcplusplus::DiracDeterminant
Determinant_t	Experimental/SlaterDeterminant.h	/^  typedef DiracDeterminant<SPOSet> Determinant_t;$/;"	t	class:qmcplusplus::SlaterDeterminant
Determinant_t	Fermion/SlaterDet.h	/^  typedef DiracDeterminantBase Determinant_t;$/;"	t	class:qmcplusplus::SlaterDet
Dets	Experimental/SlaterDeterminant.h	/^  std::vector<Determinant_t*>  Dets;$/;"	m	class:qmcplusplus::SlaterDeterminant
Dets	Fermion/MultiSlaterDeterminantFast.h	/^  std::vector<MultiDiracDeterminantBase*> Dets;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
Dets	Fermion/SlaterDet.h	/^  std::vector<Determinant_t*>  Dets;$/;"	m	class:qmcplusplus::SlaterDet
DetsPerCSF	Fermion/MultiSlaterDeterminant.h	/^  std::vector<int> DetsPerCSF;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
DetsPerCSF	Fermion/MultiSlaterDeterminantFast.h	/^  std::vector<int> DetsPerCSF;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
DiffOneBodyJastrowOrbital	Jastrow/DiffOneBodyJastrowOrbital.h	/^  DiffOneBodyJastrowOrbital(const ParticleSet& centers, ParticleSet& els)$/;"	f	class:qmcplusplus::DiffOneBodyJastrowOrbital
DiffOneBodyJastrowOrbital	Jastrow/DiffOneBodyJastrowOrbital.h	/^class DiffOneBodyJastrowOrbital: public DiffOrbitalBase$/;"	c	namespace:qmcplusplus
DiffOneBodySpinJastrowOrbital	Jastrow/DiffOneBodySpinJastrowOrbital.h	/^  DiffOneBodySpinJastrowOrbital(const ParticleSet& centers, ParticleSet& els)$/;"	f	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
DiffOneBodySpinJastrowOrbital	Jastrow/DiffOneBodySpinJastrowOrbital.h	/^class DiffOneBodySpinJastrowOrbital: public DiffOrbitalBase$/;"	c	namespace:qmcplusplus
DiffOrbitalBase	DiffOrbitalBase.cpp	/^DiffOrbitalBase::DiffOrbitalBase(OrbitalBase* orb)$/;"	f	class:qmcplusplus::DiffOrbitalBase
DiffOrbitalBase	DiffOrbitalBase.h	/^struct DiffOrbitalBase$/;"	s	namespace:qmcplusplus
DiffOrbitalBasePtr	OrbitalBase.h	/^typedef DiffOrbitalBase*                   DiffOrbitalBasePtr;$/;"	t	namespace:qmcplusplus
DiffOrbitalBasePtr	OrbitalBase.h	/^typedef boost::shared_ptr<DiffOrbitalBase> DiffOrbitalBasePtr;$/;"	t	namespace:qmcplusplus
DiffTwoBodyJastrowOrbital	Jastrow/DiffTwoBodyJastrowOrbital.h	/^  DiffTwoBodyJastrowOrbital(ParticleSet& p):NumVars(0)$/;"	f	class:qmcplusplus::DiffTwoBodyJastrowOrbital
DiffTwoBodyJastrowOrbital	Jastrow/DiffTwoBodyJastrowOrbital.h	/^class DiffTwoBodyJastrowOrbital: public DiffOrbitalBase$/;"	c	namespace:qmcplusplus
DiffVal	Experimental/TwoBodyJastrowFunction.Shared.h	/^  ValueType DiffVal, DiffValSum;$/;"	m	class:qmcplusplus::TwoBodyJastrow
DiffVal	Experimental/TwoBodyJastrowFunction.h	/^  ValueType DiffVal, DiffValSum;$/;"	m	class:qmcplusplus::TwoBodyJastrow
DiffVal	Jastrow/TwoBodyJastrowOrbital.h	/^  RealType DiffVal, DiffValSum;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
DiffVal	Jastrow/eeI_JastrowOrbital.h	/^  RealType DiffVal, DiffValSum;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
DiffValSum	Experimental/TwoBodyJastrowFunction.Shared.h	/^  ValueType DiffVal, DiffValSum;$/;"	m	class:qmcplusplus::TwoBodyJastrow
DiffValSum	Experimental/TwoBodyJastrowFunction.h	/^  ValueType DiffVal, DiffValSum;$/;"	m	class:qmcplusplus::TwoBodyJastrow
DiffValSum	Jastrow/TwoBodyJastrowOrbital.h	/^  RealType DiffVal, DiffValSum;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
DiffValSum	Jastrow/eeI_JastrowOrbital.h	/^  RealType DiffVal, DiffValSum;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
DiracDeterminant	Experimental/DiracDeterminant.h	/^  DiracDeterminant(SPOSet* spos, int first=0):$/;"	f	class:qmcplusplus::DiracDeterminant
DiracDeterminant	Experimental/DiracDeterminant.h	/^  DiracDeterminant(const DiracDeterminant<SPOSet>& s):$/;"	f	class:qmcplusplus::DiracDeterminant
DiracDeterminant	Experimental/DiracDeterminant.h	/^class DiracDeterminant: public OrbitalBase$/;"	c	namespace:qmcplusplus
DiracDeterminantAFM	Fermion/DiracDeterminantAFM.cpp	/^DiracDeterminantAFM::DiracDeterminantAFM$/;"	f	class:qmcplusplus::DiracDeterminantAFM
DiracDeterminantAFM	Fermion/DiracDeterminantAFM.h	/^class DiracDeterminantAFM : public DiracDeterminantBase$/;"	c	namespace:qmcplusplus
DiracDeterminantBase	Fermion/DiracDeterminantBase.cpp	/^DiracDeterminantBase::DiracDeterminantBase(SPOSetBasePtr const &spos, int first):$/;"	f	class:qmcplusplus::DiracDeterminantBase
DiracDeterminantBase	Fermion/DiracDeterminantBase.cpp	/^DiracDeterminantBase::DiracDeterminantBase(const DiracDeterminantBase& s)$/;"	f	class:qmcplusplus::DiracDeterminantBase
DiracDeterminantBase	Fermion/DiracDeterminantBase.h	/^class DiracDeterminantBase: public OrbitalBase$/;"	c	namespace:qmcplusplus
DiracDeterminantCUDA	Fermion/DiracDeterminantCUDA.cpp	/^DiracDeterminantCUDA::DiracDeterminantCUDA(SPOSetBasePtr const &spos, int first) :$/;"	f	class:qmcplusplus::DiracDeterminantCUDA
DiracDeterminantCUDA	Fermion/DiracDeterminantCUDA.cpp	/^DiracDeterminantCUDA::DiracDeterminantCUDA(const DiracDeterminantCUDA& s) :$/;"	f	class:qmcplusplus::DiracDeterminantCUDA
DiracDeterminantCUDA	Fermion/DiracDeterminantCUDA.h	/^class DiracDeterminantCUDA: public DiracDeterminantBase$/;"	c	namespace:qmcplusplus
DiracDeterminantIterative	Fermion/DiracDeterminantIterative.cpp	/^DiracDeterminantIterative::DiracDeterminantIterative(SPOSetBasePtr const &spos, int first):$/;"	f	class:qmcplusplus::DiracDeterminantIterative
DiracDeterminantIterative	Fermion/DiracDeterminantIterative.cpp	/^DiracDeterminantIterative::DiracDeterminantIterative(const DiracDeterminantIterative& s):$/;"	f	class:qmcplusplus::DiracDeterminantIterative
DiracDeterminantIterative	Fermion/DiracDeterminantIterative.h	/^class DiracDeterminantIterative: public DiracDeterminantBase$/;"	c	namespace:qmcplusplus
DiracDeterminantOpt	Fermion/DiracDeterminantOpt.cpp	/^DiracDeterminantOpt::DiracDeterminantOpt$/;"	f	class:qmcplusplus::DiracDeterminantOpt
DiracDeterminantOpt	Fermion/DiracDeterminantOpt.h	/^class DiracDeterminantOpt : public DiracDeterminantBase$/;"	c	namespace:qmcplusplus
DiracDeterminantPtr	Fermion/MultiSlaterDeterminant.h	/^  typedef DiracDeterminantBase*    DiracDeterminantPtr;$/;"	t	class:qmcplusplus::MultiSlaterDeterminant
DiracDeterminantPtr	Fermion/MultiSlaterDeterminantFast.h	/^  typedef MultiDiracDeterminantBase*    DiracDeterminantPtr;$/;"	t	class:qmcplusplus::MultiSlaterDeterminantFast
DiracDeterminantT	Fermion/DiracDeterminantT.h	/^  DiracDeterminantT(SPOSet& spos, int first =0): DiracDeterminantBase(first), Phi(spos) { }$/;"	f	class:qmcplusplus::DiracDeterminantT
DiracDeterminantT	Fermion/DiracDeterminantT.h	/^class DiracDeterminantT: public DiracDeterminantBase$/;"	c	namespace:qmcplusplus
DiracDeterminantTruncation	Fermion/DiracDeterminantTruncation.cpp	/^DiracDeterminantTruncation::DiracDeterminantTruncation(SPOSetBasePtr const &spos, int first):$/;"	f	class:qmcplusplus::DiracDeterminantTruncation
DiracDeterminantTruncation	Fermion/DiracDeterminantTruncation.cpp	/^DiracDeterminantTruncation::DiracDeterminantTruncation(const DiracDeterminantTruncation& s):$/;"	f	class:qmcplusplus::DiracDeterminantTruncation
DiracDeterminantTruncation	Fermion/DiracDeterminantTruncation.h	/^class DiracDeterminantTruncation: public DiracDeterminantBase$/;"	c	namespace:qmcplusplus
DiracDeterminantWithBackflow	Fermion/DiracDeterminantWithBackflow.cpp	/^DiracDeterminantWithBackflow::DiracDeterminantWithBackflow(ParticleSet &ptcl, SPOSetBasePtr const &spos, BackflowTransformation * BF, int first): DiracDeterminantBase(spos,first)$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
DiracDeterminantWithBackflow	Fermion/DiracDeterminantWithBackflow.cpp	/^DiracDeterminantWithBackflow::DiracDeterminantWithBackflow(const DiracDeterminantWithBackflow& s):$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
DiracDeterminantWithBackflow	Fermion/DiracDeterminantWithBackflow.h	/^class DiracDeterminantWithBackflow: public DiracDeterminantBase$/;"	c	namespace:qmcplusplus
DistinctTwists	EinsplineSetBuilder.h	/^  std::vector<int> IncludeTwists, DistinctTwists;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
DistributedSPOSet	DistributedSPOSet.cpp	/^DistributedSPOSet::DistributedSPOSet(int norbs=0)$/;"	f	class:qmcplusplus::DistributedSPOSet
DistributedSPOSet	DistributedSPOSet.h	/^struct DistributedSPOSet: public SPOSetBase$/;"	s	namespace:qmcplusplus
Dlindhard	Jastrow/LRBreakupUtilities.h	/^  T Dlindhard(T q, T w)$/;"	f	struct:qmcplusplus::RPABFeeBreakup
Dlindhardp	Jastrow/LRBreakupUtilities.h	/^  T Dlindhardp(T q, T w)$/;"	f	struct:qmcplusplus::RPABFeeBreakup
DropLongRange	Jastrow/RPAJastrow.h	/^  bool DropLongRange;$/;"	m	struct:qmcplusplus::RPAJastrow
DropShortRange	Jastrow/RPAJastrow.h	/^  bool DropShortRange;$/;"	m	struct:qmcplusplus::RPAJastrow
Dummy	Fermion/BFsplineFunctor.h	/^  int Dummy;$/;"	m	struct:qmcplusplus::BFsplineFunctor
Dummy	Jastrow/BsplineFunctor.h	/^  int Dummy;$/;"	m	struct:qmcplusplus::BsplineFunctor
Dummy	Jastrow/BsplineFunctor3D.h	/^  int Dummy;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
DummyBasisSet	DummyBasisSet.h	/^struct DummyBasisSet$/;"	s	namespace:qmcplusplus
DummyGrid	OrbitalSetTraits.h	/^struct DummyGrid$/;"	s	namespace:qmcplusplus
DummyHess	Fermion/BackflowTransformation.h	/^  HessType DummyHess;$/;"	m	class:qmcplusplus::BackflowTransformation
DxDr	Jastrow/WMFunctor.h	/^  real_type DxDr;$/;"	m	struct:qmcplusplus::WMFunctor
DxDr	Jastrow/WMFunctor.h	/^  real_type DxDr;$/;"	m	struct:qmcplusplus::WMFunctorSet
E	Jastrow/CompositeFunctor.h	/^  real_type E;$/;"	m	struct:qmcplusplus::CuspCorrectionFunctor
E	Jastrow/CompositeFunctor.h	/^  real_type E;$/;"	m	struct:qmcplusplus::DCuspCorrectionDEFunctor
EGOSet	ElectronGas/ElectronGasComplexOrbitalBuilder.cpp	/^EGOSet::EGOSet(const std::vector<PosType>& k, const std::vector<RealType>& k2): K(k), mK2(k2)$/;"	f	class:qmcplusplus::EGOSet
EGOSet	ElectronGas/ElectronGasComplexOrbitalBuilder.cpp	/^EGOSet::EGOSet(const std::vector<PosType>& k, const std::vector<RealType>& k2, const std::vector<int>& d)$/;"	f	class:qmcplusplus::EGOSet
EGOSet	ElectronGas/ElectronGasComplexOrbitalBuilder.h	/^struct EGOSet: public SPOSetBase$/;"	s	namespace:qmcplusplus
EINSPLINE_3D_INTERFACE	legacy/einspline.hpp	27;"	d
EINSPLINE_HELP_DEBUG	Experimental/EinsplineSetBuilderESHDF.cpp	32;"	d	file:
EINSPLINE_INTERFACES_H	legacy/einspline.hpp	17;"	d
EINSPLINE_WRAPPER_H	legacy/EinsplineWrapper.h	18;"	d
EL	Experimental/QDwf.h	/^  double EL;$/;"	m	class:QDwf
ELcurr	Experimental/CuspCorr.h	/^  ValueVector_t ELcurr;$/;"	m	class:qmcplusplus::CuspCorr
ELideal	Experimental/CuspCorr.h	/^  ValueVector_t ELideal;$/;"	m	class:qmcplusplus::CuspCorr
ELorig	Experimental/CuspCorr.h	/^  ValueVector_t ELorig;$/;"	m	class:qmcplusplus::CuspCorr
ELorigAtRc	Experimental/CuspCorr.h	/^  RealType beta0,DX,eta0, ELorigAtRc;$/;"	m	class:qmcplusplus::CuspCorr
EPRPABreakup	Jastrow/LRBreakupUtilities.h	/^  inline EPRPABreakup() {}$/;"	f	struct:qmcplusplus::EPRPABreakup
EPRPABreakup	Jastrow/LRBreakupUtilities.h	/^struct EPRPABreakup$/;"	s	namespace:qmcplusplus
ESHDF	EinsplineSetBuilder.h	/^  typedef enum {QMCPACK, ESHDF} FormatType;$/;"	e	enum:qmcplusplus::EinsplineSetBuilder::__anon5
EXTENDED	MultiGridBsplineSetReader.h	/^  static const int EXTENDED=1;$/;"	m	struct:qmcplusplus::MultiGridBsplineSetReader
Ecut	PlaneWave/PWParameterSet.h	/^  double Ecut;$/;"	m	struct:qmcplusplus::PWParameterSet
EinsplineMultiEval	AtomicOrbital.h	/^inline void EinsplineMultiEval (multi_UBspline_1d_d *spline, double x,$/;"	f	namespace:qmcplusplus
EinsplineMultiEval	AtomicOrbital.h	/^inline void EinsplineMultiEval (multi_UBspline_1d_d *spline,$/;"	f	namespace:qmcplusplus
EinsplineMultiEval	AtomicOrbital.h	/^inline void EinsplineMultiEval (multi_UBspline_1d_z *spline, double x,$/;"	f	namespace:qmcplusplus
EinsplineMultiEval	AtomicOrbital.h	/^inline void EinsplineMultiEval (multi_UBspline_1d_z *spline,$/;"	f	namespace:qmcplusplus
EinsplineMultiEval	EinsplineSet.cpp	/^EinsplineMultiEval (multi_UBspline_3d_d *restrict spline,$/;"	f	namespace:qmcplusplus
EinsplineMultiEval	EinsplineSet.cpp	/^EinsplineMultiEval (multi_UBspline_3d_z *restrict spline,$/;"	f	namespace:qmcplusplus
EinsplineMultiEval	EinsplineSetCuda.cpp	/^EinsplineMultiEval (multi_UBspline_3d_d *restrict spline,$/;"	f	namespace:qmcplusplus
EinsplineMultiEval	EinsplineSetCuda.cpp	/^EinsplineMultiEval (multi_UBspline_3d_z *restrict spline,$/;"	f	namespace:qmcplusplus
EinsplineOrb	legacy/EinsplineOrb.h	/^class EinsplineOrb$/;"	c	namespace:qmcplusplus
EinsplineSet	EinsplineSet.h	/^  EinsplineSet() :  TwistNum(0), NumValenceOrbs(0), NumCoreOrbs(0)$/;"	f	class:qmcplusplus::EinsplineSet
EinsplineSet	EinsplineSet.h	/^class EinsplineSet : public SPOSetBase$/;"	c	namespace:qmcplusplus
EinsplineSetBuilder	EinsplineSetBuilder.h	/^class EinsplineSetBuilder : public BasisSetBuilder$/;"	c	namespace:qmcplusplus
EinsplineSetBuilder	EinsplineSetBuilderCommon.cpp	/^EinsplineSetBuilder::EinsplineSetBuilder(ParticleSet& p, PtclPoolType& psets, xmlNodePtr cur)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
EinsplineSetBuilder	Experimental/EinsplineSetBuilder.cpp	/^EinsplineSetBuilder::EinsplineSetBuilder(ParticleSet& p,$/;"	f	class:qmcplusplus::EinsplineSetBuilder
EinsplineSetExtended	EinsplineSet.h	/^  EinsplineSetExtended() :$/;"	f	class:qmcplusplus::EinsplineSetExtended
EinsplineSetExtended	EinsplineSet.h	/^class EinsplineSetExtended : public EinsplineSet$/;"	c	namespace:qmcplusplus
EinsplineSetHybrid	EinsplineSet.cpp	/^EinsplineSetHybrid<double>::EinsplineSetHybrid() :$/;"	f	class:qmcplusplus::EinsplineSetHybrid
EinsplineSetHybrid	EinsplineSet.cpp	/^EinsplineSetHybrid<std::complex<double > >::EinsplineSetHybrid() :$/;"	f	class:qmcplusplus::EinsplineSetHybrid
EinsplineSetHybrid	EinsplineSet.h	/^class EinsplineSetHybrid : public EinsplineSetExtended<StorageType>$/;"	c	namespace:qmcplusplus
EinsplineSetLocal	legacy/EinsplineSetLocal.h	/^  EinsplineSetLocal()$/;"	f	class:qmcplusplus::EinsplineSetLocal
EinsplineSetLocal	legacy/EinsplineSetLocal.h	/^class EinsplineSetLocal : public EinsplineSet$/;"	c	namespace:qmcplusplus
EinsplineTimer	EinsplineSet.h	/^  NewTimer EinsplineTimer;$/;"	m	class:qmcplusplus::EinsplineSetExtended
Elec	Jastrow/NLjobGPU.h	/^  int Elec, NumQuadPoints;$/;"	m	struct:NLjobGPU
ElecRef	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  ParticleSet &ElecRef;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
Elecs	Jastrow/kSpaceJastrow.h	/^  ParticleSet &Elecs;$/;"	m	class:qmcplusplus::kSpaceJastrow
ElectronGasBasisBuilder	ElectronGas/ElectronGasComplexOrbitalBuilder.cpp	/^ElectronGasBasisBuilder::ElectronGasBasisBuilder(ParticleSet& p, xmlNodePtr cur)$/;"	f	class:qmcplusplus::ElectronGasBasisBuilder
ElectronGasBasisBuilder	ElectronGas/ElectronGasComplexOrbitalBuilder.h	/^class ElectronGasBasisBuilder: public BasisSetBuilder$/;"	c	namespace:qmcplusplus
ElectronGasBasisBuilder	ElectronGas/ElectronGasOrbitalBuilder.cpp	/^ElectronGasBasisBuilder::ElectronGasBasisBuilder(ParticleSet& p, xmlNodePtr cur)$/;"	f	class:qmcplusplus::ElectronGasBasisBuilder
ElectronGasBasisBuilder	ElectronGas/ElectronGasOrbitalBuilder.h	/^class ElectronGasBasisBuilder: public BasisSetBuilder$/;"	c	namespace:qmcplusplus
ElectronGasComplexOrbitalBuilder	ElectronGas/ElectronGasComplexOrbitalBuilder.cpp	/^ElectronGasComplexOrbitalBuilder::ElectronGasComplexOrbitalBuilder(ParticleSet& els,$/;"	f	class:qmcplusplus::ElectronGasComplexOrbitalBuilder
ElectronGasComplexOrbitalBuilder	ElectronGas/ElectronGasComplexOrbitalBuilder.h	/^class ElectronGasComplexOrbitalBuilder: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
ElectronGasOrbitalBuilder	ElectronGas/ElectronGasOrbitalBuilder.cpp	/^ElectronGasOrbitalBuilder::ElectronGasOrbitalBuilder(ParticleSet& els, TrialWaveFunction& psi):$/;"	f	class:qmcplusplus::ElectronGasOrbitalBuilder
ElectronGasOrbitalBuilder	ElectronGas/ElectronGasOrbitalBuilder.h	/^class ElectronGasOrbitalBuilder: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
Energy	BandInfo.h	/^  double Energy;$/;"	m	struct:qmcplusplus::BandInfo
EnergyOrder	SPOInfo.h	/^      EnergyOrder(RealType tol=1e-6) : energy_tol(tol) {};$/;"	f	struct:qmcplusplus::spoinfo::EnergyOrder
EnergyOrder	SPOInfo.h	/^    struct EnergyOrder$/;"	s	namespace:qmcplusplus::spoinfo
Equivalent	Jastrow/kSpaceJastrow.cpp	/^kSpaceJastrow::Equivalent(PosType G1, PosType G2)$/;"	f	class:qmcplusplus::kSpaceJastrow
EvaluateTimer	Fermion/MultiSlaterDeterminant.h	/^  NewTimer RatioTimer,RatioGradTimer,RatioAllTimer,UpdateTimer,EvaluateTimer;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
EvaluateTimer	Fermion/MultiSlaterDeterminantFast.h	/^  NewTimer RatioTimer,RatioGradTimer,RatioAllTimer,UpdateTimer,EvaluateTimer;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
ExcitationClass	Fermion/ExcitationClass.h	/^class ExcitationClass$/;"	c	namespace:qmcplusplus
Extended	MultiGridBsplineSet.h	/^    bspline_type* Extended;$/;"	m	struct:qmcplusplus::MultiGridBsplineSet
ExtendedMap_d	Experimental/EinsplineSetBuilder.cpp	/^EinsplineSetBuilder::ExtendedMap_d;$/;"	m	class:qmcplusplus::EinsplineSetBuilder	file:
ExtendedMap_z	Experimental/EinsplineSetBuilder.cpp	/^EinsplineSetBuilder::ExtendedMap_z;$/;"	m	class:qmcplusplus::EinsplineSetBuilder	file:
ExtraStuffTimer	Fermion/MultiDiracDeterminantBase.h	/^  NewTimer readMatGradTimer,buildTableGradTimer,ExtraStuffTimer;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
ExtraStuffTimer	Fermion/MultiDiracDeterminantWithBackflow.h	/^  NewTimer readMatGradTimer,buildTableGradTimer,ExtraStuffTimer;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
Ez	Experimental/QDwf.h	/^  double Ez;\/\/var$/;"	m	class:QDwf
F	Experimental/TwoBodyJastrowFunction.Shared.h	/^  FT F;$/;"	m	class:qmcplusplus::TwoBodyJastrow
F	Experimental/TwoBodyJastrowFunction.h	/^  std::vector<FT*> F;$/;"	m	class:qmcplusplus::TwoBodyJastrow
F	Jastrow/DiffOneBodySpinJastrowOrbital.h	/^  Matrix<FT*> F;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
F	Jastrow/DiffTwoBodyJastrowOrbital.h	/^  std::vector<FT*> F;$/;"	m	class:qmcplusplus::DiffTwoBodyJastrowOrbital
F	Jastrow/OneBodySpinJastrowOrbital.h	/^  Matrix<FT*> F;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
F	Jastrow/TwoBodyJastrowOrbital.h	/^  std::vector<FT*> F;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
F	Jastrow/eeI_JastrowOrbital.h	/^  Array<FT*,3> F;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
FDLRWfn	FDLRWfn.h	/^    FDLRWfn(TrialWaveFunction * wfn_1, TrialWaveFunction * wfn_2, ParticleSet& P,$/;"	f	class:qmcplusplus::FDLRWfn
FDLRWfn	FDLRWfn.h	/^  class FDLRWfn : public OrbitalBase {$/;"	c	namespace:qmcplusplus
FFTbox	MultiGridBsplineSetReader.h	/^  Array<std::complex<double>,3> FFTbox;$/;"	m	struct:qmcplusplus::MultiGridBsplineSetReader
FFTbox	SplineAdoptorReaderP.h	/^  Array<std::complex<double>,3> FFTbox;$/;"	m	struct:qmcplusplus::SplineAdoptorReader
FFTbox	SplineMixedAdoptorReaderP.h	/^  Array<std::complex<double>,3> FFTbox;$/;"	m	struct:qmcplusplus::SplineMixedAdoptorReader
FFTplan	MultiGridBsplineSetReader.h	/^  fftw_plan FFTplan;$/;"	m	struct:qmcplusplus::MultiGridBsplineSetReader
FFTplan	SplineAdoptorReaderP.h	/^  fftw_plan FFTplan;$/;"	m	struct:qmcplusplus::SplineAdoptorReader
FFTplan	SplineMixedAdoptorReaderP.h	/^  fftw_plan FFTplan;$/;"	m	struct:qmcplusplus::SplineMixedAdoptorReader
FNIN	Jastrow/CubicBsplineGroup.h	/^  typedef OptimizableFunctorBase<T>                                                FNIN;$/;"	t	class:qmcplusplus::CubicBsplineGroup
FNIN	Jastrow/NumericalJastrowFunctor.h	/^  typedef OptimizableFunctorBase FNIN;$/;"	t	struct:qmcplusplus::NumericalJastrow
FNIN	Jastrow/SplineFunctors.h	/^  typedef OptimizableFunctorBase FNIN;$/;"	t	struct:qmcplusplus::CubicSplineBasisSet
FNIN	Jastrow/SplineFunctors.h	/^  typedef OptimizableFunctorBase FNIN;$/;"	t	struct:qmcplusplus::CubicSplineSingle
FNOUT	Jastrow/NumericalJastrowFunctor.h	/^  typedef OneDimCubicSpline<real_type,real_type>  FNOUT;$/;"	t	struct:qmcplusplus::NumericalJastrow
FNOUT	Jastrow/SplineFunctors.h	/^  typedef CubicBspline<RT,LINEAR_1DGRID,FIRSTDERIV_CONSTRAINTS> FNOUT;$/;"	t	struct:qmcplusplus::CubicSplineBasisSet
FOURBODY	OrbitalConstraintsBase.h	/^  enum {MULTIPLE=0, LONGRANGE, ONEBODY, TWOBODY, THREEBODY, FOURBODY};$/;"	e	enum:qmcplusplus::OrbitalConstraintsBase::__anon19
FT	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  typedef BsplineFunctor<OrbitalBase::RealType> FT;$/;"	t	class:qmcplusplus::OneBodyJastrowOrbitalBspline
FT	Jastrow/ThreeBodyPade.h	/^  typedef int FT;$/;"	t	class:qmcplusplus::ThreeBodyPade
FT	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  typedef BsplineFunctor<OrbitalBase::RealType> FT;$/;"	t	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
FermionBase	FermionBase.h	/^struct FermionBase$/;"	s	namespace:qmcplusplus
FermionWF	TrialWaveFunction.h	/^  FermionBase* FermionWF;$/;"	m	class:qmcplusplus::TrialWaveFunction
FileName	EinsplineSetBuilder.h	/^  std::string FileName;$/;"	m	struct:qmcplusplus::H5OrbSet
FirstAddressOfFm	Fermion/DiracDeterminantWithBackflow.h	/^  ValueType *FirstAddressOfFm;$/;"	m	class:qmcplusplus::DiracDeterminantWithBackflow
FirstAddressOfG	AGPDeterminant.h	/^  ParticleSet::ParticleValue_t *FirstAddressOfG;$/;"	m	class:qmcplusplus::AGPDeterminant
FirstAddressOfG	Experimental/DiracDeterminant.h	/^  ValueType *FirstAddressOfG;$/;"	m	class:qmcplusplus::DiracDeterminant
FirstAddressOfG	Fermion/DiracDeterminantBase.h	/^  ParticleSet::ParticleValue_t *FirstAddressOfG;$/;"	m	class:qmcplusplus::DiracDeterminantBase
FirstAddressOfG	Fermion/MultiSlaterDeterminantFast.h	/^  ParticleSet::ParticleValue_t *FirstAddressOfG;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
FirstAddressOfGGG	Fermion/DiracDeterminantWithBackflow.h	/^  ValueType *FirstAddressOfGGG;$/;"	m	class:qmcplusplus::DiracDeterminantWithBackflow
FirstAddressOfGrads	Fermion/MultiDiracDeterminantBase.h	/^  ValueType *FirstAddressOfGrads;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
FirstAddressOfGrads	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueType *FirstAddressOfGrads;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
FirstAddressOfdU	Experimental/TwoBodyJastrowFunction.Shared.h	/^  ValueType *FirstAddressOfdU, *LastAddressOfdU;$/;"	m	class:qmcplusplus::TwoBodyJastrow
FirstAddressOfdU	Experimental/TwoBodyJastrowFunction.h	/^  ValueType *FirstAddressOfdU, *LastAddressOfdU;$/;"	m	class:qmcplusplus::TwoBodyJastrow
FirstAddressOfdU	IonOrbital.h	/^  RealType *FirstAddressOfdU, *LastAddressOfdU;$/;"	m	struct:qmcplusplus::IonOrbital
FirstAddressOfdU	Jastrow/LRTwoBodyJastrow.h	/^  RealType *FirstAddressOfdU;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
FirstAddressOfdU	Jastrow/OneBodyJastrowOrbital.h	/^  RealType *FirstAddressOfdU, *LastAddressOfdU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbital
FirstAddressOfdU	Jastrow/OneBodySpinJastrowOrbital.h	/^  RealType *FirstAddressOfdU;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
FirstAddressOfdU	Jastrow/ThreeBodyJastrowOrbital.h	/^  ValueType *FirstAddressOfdU, *LastAddressOfdU;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
FirstAddressOfdU	Jastrow/ThreeBodyPade.h	/^  ValueType *FirstAddressOfdU, *LastAddressOfdU;$/;"	m	class:qmcplusplus::ThreeBodyPade
FirstAddressOfdU	Jastrow/TwoBodyJastrowOrbital.h	/^  RealType *FirstAddressOfdU, *LastAddressOfdU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
FirstAddressOfdU	Jastrow/eeI_JastrowOrbital.h	/^  RealType *FirstAddressOfdU, *LastAddressOfdU;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
FirstAddressOfdV	Experimental/DiracDeterminant.h	/^  ValueType *FirstAddressOfdV;$/;"	m	class:qmcplusplus::DiracDeterminant
FirstAddressOfdV	Fermion/DiracDeterminantBase.h	/^  ValueType *FirstAddressOfdV;$/;"	m	class:qmcplusplus::DiracDeterminantBase
FirstAddressOfdVD	AGPDeterminant.h	/^  BasisSetType::ValueType *FirstAddressOfdVD;$/;"	m	class:qmcplusplus::AGPDeterminant
FirstAddressOfdVU	AGPDeterminant.h	/^  BasisSetType::ValueType *FirstAddressOfdVU;$/;"	m	class:qmcplusplus::AGPDeterminant
FirstAddressOfdY	AGPDeterminant.h	/^  BasisSetType::ValueType *FirstAddressOfdY;$/;"	m	class:qmcplusplus::AGPDeterminant
FirstAddressOfdY	Jastrow/ThreeBodyBlockSparse.h	/^  RealType *FirstAddressOfdY;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
FirstAddressOfdY	Jastrow/ThreeBodyGeminal.h	/^  RealType *FirstAddressOfdY;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
FirstAddressOfdpsiM	Fermion/MultiDiracDeterminantBase.h	/^  ValueType *FirstAddressOfdpsiM;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
FirstAddressOfdpsiM	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueType *FirstAddressOfdpsiM;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
FirstAddressOfgU	Jastrow/ThreeBodyBlockSparse.h	/^  RealType *FirstAddressOfgU;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
FirstAddressOfgU	Jastrow/ThreeBodyGeminal.h	/^  RealType *FirstAddressOfgU;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
FirstBand	BandInfo.h	/^  int FirstBand;$/;"	m	struct:qmcplusplus::BandInfoGroup
FirstIndex	Experimental/DiracDeterminant.h	/^  int FirstIndex;$/;"	m	class:qmcplusplus::DiracDeterminant
FirstIndex	Fermion/DiracDeterminantBase.h	/^  int FirstIndex;$/;"	m	class:qmcplusplus::DiracDeterminantBase
FirstIndex	Fermion/MultiDiracDeterminantBase.h	/^  int FirstIndex;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
FirstIndex	Fermion/MultiDiracDeterminantWithBackflow.h	/^  int FirstIndex;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
FirstIndex_dn	Fermion/MultiSlaterDeterminant.h	/^  int FirstIndex_dn, LastIndex_dn;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
FirstIndex_dn	Fermion/MultiSlaterDeterminantFast.h	/^  int FirstIndex_dn;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
FirstIndex_up	Fermion/MultiSlaterDeterminant.h	/^  int FirstIndex_up, LastIndex_up;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
FirstIndex_up	Fermion/MultiSlaterDeterminantFast.h	/^  int FirstIndex_up;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
FirstOfA	Fermion/BackflowFunctionBase.h	/^  RealType *FirstOfA, *LastOfA;$/;"	m	class:qmcplusplus::BackflowFunctionBase
FirstOfA	Fermion/BackflowTransformation.h	/^  RealType *FirstOfA, *LastOfA;$/;"	m	class:qmcplusplus::BackflowTransformation
FirstOfA_temp	Fermion/BackflowTransformation.h	/^  RealType *FirstOfA_temp, *LastOfA_temp;$/;"	m	class:qmcplusplus::BackflowTransformation
FirstOfB	Fermion/BackflowFunctionBase.h	/^  RealType *FirstOfB, *LastOfB;$/;"	m	class:qmcplusplus::BackflowFunctionBase
FirstOfB	Fermion/BackflowTransformation.h	/^  RealType *FirstOfB, *LastOfB;$/;"	m	class:qmcplusplus::BackflowTransformation
FirstOfB_temp	Fermion/BackflowTransformation.h	/^  RealType *FirstOfB_temp, *LastOfB_temp;$/;"	m	class:qmcplusplus::BackflowTransformation
FirstOfP	Fermion/BackflowTransformation.h	/^  RealType *FirstOfP, *LastOfP;$/;"	m	class:qmcplusplus::BackflowTransformation
FirstOfU	Fermion/BackflowFunctionBase.h	/^  RealType *FirstOfU, *LastOfU;$/;"	m	class:qmcplusplus::BackflowFunctionBase
FirstOrderSplines	EinsplineSet.h	/^  std::vector<TinyVector<SplineType*,OHMMS_DIM> > FirstOrderSplines;$/;"	m	class:qmcplusplus::EinsplineSetExtended
FirstSPO	BandInfo.h	/^  int FirstSPO;$/;"	m	struct:qmcplusplus::BandInfoGroup
FirstTime	Jastrow/TwoBodyJastrowOrbital.h	/^  bool FirstTime;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
FirstTime	Jastrow/eeI_JastrowOrbital.h	/^  bool FirstTime;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
Fk	Fermion/Backflow_ee_kSpace.h	/^  std::vector<RealType> Fk;$/;"	m	class:qmcplusplus::Backflow_ee_kSpace
Fk	Jastrow/LRBreakupUtilities.h	/^  inline T Fk(T k, T rc)$/;"	f	struct:qmcplusplus::DerivRPABreakup
Fk	Jastrow/LRBreakupUtilities.h	/^  inline T Fk(T k, T rc)$/;"	f	struct:qmcplusplus::DerivYukawaBreakup
Fk	Jastrow/LRBreakupUtilities.h	/^  inline T Fk(T k, T rc)$/;"	f	struct:qmcplusplus::EPRPABreakup
Fk	Jastrow/LRBreakupUtilities.h	/^  inline T Fk(T k, T rc)$/;"	f	struct:qmcplusplus::RPABFeeBreakup
Fk	Jastrow/LRBreakupUtilities.h	/^  inline T Fk(T k, T rc)$/;"	f	struct:qmcplusplus::RPABreakup
Fk	Jastrow/LRBreakupUtilities.h	/^  inline T Fk(T k, T rc)$/;"	f	struct:qmcplusplus::YukawaBreakup
Fk	Jastrow/LRBreakupUtilities.h	/^  inline T Fk(T k, T rc)$/;"	f	struct:qmcplusplus::derivEPRPABreakup
Fk	Jastrow/LRTwoBodyJastrow.h	/^  Vector<RealType> Fk;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
Fk_0	Jastrow/LRTwoBodyJastrow.h	/^  Vector<RealType> Fk_0;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
Fk_1	Jastrow/LRTwoBodyJastrow.h	/^  Vector<RealType> Fk_1;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
Fk_symm	Jastrow/LRTwoBodyJastrow.h	/^  Vector<RealType> Fk_symm;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
FkbyKK	Jastrow/LRTwoBodyJastrow.h	/^  std::vector<RealType> FkbyKK;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
FloatingGrid	Experimental/TricubicBsplineSetBuilder.h	/^  bool FloatingGrid;$/;"	m	class:qmcplusplus::TricubicBsplineSetBuilder
Fmask	Fermion/Backflow_eI_spin.h	/^  Matrix<int> Fmask;$/;"	m	class:qmcplusplus::Backflow_eI_spin
Fmask	Jastrow/DiffOneBodySpinJastrowOrbital.h	/^  Matrix<int> Fmask;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
Fmask	Jastrow/OneBodySpinJastrowOrbital.h	/^  Matrix<int> Fmask;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
Fmat	Fermion/DiracDeterminantWithBackflow.h	/^  GradMatrix_t Fmat;$/;"	m	class:qmcplusplus::DiracDeterminantWithBackflow
Fmat	Fermion/MultiDiracDeterminantWithBackflow.h	/^  GradMatrix_t Fmat;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
Fmatdiag	Fermion/DiracDeterminantWithBackflow.h	/^  GradVector_t Fmatdiag;$/;"	m	class:qmcplusplus::DiracDeterminantWithBackflow
Fmatdiag	Fermion/MultiDiracDeterminantWithBackflow.h	/^  GradVector_t Fmatdiag;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
Fmatdiag_temp	Fermion/DiracDeterminantWithBackflow.h	/^  GradVector_t Fmatdiag_temp;$/;"	m	class:qmcplusplus::DiracDeterminantWithBackflow
Fmatdiag_temp	Fermion/MultiDiracDeterminantWithBackflow.h	/^  GradVector_t Fmatdiag_temp;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
Form of the Jastrow	Jastrow/eeI_Jastrow.tex	/^\\newcommand{\\brij}{\\mathbf{r}_{ij}}$/;"	s
Format	EinsplineSetBuilder.h	/^  FormatType Format;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
FormatType	EinsplineSetBuilder.h	/^  typedef enum {QMCPACK, ESHDF} FormatType;$/;"	t	class:qmcplusplus::EinsplineSetBuilder	typeref:enum:qmcplusplus::EinsplineSetBuilder::__anon5
FracPart	EinsplineSetBuilderCommon.cpp	/^FracPart (const TinyVector<T,3>& twist)$/;"	f	namespace:qmcplusplus
FracPart	Experimental/EinsplineSetBuilder.cpp	/^FracPart (const TinyVector<T,3>& twist)$/;"	f	namespace:qmcplusplus
FreeLambda	Jastrow/ThreeBodyBlockSparse.h	/^  Matrix<int> FreeLambda;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
FreeLambda	Jastrow/ThreeBodyGeminal.h	/^  Vector<int> FreeLambda;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
Fs	Jastrow/DiffOneBodyJastrowOrbital.h	/^  std::vector<FT*> Fs;$/;"	m	class:qmcplusplus::DiffOneBodyJastrowOrbital
Fs	Jastrow/OneBodyJastrowOrbital.h	/^  std::vector<FT*> Fs;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbital
Fs	Jastrow/ThreeBodyJastrowOrbital.h	/^  std::vector<FT*> Fs;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
Fs	Jastrow/ThreeBodyPade.h	/^  std::vector<FT*> Fs;$/;"	m	class:qmcplusplus::ThreeBodyPade
FullBands	EinsplineSetBuilder.h	/^  std::vector<std::vector<BandInfo>*> FullBands;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
FuncList	Jastrow/Experimental/PadeConstraints.h	/^  std::vector<FuncType*> FuncList;$/;"	m	struct:qmcplusplus::PadeConstraints
FuncList	Jastrow/Experimental/PadeConstraints.h	/^  std::vector<FuncType*> FuncList;$/;"	m	struct:qmcplusplus::ScaledPadeConstraints
FuncList	Jastrow/Experimental/WMConstraints.h	/^  std::vector<FuncType*> FuncList;$/;"	m	struct:qmcplusplus::WMConstraints
FuncType	Experimental/TwoBodyJastrowFunction.Shared.h	/^  typedef FT FuncType;$/;"	t	class:qmcplusplus::TwoBodyJastrow
FuncType	Experimental/TwoBodyJastrowFunction.h	/^  typedef FT FuncType;$/;"	t	class:qmcplusplus::TwoBodyJastrow
FuncType	Jastrow/Experimental/NJAABuilder.h	/^  typedef NumericalJastrow<RealType> FuncType;$/;"	t	struct:qmcplusplus::NJAABuilder
FuncType	Jastrow/Experimental/NJABBuilder.h	/^  typedef NumericalJastrow<RealType> FuncType;$/;"	t	struct:qmcplusplus::NJABBuilder
FuncType	Jastrow/Experimental/PadeConstraints.h	/^  typedef PadeFunctor<RealType> FuncType;$/;"	t	struct:qmcplusplus::PadeConstraints
FuncType	Jastrow/Experimental/PadeConstraints.h	/^  typedef ScaledPadeFunctor<RealType> FuncType;$/;"	t	struct:qmcplusplus::ScaledPadeConstraints
FuncType	Jastrow/Experimental/WMConstraints.h	/^  typedef CubicBsplineSingle<RealType> FuncType;$/;"	t	struct:qmcplusplus::WMConstraints
FuncType	Jastrow/JastrowBasisBuilder.h	/^  std::string FuncType;$/;"	m	class:qmcplusplus::JastrowBasisBuilder
FuncType	Jastrow/OneBodyJastrowOrbital.h	/^  typedef FT FuncType;$/;"	t	class:qmcplusplus::OneBodyJastrowOrbital
FuncType	Jastrow/OneBodySpinJastrowOrbital.h	/^  typedef FT FuncType;$/;"	t	class:qmcplusplus::OneBodySpinJastrowOrbital
FuncType	Jastrow/RPAJastrow.h	/^  typedef BsplineFunctor<RealType> FuncType;$/;"	t	struct:qmcplusplus::RPAJastrow
FuncType	Jastrow/ThreeBodyPade.h	/^  typedef FT FuncType;$/;"	t	class:qmcplusplus::ThreeBodyPade
FuncType	Jastrow/TwoBodyJastrowOrbital.h	/^  typedef FT FuncType;$/;"	t	class:qmcplusplus::TwoBodyJastrowOrbital
FuncType	Jastrow/eeI_JastrowOrbital.h	/^  typedef FT FuncType;$/;"	t	class:qmcplusplus::eeI_JastrowOrbital
FuncType	Jastrow/singleRPAJastrowBuilder.h	/^  typedef CubicSplineSingle<RealType,SplineEngineType> FuncType;$/;"	t	struct:qmcplusplus::singleRPAJastrowBuilder
Funique	Jastrow/DiffOneBodyJastrowOrbital.h	/^  std::vector<FT*> Funique;$/;"	m	class:qmcplusplus::DiffOneBodyJastrowOrbital
Funique	Jastrow/OneBodyJastrowOrbital.h	/^  std::vector<FT*> Funique;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbital
Funique	Jastrow/ThreeBodyJastrowOrbital.h	/^  std::vector<FT*> Funique;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
G	TrialWaveFunction.h	/^  ParticleSet::ParticleGradient_t G;$/;"	m	class:qmcplusplus::TrialWaveFunction
GAUSSIAN_EXPAND	Experimental/GTOMolecularOrbitals.h	/^  enum {DONOT_EXPAND=0, GAUSSIAN_EXPAND=1, NATURAL_EXPAND};$/;"	e	enum:qmcplusplus::GTOMolecularOrbitals::__anon9
GAUSSIAN_EXPAND	Experimental/STOMolecularOrbitals.h	/^  enum {DONOT_EXPAND=0, GAUSSIAN_EXPAND=1, NATURAL_EXPAND};$/;"	e	enum:qmcplusplus::STOMolecularOrbitals::__anon8
GAUSSIAN_EXPAND	MolecularOrbitals/AtomicBasisBuilder.h	/^  enum {DONOT_EXPAND=0, GAUSSIAN_EXPAND=1, NATURAL_EXPAND, CARTESIAN_EXPAND, MOD_NATURAL_EXPAND};$/;"	e	enum:qmcplusplus::AtomicBasisBuilder::__anon16
GGGMatrix	Fermion/ci_node.h	/^  typedef Matrix<GGGType>           GGGMatrix;$/;"	t	struct:qmcplusplus::ci_node
GGGMatrix_t	BasisSetBase.h	/^  typedef Matrix<GGGType>                             GGGMatrix_t;$/;"	t	struct:qmcplusplus::BasisSetBase
GGGMatrix_t	Fermion/DiracDeterminantWithBackflow.h	/^  typedef SPOSetBase::GGGMatrix_t   GGGMatrix_t;$/;"	t	class:qmcplusplus::DiracDeterminantWithBackflow
GGGMatrix_t	Fermion/MultiDiracDeterminantWithBackflow.h	/^  typedef Matrix<GGGType>           GGGMatrix_t;$/;"	t	class:qmcplusplus::MultiDiracDeterminantBase
GGGMatrix_t	Fermion/MultiSlaterDeterminant.h	/^  typedef Matrix<GGGType>                            GGGMatrix_t;$/;"	t	class:qmcplusplus::MultiSlaterDeterminant
GGGMatrix_t	Fermion/MultiSlaterDeterminantFast.h	/^  typedef Matrix<GGGType>                            GGGMatrix_t;$/;"	t	class:qmcplusplus::MultiSlaterDeterminantFast
GGGMatrix_t	Fermion/SlaterDetOpt.h	/^    typedef Matrix<GGGType>                            GGGMatrix_t;$/;"	t	class:qmcplusplus::SlaterDetOpt
GGGMatrix_t	SPOSetBase.h	/^  typedef OrbitalSetTraits<ValueType>::GradHessMatrix_t GGGMatrix_t;$/;"	t	class:qmcplusplus::SPOSetBase
GGGMatrix_t	SphericalBasisSet.h	/^  typedef Matrix<GGGType>                            GGGMatrix_t;$/;"	t	struct:qmcplusplus::SphericalBasisSet
GGGType	BasisSetBase.h	/^  typedef TinyVector<HessType, OHMMS_DIM>                     GGGType;$/;"	t	struct:qmcplusplus::BasisSetBase
GGGType	Fermion/DiracDeterminantWithBackflow.h	/^  typedef SPOSetBase::GGGType       GGGType;$/;"	t	class:qmcplusplus::DiracDeterminantWithBackflow
GGGType	Fermion/MultiDiracDeterminantWithBackflow.h	/^  typedef TinyVector<HessType, 3>   GGGType;$/;"	t	class:qmcplusplus::MultiDiracDeterminantBase
GGGType	Fermion/MultiSlaterDeterminant.h	/^  typedef TinyVector<HessType, 3>                    GGGType;$/;"	t	class:qmcplusplus::MultiSlaterDeterminant
GGGType	Fermion/MultiSlaterDeterminantFast.h	/^  typedef TinyVector<HessType, OHMMS_DIM>                    GGGType;$/;"	t	class:qmcplusplus::MultiSlaterDeterminantFast
GGGType	Fermion/SlaterDetOpt.h	/^    typedef TinyVector<HessType, OHMMS_DIM>            GGGType;$/;"	t	class:qmcplusplus::SlaterDetOpt
GGGType	Fermion/ci_node.h	/^  typedef TinyVector<HessType, OHMMS_DIM>   GGGType;$/;"	t	struct:qmcplusplus::ci_node
GGGType	SPOSetBase.h	/^  typedef OrbitalSetTraits<ValueType>::GradHessType  GGGType;$/;"	t	class:qmcplusplus::SPOSetBase
GGGType	SphericalBasisSet.h	/^  typedef TinyVector<HessType, 3>                    GGGType;$/;"	t	struct:qmcplusplus::SphericalBasisSet
GGGVector	Fermion/ci_node.h	/^  typedef Vector<GGGType>           GGGVector;$/;"	t	struct:qmcplusplus::ci_node
GGGVector_t	BasisSetBase.h	/^  typedef Vector<GGGType>                             GGGVector_t;$/;"	t	struct:qmcplusplus::BasisSetBase
GGGVector_t	Fermion/DiracDeterminantWithBackflow.h	/^  typedef SPOSetBase::GGGVector_t   GGGVector_t;$/;"	t	class:qmcplusplus::DiracDeterminantWithBackflow
GGGVector_t	Fermion/MultiDiracDeterminantWithBackflow.h	/^  typedef Vector<GGGType>           GGGVector_t;$/;"	t	class:qmcplusplus::MultiDiracDeterminantBase
GGGVector_t	Fermion/MultiSlaterDeterminant.h	/^  typedef Vector<GGGType>                            GGGVector_t;$/;"	t	class:qmcplusplus::MultiSlaterDeterminant
GGGVector_t	Fermion/MultiSlaterDeterminantFast.h	/^  typedef Vector<GGGType>                            GGGVector_t;$/;"	t	class:qmcplusplus::MultiSlaterDeterminantFast
GGGVector_t	Fermion/SlaterDetOpt.h	/^    typedef Vector<GGGType>                            GGGVector_t;$/;"	t	class:qmcplusplus::SlaterDetOpt
GGGVector_t	SPOSetBase.h	/^  typedef OrbitalSetTraits<ValueType>::GradHessVector_t GGGVector_t;$/;"	t	class:qmcplusplus::SPOSetBase
GGGVector_t	SphericalBasisSet.h	/^  typedef Vector<GGGType>                            GGGVector_t;$/;"	t	struct:qmcplusplus::SphericalBasisSet
GGt	EinsplineAdoptor.h	/^  Tensor<ST,D>               GGt;$/;"	m	struct:qmcplusplus::SplineAdoptorBase
GGt	EinsplineSet.h	/^  Tensor<RealType,OHMMS_DIM> GGt;$/;"	m	class:qmcplusplus::EinsplineSet
GGt	EinsplineSetBuilder.h	/^  Tensor<double,OHMMS_DIM> Lattice, RecipLattice, LatticeInv, SuperLattice, GGt;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
GGt	Experimental/Bspline3DSetBase.h	/^  Tensor<RealType,DIM> GGt;$/;"	m	struct:qmcplusplus::Bspline3DSetBase
GGt	Experimental/EinsplineAdoptorPacked.h	/^  Tensor<real_type,D> GGt;$/;"	m	struct:qmcplusplus::SplineC2CAdoptorPacked
GGt	Experimental/EinsplineAdoptorPacked.h	/^  Tensor<real_type,D> GGt;$/;"	m	struct:qmcplusplus::SplineC2RAdoptorPacked
GGt	Experimental/EinsplineMixedAdoptor.h	/^  Tensor<ST,D> GGt;$/;"	m	struct:qmcplusplus::SplineMixedAdoptor
GGt	Experimental/EinsplineMixedAdoptor.h	/^  Tensor<ST,D> GGt;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
GGt	Experimental/SplineOpenAdoptor.h	/^  Tensor<ST,D> GGt;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
GGt	Spline3D/SplineGridHandler.h	/^  tensor_type GGt;$/;"	m	struct:qmcplusplus::SplineGridHandler
GIndex_t	PlaneWave/PWBasis.h	/^  typedef TinyVector<IndexType,3>       GIndex_t;$/;"	t	class:qmcplusplus::PWBasis
GLList	Fermion/DiracDeterminantCUDA.h	/^                              AWorkList, AinvWorkList, GLList;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
GLList_d	Fermion/DiracDeterminantCUDA.h	/^                                    newGradLaplList_d, AWorkList_d, AinvWorkList_d, GLList_d;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
GPUSplines	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  std::vector<CudaSpline<CudaReal>*> GPUSplines, UniqueSplines;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
GPUSplines	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  std::vector<CudaSpline<CudaReal>*> GPUSplines, UniqueSplines;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
GPUgrads	TrialWaveFunction.h	/^  gpu::device_host_vector<CudaGradType>    GPUgrads;$/;"	m	class:qmcplusplus::TrialWaveFunction
GPUlapls	TrialWaveFunction.h	/^  gpu::device_host_vector<CudaValueType>   GPUlapls;$/;"	m	class:qmcplusplus::TrialWaveFunction
GPUratios	TrialWaveFunction.h	/^  gpu::device_host_vector<CudaValueType>   GPUratios;$/;"	m	class:qmcplusplus::TrialWaveFunction
GSGrad	AFMSPOSet.h	/^  GradVector_t  GSGrad, BasisGrad;$/;"	m	class:qmcplusplus::AFMSPOSet
GSGrad	OptimizableSPOSet.h	/^  GradVector_t  GSGrad, BasisGrad;$/;"	m	class:qmcplusplus::OptimizableSPOSet
GSGradMatrix	AFMSPOSet.h	/^  GradMatrix_t  GSGradMatrix, BasisGradMatrix;$/;"	m	class:qmcplusplus::AFMSPOSet
GSGradMatrix	OptimizableSPOSet.h	/^  GradMatrix_t  GSGradMatrix, BasisGradMatrix;$/;"	m	class:qmcplusplus::OptimizableSPOSet
GSLapl	AFMSPOSet.h	/^  ValueVector_t GSVal, BasisVal, GSLapl, BasisLapl;$/;"	m	class:qmcplusplus::AFMSPOSet
GSLapl	OptimizableSPOSet.h	/^  ValueVector_t GSVal, BasisVal, GSLapl, BasisLapl;$/;"	m	class:qmcplusplus::OptimizableSPOSet
GSLaplMatrix	AFMSPOSet.h	/^  ValueMatrix_t GSValMatrix, BasisValMatrix, GSLaplMatrix, BasisLaplMatrix, GradTmpSrc, GradTmpDest;$/;"	m	class:qmcplusplus::AFMSPOSet
GSLaplMatrix	OptimizableSPOSet.h	/^  ValueMatrix_t GSValMatrix, BasisValMatrix, GSLaplMatrix, BasisLaplMatrix, GradTmpSrc, GradTmpDest;$/;"	m	class:qmcplusplus::OptimizableSPOSet
GSOrbitals	AFMSPOSet.h	/^  SPOSetBase *GSOrbitals, *BasisOrbitals;$/;"	m	class:qmcplusplus::AFMSPOSet
GSOrbitals	OptimizableSPOSet.h	/^  SPOSetBase *GSOrbitals, *BasisOrbitals;$/;"	m	class:qmcplusplus::OptimizableSPOSet
GSVal	AFMSPOSet.h	/^  ValueVector_t GSVal, BasisVal, GSLapl, BasisLapl;$/;"	m	class:qmcplusplus::AFMSPOSet
GSVal	OptimizableSPOSet.h	/^  ValueVector_t GSVal, BasisVal, GSLapl, BasisLapl;$/;"	m	class:qmcplusplus::OptimizableSPOSet
GSValMatrix	AFMSPOSet.h	/^  ValueMatrix_t GSValMatrix, BasisValMatrix, GSLaplMatrix, BasisLaplMatrix, GradTmpSrc, GradTmpDest;$/;"	m	class:qmcplusplus::AFMSPOSet
GSValMatrix	OptimizableSPOSet.h	/^  ValueMatrix_t GSValMatrix, BasisValMatrix, GSLaplMatrix, BasisLaplMatrix, GradTmpSrc, GradTmpDest;$/;"	m	class:qmcplusplus::OptimizableSPOSet
GTOBuilder	MolecularOrbitals/GTOBuilder.cpp	/^GTOBuilder::GTOBuilder(xmlNodePtr cur): Normalized(true), m_orbitals(0)$/;"	f	class:qmcplusplus::GTOBuilder
GTOBuilder	MolecularOrbitals/GTOBuilder.h	/^class GTOBuilder: public QMCTraits$/;"	c	namespace:qmcplusplus
GTOMolecularOrbitals	Experimental/GTOMolecularOrbitals.h	/^class GTOMolecularOrbitals: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
GTOMolecularOrbitals	MolecularOrbitals/GTOMolecularOrbitals.cpp	/^GTOMolecularOrbitals::GTOMolecularOrbitals(ParticleSet& els, TrialWaveFunction& psi,$/;"	f	class:qmcplusplus::GTOMolecularOrbitals
GUARD_QDWF_H	Experimental/QDwf.h	16;"	d
G_gamma	Fermion/DiracDeterminantAFM.h	/^  GradMatrix_t  BasisGrad, dgrad_dC, G_gamma;$/;"	m	class:qmcplusplus::DiracDeterminantAFM
G_gamma	Fermion/DiracDeterminantOpt.h	/^  GradMatrix_t  BasisGrad, dgrad_dC, G_gamma;$/;"	m	class:qmcplusplus::DiracDeterminantOpt
Gamma	Fermion/DiracDeterminantAFM.h	/^  ValueMatrix_t Gamma, L_gamma;$/;"	m	class:qmcplusplus::DiracDeterminantAFM
Gamma	Fermion/DiracDeterminantOpt.h	/^  ValueMatrix_t Gamma, L_gamma;$/;"	m	class:qmcplusplus::DiracDeterminantOpt
GammaPerm	Jastrow/PolynomialFunctor3D.h	/^  std::vector<int> GammaPerm;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
GammaVec	Jastrow/PolynomialFunctor3D.h	/^  std::vector<real_type> GammaVec, dval_Vec;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
GaussianFunctor	Fermion/GaussianFunctor.h	/^  GaussianFunctor():NumFuns(0),IsOptimizing(false) {}$/;"	f	class:qmcplusplus::GaussianFunctor
GaussianFunctor	Fermion/GaussianFunctor.h	/^class GaussianFunctor: public OptimizableFunctorBase$/;"	c	namespace:qmcplusplus
GaussianFunctor	Jastrow/GaussianFunctor.h	/^  GaussianFunctor(real_type a=1.0, real_type c=1.0,real_type rc=1.0):ID_A("G_A"), ID_C("G_C"),ID_RC("G_RC"), optimizable(true)$/;"	f	struct:qmcplusplus::GaussianFunctor
GaussianFunctor	Jastrow/GaussianFunctor.h	/^struct GaussianFunctor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
GeminalBasis	AGPDeterminant.h	/^  BasisSetType* GeminalBasis;$/;"	m	class:qmcplusplus::AGPDeterminant
GeminalBasis	Jastrow/ThreeBodyBlockSparse.h	/^  BasisSetType *GeminalBasis;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
GeminalBasis	Jastrow/ThreeBodyGeminal.h	/^  BasisSetType *GeminalBasis;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
GetLattice	EinsplineSet.cpp	/^EinsplineSet::GetLattice()$/;"	f	class:qmcplusplus::EinsplineSet
GradHessMatrix_t	OrbitalSetTraits.h	/^  typedef Matrix<GradHessType>  GradHessMatrix_t;$/;"	t	struct:qmcplusplus::OrbitalSetTraits
GradHessType	OrbitalSetTraits.h	/^  typedef TinyVector<Tensor<ValueType,DIM>,DIM> GradHessType;$/;"	t	struct:qmcplusplus::OrbitalSetTraits
GradHessVector_t	OrbitalSetTraits.h	/^  typedef Vector<GradHessType>  GradHessVector_t;$/;"	t	struct:qmcplusplus::OrbitalSetTraits
GradLaplGPU	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> SumGPU, GradLaplGPU, OneGradGPU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
GradLaplGPU	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> SumGPU, GradLaplGPU, OneGradGPU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
GradLaplHost	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> SumHost, GradLaplHost, OneGradHost;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
GradLaplHost	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> SumHost, GradLaplHost, OneGradHost;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
GradMatrix	Fermion/ci_node.h	/^  typedef Matrix<GradType>          GradMatrix;$/;"	t	struct:qmcplusplus::ci_node
GradMatrix_t	AGPDeterminant.h	/^  typedef BasisSetType::GradMatrix_t  GradMatrix_t;$/;"	t	class:qmcplusplus::AGPDeterminant
GradMatrix_t	BasisSetBase.h	/^  typedef typename OrbitalSetTraits<T>::GradMatrix_t  GradMatrix_t;$/;"	t	struct:qmcplusplus::BasisSetBase
GradMatrix_t	Experimental/CorrectingOrbitalBasisSet.h	/^  typedef typename BasisSetType::GradMatrix_t  GradMatrix_t;$/;"	t	struct:qmcplusplus::CorrectingOrbitalBasisSet
GradMatrix_t	Fermion/BackflowFunctionBase.h	/^  typedef Matrix<GradType>      GradMatrix_t;$/;"	t	class:qmcplusplus::BackflowFunctionBase
GradMatrix_t	Fermion/BackflowTransformation.h	/^  typedef Matrix<GradType>      GradMatrix_t;$/;"	t	class:qmcplusplus::BackflowTransformation
GradMatrix_t	Fermion/DiracDeterminantBase.h	/^  typedef SPOSetBase::GradMatrix_t  GradMatrix_t;$/;"	t	class:qmcplusplus::DiracDeterminantBase
GradMatrix_t	Fermion/DiracDeterminantCUDA.h	/^  typedef SPOSetBase::GradMatrix_t  GradMatrix_t;$/;"	t	class:qmcplusplus::DiracDeterminantCUDA
GradMatrix_t	Fermion/DiracDeterminantIterative.h	/^  typedef SPOSetBase::GradMatrix_t  GradMatrix_t;$/;"	t	class:qmcplusplus::DiracDeterminantIterative
GradMatrix_t	Fermion/DiracDeterminantTruncation.h	/^  typedef SPOSetBase::GradMatrix_t  GradMatrix_t;$/;"	t	class:qmcplusplus::DiracDeterminantTruncation
GradMatrix_t	Fermion/DiracDeterminantWithBackflow.h	/^  typedef SPOSetBase::GradMatrix_t  GradMatrix_t;$/;"	t	class:qmcplusplus::DiracDeterminantWithBackflow
GradMatrix_t	Fermion/ExcitationClass.h	/^  typedef SPOSetBase::GradMatrix_t  GradMatrix_t;$/;"	t	class:qmcplusplus::ExcitationClass
GradMatrix_t	Fermion/MultiDiracDeterminantBase.h	/^  typedef SPOSetBase::GradMatrix_t  GradMatrix_t;$/;"	t	class:qmcplusplus::MultiDiracDeterminantBase
GradMatrix_t	Fermion/MultiDiracDeterminantWithBackflow.h	/^  typedef SPOSetBase::GradMatrix_t  GradMatrix_t;$/;"	t	class:qmcplusplus::MultiDiracDeterminantBase
GradMatrix_t	LocalizedBasisSet.h	/^  typedef typename BasisSetType::GradMatrix_t  GradMatrix_t;$/;"	t	struct:qmcplusplus::LocalizedBasisSet
GradMatrix_t	OrbitalBase.h	/^  typedef OrbitalSetTraits<ValueType>::GradMatrix_t       GradMatrix_t;$/;"	t	struct:qmcplusplus::OrbitalBase
GradMatrix_t	OrbitalSetTraits.h	/^  typedef Matrix<GradType>      GradMatrix_t;$/;"	t	struct:qmcplusplus::OrbitalSetTraits
GradMatrix_t	SPOSetBase.h	/^  typedef OrbitalSetTraits<ValueType>::GradMatrix_t  GradMatrix_t;$/;"	t	class:qmcplusplus::SPOSetBase
GradMatrix_t	SparseLocalizedBasisSet.h	/^  typedef typename BasisSetType::GradMatrix_t  GradMatrix_t;$/;"	t	struct:qmcplusplus::SparseLocalizedBasisSet
GradMatrix_t	SphericalBasisSet.h	/^  typedef typename OrbitalSetTraits<value_type>::GradMatrix_t  GradMatrix_t;$/;"	t	struct:qmcplusplus::SphericalBasisSet
GradMatrix_t	SphericalOrbitalSet.h	/^  typedef typename OrbitalSetTraits<value_type>::GradMatrix_t  GradMatrix_t;$/;"	t	struct:qmcplusplus::SphericalOrbitalSet
GradMatrix_t	TrialWaveFunction.h	/^  typedef OrbitalBase::GradMatrix_t    GradMatrix_t;$/;"	t	class:qmcplusplus::TrialWaveFunction
GradTmpDest	AFMSPOSet.h	/^  ValueMatrix_t GSValMatrix, BasisValMatrix, GSLaplMatrix, BasisLaplMatrix, GradTmpSrc, GradTmpDest;$/;"	m	class:qmcplusplus::AFMSPOSet
GradTmpDest	OptimizableSPOSet.h	/^  ValueMatrix_t GSValMatrix, BasisValMatrix, GSLaplMatrix, BasisLaplMatrix, GradTmpSrc, GradTmpDest;$/;"	m	class:qmcplusplus::OptimizableSPOSet
GradTmpSrc	AFMSPOSet.h	/^  ValueMatrix_t GSValMatrix, BasisValMatrix, GSLaplMatrix, BasisLaplMatrix, GradTmpSrc, GradTmpDest;$/;"	m	class:qmcplusplus::AFMSPOSet
GradTmpSrc	OptimizableSPOSet.h	/^  ValueMatrix_t GSValMatrix, BasisValMatrix, GSLaplMatrix, BasisLaplMatrix, GradTmpSrc, GradTmpDest;$/;"	m	class:qmcplusplus::OptimizableSPOSet
GradType	Experimental/TricubicBsplineTwistSet.h	/^  typedef TinyVector<value_type,3> GradType;$/;"	t	class:qmcplusplus::TricubicBsplineTwistSet
GradType	Fermion/BackflowFunctionBase.h	/^  typedef TinyVector<RealType,DIM>       GradType;$/;"	t	class:qmcplusplus::BackflowFunctionBase
GradType	Fermion/BackflowTransformation.h	/^  typedef TinyVector<RealType,DIM>       GradType;$/;"	t	class:qmcplusplus::BackflowTransformation
GradType	Fermion/ExcitationClass.h	/^  typedef TinyVector<ValueType,3> GradType;$/;"	t	class:qmcplusplus::ExcitationClass
GradType	Fermion/ci_node.h	/^  typedef TinyVector<value_type,OHMMS_DIM>  GradType;$/;"	t	struct:qmcplusplus::ci_node
GradType	IonOrbital.cpp	/^typedef IonOrbital::GradType  GradType;$/;"	t	namespace:qmcplusplus	file:
GradType	LCOrbitals.h	/^  typedef typename BS::GradType  GradType;$/;"	t	class:qmcplusplus::LCOrbitals
GradType	OrbitalBuilderBase.h	/^  typedef TrialWaveFunction::GradType  GradType;$/;"	t	class:qmcplusplus::OrbitalBuilderBase
GradType	OrbitalSetTraits.h	/^  typedef TinyVector<ValueType,DIM>      GradType;$/;"	t	struct:qmcplusplus::OrbitalSetTraits
GradType	SphericalBasisSet.h	/^  typedef typename OrbitalSetTraits<value_type>::GradType      GradType;$/;"	t	struct:qmcplusplus::SphericalBasisSet
GradType	SphericalOrbitalSet.h	/^  typedef typename OrbitalSetTraits<value_type>::GradType      GradType;$/;"	t	struct:qmcplusplus::SphericalOrbitalSet
GradType	TrialWaveFunction.h	/^  typedef OrbitalBase::GradType           GradType;$/;"	t	class:qmcplusplus::TrialWaveFunction
GradVector	Fermion/ci_node.h	/^  typedef Vector<GradType>          GradVector;$/;"	t	struct:qmcplusplus::ci_node
GradVectorType	DiffOrbitalBase.h	/^  typedef ParticleSet::ParticleGradient_t   GradVectorType;$/;"	t	struct:qmcplusplus::DiffOrbitalBase
GradVectorType	OrbitalBase.h	/^  typedef ParticleAttrib<GradType>  GradVectorType;$/;"	t	struct:qmcplusplus::OrbitalBase
GradVector_t	AGPDeterminant.h	/^  typedef BasisSetType::GradVector_t  GradVector_t;$/;"	t	class:qmcplusplus::AGPDeterminant
GradVector_t	BasisSetBase.h	/^  typedef typename OrbitalSetTraits<T>::GradVector_t  GradVector_t;$/;"	t	struct:qmcplusplus::BasisSetBase
GradVector_t	Experimental/CorrectingOrbitalBasisSet.h	/^  typedef typename BasisSetType::GradVector_t  GradVector_t;$/;"	t	struct:qmcplusplus::CorrectingOrbitalBasisSet
GradVector_t	Experimental/CuspCorr.h	/^  typedef OrbitalSetTraits<ValueType>::GradVector_t  GradVector_t;$/;"	t	class:qmcplusplus::CuspCorr
GradVector_t	Fermion/BackflowFunctionBase.h	/^  typedef Vector<GradType>      GradVector_t;$/;"	t	class:qmcplusplus::BackflowFunctionBase
GradVector_t	Fermion/BackflowTransformation.h	/^  typedef Vector<GradType>      GradVector_t;$/;"	t	class:qmcplusplus::BackflowTransformation
GradVector_t	Fermion/DiracDeterminantBase.h	/^  typedef SPOSetBase::GradVector_t  GradVector_t;$/;"	t	class:qmcplusplus::DiracDeterminantBase
GradVector_t	Fermion/DiracDeterminantCUDA.h	/^  typedef SPOSetBase::GradVector_t  GradVector_t;$/;"	t	class:qmcplusplus::DiracDeterminantCUDA
GradVector_t	Fermion/DiracDeterminantIterative.h	/^  typedef SPOSetBase::GradVector_t  GradVector_t;$/;"	t	class:qmcplusplus::DiracDeterminantIterative
GradVector_t	Fermion/DiracDeterminantTruncation.h	/^  typedef SPOSetBase::GradVector_t  GradVector_t;$/;"	t	class:qmcplusplus::DiracDeterminantTruncation
GradVector_t	Fermion/DiracDeterminantWithBackflow.h	/^  typedef SPOSetBase::GradVector_t  GradVector_t;$/;"	t	class:qmcplusplus::DiracDeterminantWithBackflow
GradVector_t	Fermion/ExcitationClass.h	/^  typedef SPOSetBase::GradVector_t  GradVector_t;$/;"	t	class:qmcplusplus::ExcitationClass
GradVector_t	Fermion/MultiDiracDeterminantBase.h	/^  typedef SPOSetBase::GradVector_t  GradVector_t;$/;"	t	class:qmcplusplus::MultiDiracDeterminantBase
GradVector_t	Fermion/MultiDiracDeterminantWithBackflow.h	/^  typedef SPOSetBase::GradVector_t  GradVector_t;$/;"	t	class:qmcplusplus::MultiDiracDeterminantBase
GradVector_t	Fermion/MultiSlaterDeterminant.h	/^  typedef OrbitalSetTraits<ValueType>::GradVector_t  GradVector_t;$/;"	t	class:qmcplusplus::MultiSlaterDeterminant
GradVector_t	Fermion/MultiSlaterDeterminantFast.h	/^  typedef OrbitalSetTraits<ValueType>::GradVector_t  GradVector_t;$/;"	t	class:qmcplusplus::MultiSlaterDeterminantFast
GradVector_t	Fermion/SlaterDetOpt.h	/^    typedef OrbitalSetTraits<ValueType>::GradVector_t  GradVector_t;$/;"	t	class:qmcplusplus::SlaterDetOpt
GradVector_t	LocalizedBasisSet.h	/^  typedef typename BasisSetType::GradVector_t  GradVector_t;$/;"	t	struct:qmcplusplus::LocalizedBasisSet
GradVector_t	OrbitalSetTraits.h	/^  typedef Vector<GradType>      GradVector_t;$/;"	t	struct:qmcplusplus::OrbitalSetTraits
GradVector_t	SPOSetBase.h	/^  typedef OrbitalSetTraits<ValueType>::GradVector_t  GradVector_t;$/;"	t	class:qmcplusplus::SPOSetBase
GradVector_t	SPOSetScanner.h	/^    typedef OrbitalSetTraits<ValueType>::GradVector_t  GradVector_t;$/;"	t	class:qmcplusplus::SPOSetScanner
GradVector_t	SparseLocalizedBasisSet.h	/^  typedef typename BasisSetType::GradVector_t  GradVector_t;$/;"	t	struct:qmcplusplus::SparseLocalizedBasisSet
GradVector_t	SphericalBasisSet.h	/^  typedef typename OrbitalSetTraits<value_type>::GradVector_t  GradVector_t;$/;"	t	struct:qmcplusplus::SphericalBasisSet
GradVector_t	SphericalOrbitalSet.h	/^  typedef typename OrbitalSetTraits<value_type>::GradVector_t  GradVector_t;$/;"	t	struct:qmcplusplus::SphericalOrbitalSet
GradViewer_t	HarmonicOscillator/SHOSet.h	/^    typedef VectorViewer<grad_type>  GradViewer_t;$/;"	t	struct:qmcplusplus::SHOSet
Gradient_t	Experimental/DiracDeterminant.h	/^  typedef blitz::Array<GradType,2>  Gradient_t;$/;"	t	class:qmcplusplus::DiracDeterminant
Gradients and Laplacians	Jastrow/kSpaceJastrowNotes.tex	/^the primitive cell.$/;"	s
GridDelta	Jastrow/SplineFunctors.h	/^  real_type GridDelta;$/;"	m	struct:qmcplusplus::CubicSplineBasisSet
GridDelta	Jastrow/SplineFunctors.h	/^  real_type GridDelta;$/;"	m	struct:qmcplusplus::CubicSplineSingle
GridFactor	BsplineReaderBase.h	/^  int GridFactor;$/;"	m	struct:qmcplusplus::BsplineReaderBase
GridOrbitals	MixedSPOSet.h	/^  std::vector<NGOType*> GridOrbitals;$/;"	m	class:qmcplusplus::MixedSPOSet
GridType	Experimental/Bspline3DSetBase.h	/^  typedef TricubicBsplineGrid<ValueType>  GridType;$/;"	t	struct:qmcplusplus::Bspline3DSetBase
GridType	Experimental/SplineSetBuilder.h	/^  typedef TriCubicSplineT<ValueType,RealType>::GridType GridType;$/;"	t	class:qmcplusplus::SplineSetBuilder
GridType	Experimental/TricubicBsplineSPOSet.h	/^  typedef typename TricubicBsplineTraits<T>::GridType    GridType;$/;"	t	class:qmcplusplus::TricubicBsplineSPOSet
GridType	Experimental/TricubicBsplineTwistSet.h	/^  typedef typename TricubicBsplineTraits<T>::GridType    GridType;$/;"	t	class:qmcplusplus::TricubicBsplineTwistSet
GridType	Fermion/BackflowBuilder.h	/^  typedef LinearGrid<RealType> GridType;$/;"	t	class:qmcplusplus::BackflowBuilder
GridType	Jastrow/RPAJastrow.h	/^  typedef LinearGrid<RealType> GridType;$/;"	t	struct:qmcplusplus::RPAJastrow
GridType	Jastrow/singleRPAJastrowBuilder.h	/^  typedef LinearGrid<RealType> GridType;$/;"	t	struct:qmcplusplus::singleRPAJastrowBuilder
GridType	MolecularOrbitals/NGOBuilder.h	/^  typedef NGOrbital::grid_type                          GridType;$/;"	t	class:qmcplusplus::NGOBuilder
GridType	Spline3D/SplineBasisSet.h	/^  typedef GT   GridType;$/;"	t	class:qmcplusplus::SplineBasisSet
GridType_	Experimental/LCOrbitalSetWithCorrection.h	/^  typedef typename NGOBuilder::GridType GridType_;$/;"	t	class:qmcplusplus::LCOrbitalSetWithCorrection
GridType_t	SphericalBasisSet.h	/^  typedef GT                                                   GridType_t;$/;"	t	struct:qmcplusplus::SphericalBasisSet
GridXYZ	Experimental/NumericalOrbitalSetBuilder.h	/^  XYZCubicGrid<RealType>* GridXYZ;$/;"	m	class:qmcplusplus::NumericalOrbitalSetBuilder
GridXYZ	Experimental/SplineSetBuilder.h	/^  GridType* GridXYZ;$/;"	m	class:qmcplusplus::SplineSetBuilder
Grids	SphericalBasisSet.h	/^  std::vector<GT*> Grids;$/;"	m	struct:qmcplusplus::SphericalBasisSet
Grids	SphericalOrbitalSet.h	/^  std::vector<GT*> Grids;$/;"	m	struct:qmcplusplus::SphericalOrbitalSet
GroupID	BandInfo.h	/^  int GroupID;$/;"	m	struct:qmcplusplus::BandInfoGroup
Gtemp	Fermion/DiracDeterminantWithBackflow.h	/^  ParticleSet::ParticleGradient_t Gtemp;$/;"	m	class:qmcplusplus::DiracDeterminantWithBackflow
Gtemp	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ParticleSet::ParticleGradient_t Gtemp;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
Gvecs	EinsplineSetBuilder.h	/^  std::vector<std::vector<TinyVector<int,3> > > Gvecs;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
H5FileID	EinsplineSetBuilder.h	/^  hid_t H5FileID;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
H5FileName	EinsplineSetBuilder.h	/^  std::string H5FileName;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
H5OrbSet	EinsplineSetBuilder.h	/^  H5OrbSet ( std::string name, int spinSet, int numOrbs) :$/;"	f	struct:qmcplusplus::H5OrbSet
H5OrbSet	EinsplineSetBuilder.h	/^  H5OrbSet (const H5OrbSet &a) :$/;"	f	struct:qmcplusplus::H5OrbSet
H5OrbSet	EinsplineSetBuilder.h	/^  H5OrbSet()$/;"	f	struct:qmcplusplus::H5OrbSet
H5OrbSet	EinsplineSetBuilder.h	/^struct H5OrbSet$/;"	s	namespace:qmcplusplus
HEGGrid	ElectronGas/HEGGrid.h	/^  HEGGrid(PL_t& lat):Lattice(lat),kpoints_grid(0)$/;"	f	struct:qmcplusplus::HEGGrid
HEGGrid	ElectronGas/HEGGrid.h	/^  HEGGrid(PL_t& lat):Lattice(lat),twist(0.0), nctmp(-1), kpoints_grid(0)$/;"	f	struct:qmcplusplus::HEGGrid
HEGGrid	ElectronGas/HEGGrid.h	/^struct HEGGrid { };$/;"	s	namespace:qmcplusplus
HEGGrid	ElectronGas/HEGGrid.h	/^struct HEGGrid<T,2>$/;"	s	namespace:qmcplusplus
HEGGrid	ElectronGas/HEGGrid.h	/^struct HEGGrid<T,3>$/;"	s	namespace:qmcplusplus
HESS_ID	Fermion/BackflowTransformation.h	/^  HessType HESS_ID;$/;"	m	class:qmcplusplus::BackflowTransformation
HFAtomicSTOSet	AtomicOrbitals/HFAtomicSTOSet.cpp	/^qmcplusplus::HFAtomicSTOSet::HFAtomicSTOSet(): Ylm(0)$/;"	f	class:qmcplusplus::HFAtomicSTOSet
HFAtomicSTOSet	AtomicOrbitals/HFAtomicSTOSet.h	/^  explicit HFAtomicSTOSet(int lmax): Ylm(lmax) { }$/;"	f	struct:qmcplusplus::HFAtomicSTOSet
HFAtomicSTOSet	AtomicOrbitals/HFAtomicSTOSet.h	/^struct HFAtomicSTOSet: public QMCTraits$/;"	s	namespace:qmcplusplus
HFAtomicSTOSetBuilder	AtomicOrbitals/HFAtomicSTOSetBuilder.cpp	/^HFAtomicSTOSetBuilder::HFAtomicSTOSetBuilder(ParticleSet& els, TrialWaveFunction& wfs, ParticleSet& ions):$/;"	f	class:qmcplusplus::HFAtomicSTOSetBuilder
HFAtomicSTOSetBuilder	AtomicOrbitals/HFAtomicSTOSetBuilder.h	/^class HFAtomicSTOSetBuilder: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
HalfG	EinsplineAdoptor.h	/^  TinyVector<int,D>          HalfG;$/;"	m	struct:qmcplusplus::SplineAdoptorBase
HalfG	EinsplineSet.h	/^  TinyVector<int,OHMMS_DIM> HalfG;$/;"	m	class:qmcplusplus::EinsplineSetExtended
HalfG	Experimental/EinsplineAdoptorPacked.h	/^  TinyVector<int,D>   HalfG;$/;"	m	struct:qmcplusplus::SplineC2CAdoptorPacked
HalfG	Experimental/EinsplineAdoptorPacked.h	/^  TinyVector<int,D>   HalfG;$/;"	m	struct:qmcplusplus::SplineC2RAdoptorPacked
HalfG	Spline3D/twist_handler.hpp	/^      TinyVector<int, D> HalfG;$/;"	m	struct:qmcplusplus::twist_handler
HandlerType	Fermion/BackflowBuilder.h	/^  typedef LRHandlerBase HandlerType;$/;"	t	class:qmcplusplus::BackflowBuilder
HandlerType	Jastrow/LRBreakupUtilities.h	/^  typedef LRHandlerBase HandlerType;$/;"	t	struct:qmcplusplus::ShortRangePartAdapter
HandlerType	Jastrow/LRTwoBodyJastrow.h	/^  typedef LRHandlerBase HandlerType;$/;"	t	class:qmcplusplus::LRTwoBodyJastrow
HandlerType	Jastrow/RPAJastrow.h	/^  typedef LRHandlerBase HandlerType;$/;"	t	struct:qmcplusplus::RPAJastrow
HandlerType	Jastrow/singleRPAJastrowBuilder.h	/^  typedef LRHandlerBase HandlerType;$/;"	t	struct:qmcplusplus::singleRPAJastrowBuilder
HasCoreOrbs	EinsplineSetBuilder.h	/^  bool HasCoreOrbs;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
HaveOrbDerivs	EinsplineSetBuilder.h	/^  bool HaveOrbDerivs;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
HaveRatiosForVP	OrbitalBase.h	/^  bool HaveRatiosForVP;$/;"	m	struct:qmcplusplus::OrbitalBase
HePresetHF	AtomicOrbitals/HeSTOClementiRottie.h	/^  HePresetHF()$/;"	f	struct:qmcplusplus::HePresetHF
HePresetHF	AtomicOrbitals/HeSTOClementiRottie.h	/^struct HePresetHF: public QMCTraits$/;"	s	namespace:qmcplusplus
HePresetHFBuilder	AtomicOrbitals/HeSTOClementiRottie.cpp	/^HePresetHFBuilder::HePresetHFBuilder(ParticleSet& els, TrialWaveFunction& wfs, ParticleSet& ions):$/;"	f	class:qmcplusplus::HePresetHFBuilder
HePresetHFBuilder	AtomicOrbitals/HeSTOClementiRottie.h	/^struct HePresetHFBuilder: public OrbitalBuilderBase$/;"	s	namespace:qmcplusplus
HessArray_t	Fermion/BackflowFunctionBase.h	/^  typedef Array<HessType,3>       HessArray_t;$/;"	t	class:qmcplusplus::BackflowFunctionBase
HessArray_t	Fermion/BackflowTransformation.h	/^  typedef Array<HessType,3>       HessArray_t;$/;"	t	class:qmcplusplus::BackflowTransformation
HessArray_t	Fermion/DiracDeterminantWithBackflow.h	/^  typedef SPOSetBase::HessArray_t HessArray_t;$/;"	t	class:qmcplusplus::DiracDeterminantWithBackflow
HessArray_t	Fermion/MultiDiracDeterminantWithBackflow.h	/^  typedef Array<HessType,3>         HessArray_t;$/;"	t	class:qmcplusplus::MultiDiracDeterminantBase
HessArray_t	Fermion/MultiSlaterDeterminant.h	/^  typedef Array<HessType,3>                          HessArray_t;$/;"	t	class:qmcplusplus::MultiSlaterDeterminant
HessArray_t	Fermion/MultiSlaterDeterminantFast.h	/^  typedef Array<HessType,3>                          HessArray_t;$/;"	t	class:qmcplusplus::MultiSlaterDeterminantFast
HessArray_t	Fermion/SlaterDetOpt.h	/^    typedef Array<HessType,3>                          HessArray_t;$/;"	t	class:qmcplusplus::SlaterDetOpt
HessArray_t	SPOSetBase.h	/^  typedef Array<HessType,OHMMS_DIM>                  HessArray_t;$/;"	t	class:qmcplusplus::SPOSetBase
HessMatrix	Fermion/ci_node.h	/^  typedef Matrix<HessType>          HessMatrix;$/;"	t	struct:qmcplusplus::ci_node
HessMatrix_t	BasisSetBase.h	/^  typedef typename OrbitalSetTraits<T>::HessMatrix_t  HessMatrix_t;$/;"	t	struct:qmcplusplus::BasisSetBase
HessMatrix_t	Experimental/CorrectingOrbitalBasisSet.h	/^  typedef typename BasisSetType::HessMatrix_t  HessMatrix_t;$/;"	t	struct:qmcplusplus::CorrectingOrbitalBasisSet
HessMatrix_t	Fermion/BackflowFunctionBase.h	/^  typedef Matrix<HessType>      HessMatrix_t;$/;"	t	class:qmcplusplus::BackflowFunctionBase
HessMatrix_t	Fermion/BackflowTransformation.h	/^  typedef Matrix<HessType>      HessMatrix_t;$/;"	t	class:qmcplusplus::BackflowTransformation
HessMatrix_t	Fermion/DiracDeterminantBase.h	/^  typedef SPOSetBase::HessMatrix_t  HessMatrix_t;$/;"	t	class:qmcplusplus::DiracDeterminantBase
HessMatrix_t	Fermion/DiracDeterminantWithBackflow.h	/^  typedef SPOSetBase::HessMatrix_t  HessMatrix_t;$/;"	t	class:qmcplusplus::DiracDeterminantWithBackflow
HessMatrix_t	Fermion/MultiDiracDeterminantBase.h	/^  typedef SPOSetBase::HessMatrix_t  HessMatrix_t;$/;"	t	class:qmcplusplus::MultiDiracDeterminantBase
HessMatrix_t	Fermion/MultiDiracDeterminantWithBackflow.h	/^  typedef SPOSetBase::HessMatrix_t  HessMatrix_t;$/;"	t	class:qmcplusplus::MultiDiracDeterminantBase
HessMatrix_t	Fermion/MultiSlaterDeterminant.h	/^  typedef OrbitalSetTraits<ValueType>::HessMatrix_t  HessMatrix_t;$/;"	t	class:qmcplusplus::MultiSlaterDeterminant
HessMatrix_t	Fermion/MultiSlaterDeterminantFast.h	/^  typedef OrbitalSetTraits<ValueType>::HessMatrix_t  HessMatrix_t;$/;"	t	class:qmcplusplus::MultiSlaterDeterminantFast
HessMatrix_t	Fermion/SlaterDetOpt.h	/^    typedef OrbitalSetTraits<ValueType>::HessMatrix_t  HessMatrix_t;$/;"	t	class:qmcplusplus::SlaterDetOpt
HessMatrix_t	OrbitalSetTraits.h	/^  typedef Matrix<HessType>      HessMatrix_t;$/;"	t	struct:qmcplusplus::OrbitalSetTraits
HessMatrix_t	SPOSetBase.h	/^  typedef OrbitalSetTraits<ValueType>::HessMatrix_t  HessMatrix_t;$/;"	t	class:qmcplusplus::SPOSetBase
HessMatrix_t	SphericalBasisSet.h	/^  typedef typename OrbitalSetTraits<value_type>::HessMatrix_t  HessMatrix_t;$/;"	t	struct:qmcplusplus::SphericalBasisSet
HessType	BasisSetBase.h	/^  typedef typename OrbitalSetTraits<T>::HessType      HessType;$/;"	t	struct:qmcplusplus::BasisSetBase
HessType	Experimental/CorrectingOrbitalBasisSet.h	/^  typedef typename BasisSetType::HessType      HessType;$/;"	t	struct:qmcplusplus::CorrectingOrbitalBasisSet
HessType	Fermion/BackflowFunctionBase.h	/^  typedef Tensor<RealType,DIM>           HessType;$/;"	t	class:qmcplusplus::BackflowFunctionBase
HessType	Fermion/BackflowTransformation.h	/^  typedef Tensor<RealType,DIM>           HessType;$/;"	t	class:qmcplusplus::BackflowTransformation
HessType	Fermion/DiracDeterminantBase.h	/^  typedef SPOSetBase::HessType      HessType;$/;"	t	class:qmcplusplus::DiracDeterminantBase
HessType	Fermion/DiracDeterminantWithBackflow.h	/^  typedef SPOSetBase::HessType      HessType;$/;"	t	class:qmcplusplus::DiracDeterminantWithBackflow
HessType	Fermion/MultiDiracDeterminantBase.h	/^  typedef SPOSetBase::HessType      HessType;$/;"	t	class:qmcplusplus::MultiDiracDeterminantBase
HessType	Fermion/MultiDiracDeterminantWithBackflow.h	/^  typedef SPOSetBase::HessType      HessType;$/;"	t	class:qmcplusplus::MultiDiracDeterminantBase
HessType	Fermion/MultiSlaterDeterminant.h	/^  typedef OrbitalSetTraits<ValueType>::HessType      HessType;$/;"	t	class:qmcplusplus::MultiSlaterDeterminant
HessType	Fermion/MultiSlaterDeterminantFast.h	/^  typedef OrbitalSetTraits<ValueType>::HessType      HessType;$/;"	t	class:qmcplusplus::MultiSlaterDeterminantFast
HessType	Fermion/SlaterDetOpt.h	/^    typedef OrbitalSetTraits<ValueType>::HessType      HessType;$/;"	t	class:qmcplusplus::SlaterDetOpt
HessType	Fermion/ci_node.h	/^  typedef Tensor<value_type,OHMMS_DIM>      HessType;$/;"	t	struct:qmcplusplus::ci_node
HessType	OrbitalBase.h	/^  typedef OrbitalSetTraits<ValueType>::HessType           HessType;$/;"	t	struct:qmcplusplus::OrbitalBase
HessType	OrbitalSetTraits.h	/^  typedef Tensor<ValueType,DIM>          HessType;$/;"	t	struct:qmcplusplus::OrbitalSetTraits
HessType	SPOSetBase.h	/^  typedef OrbitalSetTraits<ValueType>::HessType      HessType;$/;"	t	class:qmcplusplus::SPOSetBase
HessType	SphericalBasisSet.h	/^  typedef typename OrbitalSetTraits<value_type>::HessType      HessType;$/;"	t	struct:qmcplusplus::SphericalBasisSet
HessType	TrialWaveFunction.h	/^  typedef OrbitalBase::HessType           HessType;$/;"	t	class:qmcplusplus::TrialWaveFunction
HessVector	Fermion/ci_node.h	/^  typedef Vector<HessType>          HessVector;$/;"	t	struct:qmcplusplus::ci_node
HessVector_t	BasisSetBase.h	/^  typedef typename OrbitalSetTraits<T>::HessVector_t  HessVector_t;$/;"	t	struct:qmcplusplus::BasisSetBase
HessVector_t	Experimental/CorrectingOrbitalBasisSet.h	/^  typedef typename BasisSetType::HessVector_t  HessVector_t;$/;"	t	struct:qmcplusplus::CorrectingOrbitalBasisSet
HessVector_t	Fermion/BackflowFunctionBase.h	/^  typedef Vector<HessType>      HessVector_t;$/;"	t	class:qmcplusplus::BackflowFunctionBase
HessVector_t	Fermion/BackflowTransformation.h	/^  typedef Vector<HessType>      HessVector_t;$/;"	t	class:qmcplusplus::BackflowTransformation
HessVector_t	Fermion/DiracDeterminantBase.h	/^  typedef SPOSetBase::HessVector_t  HessVector_t;$/;"	t	class:qmcplusplus::DiracDeterminantBase
HessVector_t	Fermion/DiracDeterminantWithBackflow.h	/^  typedef SPOSetBase::HessVector_t  HessVector_t;$/;"	t	class:qmcplusplus::DiracDeterminantWithBackflow
HessVector_t	Fermion/MultiDiracDeterminantWithBackflow.h	/^  typedef OrbitalSetTraits<ValueType>::HessVector_t  HessVector_t;$/;"	t	class:qmcplusplus::MultiDiracDeterminantBase
HessVector_t	OrbitalBase.h	/^  typedef OrbitalSetTraits<ValueType>::HessVector_t       HessVector_t;$/;"	t	struct:qmcplusplus::OrbitalBase
HessVector_t	OrbitalSetTraits.h	/^  typedef Vector<HessType>      HessVector_t;$/;"	t	struct:qmcplusplus::OrbitalSetTraits
HessVector_t	SPOSetBase.h	/^  typedef OrbitalSetTraits<ValueType>::HessVector_t  HessVector_t;$/;"	t	class:qmcplusplus::SPOSetBase
HessVector_t	SPOSetScanner.h	/^    typedef OrbitalSetTraits<ValueType>::HessVector_t  HessVector_t;$/;"	t	class:qmcplusplus::SPOSetScanner
HessVector_t	SphericalBasisSet.h	/^  typedef typename OrbitalSetTraits<value_type>::HessVector_t  HessVector_t;$/;"	t	struct:qmcplusplus::SphericalBasisSet
HessVector_t	TrialWaveFunction.h	/^  typedef OrbitalBase::HessVector_t       HessVector_t;$/;"	t	class:qmcplusplus::TrialWaveFunction
HybridData	AtomicOrbitalCuda.h	/^class HybridData$/;"	c
HybridData_GPU	EinsplineSet.h	/^  gpu::device_vector<HybridData<CudaRealType> > HybridData_GPU;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
HybridJobType	AtomicOrbitalCuda.h	/^typedef enum { BSPLINE_3D_JOB, ATOMIC_POLY_JOB, ATOMIC_SPLINE_JOB } HybridJobType;$/;"	t	typeref:enum:__anon1
HybridJobs_GPU	EinsplineSet.h	/^  gpu::device_vector<HybridJobType> HybridJobs_GPU;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
ID	LCOrbitals.h	/^  int ID;$/;"	m	class:qmcplusplus::LCOrbitals
ID_A	Experimental/NoCuspFunctor.h	/^  std::string ID_A;$/;"	m	struct:qmcplusplus::NoCuspFunctor
ID_A	Jastrow/DerivPadeFunctors.h	/^  std::string ID_A;$/;"	m	struct:qmcplusplus::D2PadeDB2Functor
ID_A	Jastrow/DerivPadeFunctors.h	/^  std::string ID_A;$/;"	m	struct:qmcplusplus::DPadeDBFunctor
ID_A	Jastrow/GaussianFunctor.h	/^  std::string ID_A;$/;"	m	struct:qmcplusplus::GaussianFunctor
ID_A	Jastrow/GaussianFunctor.h	/^  std::string ID_A;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
ID_A	Jastrow/McMillanJ2Functor.h	/^  std::string ID_A,ID_B,ID_RC,ID_R0;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
ID_A	Jastrow/McMillanJ2Functor.h	/^  std::string ID_A,ID_B,ID_RC;$/;"	m	struct:qmcplusplus::ModMcMillanJ2Functor
ID_A	Jastrow/McMillanJ2Functor.h	/^  std::string ID_A;$/;"	m	struct:qmcplusplus::McMillanJ2Functor
ID_A	Jastrow/McMillanJ2GFunctor.h	/^  std::string ID_A;$/;"	m	struct:qmcplusplus::McMillanJ2GFunctor
ID_A	Jastrow/OpenGaussianSlaterFunctor.h	/^  std::string ID_A;$/;"	m	struct:qmcplusplus::OpenGaussianSlaterFunctor
ID_A	Jastrow/PadeFunctors.h	/^  std::string ID_A;$/;"	m	struct:qmcplusplus::Pade2ndOrderFunctor
ID_A	Jastrow/PadeFunctors.h	/^  std::string ID_A;$/;"	m	struct:qmcplusplus::PadeFunctor
ID_A	Jastrow/PadeFunctors.h	/^  std::string ID_A;$/;"	m	struct:qmcplusplus::PadeTwo2ndOrderFunctor
ID_A	Jastrow/RPAJastrowFunctor.h	/^  std::string ID_A;$/;"	m	struct:qmcplusplus::RPAJastrowFunctor
ID_B	Experimental/NoCuspFunctor.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::NoCuspFunctor
ID_B	Jastrow/DerivPadeFunctors.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::D2PadeDB2Functor
ID_B	Jastrow/DerivPadeFunctors.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::DPadeDBFunctor
ID_B	Jastrow/DerivWMFunctor.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::D2WMDB2Functor
ID_B	Jastrow/DerivWMFunctor.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::DWMDBFunctor
ID_B	Jastrow/Experimental/PadeConstraints.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::PadeConstraints
ID_B	Jastrow/Experimental/PadeConstraints.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::ScaledPadeConstraints
ID_B	Jastrow/GaussianFunctor.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
ID_B	Jastrow/McMillanJ2Functor.h	/^  std::string ID_A,ID_B,ID_RC,ID_R0;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
ID_B	Jastrow/McMillanJ2Functor.h	/^  std::string ID_A,ID_B,ID_RC;$/;"	m	struct:qmcplusplus::ModMcMillanJ2Functor
ID_B	Jastrow/McMillanJ2Functor.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::McMillanJ2Functor
ID_B	Jastrow/McMillanJ2GFunctor.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::McMillanJ2GFunctor
ID_B	Jastrow/ModPadeFunctor.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::ModPadeFunctor
ID_B	Jastrow/OpenGaussianSlaterFunctor.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::OpenGaussianSlaterFunctor
ID_B	Jastrow/PadeFunctors.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::Pade2ndOrderFunctor
ID_B	Jastrow/PadeFunctors.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::PadeFunctor
ID_B	Jastrow/PadeFunctors.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::PadeTwo2ndOrderFunctor
ID_B	Jastrow/WMFunctor.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::WMFunctor
ID_C	Jastrow/Experimental/PadeConstraints.h	/^  std::string ID_C;$/;"	m	struct:qmcplusplus::ScaledPadeConstraints
ID_C	Jastrow/GaussianFunctor.h	/^  std::string ID_C;$/;"	m	struct:qmcplusplus::GaussianFunctor
ID_C	Jastrow/GaussianFunctor.h	/^  std::string ID_C;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
ID_C	Jastrow/PadeFunctors.h	/^  std::string ID_C;$/;"	m	struct:qmcplusplus::Pade2ndOrderFunctor
ID_C	Jastrow/PadeFunctors.h	/^  std::string ID_C;$/;"	m	struct:qmcplusplus::PadeTwo2ndOrderFunctor
ID_C	Jastrow/PolyFunctor.h	/^  std::vector<std::string> ID_C;$/;"	m	struct:qmcplusplus::PolyFunctor
ID_D	Jastrow/PadeFunctors.h	/^  std::string ID_D;$/;"	m	struct:qmcplusplus::PadeTwo2ndOrderFunctor
ID_Lambda	Jastrow/ThreeBodyBlockSparse.h	/^  std::string ID_Lambda;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
ID_Lambda	Jastrow/ThreeBodyGeminal.h	/^  std::string ID_Lambda;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
ID_R0	Jastrow/McMillanJ2Functor.h	/^  std::string ID_A,ID_B,ID_RC,ID_R0;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
ID_RC	Jastrow/GaussianFunctor.h	/^  std::string ID_RC;$/;"	m	struct:qmcplusplus::GaussianFunctor
ID_RC	Jastrow/GaussianFunctor.h	/^  std::string ID_RC;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
ID_RC	Jastrow/McMillanJ2Functor.h	/^  std::string ID_A,ID_B,ID_RC,ID_R0;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
ID_RC	Jastrow/McMillanJ2Functor.h	/^  std::string ID_A,ID_B,ID_RC;$/;"	m	struct:qmcplusplus::ModMcMillanJ2Functor
ID_Rs	Jastrow/RPAJastrow.h	/^  std::string ID_Rs;$/;"	m	struct:qmcplusplus::RPAJastrow
ID_Rs	Jastrow/singleRPAJastrowBuilder.h	/^  std::string ID_Rs;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
IRef	Jastrow/eeI_JastrowOrbital.h	/^  ParticleSet *eRef, *IRef;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
ISOTROPIC	Jastrow/kSpaceJastrow.h	/^  typedef enum { CRYSTAL, ISOTROPIC, NOSYMM } SymmetryType;$/;"	e	enum:qmcplusplus::kSpaceJastrow::__anon15
Identity	LCOrbitals.h	/^  bool Identity;$/;"	m	class:qmcplusplus::LCOrbitals
Identity	SPOSetBase.h	/^  bool Identity;$/;"	m	class:qmcplusplus::SPOSetBase
IgnoreSpin	Fermion/BackflowBuilder.h	/^  bool IgnoreSpin;$/;"	m	class:qmcplusplus::BackflowBuilder
IgnoreSpin	Jastrow/Experimental/AnyConstraints.h	/^  bool IgnoreSpin;$/;"	m	struct:qmcplusplus::AnyConstraints
IgnoreSpin	Jastrow/Experimental/NJAABuilder.h	/^  bool IgnoreSpin;$/;"	m	struct:qmcplusplus::NJAABuilder
IgnoreSpin	Jastrow/Experimental/PadeConstraints.h	/^  bool IgnoreSpin;$/;"	m	struct:qmcplusplus::PadeConstraints
IgnoreSpin	Jastrow/Experimental/PadeConstraints.h	/^  bool IgnoreSpin;$/;"	m	struct:qmcplusplus::ScaledPadeConstraints
IgnoreSpin	Jastrow/Experimental/WMConstraints.h	/^  bool IgnoreSpin;$/;"	m	struct:qmcplusplus::WMConstraints
IgnoreSpin	Jastrow/JAABuilder.h	/^  bool IgnoreSpin;$/;"	m	struct:qmcplusplus::JAABuilder
IgnoreSpin	Jastrow/PolyConstraints.h	/^  bool IgnoreSpin;$/;"	m	struct:qmcplusplus::PolyConstraints
IgnoreSpin	Jastrow/RPAJastrow.h	/^  bool IgnoreSpin;$/;"	m	struct:qmcplusplus::RPAJastrow
IgnoreSpin	Jastrow/WMJastrowBuilder.h	/^  bool IgnoreSpin;$/;"	m	class:qmcplusplus::WMJastrowBuilder
InFunc	Jastrow/CubicBsplineGroup.h	/^  FNIN* InFunc;$/;"	m	class:qmcplusplus::CubicBsplineGroup
InFunc	Jastrow/Experimental/NJAABuilder.h	/^  std::vector<InFuncType*> InFunc;$/;"	m	struct:qmcplusplus::NJAABuilder
InFunc	Jastrow/Experimental/NJABBuilder.h	/^  std::vector<InFuncType*> InFunc;$/;"	m	struct:qmcplusplus::NJABBuilder
InFunc	Jastrow/NumericalJastrowFunctor.h	/^  FNIN *InFunc;$/;"	m	struct:qmcplusplus::NumericalJastrow
InFunc	Jastrow/SplineFunctors.h	/^  FNIN *InFunc;$/;"	m	struct:qmcplusplus::CubicSplineBasisSet
InFunc	Jastrow/SplineFunctors.h	/^  FNIN *InFunc;$/;"	m	struct:qmcplusplus::CubicSplineSingle
InFuncList	Jastrow/Experimental/WMConstraints.h	/^  std::vector<InFuncType*> InFuncList;$/;"	m	struct:qmcplusplus::WMConstraints
InFuncType	Jastrow/Experimental/AnyConstraints.h	/^  typedef OptimizableFunctorBase InFuncType;$/;"	t	struct:qmcplusplus::AnyConstraints
InFuncType	Jastrow/Experimental/NJAABuilder.h	/^  typedef FuncType::FNIN              InFuncType;$/;"	t	struct:qmcplusplus::NJAABuilder
InFuncType	Jastrow/Experimental/NJABBuilder.h	/^  typedef FuncType::FNIN              InFuncType;$/;"	t	struct:qmcplusplus::NJABBuilder
InFuncType	Jastrow/Experimental/WMConstraints.h	/^  typedef ComboFunctor<RealType> InFuncType;$/;"	t	struct:qmcplusplus::WMConstraints
InFuncType	Jastrow/WMJastrowBuilder.h	/^  typedef OptimizableFunctorBase InFuncType;$/;"	t	class:qmcplusplus::WMJastrowBuilder
In_	Jastrow/Experimental/AnyConstraints.h	/^    InFuncType* In_;$/;"	m	struct:qmcplusplus::AnyConstraints::BasisGroupType
In_	Jastrow/WMJastrowBuilder.h	/^    InFuncType* In_;$/;"	m	struct:qmcplusplus::WMJastrowBuilder::BasisGroupType
Include	Jastrow/kSpaceJastrow.cpp	/^Include (int i, int j)$/;"	f	namespace:qmcplusplus
Include	Jastrow/kSpaceJastrow.cpp	/^Include (int i, int j, int k)$/;"	f	namespace:qmcplusplus
IncludeTwists	EinsplineSetBuilder.h	/^  std::vector<int> IncludeTwists, DistinctTwists;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
IndepVar	Jastrow/PolynomialFunctor3D.h	/^  std::vector<bool> IndepVar;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
IndexOffSet	Jastrow/ThreeBodyBlockSparse.h	/^  int IndexOffSet;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
IndexOffSet	Jastrow/ThreeBodyGeminal.h	/^  int IndexOffSet;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
IndexType	BasisSetBase.h	/^  typedef typename OrbitalSetTraits<T>::IndexType     IndexType;$/;"	t	struct:qmcplusplus::BasisSetBase
IndexType	Experimental/CorrectingOrbitalBasisSet.h	/^  typedef typename BasisSetType::IndexType     IndexType;$/;"	t	struct:qmcplusplus::CorrectingOrbitalBasisSet
IndexType	Fermion/BackflowFunctionBase.h	/^  typedef int                            IndexType;$/;"	t	class:qmcplusplus::BackflowFunctionBase
IndexType	Fermion/BackflowTransformation.h	/^  typedef int                            IndexType;$/;"	t	class:qmcplusplus::BackflowTransformation
IndexType	LocalizedBasisSet.h	/^  typedef typename BasisSetType::IndexType     IndexType;$/;"	t	struct:qmcplusplus::LocalizedBasisSet
IndexType	OrbitalSetTraits.h	/^  typedef int                            IndexType;$/;"	t	struct:qmcplusplus::OrbitalSetTraits
IndexType	SparseLocalizedBasisSet.h	/^  typedef typename BasisSetType::IndexType     IndexType;$/;"	t	struct:qmcplusplus::SparseLocalizedBasisSet
IndexType	SphericalBasisSet.h	/^  typedef typename OrbitalSetTraits<value_type>::IndexType     IndexType;$/;"	t	struct:qmcplusplus::SphericalBasisSet
IndexType	SphericalOrbitalSet.h	/^  typedef typename OrbitalSetTraits<value_type>::IndexType     IndexType;$/;"	t	struct:qmcplusplus::SphericalOrbitalSet
IndexVector_t	AGPDeterminant.h	/^  typedef BasisSetType::IndexVector_t IndexVector_t;$/;"	t	class:qmcplusplus::AGPDeterminant
IndexVector_t	BasisSetBase.h	/^  typedef typename OrbitalSetTraits<T>::IndexVector_t IndexVector_t;$/;"	t	struct:qmcplusplus::BasisSetBase
IndexVector_t	Experimental/CorrectingOrbitalBasisSet.h	/^  typedef typename BasisSetType::IndexVector_t IndexVector_t;$/;"	t	struct:qmcplusplus::CorrectingOrbitalBasisSet
IndexVector_t	Experimental/CuspCorr.h	/^  typedef OrbitalSetTraits<ValueType>::IndexVector_t IndexVector_t;$/;"	t	class:qmcplusplus::CuspCorr
IndexVector_t	Fermion/BackflowFunctionBase.h	/^  typedef Vector<IndexType>     IndexVector_t;$/;"	t	class:qmcplusplus::BackflowFunctionBase
IndexVector_t	Fermion/BackflowTransformation.h	/^  typedef Vector<IndexType>     IndexVector_t;$/;"	t	class:qmcplusplus::BackflowTransformation
IndexVector_t	Fermion/DiracDeterminantBase.h	/^  typedef SPOSetBase::IndexVector_t IndexVector_t;$/;"	t	class:qmcplusplus::DiracDeterminantBase
IndexVector_t	Fermion/DiracDeterminantCUDA.h	/^  typedef SPOSetBase::IndexVector_t IndexVector_t;$/;"	t	class:qmcplusplus::DiracDeterminantCUDA
IndexVector_t	Fermion/DiracDeterminantIterative.h	/^  typedef SPOSetBase::IndexVector_t IndexVector_t;$/;"	t	class:qmcplusplus::DiracDeterminantIterative
IndexVector_t	Fermion/DiracDeterminantTruncation.h	/^  typedef SPOSetBase::IndexVector_t IndexVector_t;$/;"	t	class:qmcplusplus::DiracDeterminantTruncation
IndexVector_t	Fermion/DiracDeterminantWithBackflow.h	/^  typedef SPOSetBase::IndexVector_t IndexVector_t;$/;"	t	class:qmcplusplus::DiracDeterminantWithBackflow
IndexVector_t	Fermion/MultiDiracDeterminantBase.h	/^  typedef SPOSetBase::IndexVector_t IndexVector_t;$/;"	t	class:qmcplusplus::MultiDiracDeterminantBase
IndexVector_t	Fermion/MultiDiracDeterminantWithBackflow.h	/^  typedef SPOSetBase::IndexVector_t IndexVector_t;$/;"	t	class:qmcplusplus::MultiDiracDeterminantBase
IndexVector_t	Fermion/MultiSlaterDeterminant.h	/^  typedef OrbitalSetTraits<ValueType>::IndexVector_t IndexVector_t;$/;"	t	class:qmcplusplus::MultiSlaterDeterminant
IndexVector_t	Fermion/MultiSlaterDeterminantFast.h	/^  typedef OrbitalSetTraits<ValueType>::IndexVector_t IndexVector_t;$/;"	t	class:qmcplusplus::MultiSlaterDeterminantFast
IndexVector_t	Fermion/SlaterDetOpt.h	/^    typedef OrbitalSetTraits<ValueType>::IndexVector_t IndexVector_t;$/;"	t	class:qmcplusplus::SlaterDetOpt
IndexVector_t	LocalizedBasisSet.h	/^  typedef typename BasisSetType::IndexVector_t IndexVector_t;$/;"	t	struct:qmcplusplus::LocalizedBasisSet
IndexVector_t	OrbitalSetTraits.h	/^  typedef Vector<IndexType>     IndexVector_t;$/;"	t	struct:qmcplusplus::OrbitalSetTraits
IndexVector_t	SPOSetBase.h	/^  typedef OrbitalSetTraits<ValueType>::IndexVector_t IndexVector_t;$/;"	t	class:qmcplusplus::SPOSetBase
IndexVector_t	SparseLocalizedBasisSet.h	/^  typedef typename BasisSetType::IndexVector_t IndexVector_t;$/;"	t	struct:qmcplusplus::SparseLocalizedBasisSet
InitC	Jastrow/ThreeBodyPade.h	/^  inline void InitC()$/;"	f	class:qmcplusplus::ThreeBodyPade
Int3less	EinsplineSetBuilder.h	/^struct Int3less$/;"	s	namespace:qmcplusplus
Int4less	EinsplineSetBuilder.h	/^struct Int4less$/;"	s	namespace:qmcplusplus
IntPart	EinsplineSetBuilderCommon.cpp	/^IntPart (const TinyVector<T,3>& twist)$/;"	f	namespace:qmcplusplus
IntPart	Experimental/EinsplineSetBuilder.cpp	/^IntPart (const TinyVector<T,3>& twist)$/;"	f	namespace:qmcplusplus
InvL	Experimental/EinsplineMixedAdoptor.h	/^  TinyVector<ST,D> InvL;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
InvL	Experimental/SplineOpenAdoptor.h	/^  TinyVector<ST,D> InvL;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
InvL	SplineMixedAdoptor.h	/^  TinyVector<ST,D> InvL;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
InverseTimer	Fermion/DiracDeterminantBase.h	/^  NewTimer UpdateTimer, RatioTimer, InverseTimer, BufferTimer, SPOVTimer, SPOVGLTimer;$/;"	m	class:qmcplusplus::DiracDeterminantBase
InverseTimer	Fermion/MultiDiracDeterminantBase.h	/^  NewTimer UpdateTimer, RatioTimer, InverseTimer, buildTableTimer, readMatTimer, evalWTimer, evalOrbTimer,evalOrb1Timer;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
InverseTimer	Fermion/MultiDiracDeterminantWithBackflow.h	/^  NewTimer UpdateTimer, RatioTimer, InverseTimer, buildTableTimer, readMatTimer, evalWTimer, evalOrbTimer,evalOrb1Timer;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
InverseUpdateByColumn_GRAD	Fermion/MultiDiracDeterminantBase.h	/^  inline void InverseUpdateByColumn_GRAD(ValueMatrix_t& Minv$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
InverseUpdateByColumn_GRAD	Fermion/MultiDiracDeterminantWithBackflow.h	/^  inline void InverseUpdateByColumn_GRAD(ValueMatrix_t& Minv$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
IonData	Jastrow/eeI_JastrowOrbital.h	/^  IonData() : cutoff_radius(0.0) { }$/;"	f	struct:qmcplusplus::IonData
IonData	Jastrow/eeI_JastrowOrbital.h	/^struct IonData$/;"	s	namespace:qmcplusplus
IonDataList	Jastrow/eeI_JastrowOrbital.h	/^  std::vector<IonData> IonDataList;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
IonOrbital	IonOrbital.cpp	/^IonOrbital::IonOrbital (ParticleSet &centers, ParticleSet &ptcls) :$/;"	f	class:qmcplusplus::IonOrbital
IonOrbital	IonOrbital.h	/^struct IonOrbital : public OrbitalBase$/;"	s	namespace:qmcplusplus
IonOrbitalBuilder	IonOrbitalBuilder.cpp	/^IonOrbitalBuilder::IonOrbitalBuilder$/;"	f	class:qmcplusplus::IonOrbitalBuilder
IonOrbitalBuilder	IonOrbitalBuilder.h	/^class IonOrbitalBuilder: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
IonOrbitalType	IonOrbitalBuilder.h	/^  int IonOrbitalType;$/;"	m	class:qmcplusplus::IonOrbitalBuilder
IonPos	EinsplineSetBuilder.h	/^  Vector<TinyVector<double,OHMMS_DIM> > IonPos;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
IonPos_GPU	EinsplineSet.h	/^  gpu::device_vector<CudaRealType>  IonPos_GPU;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
IonSys	Experimental/GTOMolecularOrbitals.h	/^  ParticleSet& IonSys;$/;"	m	class:qmcplusplus::GTOMolecularOrbitals
IonSys	Experimental/STOMolecularOrbitals.h	/^  ParticleSet& IonSys;$/;"	m	class:qmcplusplus::STOMolecularOrbitals
IonTypes	EinsplineSetBuilder.h	/^  Vector<int> IonTypes;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
Ion_rhoG	Jastrow/kSpaceJastrow.h	/^  std::vector<ComplexType> Ion_rhoG;$/;"	m	class:qmcplusplus::kSpaceJastrow
Ions	Jastrow/kSpaceJastrow.h	/^  const ParticleSet &Ions;$/;"	m	class:qmcplusplus::kSpaceJastrow
IsCoreState	BandInfo.h	/^  bool IsCoreState;$/;"	m	struct:qmcplusplus::BandInfo
IsExclusive	MultiGridBsplineSet.h	/^    bool IsExclusive;$/;"	m	struct:qmcplusplus::MultiGridBsplineSet
IsFermionWF	OrbitalBase.h	/^  bool IsFermionWF;$/;"	m	struct:qmcplusplus::OrbitalBase
IsManager	Jastrow/RPAJastrow.h	/^  bool IsManager;$/;"	m	struct:qmcplusplus::RPAJastrow
IsOptimizing	Fermion/GaussianFunctor.h	/^  bool IsOptimizing;$/;"	m	class:qmcplusplus::GaussianFunctor
IsOptimizing	OrbitalBase.h	/^  bool IsOptimizing;$/;"	m	struct:qmcplusplus::OrbitalBase
IteratorType	Experimental/TricubicBsplineSPOSet.h	/^  typedef typename std::map<int,const StorageType*>::iterator  IteratorType;$/;"	t	class:qmcplusplus::TricubicBsplineSPOSet
IteratorType	Experimental/TricubicBsplineTwistSet.h	/^  typedef typename std::map<int,const StorageType*>::iterator  IteratorType;$/;"	t	class:qmcplusplus::TricubicBsplineTwistSet
J1s	Jastrow/singleRPAJastrowBuilder.h	/^  JneType* J1s;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
J2Unique	Jastrow/DiffTwoBodyJastrowOrbital.h	/^  std::map<std::string,FT*> J2Unique;$/;"	m	class:qmcplusplus::DiffTwoBodyJastrowOrbital
J2Unique	Jastrow/TwoBodyJastrowOrbital.h	/^  std::map<std::string,FT*> J2Unique;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
J3	Jastrow/ThreeBodyPadeBuilder.h	/^  ThreeBodyPade* J3;$/;"	m	class:qmcplusplus::ThreeBodyPadeBuilder
J3Unique	Jastrow/eeI_JastrowOrbital.h	/^  std::map<std::string,FT*> J3Unique;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
J3UniqueIndex	Jastrow/eeI_JastrowOrbital.h	/^  std::map<FT*,int> J3UniqueIndex;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
JAABuilder	Jastrow/JAABuilder.cpp	/^JAABuilder::JAABuilder(ParticleSet& p, TrialWaveFunction& psi):OrbitalBuilderBase(p,psi),$/;"	f	class:qmcplusplus::JAABuilder
JAABuilder	Jastrow/JAABuilder.h	/^struct JAABuilder: public OrbitalBuilderBase$/;"	s	namespace:qmcplusplus
JAAPBCBuilder	Jastrow/Experimental/JAAPBCBuilder.cpp	/^JAAPBCBuilder::JAAPBCBuilder(ParticleSet& p, TrialWaveFunction& psi):$/;"	f	class:qmcplusplus::JAAPBCBuilder
JAAPBCBuilder	Jastrow/Experimental/JAAPBCBuilder.h	/^struct JAAPBCBuilder: public OrbitalBuilderBase$/;"	s	namespace:qmcplusplus
JABBuilder	Jastrow/JABBuilder.h	/^  JABBuilder(ParticleSet& p, TrialWaveFunction& psi,$/;"	f	struct:qmcplusplus::JABBuilder
JABBuilder	Jastrow/JABBuilder.h	/^struct JABBuilder: public OrbitalBuilderBase$/;"	s	namespace:qmcplusplus
JComponent	OrbitalConstraintsBase.h	/^  std::bitset<8> JComponent;$/;"	m	struct:qmcplusplus::OrbitalConstraintsBase
JastrowBasisBuilder	Jastrow/JastrowBasisBuilder.cpp	/^JastrowBasisBuilder::JastrowBasisBuilder(ParticleSet& els, ParticleSet& ions,$/;"	f	class:qmcplusplus::JastrowBasisBuilder
JastrowBasisBuilder	Jastrow/JastrowBasisBuilder.h	/^class JastrowBasisBuilder: public BasisSetBuilder$/;"	c	namespace:qmcplusplus
JastrowBuilder	Jastrow/Experimental/OldJastrowBuilder.cpp	/^JastrowBuilder::JastrowBuilder(ParticleSet& p, TrialWaveFunction& psi,$/;"	f	class:qmcplusplus::JastrowBuilder
JastrowBuilder	Jastrow/Experimental/OldJastrowBuilder.h	/^struct JastrowBuilder: public OrbitalBuilderBase$/;"	s	namespace:qmcplusplus
JastrowBuilder	Jastrow/JastrowBuilder.cpp	/^JastrowBuilder::JastrowBuilder(ParticleSet& p, TrialWaveFunction& psi, PtclPoolType& psets):$/;"	f	class:qmcplusplus::JastrowBuilder
JastrowBuilder	Jastrow/JastrowBuilder.h	/^class JastrowBuilder: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
JastrowType	Jastrow/JastrowBuilder.h	/^  int JastrowType;$/;"	m	class:qmcplusplus::JastrowBuilder
JneType	Jastrow/singleRPAJastrowBuilder.h	/^  typedef OneBodyJastrowOrbital<FuncType> JneType;$/;"	t	struct:qmcplusplus::singleRPAJastrowBuilder
JobType	EinsplineSet.h	/^  gpu::device_vector<int> JobType;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
K	ElectronGas/ElectronGasComplexOrbitalBuilder.h	/^  std::vector<PosType>  K;$/;"	m	struct:qmcplusplus::EGOSet
K	ElectronGas/ElectronGasOrbitalBuilder.h	/^  std::vector<PosType> K;$/;"	m	struct:qmcplusplus::RealEGOSet
K	Jastrow/PolyFunctor.h	/^  int K;$/;"	m	struct:qmcplusplus::PolyFunctor
KECorrection	Jastrow/TwoBodyJastrowOrbital.h	/^  RealType KECorrection()$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
KECorrection	Jastrow/eeI_JastrowOrbital.h	/^  RealType KECorrection()$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
KECorrection	OrbitalBase.cpp	/^OrbitalBase::RealType OrbitalBase::KECorrection()$/;"	f	class:qmcplusplus::OrbitalBase
KECorrection	TrialWaveFunction.cpp	/^TrialWaveFunction::KECorrection() const$/;"	f	class:qmcplusplus::TrialWaveFunction
KEcorr	Jastrow/TwoBodyJastrowOrbital.h	/^  RealType KEcorr;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
KEcorr	Jastrow/eeI_JastrowOrbital.h	/^  RealType KEcorr;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
KK	SplineC2XAdoptor.h	/^  std::vector<Tensor<ST,D> >  KK; \/\/k^k$/;"	m	struct:qmcplusplus::SplineC2RPackedAdoptor
KKOverL2	Jastrow/PolyFunctor.h	/^  real_type KKOverL2;$/;"	m	struct:qmcplusplus::PolyFunctor
KOverL	Jastrow/PolyFunctor.h	/^  real_type KOverL;$/;"	m	struct:qmcplusplus::PolyFunctor
Kc	Fermion/BackflowBuilder.h	/^  RealType Kc;$/;"	m	class:qmcplusplus::BackflowBuilder
Kc	Jastrow/RPAJastrow.h	/^  RealType Kc;$/;"	m	struct:qmcplusplus::RPAJastrow
Kc	Jastrow/singleRPAJastrowBuilder.h	/^  RealType Kc;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
Kc_max	Jastrow/singleRPAJastrowBuilder.h	/^  double Kc_max;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
KdotR	SplineC2XAdoptor.h	/^  std::vector<ST>   KdotR;$/;"	m	struct:qmcplusplus::SplineC2RPackedAdoptor
KeyWord	EinsplineAdoptor.h	/^  std::string KeyWord;$/;"	m	struct:qmcplusplus::SplineAdoptorBase
Kf	Jastrow/LRBreakupUtilities.h	/^  T Kf;$/;"	m	struct:qmcplusplus::DerivRPABreakup
Kf	Jastrow/LRBreakupUtilities.h	/^  T Kf;$/;"	m	struct:qmcplusplus::EPRPABreakup
Kf	Jastrow/LRBreakupUtilities.h	/^  T Kf;$/;"	m	struct:qmcplusplus::RPABreakup
Kf	Jastrow/LRBreakupUtilities.h	/^  T Kf;$/;"	m	struct:qmcplusplus::derivEPRPABreakup
KptMax	ElectronGas/ElectronGasComplexOrbitalBuilder.h	/^  int KptMax;$/;"	m	struct:qmcplusplus::EGOSet
KptMax	ElectronGas/ElectronGasOrbitalBuilder.h	/^  int KptMax;$/;"	m	struct:qmcplusplus::RealEGOSet
Kshell	Jastrow/LRTwoBodyJastrow.h	/^  std::vector<int> Kshell;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
L	Experimental/EinsplineMixedAdoptor.h	/^  TinyVector<ST,D> L;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
L	Experimental/SplineOpenAdoptor.h	/^  TinyVector<ST,D> L;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
L	Jastrow/ChebyshevFunctor.h	/^  T B, L;$/;"	m	struct:ChebyshevFunctor
L	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> L, Linv;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
L	Jastrow/PolyFunctor.h	/^  real_type L;$/;"	m	struct:qmcplusplus::PolyFunctor
L	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> L, Linv;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
L	SplineMixedAdoptor.h	/^  TinyVector<ST,D> L;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
L	TrialWaveFunction.h	/^  ParticleSet::ParticleLaplacian_t L;$/;"	m	class:qmcplusplus::TrialWaveFunction
LCOrbitalSet	LCOrbitalSet.h	/^  LCOrbitalSet(BS* bs=0,int rl=0): myBasisSet(0), ReportLevel(rl)$/;"	f	class:qmcplusplus::LCOrbitalSet
LCOrbitalSet	LCOrbitalSet.h	/^  LCOrbitalSet(BS* bs=0,int rl=0, std::string algorithm=""): myBasisSet(0), ReportLevel(rl)$/;"	f	class:qmcplusplus::LCOrbitalSet
LCOrbitalSet	LCOrbitalSet.h	/^class LCOrbitalSet: public SPOSetBase$/;"	c	namespace:qmcplusplus
LCOrbitalSet	LCOrbitalSet.h	/^class LCOrbitalSet<BS,false>: public SPOSetBase$/;"	c	namespace:qmcplusplus
LCOrbitalSet	LCOrbitalSet.h	/^class LCOrbitalSet<BS,true>: public SPOSetBase$/;"	c	namespace:qmcplusplus
LCOrbitalSetOpt	LCOrbitalSetOpt.h	/^    LCOrbitalSetOpt(BS * const bs = 0, const int rl = 0) : m_spo_set(0), m_basis_set(0), m_tf(0), m_report_level(rl), m_omixfac(0) {$/;"	f	class:qmcplusplus::LCOrbitalSetOpt
LCOrbitalSetOpt	LCOrbitalSetOpt.h	/^    LCOrbitalSetOpt(SPOSetBase * const spo, const int rl = 0) : m_spo_set(0), m_basis_set(0), m_tf(0), m_report_level(rl), m_omixfac(0) {$/;"	f	class:qmcplusplus::LCOrbitalSetOpt
LCOrbitalSetOpt	LCOrbitalSetOpt.h	/^template<class BS> class LCOrbitalSetOpt : public SPOSetBase {$/;"	c	namespace:qmcplusplus
LCOrbitalSetOptTrialFunc	LCOrbitalSetOpt.h	/^    LCOrbitalSetOptTrialFunc(const int nlc, const int nb, const RealType * const initial_B, const std::string & name, double mix_factor)$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
LCOrbitalSetOptTrialFunc	LCOrbitalSetOpt.h	/^class LCOrbitalSetOptTrialFunc : public OrbitalBase {$/;"	c	namespace:qmcplusplus
LCOrbitalSetWithCorrection	Experimental/LCOrbitalSetWithCorrection.h	/^  LCOrbitalSetWithCorrection(BS* bs=0, ParticleSet* els=0, ParticleSet* ions=0, int rl=0, RealType rc=-1.0, std::string cusp_info="", std::string algorithm=""): myBasisSet(0),corrBasisSet(0),targetPtcl(els),sourcePtcl(ions),ReportLevel(rl),Rcut(rc),cuspInfoFile(cusp_info)$/;"	f	class:qmcplusplus::LCOrbitalSetWithCorrection
LCOrbitalSetWithCorrection	Experimental/LCOrbitalSetWithCorrection.h	/^  LCOrbitalSetWithCorrection(BS* bs=0,int rl=0): myBasisSet(0),ReportLevel(rl)$/;"	f	class:qmcplusplus::LCOrbitalSetWithCorrection
LCOrbitalSetWithCorrection	Experimental/LCOrbitalSetWithCorrection.h	/^class LCOrbitalSetWithCorrection: public SPOSetBase$/;"	c	namespace:qmcplusplus
LCOrbitalSetWithCorrection	Experimental/LCOrbitalSetWithCorrection.h	/^class LCOrbitalSetWithCorrection<BS,false>: public SPOSetBase$/;"	c	namespace:qmcplusplus
LCOrbitalSetWithCorrection	Experimental/LCOrbitalSetWithCorrection.h	/^class LCOrbitalSetWithCorrection<BS,true>: public SPOSetBase$/;"	c	namespace:qmcplusplus
LCOrbitals	LCOrbitals.h	/^  inline LCOrbitals(BS* bs, int id):$/;"	f	class:qmcplusplus::LCOrbitals
LCOrbitals	LCOrbitals.h	/^class LCOrbitals: public OhmmsElementBase$/;"	c	namespace:qmcplusplus
LM	AtomicOrbitals/HFAtomicSTOSet.h	/^  int LM;$/;"	m	struct:qmcplusplus::ComboSTO
LM	SphericalBasisSet.h	/^  std::vector<int> LM;$/;"	m	struct:qmcplusplus::SphericalBasisSet
LM	SphericalOrbitalSet.h	/^  std::vector<int> LM;$/;"	m	struct:qmcplusplus::SphericalOrbitalSet
LOBasis	Experimental/CorrectingOrbitalBasisSet.h	/^  std::vector<COT*> LOBasis;$/;"	m	struct:qmcplusplus::CorrectingOrbitalBasisSet
LOBasis	LocalizedBasisSet.h	/^  std::vector<COT*> LOBasis;$/;"	m	struct:qmcplusplus::LocalizedBasisSet
LOBasisSet	LocalizedBasisSet.h	/^  std::vector<COT*> LOBasisSet;$/;"	m	struct:qmcplusplus::LocalizedBasisSet
LOBasisSet	SparseLocalizedBasisSet.h	/^  ContainerType LOBasisSet;$/;"	m	struct:qmcplusplus::SparseLocalizedBasisSet
LOCALIZED	MultiGridBsplineSetReader.h	/^  static const int LOCALIZED=0;$/;"	m	struct:qmcplusplus::MultiGridBsplineSetReader
LOForCenter	SparseLocalizedBasisSet.h	/^    LOForCenter(const LOForCenter& old):myP(old.myP)$/;"	f	struct:qmcplusplus::SparseLocalizedBasisSet::LOForCenter
LOForCenter	SparseLocalizedBasisSet.h	/^    inline LOForCenter(COT* o=0):myO(o) {}$/;"	f	struct:qmcplusplus::SparseLocalizedBasisSet::LOForCenter
LOForCenter	SparseLocalizedBasisSet.h	/^  struct LOForCenter$/;"	s	struct:qmcplusplus::SparseLocalizedBasisSet
LONGRANGE	OrbitalConstraintsBase.h	/^  enum {MULTIPLE=0, LONGRANGE, ONEBODY, TWOBODY, THREEBODY, FOURBODY};$/;"	e	enum:qmcplusplus::OrbitalConstraintsBase::__anon19
LOType	Experimental/NumericalOrbitalSetBuilder.h	/^  typedef LCOrbitals<MOBasisSetType> LOType;$/;"	t	class:qmcplusplus::NumericalOrbitalSetBuilder
LRTwoBodyJastrow	Jastrow/LRTwoBodyJastrow.cpp	/^LRTwoBodyJastrow::LRTwoBodyJastrow(ParticleSet& p ):$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
LRTwoBodyJastrow	Jastrow/LRTwoBodyJastrow.h	/^class LRTwoBodyJastrow: public OrbitalBase$/;"	c	namespace:qmcplusplus
L_cuda	EinsplineSet.h	/^  gpu::device_vector<CudaRealType> Linv_cuda, L_cuda;$/;"	m	class:qmcplusplus::EinsplineSetExtended
L_gamma	Fermion/DiracDeterminantAFM.h	/^  ValueMatrix_t Gamma, L_gamma;$/;"	m	class:qmcplusplus::DiracDeterminantAFM
L_gamma	Fermion/DiracDeterminantOpt.h	/^  ValueMatrix_t Gamma, L_gamma;$/;"	m	class:qmcplusplus::DiracDeterminantOpt
L_host	EinsplineSet.h	/^  gpu::host_vector<CudaRealType> L_host, Linv_host;$/;"	m	class:qmcplusplus::EinsplineSetExtended
La1	Fermion/DiracDeterminantWithBackflow.h	/^  ValueType La1,La2,La3;$/;"	m	class:qmcplusplus::DiracDeterminantWithBackflow
La2	Fermion/DiracDeterminantWithBackflow.h	/^  ValueType La1,La2,La3;$/;"	m	class:qmcplusplus::DiracDeterminantWithBackflow
La3	Fermion/DiracDeterminantWithBackflow.h	/^  ValueType La1,La2,La3;$/;"	m	class:qmcplusplus::DiracDeterminantWithBackflow
Lambda	AGPDeterminant.h	/^  ValueMatrix_t Lambda;$/;"	m	class:qmcplusplus::AGPDeterminant
Lambda	Jastrow/ThreeBodyBlockSparse.h	/^  Matrix<RealType> Lambda;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
Lambda	Jastrow/ThreeBodyGeminal.h	/^  Matrix<RealType> Lambda;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
LambdaBlocks	Jastrow/ThreeBodyBlockSparse.h	/^  std::vector<Matrix<RealType>* > LambdaBlocks;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
LambdaUP	AGPDeterminant.h	/^  ValueMatrix_t LambdaUP;$/;"	m	class:qmcplusplus::AGPDeterminant
Laplacian_t	Experimental/DiracDeterminant.h	/^  typedef blitz::Array<ValueType,2> Laplacian_t;$/;"	t	class:qmcplusplus::DiracDeterminant
Large_r_Core_Fits	MuffinTin.h	/^  std::vector<ExpFitClass<2> > Large_r_Core_Fits;$/;"	m	class:qmcplusplus::MuffinTinClass
LargerCoreCoefs	MuffinTin.h	/^  std::vector<TinyVector<double,2> > LargerCoreCoefs;$/;"	m	class:qmcplusplus::MuffinTinClass
LastAddressOfFm	Fermion/DiracDeterminantWithBackflow.h	/^  ValueType *LastAddressOfFm;$/;"	m	class:qmcplusplus::DiracDeterminantWithBackflow
LastAddressOfG	AGPDeterminant.h	/^  ParticleSet::ParticleValue_t *LastAddressOfG;$/;"	m	class:qmcplusplus::AGPDeterminant
LastAddressOfG	Experimental/DiracDeterminant.h	/^  ValueType *LastAddressOfG;$/;"	m	class:qmcplusplus::DiracDeterminant
LastAddressOfG	Fermion/DiracDeterminantBase.h	/^  ParticleSet::ParticleValue_t *LastAddressOfG;$/;"	m	class:qmcplusplus::DiracDeterminantBase
LastAddressOfG	Fermion/MultiSlaterDeterminantFast.h	/^  ParticleSet::ParticleValue_t *LastAddressOfG;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
LastAddressOfGGG	Fermion/DiracDeterminantWithBackflow.h	/^  ValueType *LastAddressOfGGG;$/;"	m	class:qmcplusplus::DiracDeterminantWithBackflow
LastAddressOfGrads	Fermion/MultiDiracDeterminantBase.h	/^  ValueType *LastAddressOfGrads;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
LastAddressOfGrads	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueType *LastAddressOfGrads;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
LastAddressOfdU	Experimental/TwoBodyJastrowFunction.Shared.h	/^  ValueType *FirstAddressOfdU, *LastAddressOfdU;$/;"	m	class:qmcplusplus::TwoBodyJastrow
LastAddressOfdU	Experimental/TwoBodyJastrowFunction.h	/^  ValueType *FirstAddressOfdU, *LastAddressOfdU;$/;"	m	class:qmcplusplus::TwoBodyJastrow
LastAddressOfdU	IonOrbital.h	/^  RealType *FirstAddressOfdU, *LastAddressOfdU;$/;"	m	struct:qmcplusplus::IonOrbital
LastAddressOfdU	Jastrow/LRTwoBodyJastrow.h	/^  RealType *LastAddressOfdU;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
LastAddressOfdU	Jastrow/OneBodyJastrowOrbital.h	/^  RealType *FirstAddressOfdU, *LastAddressOfdU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbital
LastAddressOfdU	Jastrow/OneBodySpinJastrowOrbital.h	/^  RealType *LastAddressOfdU;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
LastAddressOfdU	Jastrow/ThreeBodyJastrowOrbital.h	/^  ValueType *FirstAddressOfdU, *LastAddressOfdU;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
LastAddressOfdU	Jastrow/ThreeBodyPade.h	/^  ValueType *FirstAddressOfdU, *LastAddressOfdU;$/;"	m	class:qmcplusplus::ThreeBodyPade
LastAddressOfdU	Jastrow/TwoBodyJastrowOrbital.h	/^  RealType *FirstAddressOfdU, *LastAddressOfdU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
LastAddressOfdU	Jastrow/eeI_JastrowOrbital.h	/^  RealType *FirstAddressOfdU, *LastAddressOfdU;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
LastAddressOfdV	Experimental/DiracDeterminant.h	/^  ValueType *LastAddressOfdV;$/;"	m	class:qmcplusplus::DiracDeterminant
LastAddressOfdV	Fermion/DiracDeterminantBase.h	/^  ValueType *LastAddressOfdV;$/;"	m	class:qmcplusplus::DiracDeterminantBase
LastAddressOfdVD	AGPDeterminant.h	/^  BasisSetType::ValueType *LastAddressOfdVD;$/;"	m	class:qmcplusplus::AGPDeterminant
LastAddressOfdVU	AGPDeterminant.h	/^  BasisSetType::ValueType *LastAddressOfdVU;$/;"	m	class:qmcplusplus::AGPDeterminant
LastAddressOfdY	AGPDeterminant.h	/^  BasisSetType::ValueType *LastAddressOfdY;$/;"	m	class:qmcplusplus::AGPDeterminant
LastAddressOfdY	Jastrow/ThreeBodyBlockSparse.h	/^  RealType *LastAddressOfdY;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
LastAddressOfdY	Jastrow/ThreeBodyGeminal.h	/^  RealType *LastAddressOfdY;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
LastAddressOfdpsiM	Fermion/MultiDiracDeterminantBase.h	/^  ValueType *LastAddressOfdpsiM;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
LastAddressOfdpsiM	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueType *LastAddressOfdpsiM;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
LastAddressOfgU	Jastrow/ThreeBodyBlockSparse.h	/^  RealType *LastAddressOfgU;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
LastAddressOfgU	Jastrow/ThreeBodyGeminal.h	/^  RealType *LastAddressOfgU;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
LastIndex	Experimental/DiracDeterminant.h	/^  int LastIndex;$/;"	m	class:qmcplusplus::DiracDeterminant
LastIndex	Fermion/DiracDeterminantBase.h	/^  int LastIndex;$/;"	m	class:qmcplusplus::DiracDeterminantBase
LastIndex	Fermion/MultiDiracDeterminantBase.h	/^  int LastIndex;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
LastIndex	Fermion/MultiDiracDeterminantWithBackflow.h	/^  int LastIndex;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
LastIndex_dn	Fermion/MultiSlaterDeterminant.h	/^  int FirstIndex_dn, LastIndex_dn;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
LastIndex_up	Fermion/MultiSlaterDeterminant.h	/^  int FirstIndex_up, LastIndex_up;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
LastOfA	Fermion/BackflowFunctionBase.h	/^  RealType *FirstOfA, *LastOfA;$/;"	m	class:qmcplusplus::BackflowFunctionBase
LastOfA	Fermion/BackflowTransformation.h	/^  RealType *FirstOfA, *LastOfA;$/;"	m	class:qmcplusplus::BackflowTransformation
LastOfA_temp	Fermion/BackflowTransformation.h	/^  RealType *FirstOfA_temp, *LastOfA_temp;$/;"	m	class:qmcplusplus::BackflowTransformation
LastOfB	Fermion/BackflowFunctionBase.h	/^  RealType *FirstOfB, *LastOfB;$/;"	m	class:qmcplusplus::BackflowFunctionBase
LastOfB	Fermion/BackflowTransformation.h	/^  RealType *FirstOfB, *LastOfB;$/;"	m	class:qmcplusplus::BackflowTransformation
LastOfB_temp	Fermion/BackflowTransformation.h	/^  RealType *FirstOfB_temp, *LastOfB_temp;$/;"	m	class:qmcplusplus::BackflowTransformation
LastOfP	Fermion/BackflowTransformation.h	/^  RealType *FirstOfP, *LastOfP;$/;"	m	class:qmcplusplus::BackflowTransformation
LastOfU	Fermion/BackflowFunctionBase.h	/^  RealType *FirstOfU, *LastOfU;$/;"	m	class:qmcplusplus::BackflowFunctionBase
LastSpinSet	EinsplineSetBuilder.h	/^  int LastSpinSet, NumOrbitalsRead;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
Lattice	AtomicOrbital.h	/^  UnitCellType Lattice;$/;"	m	class:qmcplusplus::AtomicOrbital
Lattice	EinsplineSetBuilder.h	/^  Tensor<double,OHMMS_DIM> Lattice, RecipLattice, LatticeInv, SuperLattice, GGt;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
Lattice	ElectronGas/HEGGrid.h	/^  PL_t& Lattice;$/;"	m	struct:qmcplusplus::HEGGrid
Lattice	Experimental/Bspline3DSetBase.h	/^  UnitCellType Lattice;$/;"	m	struct:qmcplusplus::Bspline3DSetBase
Lattice	PlaneWave/PWBasis.h	/^  ParticleLayout_t Lattice;$/;"	m	class:qmcplusplus::PWBasis
Lattice	Spline3D/SplineGridHandler.h	/^  unitcell_type Lattice;$/;"	m	struct:qmcplusplus::SplineGridHandler
LatticeInv	EinsplineSetBuilder.h	/^  Tensor<double,OHMMS_DIM> Lattice, RecipLattice, LatticeInv, SuperLattice, GGt;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
LinFit	MuffinTin.cpp	/^MuffinTinClass::LinFit (std::vector<double> &y,                  \/\/ input$/;"	f	class:qmcplusplus::MuffinTinClass
LinearCombinationFunctor	Jastrow/LinearCombinationFunctor.h	/^  LinearCombinationFunctor(): NumComponents(0)$/;"	f	struct:LinearCombinationFunctor
LinearCombinationFunctor	Jastrow/LinearCombinationFunctor.h	/^struct LinearCombinationFunctor: public OptimizableFunctorBase$/;"	s
Linv	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> L, Linv;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
Linv	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> L, Linv;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
Linv_cuda	EinsplineSet.h	/^  gpu::device_vector<CudaRealType> Linv_cuda, L_cuda;$/;"	m	class:qmcplusplus::EinsplineSetExtended
Linv_host	EinsplineSet.h	/^  gpu::host_vector<CudaRealType> L_host, Linv_host;$/;"	m	class:qmcplusplus::EinsplineSetExtended
Lmax	AtomicOrbitals/HFAtomicSTOSetBuilder.h	/^  int Lmax;$/;"	m	class:qmcplusplus::HFAtomicSTOSetBuilder
LoadC	Jastrow/ThreeBodyPade.h	/^  inline void LoadC(int k, int m, int n, int o, double c)$/;"	f	class:qmcplusplus::ThreeBodyPade
Localized	EinsplineSet.h	/^  bool Localized;$/;"	m	class:qmcplusplus::EinsplineSet
Localized	MultiGridBsplineSet.h	/^    std::vector<bspline_type*> Localized;$/;"	m	struct:qmcplusplus::MultiGridBsplineSet
LocalizedBasisBuilder	Experimental/NumericalOrbitalSetBuilder.h	/^  GridMolecularOrbitals*  LocalizedBasisBuilder;$/;"	m	class:qmcplusplus::NumericalOrbitalSetBuilder
LocalizedBasisSet	LocalizedBasisSet.h	/^  LocalizedBasisSet(ParticleSet& ions, ParticleSet& els): CenterSys(ions), myTable(0)$/;"	f	struct:qmcplusplus::LocalizedBasisSet
LocalizedBasisSet	LocalizedBasisSet.h	/^struct LocalizedBasisSet: public BasisSetBase<typename COT::value_type>$/;"	s	namespace:qmcplusplus
LocalizedOrbitals	Experimental/NumericalOrbitalSetBuilder.h	/^  std::map<std::string,LOType*>                LocalizedOrbitals;$/;"	m	class:qmcplusplus::NumericalOrbitalSetBuilder
LocalizedOrbitals	MixedSPOSet.h	/^  LOType* LocalizedOrbitals;$/;"	m	class:qmcplusplus::MixedSPOSet
LogValue	OrbitalBase.h	/^  RealType LogValue;$/;"	m	struct:qmcplusplus::OrbitalBase
LogValue	TrialWaveFunction.h	/^  RealType LogValue;$/;"	m	class:qmcplusplus::TrialWaveFunction
LongRangeRPA	Jastrow/RPAJastrow.h	/^  LRTwoBodyJastrow* LongRangeRPA;$/;"	m	struct:qmcplusplus::RPAJastrow
Lower	Experimental/EinsplineMixedAdoptor.h	/^  TinyVector<ST,D> Lower;$/;"	m	struct:qmcplusplus::SplineMixedAdoptor
Lower	Experimental/EinsplineMixedAdoptor.h	/^  TinyVector<ST,D> Lower;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
Lower	Experimental/SplineOpenAdoptor.h	/^  TinyVector<ST,D> Lower;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
Lower	SplineMixedAdoptor.h	/^  TinyVector<ST,D> Lower;$/;"	m	struct:qmcplusplus::SplineMixedAdoptor
Lower	SplineMixedAdoptor.h	/^  TinyVector<ST,D> Lower;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
LowerBox	Experimental/TricubicBsplineSetBuilder.h	/^  PosType LowerBox;$/;"	m	class:qmcplusplus::TricubicBsplineSetBuilder
Lx	Experimental/Bspline3DSetTrunc.h	/^  RealType Lx,LxInv;$/;"	m	struct:qmcplusplus::Bspline3DSet_MLW
LxInv	Experimental/Bspline3DSetTrunc.h	/^  RealType Lx,LxInv;$/;"	m	struct:qmcplusplus::Bspline3DSet_MLW
LxSq	Experimental/Bspline3DSetTrunc.h	/^  RealType LxSq, LySq, LzSq;$/;"	m	struct:qmcplusplus::Bspline3DSet_MLW
Ly	Experimental/Bspline3DSetTrunc.h	/^  RealType Ly,LyInv;$/;"	m	struct:qmcplusplus::Bspline3DSet_MLW
LyInv	Experimental/Bspline3DSetTrunc.h	/^  RealType Ly,LyInv;$/;"	m	struct:qmcplusplus::Bspline3DSet_MLW
LySq	Experimental/Bspline3DSetTrunc.h	/^  RealType LxSq, LySq, LzSq;$/;"	m	struct:qmcplusplus::Bspline3DSet_MLW
Lz	Experimental/Bspline3DSetTrunc.h	/^  RealType Lz,LzInv;$/;"	m	struct:qmcplusplus::Bspline3DSet_MLW
LzInv	Experimental/Bspline3DSetTrunc.h	/^  RealType Lz,LzInv;$/;"	m	struct:qmcplusplus::Bspline3DSet_MLW
LzSq	Experimental/Bspline3DSetTrunc.h	/^  RealType LxSq, LySq, LzSq;$/;"	m	struct:qmcplusplus::Bspline3DSet_MLW
M	Experimental/SlaterDeterminant.h	/^  std::vector<int> M;$/;"	m	class:qmcplusplus::SlaterDeterminant
M	Fermion/MultiDiracDeterminantBase_help.h	/^  std::vector<T> M;$/;"	m	struct:qmcplusplus::MyDeterminant
M	Fermion/SlaterDet.h	/^  std::vector<int> M;$/;"	m	class:qmcplusplus::SlaterDet
M	OptimizableSPOSet.h	/^  int N, M;$/;"	m	class:qmcplusplus::OptimizableSPOSet
MAXINDEX	BasisSetBase.h	/^  enum {MAXINDEX=2+OHMMS_DIM};$/;"	e	enum:qmcplusplus::BasisSetBase::__anon3
MAX_NUM_SHARED_NODES	DistributedSPOSet.cpp	17;"	d	file:
MOBasisSet	Experimental/NumericalOrbitalSetBuilder.h	/^  MOBasisSetType* MOBasisSet;$/;"	m	class:qmcplusplus::NumericalOrbitalSetBuilder
MOBasisSetType	Experimental/NumericalOrbitalSetBuilder.h	/^  typedef GridMolecularOrbitals::BasisSetType MOBasisSetType;$/;"	t	class:qmcplusplus::NumericalOrbitalSetBuilder
MOD_NATURAL_EXPAND	MolecularOrbitals/AtomicBasisBuilder.h	/^  enum {DONOT_EXPAND=0, GAUSSIAN_EXPAND=1, NATURAL_EXPAND, CARTESIAN_EXPAND, MOD_NATURAL_EXPAND};$/;"	e	enum:qmcplusplus::AtomicBasisBuilder::__anon16
MT_APW_lmax	EinsplineSetBuilder.h	/^  std::vector<int> MT_APW_lmax;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
MT_APW_num_radial_points	EinsplineSetBuilder.h	/^  std::vector<int> MT_APW_num_radial_points;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
MT_APW_radii	EinsplineSetBuilder.h	/^  std::vector<double> MT_APW_radii;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
MT_APW_rgrids	EinsplineSetBuilder.h	/^  std::vector<Vector<double> > MT_APW_rgrids;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
MT_centers	EinsplineSetBuilder.h	/^  std::vector<TinyVector<double, OHMMS_DIM> > MT_centers;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
MUFFIN_TIN_H	MuffinTin.h	19;"	d
MULTIPLE	OrbitalConstraintsBase.h	/^  enum {MULTIPLE=0, LONGRANGE, ONEBODY, TWOBODY, THREEBODY, FOURBODY};$/;"	e	enum:qmcplusplus::OrbitalConstraintsBase::__anon19
MakeTwoCopies	BandInfo.h	/^  bool MakeTwoCopies;$/;"	m	struct:qmcplusplus::BandInfo
MakeTwoCopies	EinsplineAdoptor.h	/^  std::vector<bool>               MakeTwoCopies;$/;"	m	struct:qmcplusplus::SplineAdoptorBase
MakeTwoCopies	EinsplineSet.h	/^  std::vector<bool>         MakeTwoCopies;$/;"	m	class:qmcplusplus::EinsplineSetExtended
MakeTwoCopies	EinsplineSetBuilder.h	/^  std::vector<bool> MakeTwoCopies;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
MakeTwoCopies	Experimental/EinsplineAdoptorPacked.h	/^  std::vector<bool>        MakeTwoCopies;$/;"	m	struct:qmcplusplus::SplineC2CAdoptorPacked
MakeTwoCopies	Experimental/EinsplineAdoptorPacked.h	/^  std::vector<bool>        MakeTwoCopies;$/;"	m	struct:qmcplusplus::SplineC2RAdoptorPacked
MakeTwoCopies	Spline3D/twist_handler.hpp	/^      std::vector<bool> MakeTwoCopies;$/;"	m	struct:qmcplusplus::twist_handler
MatchingTol	EinsplineSetBuilder.h	/^  RealType MatchingTol;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
MatrixOperators	CompositeSPOSet.cpp	/^  namespace MatrixOperators$/;"	n	namespace:qmcplusplus	file:
MaxCoefs	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  int MaxCoefs;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
MaxCoefs	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  int MaxCoefs;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
MaxK	Jastrow/LRTwoBodyJastrow.h	/^  IndexType MaxK;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
MaxKshell	Jastrow/LRTwoBodyJastrow.h	/^  IndexType MaxKshell;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
MaxKsq	ElectronGas/HEGGrid.h	/^  T MaxKsq;$/;"	m	struct:qmcplusplus::HEGGrid
MaxNumGvecs	EinsplineSetBuilder.h	/^  int MaxNumGvecs;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
McMillanJ2Functor	Jastrow/McMillanJ2Functor.h	/^  McMillanJ2Functor(real_type a=5.0, real_type b=4.9133):ID_A("McA"),ID_B("McB")$/;"	f	struct:qmcplusplus::McMillanJ2Functor
McMillanJ2Functor	Jastrow/McMillanJ2Functor.h	/^struct McMillanJ2Functor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
McMillanJ2GFunctor	Jastrow/McMillanJ2GFunctor.h	/^  McMillanJ2GFunctor(real_type a=5.0, real_type b=5.7448):ID_A("McA"),ID_B("McB"),R0(2.5)$/;"	f	struct:qmcplusplus::McMillanJ2GFunctor
McMillanJ2GFunctor	Jastrow/McMillanJ2GFunctor.h	/^struct McMillanJ2GFunctor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
MeshFactor	EinsplineSetBuilder.h	/^  double MeshFactor;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
MeshSize	BsplineReaderBase.h	/^  TinyVector<int,3> MeshSize;$/;"	m	struct:qmcplusplus::BsplineReaderBase
MeshSize	EinsplineSetBuilder.h	/^  TinyVector<int,3> MeshSize;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
MixedSPOSet	MixedSPOSet.h	/^  MixedSPOSet():NumberOfOrbitals(0), LocalizedOrbitals(0) { }$/;"	f	class:qmcplusplus::MixedSPOSet
MixedSPOSet	MixedSPOSet.h	/^class MixedSPOSet: public QMCTraits$/;"	c	namespace:qmcplusplus
MixedSplineReader	EinsplineSetBuilder.h	/^  BsplineReaderBase *MixedSplineReader;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
ModMcMillanJ2Functor	Jastrow/McMillanJ2Functor.h	/^  ModMcMillanJ2Functor(real_type a=0.0, real_type b=0.0, real_type rc=0.0):ID_RC("Rcutoff"),ID_A("A"),ID_B("B")$/;"	f	struct:qmcplusplus::ModMcMillanJ2Functor
ModMcMillanJ2Functor	Jastrow/McMillanJ2Functor.h	/^struct ModMcMillanJ2Functor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
ModPadeFunctor	Jastrow/ModPadeFunctor.h	/^  ModPadeFunctor(real_type a=-0.5, real_type b=1): A(a),B(b),Zeff(1.0)$/;"	f	struct:qmcplusplus::ModPadeFunctor
ModPadeFunctor	Jastrow/ModPadeFunctor.h	/^struct ModPadeFunctor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
MolecularBasisBuilder	MolecularOrbitals/MolecularBasisBuilder.h	/^  MolecularBasisBuilder(ParticleSet& els, ParticleSet& ions, bool cusp=false, std::string cusp_info=""):$/;"	f	class:qmcplusplus::MolecularBasisBuilder
MolecularBasisBuilder	MolecularOrbitals/MolecularBasisBuilder.h	/^class MolecularBasisBuilder: public BasisSetBuilder$/;"	c	namespace:qmcplusplus
MolecularOrbitalBuilder	Experimental/MolecularOrbitalBuilder.h	/^  MolecularOrbitalBuilder(ParticleSet& p, TrialWaveFunction& psi,$/;"	f	struct:qmcplusplus::MolecularOrbitalBuilder
MolecularOrbitalBuilder	Experimental/MolecularOrbitalBuilder.h	/^struct MolecularOrbitalBuilder: public OrbitalBuilderBase$/;"	s	namespace:qmcplusplus
Morder	MolecularOrbitals/AtomicBasisBuilder.h	/^  std::string Morder;$/;"	m	struct:qmcplusplus::AtomicBasisBuilder
MuffinTinClass	MuffinTin.h	/^  MuffinTinClass() : RadialSplines(NULL),$/;"	f	class:qmcplusplus::MuffinTinClass
MuffinTinClass	MuffinTin.h	/^class MuffinTinClass$/;"	c	namespace:qmcplusplus
MuffinTinPath	EinsplineSetBuilderOld.cpp	/^EinsplineSetBuilder::MuffinTinPath(int ti, int bi, int tin)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
MuffinTinPath	Experimental/EinsplineSetBuilder.cpp	/^EinsplineSetBuilder::MuffinTinPath(int ti, int bi, int tin)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
MuffinTins	EinsplineSet.h	/^  std::vector<MuffinTinClass> MuffinTins;$/;"	m	class:qmcplusplus::EinsplineSet
MultiDiracDeterminantBase	Fermion/MultiDiracDeterminantBase.cpp	/^MultiDiracDeterminantBase::MultiDiracDeterminantBase(SPOSetBasePtr const &spos, int first):$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
MultiDiracDeterminantBase	Fermion/MultiDiracDeterminantBase.cpp	/^MultiDiracDeterminantBase::MultiDiracDeterminantBase(const MultiDiracDeterminantBase& s):$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
MultiDiracDeterminantBase	Fermion/MultiDiracDeterminantBase.h	/^class MultiDiracDeterminantBase: public OrbitalBase$/;"	c	namespace:qmcplusplus
MultiDiracDeterminantBase	Fermion/MultiDiracDeterminantBase_help.cpp	/^MultiDiracDeterminantBase::MultiDiracDeterminantBase(SPOSetBasePtr const &spos, int first):$/;"	f	class:MultiDiracDeterminantBase
MultiDiracDeterminantBase	Fermion/MultiDiracDeterminantBase_help.cpp	/^MultiDiracDeterminantBase::MultiDiracDeterminantBase(const MultiDiracDeterminantBase& s):$/;"	f	class:MultiDiracDeterminantBase
MultiDiracDeterminantBase	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^MultiDiracDeterminantBase::MultiDiracDeterminantBase(SPOSetBasePtr const &spos, int first):$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
MultiDiracDeterminantBase	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^MultiDiracDeterminantBase::MultiDiracDeterminantBase(const MultiDiracDeterminantBase& s):$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
MultiDiracDeterminantBase	Fermion/MultiDiracDeterminantWithBackflow.h	/^class MultiDiracDeterminantBase: public OrbitalBase$/;"	c	namespace:qmcplusplus
MultiGridBsplineSet	MultiGridBsplineSet.h	/^    MultiGridBsplineSet()$/;"	f	struct:qmcplusplus::MultiGridBsplineSet
MultiGridBsplineSet	MultiGridBsplineSet.h	/^    struct MultiGridBsplineSet: public SPOSetBase$/;"	s	namespace:qmcplusplus
MultiGridBsplineSetReader	MultiGridBsplineSetReader.h	/^  MultiGridBsplineSetReader(EinsplineSetBuilder* e)$/;"	f	struct:qmcplusplus::MultiGridBsplineSetReader
MultiGridBsplineSetReader	MultiGridBsplineSetReader.h	/^struct MultiGridBsplineSetReader: public BsplineReaderBase$/;"	s	namespace:qmcplusplus
MultiOrbitalTraits	EinsplineSet.h	/^template<> struct MultiOrbitalTraits<double,2>$/;"	s	namespace:qmcplusplus
MultiOrbitalTraits	EinsplineSet.h	/^template<> struct MultiOrbitalTraits<double,3>$/;"	s	namespace:qmcplusplus
MultiOrbitalTraits	EinsplineSet.h	/^template<> struct MultiOrbitalTraits<float,2>$/;"	s	namespace:qmcplusplus
MultiOrbitalTraits	EinsplineSet.h	/^template<> struct MultiOrbitalTraits<float,3>$/;"	s	namespace:qmcplusplus
MultiOrbitalTraits	EinsplineSet.h	/^template<> struct MultiOrbitalTraits<std::complex<double>,2>$/;"	s	namespace:qmcplusplus
MultiOrbitalTraits	EinsplineSet.h	/^template<> struct MultiOrbitalTraits<std::complex<double>,3>$/;"	s	namespace:qmcplusplus
MultiOrbitalTraits	EinsplineSet.h	/^template<> struct MultiOrbitalTraits<std::complex<float>,2>$/;"	s	namespace:qmcplusplus
MultiOrbitalTraits	EinsplineSet.h	/^template<> struct MultiOrbitalTraits<std::complex<float>,3>$/;"	s	namespace:qmcplusplus
MultiOrbitalTraits	EinsplineSet.h	/^template<typename StorageType, int dim>  struct MultiOrbitalTraits {};$/;"	s	namespace:qmcplusplus
MultiSlaterDeterminant	Fermion/MultiSlaterDeterminant.cpp	/^MultiSlaterDeterminant::MultiSlaterDeterminant(ParticleSet& targetPtcl, SPOSetProxyPtr upspo, SPOSetProxyPtr dnspo):spo_up(upspo),spo_dn(dnspo),$/;"	f	class:qmcplusplus::MultiSlaterDeterminant
MultiSlaterDeterminant	Fermion/MultiSlaterDeterminant.h	/^class MultiSlaterDeterminant: public OrbitalBase, public FermionBase$/;"	c	namespace:qmcplusplus
MultiSlaterDeterminantFast	Fermion/MultiSlaterDeterminantFast.cpp	/^MultiSlaterDeterminantFast::MultiSlaterDeterminantFast(ParticleSet& targetPtcl, MultiDiracDeterminantBase* up, MultiDiracDeterminantBase* dn):$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
MultiSlaterDeterminantFast	Fermion/MultiSlaterDeterminantFast.h	/^class MultiSlaterDeterminantFast: public OrbitalBase, public FermionBase$/;"	c	namespace:qmcplusplus
MultiSlaterDeterminantWithBackflow	Fermion/MultiSlaterDeterminantWithBackflow.cpp	/^MultiSlaterDeterminantWithBackflow::MultiSlaterDeterminantWithBackflow(ParticleSet& targetPtcl, SPOSetProxyPtr upspo, SPOSetProxyPtr dnspo, BackflowTransformation *BF):MultiSlaterDeterminant(targetPtcl,upspo,dnspo),BFTrans(BF)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
MultiSlaterDeterminantWithBackflow	Fermion/MultiSlaterDeterminantWithBackflow.h	/^class MultiSlaterDeterminantWithBackflow: public MultiSlaterDeterminant$/;"	c	namespace:qmcplusplus
MultiSlaterDeterminant_t	Fermion/SlaterDetBuilder.h	/^  typedef MultiSlaterDeterminant MultiSlaterDeterminant_t;$/;"	t	class:qmcplusplus::SlaterDetBuilder
MultiSpline	EinsplineSet.h	/^  SplineType *MultiSpline;$/;"	m	class:qmcplusplus::EinsplineSetExtended
MultiSpline	Experimental/EinsplineAdoptorPacked.h	/^  SplineType          *MultiSpline;$/;"	m	struct:qmcplusplus::SplineC2CAdoptorPacked
MultiSpline	Experimental/EinsplineAdoptorPacked.h	/^  SplineType          *MultiSpline;$/;"	m	struct:qmcplusplus::SplineC2RAdoptorPacked
MultiSpline	Experimental/EinsplineMixedAdoptor.h	/^  SplineType *MultiSpline;$/;"	m	struct:qmcplusplus::SplineMixedAdoptor
MultiSpline	Experimental/EinsplineMixedAdoptor.h	/^  SplineType *MultiSpline;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
MultiSpline	Experimental/SplineOpenAdoptor.h	/^  SplineType *MultiSpline;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
MultiSpline	Spline3D/EinsplineSetTemp.hpp	/^      Spline_t *MultiSpline;$/;"	m	struct:qmcplusplus::bspline_engine
MultiSpline	Spline3D/EinsplineSetTemp.hpp	/^    Spline_t *MultiSpline;$/;"	m	struct:qmcplusplus::bspline_engine
MyDeterminant	Fermion/MultiDiracDeterminantBase_help.h	/^struct MyDeterminant$/;"	s	namespace:qmcplusplus
MyG	Fermion/DiracDeterminantAFM.h	/^  std::vector<TinyVector<ParticleSet::ParticleValue_t,OHMMS_DIM> > MyG;$/;"	m	class:qmcplusplus::DiracDeterminantAFM
MyG	Fermion/DiracDeterminantOpt.h	/^  std::vector<PosType> MyG;$/;"	m	class:qmcplusplus::DiracDeterminantOpt
MyIndex	DiffOrbitalBase.h	/^  int MyIndex;$/;"	m	struct:qmcplusplus::AnalyticDiffOrbital
MyIndex	EinsplineAdoptor.h	/^  int MyIndex;$/;"	m	struct:qmcplusplus::SplineAdoptorBase
MyName	Jastrow/RPAJastrow.h	/^  std::string MyName;$/;"	m	struct:qmcplusplus::RPAJastrow
MyName	Jastrow/singleRPAJastrowBuilder.h	/^  std::string MyName;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
MyToken	EinsplineSetBuilder.h	/^  int MyToken;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
N	AFMSPOSet.h	/^  int N;$/;"	m	class:qmcplusplus::AFMSPOSet
N	AtomicOrbitals/HeSTOClementiRottie.h	/^  enum {N=5};$/;"	e	enum:qmcplusplus::HePresetHF::__anon2
N	Experimental/TwoBodyJastrowFunction.Shared.h	/^  int N,NN;$/;"	m	class:qmcplusplus::TwoBodyJastrow
N	Experimental/TwoBodyJastrowFunction.h	/^  int N,NN;$/;"	m	class:qmcplusplus::TwoBodyJastrow
N	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  int N;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
N	Jastrow/PolyFunctor.h	/^  int N;$/;"	m	struct:qmcplusplus::PolyFunctor
N	Jastrow/TwoBodyJastrowOrbital.h	/^  int N;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
N	OptimizableSPOSet.h	/^  int N, M;$/;"	m	class:qmcplusplus::OptimizableSPOSet
NATURAL_EXPAND	Experimental/GTOMolecularOrbitals.h	/^  enum {DONOT_EXPAND=0, GAUSSIAN_EXPAND=1, NATURAL_EXPAND};$/;"	e	enum:qmcplusplus::GTOMolecularOrbitals::__anon9
NATURAL_EXPAND	Experimental/STOMolecularOrbitals.h	/^  enum {DONOT_EXPAND=0, GAUSSIAN_EXPAND=1, NATURAL_EXPAND};$/;"	e	enum:qmcplusplus::STOMolecularOrbitals::__anon8
NATURAL_EXPAND	MolecularOrbitals/AtomicBasisBuilder.h	/^  enum {DONOT_EXPAND=0, GAUSSIAN_EXPAND=1, NATURAL_EXPAND, CARTESIAN_EXPAND, MOD_NATURAL_EXPAND};$/;"	e	enum:qmcplusplus::AtomicBasisBuilder::__anon16
NGOBuilder	MolecularOrbitals/NGOBuilder.cpp	/^NGOBuilder::NGOBuilder(xmlNodePtr cur)$/;"	f	class:qmcplusplus::NGOBuilder
NGOBuilder	MolecularOrbitals/NGOBuilder.h	/^class NGOBuilder: public QMCTraits$/;"	c	namespace:qmcplusplus
NGOType	MixedSPOSet.h	/^  typedef TriCubicSplineT<ValueType,RealType>  NGOType;$/;"	t	class:qmcplusplus::MixedSPOSet
NGOrbital	MolecularOrbitals/NGOBuilder.h	/^  NGOrbital(grid_type* agrid):myFunc(agrid) { }$/;"	f	struct:qmcplusplus::NGOrbital
NGOrbital	MolecularOrbitals/NGOBuilder.h	/^  NGOrbital(grid_type* agrid, const VV& nv):myFunc(agrid,nv) { }$/;"	f	struct:qmcplusplus::NGOrbital
NGOrbital	MolecularOrbitals/NGOBuilder.h	/^struct NGOrbital: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
NJAABuilder	Jastrow/Experimental/NJAABuilder.cpp	/^NJAABuilder::NJAABuilder(ParticleSet& p, TrialWaveFunction& psi):$/;"	f	class:qmcplusplus::NJAABuilder
NJAABuilder	Jastrow/Experimental/NJAABuilder.h	/^struct NJAABuilder: public OrbitalBuilderBase$/;"	s	namespace:qmcplusplus
NJABBuilder	Jastrow/Experimental/NJABBuilder.cpp	/^NJABBuilder::NJABBuilder(ParticleSet& p, TrialWaveFunction& psi, PtclPoolType& psets):$/;"	f	class:qmcplusplus::NJABBuilder
NJABBuilder	Jastrow/Experimental/NJABBuilder.h	/^struct NJABBuilder: public OrbitalBuilderBase$/;"	s	namespace:qmcplusplus
NL	SphericalBasisSet.h	/^  std::vector<int> NL;$/;"	m	struct:qmcplusplus::SphericalBasisSet
NL	SphericalOrbitalSet.h	/^  std::vector<int> NL;$/;"	m	struct:qmcplusplus::SphericalOrbitalSet
NLAinvList_d	Fermion/DiracDeterminantCUDA.h	/^  gpu::device_vector<CudaValueType*> NLAinvList_d;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
NLAinvList_host	Fermion/DiracDeterminantCUDA.h	/^  gpu::host_vector<CudaValueType*> NLAinvList_host[2];$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
NLJOB_GPU_H	Jastrow/NLjobGPU.h	15;"	d
NL_JobListGPU	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<NLjobGPU<CudaReal> > NL_JobListGPU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_JobListGPU	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<NLjobGPU<CudaReal> > NL_JobListGPU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NL_JobListHost	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<NLjobGPU<CudaReal> > NL_JobListHost;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_JobListHost	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<NLjobGPU<CudaReal> > NL_JobListHost;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NL_NumCoefsGPU	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<int> NL_NumCoefsGPU,  NL_NumQuadPointsGPU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_NumCoefsGPU	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<int> NL_NumCoefsGPU,  NL_NumQuadPointsGPU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NL_NumCoefsHost	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<int> NL_NumCoefsHost, NL_NumQuadPointsHost;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_NumCoefsHost	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<int> NL_NumCoefsHost, NL_NumQuadPointsHost;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NL_NumQuadPointsGPU	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<int> NL_NumCoefsGPU,  NL_NumQuadPointsGPU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_NumQuadPointsGPU	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<int> NL_NumCoefsGPU,  NL_NumQuadPointsGPU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NL_NumQuadPointsHost	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<int> NL_NumCoefsHost, NL_NumQuadPointsHost;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_NumQuadPointsHost	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<int> NL_NumCoefsHost, NL_NumQuadPointsHost;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NL_QuadPointsGPU	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> NL_rMaxGPU,  NL_QuadPointsGPU,  NL_RatiosGPU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_QuadPointsGPU	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> NL_rMaxGPU,  NL_QuadPointsGPU,  NL_RatiosGPU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NL_QuadPointsHost	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> NL_rMaxHost, NL_QuadPointsHost, NL_RatiosHost;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_QuadPointsHost	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> NL_rMaxHost, NL_QuadPointsHost, NL_RatiosHost;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NL_RatiosGPU	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> NL_rMaxGPU,  NL_QuadPointsGPU,  NL_RatiosGPU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_RatiosGPU	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> NL_rMaxGPU,  NL_QuadPointsGPU,  NL_RatiosGPU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NL_RatiosHost	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> NL_rMaxHost, NL_QuadPointsHost, NL_RatiosHost;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_RatiosHost	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> NL_rMaxHost, NL_QuadPointsHost, NL_RatiosHost;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NL_SplineCoefsListGPU	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal*> NL_SplineCoefsListGPU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_SplineCoefsListGPU	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal*> NL_SplineCoefsListGPU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NL_SplineCoefsListHost	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal*> NL_SplineCoefsListHost;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_SplineCoefsListHost	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal*> NL_SplineCoefsListHost;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NL_TIMER	TrialWaveFunction.cpp	/^typedef enum { V_TIMER, VGL_TIMER, ACCEPT_TIMER, NL_TIMER,$/;"	e	enum:qmcplusplus::__anon33	file:
NL_TIMER	TrialWaveFunction_CUDA.cpp	/^typedef enum { V_TIMER, VGL_TIMER, ACCEPT_TIMER, NL_TIMER,$/;"	e	enum:qmcplusplus::__anon34	file:
NL_rMaxGPU	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> NL_rMaxGPU,  NL_QuadPointsGPU,  NL_RatiosGPU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_rMaxGPU	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> NL_rMaxGPU,  NL_QuadPointsGPU,  NL_RatiosGPU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NL_rMaxHost	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> NL_rMaxHost, NL_QuadPointsHost, NL_RatiosHost;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_rMaxHost	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> NL_rMaxHost, NL_QuadPointsHost, NL_RatiosHost;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NLcudaSign	EinsplineSet.h	/^  gpu::device_vector<CudaRealType> cudaSign, NLcudaSign;$/;"	m	class:qmcplusplus::EinsplineSetExtended
NLcudapos	EinsplineSet.h	/^  gpu::device_vector<CudaPosType> cudapos, NLcudapos;$/;"	m	class:qmcplusplus::EinsplineSetExtended
NLelecList_d	Fermion/DiracDeterminantCUDA.h	/^  gpu::device_vector<int> NLelecList_d;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
NLelecList_host	Fermion/DiracDeterminantCUDA.h	/^  gpu::host_vector<int> NLelecList_host[2];$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
NLhostPos	EinsplineSet.h	/^  gpu::host_vector<CudaPosType> NLhostPos;$/;"	m	class:qmcplusplus::EinsplineSetExtended
NLhostSign	EinsplineSet.h	/^  gpu::host_vector<CudaRealType> hostSign, NLhostSign;$/;"	m	class:qmcplusplus::EinsplineSetExtended
NLjob	OrbitalBase.h	/^  NLjob(int w, int e, int n) :$/;"	f	struct:qmcplusplus::NLjob
NLjob	OrbitalBase.h	/^struct NLjob$/;"	s	namespace:qmcplusplus
NLjobGPU	Jastrow/NLjobGPU.h	/^struct NLjobGPU$/;"	s
NLnumRatioList_d	Fermion/DiracDeterminantCUDA.h	/^  gpu::device_vector<int> NLnumRatioList_d;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
NLnumRatioList_host	Fermion/DiracDeterminantCUDA.h	/^  gpu::host_vector<int> NLnumRatioList_host[2];$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
NLposBuffer_d	Fermion/DiracDeterminantCUDA.h	/^  gpu::device_vector<CudaRealType> NLposBuffer_d;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
NLposBuffer_host	Fermion/DiracDeterminantCUDA.h	/^  gpu::host_vector<CudaRealType> NLposBuffer_host;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
NLratioList_d	Fermion/DiracDeterminantCUDA.h	/^  gpu::device_vector<CudaValueType*> NLratioList_d;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
NLratioList_host	Fermion/DiracDeterminantCUDA.h	/^  gpu::host_vector<CudaValueType*> NLratioList_host[2];$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
NLratios	Fermion/DiracDeterminantBase.h	/^  NLratios (MCWalkerConfiguration &W,  std::vector<NLjob> &jobList,$/;"	f	class:qmcplusplus::DiracDeterminantBase
NLratios	Fermion/DiracDeterminantCUDA.cpp	/^DiracDeterminantCUDA::NLratios (MCWalkerConfiguration &W,$/;"	f	class:qmcplusplus::DiracDeterminantCUDA
NLratios	Fermion/SlaterDet.h	/^  void NLratios (MCWalkerConfiguration &W,  std::vector<NLjob> &jobList$/;"	f	class:qmcplusplus::SlaterDet
NLratios	Jastrow/OneBodyJastrowOrbitalBspline.cpp	/^OneBodyJastrowOrbitalBspline::NLratios$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NLratios	Jastrow/TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::NLratios$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NLratios	OrbitalBase.h	/^  NLratios (MCWalkerConfiguration &W,  gpu::device_vector<CUDA_PRECISION*> &Rlist,$/;"	f	struct:qmcplusplus::OrbitalBase
NLratios	OrbitalBase.h	/^  NLratios (MCWalkerConfiguration &W,  std::vector<NLjob> &jobList,$/;"	f	struct:qmcplusplus::OrbitalBase
NLratios	TrialWaveFunction_CUDA.cpp	/^TrialWaveFunction::NLratios (MCWalkerConfiguration &W,$/;"	f	class:qmcplusplus::TrialWaveFunction
NLratios_CPU	Fermion/DiracDeterminantCUDA.cpp	/^DiracDeterminantCUDA::NLratios_CPU$/;"	f	class:qmcplusplus::DiracDeterminantCUDA
NLratios_d	Fermion/DiracDeterminantCUDA.h	/^  gpu::device_vector<CudaValueType> NLratios_d[2];$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
NLratios_host	Fermion/DiracDeterminantCUDA.h	/^  gpu::host_vector<CudaValueType> NLratios_host;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
NLrowBufferRows	Fermion/DiracDeterminantCUDA.h	/^  static const int NLrowBufferRows = 4800;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
NLrowBuffer_d	Fermion/DiracDeterminantCUDA.h	/^  gpu::device_vector<CudaValueType> NLrowBuffer_d;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
NLrowBuffer_host	Fermion/DiracDeterminantCUDA.h	/^  gpu::host_vector<CudaValueType> NLrowBuffer_host;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
NN	Experimental/TwoBodyJastrowFunction.Shared.h	/^  int N,NN;$/;"	m	class:qmcplusplus::TwoBodyJastrow
NN	Experimental/TwoBodyJastrowFunction.h	/^  int N,NN;$/;"	m	class:qmcplusplus::TwoBodyJastrow
NN	Jastrow/TwoBodyJastrowOrbital.h	/^  int NN;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
NN	Jastrow/eeI_JastrowOrbital.h	/^  int NN;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
NOSYMM	Jastrow/kSpaceJastrow.h	/^  typedef enum { CRYSTAL, ISOTROPIC, NOSYMM } SymmetryType;$/;"	e	enum:qmcplusplus::kSpaceJastrow::__anon15
NP	Experimental/DiracDeterminant.h	/^  int NP;$/;"	m	class:qmcplusplus::DiracDeterminant
NP	Fermion/DiracDeterminantBase.h	/^  int NP;$/;"	m	class:qmcplusplus::DiracDeterminantBase
NP	Fermion/MultiDiracDeterminantBase.h	/^  int NP;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
NP	Fermion/MultiDiracDeterminantWithBackflow.h	/^  int NP;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
NP	Fermion/MultiSlaterDeterminantFast.h	/^  int NP;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
NUBsplineClass_2d_d	legacy/EinsplineWrapper.cpp	/^NUBsplineClass_2d_d::NUBsplineClass_2d_d(TinyVector<double,2> start,$/;"	f	class:qmcplusplus::NUBsplineClass_2d_d
NUBsplineClass_2d_d	legacy/EinsplineWrapper.h	/^class NUBsplineClass_2d_d : public BsplineClass_2d_d$/;"	c	namespace:qmcplusplus
NUBsplineClass_2d_z	legacy/EinsplineWrapper.cpp	/^NUBsplineClass_2d_z::NUBsplineClass_2d_z(TinyVector<double,2> start,$/;"	f	class:qmcplusplus::NUBsplineClass_2d_z
NUBsplineClass_2d_z	legacy/EinsplineWrapper.h	/^class NUBsplineClass_2d_z : public BsplineClass_2d_z$/;"	c	namespace:qmcplusplus
N_eI	Jastrow/PolynomialFunctor3D.h	/^  int N_eI, N_ee;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
N_ee	Jastrow/PolynomialFunctor3D.h	/^  int N_eI, N_ee;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
Name	AtomicOrbitals/HFAtomicSTOSet.h	/^  std::string Name;$/;"	m	struct:qmcplusplus::ComboSTO
Ncopy	Experimental/Bspline3DSetBase.h	/^  TinyVector<int,DIM> Ncopy;$/;"	m	struct:qmcplusplus::Bspline3DSetBase
Ndown	AGPDeterminant.h	/^  int Ndown;$/;"	m	class:qmcplusplus::AGPDeterminant
NeedToRestore	Jastrow/LRTwoBodyJastrow.h	/^  bool NeedToRestore;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
NeedsDistanceTable	SPOSetBase.h	/^  bool NeedsDistanceTable;$/;"	m	class:qmcplusplus::SPOSetBase
Nelec	Jastrow/eeI_JastrowOrbital.h	/^  int Nelec, Nion;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
Nion	Jastrow/eeI_JastrowOrbital.h	/^  int Nelec, Nion;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
NoCuspFunctor	Experimental/NoCuspFunctor.h	/^  NoCuspFunctor(real_type a=1.0, real_type b=1.0)$/;"	f	struct:qmcplusplus::NoCuspFunctor
NoCuspFunctor	Experimental/NoCuspFunctor.h	/^struct NoCuspFunctor: public OptimizableFunctorBase<T>$/;"	s	namespace:qmcplusplus
NormConstant	Jastrow/LRTwoBodyJastrow.h	/^  RealType NormConstant;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
NormConstant	Jastrow/kSpaceJastrow.h	/^  RealType CellVolume, NormConstant;$/;"	m	class:qmcplusplus::kSpaceJastrow
NormFac	Jastrow/ThreeBodyGeminal.h	/^  RealType NormFac;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
NormFactor	Jastrow/LRBreakupUtilities.h	/^  T NormFactor;$/;"	m	struct:qmcplusplus::DerivRPABreakup
NormFactor	Jastrow/LRBreakupUtilities.h	/^  T NormFactor;$/;"	m	struct:qmcplusplus::DerivYukawaBreakup
NormFactor	Jastrow/LRBreakupUtilities.h	/^  T NormFactor;$/;"	m	struct:qmcplusplus::EPRPABreakup
NormFactor	Jastrow/LRBreakupUtilities.h	/^  T NormFactor;$/;"	m	struct:qmcplusplus::RPABreakup
NormFactor	Jastrow/LRBreakupUtilities.h	/^  T NormFactor;$/;"	m	struct:qmcplusplus::YukawaBreakup
NormFactor	Jastrow/LRBreakupUtilities.h	/^  T NormFactor;$/;"	m	struct:qmcplusplus::derivEPRPABreakup
Normalized	Experimental/Any2GridBuilder.h	/^  bool Normalized;$/;"	m	struct:qmcplusplus::Any2GridBuilder
Normalized	Experimental/GTOMolecularOrbitals.h	/^  bool Normalized;$/;"	m	class:qmcplusplus::GTOMolecularOrbitals
Normalized	Experimental/STOMolecularOrbitals.h	/^  bool Normalized;$/;"	m	class:qmcplusplus::STOMolecularOrbitals
Normalized	Jastrow/CBSOBuilder.h	/^  bool Normalized;$/;"	m	class:qmcplusplus::CBSOBuilder
Normalized	MolecularOrbitals/GTOBuilder.h	/^  bool Normalized;$/;"	m	class:qmcplusplus::GTOBuilder
Normalized	MolecularOrbitals/NGOBuilder.h	/^  bool Normalized;$/;"	m	class:qmcplusplus::NGOBuilder
Normalized	MolecularOrbitals/STOBuilder.h	/^  bool Normalized;$/;"	m	class:qmcplusplus::STOBuilder
Np	Jastrow/CompositeFunctor.h	/^  int Np;$/;"	m	struct:qmcplusplus::AnyTimesRnFunctor
NumBands	AtomicOrbital.h	/^  int lMax, Numlm, NumBands;$/;"	m	class:qmcplusplus::AtomicOrbital
NumBands	EinsplineSetBuilder.h	/^  int NumBands, NumElectrons, NumSpins, NumTwists, NumCoreStates;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
NumBasis	Fermion/DiracDeterminantOpt.h	/^  int NumOrbitals, NumBasis;$/;"	m	class:qmcplusplus::DiracDeterminantOpt
NumCenterGroups	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  int NumCenterGroups, NumElecGroups;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NumCenters	Experimental/CorrectingOrbitalBasisSet.h	/^  int NumCenters;$/;"	m	struct:qmcplusplus::CorrectingOrbitalBasisSet
NumCenters	Fermion/BackflowFunctionBase.h	/^  int NumCenters;$/;"	m	class:qmcplusplus::BackflowFunctionBase
NumCenters	IonOrbital.h	/^  int NumTargetPtcls, NumCenters;$/;"	m	struct:qmcplusplus::IonOrbital
NumCenters	Jastrow/ThreeBodyJastrowOrbital.h	/^  IndexType NumCenters;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
NumCenters	LocalizedBasisSet.h	/^  int NumCenters;$/;"	m	struct:qmcplusplus::LocalizedBasisSet
NumCenters	SparseLocalizedBasisSet.h	/^  int NumCenters;$/;"	m	struct:qmcplusplus::SparseLocalizedBasisSet
NumComponents	Jastrow/LinearCombinationFunctor.h	/^  int NumComponents;$/;"	m	struct:LinearCombinationFunctor
NumConstraints	Jastrow/PolynomialFunctor3D.h	/^  int NumConstraints, NumGamma;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
NumCore	MuffinTin.h	/^  int NumCore;$/;"	m	class:qmcplusplus::MuffinTinClass
NumCoreOrbs	EinsplineSet.h	/^  int NumValenceOrbs, NumCoreOrbs;$/;"	m	class:qmcplusplus::EinsplineSet
NumCoreOrbs	EinsplineSetBuilder.h	/^  int NumDistinctOrbitals, NumCoreOrbs, NumValenceOrbs;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
NumCoreStates	EinsplineSetBuilder.h	/^  int NumBands, NumElectrons, NumSpins, NumTwists, NumCoreStates;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
NumDets	Fermion/MultiDiracDeterminantBase.h	/^  int NumDets;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
NumDets	Fermion/MultiDiracDeterminantWithBackflow.h	/^  int NumDets;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
NumDistinctOrbitals	EinsplineSetBuilder.h	/^  int NumDistinctOrbitals, NumCoreOrbs, NumValenceOrbs;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
NumElecGroups	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  int NumCenterGroups, NumElecGroups;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NumElecs	Jastrow/kSpaceJastrow.h	/^  int NumElecs, NumSpins;$/;"	m	class:qmcplusplus::kSpaceJastrow
NumElectrons	EinsplineSetBuilder.h	/^  int NumBands, NumElectrons, NumSpins, NumTwists, NumCoreStates;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
NumFuns	Fermion/GaussianFunctor.h	/^  int NumFuns;$/;"	m	class:qmcplusplus::GaussianFunctor
NumGamma	Jastrow/PolynomialFunctor3D.h	/^  int NumConstraints, NumGamma;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
NumGridPoints	Jastrow/CBSOBuilder.h	/^  int NumGridPoints;$/;"	m	class:qmcplusplus::CBSOBuilder
NumGridPoints	Jastrow/Experimental/AnyConstraints.h	/^    int NumGridPoints;$/;"	m	struct:qmcplusplus::AnyConstraints::BasisGroupType
NumGridPoints	Jastrow/SplineFunctors.h	/^  int NumGridPoints;$/;"	m	struct:qmcplusplus::CubicSplineBasisSet
NumGridPoints	Jastrow/SplineFunctors.h	/^  int NumGridPoints;$/;"	m	struct:qmcplusplus::CubicSplineSingle
NumGridPoints	Jastrow/WMJastrowBuilder.h	/^    int NumGridPoints;$/;"	m	struct:qmcplusplus::WMJastrowBuilder::BasisGroupType
NumGroups	Fermion/Backflow_ee.h	/^  int NumGroups;$/;"	m	class:qmcplusplus::Backflow_ee
NumGroups	Fermion/Backflow_ee_kSpace.h	/^  int NumGroups;$/;"	m	class:qmcplusplus::Backflow_ee_kSpace
NumGroups	Jastrow/DiffTwoBodyJastrowOrbital.h	/^  int NumGroups;$/;"	m	class:qmcplusplus::DiffTwoBodyJastrowOrbital
NumGroups	Jastrow/TwoBodyJastrowOrbital.h	/^  int NumGroups;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
NumGroups	SparseLocalizedBasisSet.h	/^  int NumGroups;$/;"	m	struct:qmcplusplus::SparseLocalizedBasisSet
NumIonSpecies	Jastrow/kSpaceJastrow.h	/^  int NumIons, NumIonSpecies;$/;"	m	class:qmcplusplus::kSpaceJastrow
NumIons	Jastrow/kSpaceJastrow.h	/^  int NumIons, NumIonSpecies;$/;"	m	class:qmcplusplus::kSpaceJastrow
NumKShells	Fermion/Backflow_ee_kSpace.h	/^  int NumKShells; \/\/ number of k shells included in bf function$/;"	m	class:qmcplusplus::Backflow_ee_kSpace
NumKVecs	Fermion/Backflow_ee_kSpace.h	/^  int NumKVecs; \/\/ number of k vectors included in bf function$/;"	m	class:qmcplusplus::Backflow_ee_kSpace
NumKpts	Jastrow/LRTwoBodyJastrow.h	/^  IndexType NumKpts;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
NumKptsHalf	ElectronGas/HEGGrid.h	/^  int NumKptsHalf;$/;"	m	struct:qmcplusplus::HEGGrid
NumMuffinTins	EinsplineSetBuilder.h	/^  int NumMuffinTins;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
NumOrb	Fermion/GaussianFunctor.h	/^  NGOrbital *NumOrb;$/;"	m	class:qmcplusplus::GaussianFunctor
NumOrbitals	EinsplineSet.h	/^  int numlm, NumOrbitals, Ylm_BS;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
NumOrbitals	Experimental/Bspline3DSetBase.h	/^  int NumOrbitals;$/;"	m	struct:qmcplusplus::Bspline3DSetBase
NumOrbitals	Experimental/DiracDeterminant.h	/^  int NumOrbitals;$/;"	m	class:qmcplusplus::DiracDeterminant
NumOrbitals	Fermion/DiracDeterminantAFM.h	/^  int NumOrbitals, pm;$/;"	m	class:qmcplusplus::DiracDeterminantAFM
NumOrbitals	Fermion/DiracDeterminantBase.h	/^  int NumOrbitals;$/;"	m	class:qmcplusplus::DiracDeterminantBase
NumOrbitals	Fermion/DiracDeterminantOpt.h	/^  int NumOrbitals, NumBasis;$/;"	m	class:qmcplusplus::DiracDeterminantOpt
NumOrbitals	Fermion/MultiDiracDeterminantBase.h	/^  int NumOrbitals;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
NumOrbitals	Fermion/MultiDiracDeterminantWithBackflow.h	/^  int NumOrbitals;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
NumOrbitals	MuffinTin.h	/^  int NumOrbitals;$/;"	m	class:qmcplusplus::MuffinTinClass
NumOrbitalsRead	EinsplineSetBuilder.h	/^  int LastSpinSet, NumOrbitalsRead;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
NumOrbs	EinsplineSetBuilder.h	/^  int NumOrbs;$/;"	m	struct:qmcplusplus::H5OrbSet
NumParams	Fermion/BFsplineFunctor.h	/^  int NumParams;$/;"	m	struct:qmcplusplus::BFsplineFunctor
NumParams	Jastrow/BesselZeroFunctor.h	/^  int NumParams;$/;"	m	struct:qmcplusplus::BesselZero
NumParams	Jastrow/BsplineFunctor.h	/^  int NumParams;$/;"	m	struct:qmcplusplus::BsplineFunctor
NumParams	Jastrow/SplineFunctors.h	/^  int NumParams;$/;"	m	struct:qmcplusplus::CubicSplineSingle
NumParams_eI	Jastrow/BsplineFunctor3D.h	/^  int NumParams_eI, NumParams_ee;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
NumParams_ee	Jastrow/BsplineFunctor3D.h	/^  int NumParams_eI, NumParams_ee;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
NumParticles	Fermion/DiracDeterminantWithBackflow.h	/^  int NumParticles;$/;"	m	class:qmcplusplus::DiracDeterminantWithBackflow
NumPlaneWaves	Experimental/PlaneWaveBasis.h	/^  int NumPlaneWaves;$/;"	m	class:qmcplusplus::PlaneWaveBasis
NumPlaneWaves	PlaneWave/PWBasis.h	/^  int NumPlaneWaves;$/;"	m	class:qmcplusplus::PWBasis
NumPtcl	Experimental/DetSetBuilderWithBasisSet.h	/^  int NumPtcl;$/;"	m	struct:qmcplusplus::DetSetBuilderWithBasisSet
NumPtcls	AGPDeterminant.h	/^  int NumPtcls;$/;"	m	class:qmcplusplus::AGPDeterminant
NumPtcls	Experimental/DiracDeterminant.h	/^  int NumPtcls;$/;"	m	class:qmcplusplus::DiracDeterminant
NumPtcls	Experimental/PlaneWaveBasis.h	/^  int NumPtcls;$/;"	m	class:qmcplusplus::PlaneWaveBasis
NumPtcls	Fermion/DiracDeterminantBase.h	/^  int NumPtcls;$/;"	m	class:qmcplusplus::DiracDeterminantBase
NumPtcls	Fermion/MultiDiracDeterminantBase.h	/^  int NumPtcls;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
NumPtcls	Fermion/MultiDiracDeterminantWithBackflow.h	/^  int NumPtcls;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
NumPtcls	Jastrow/DiffOneBodyJastrowOrbital.h	/^  int NumPtcls;$/;"	m	class:qmcplusplus::DiffOneBodyJastrowOrbital
NumPtcls	Jastrow/DiffOneBodySpinJastrowOrbital.h	/^  int NumPtcls;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
NumPtcls	Jastrow/DiffTwoBodyJastrowOrbital.h	/^  int NumPtcls;$/;"	m	class:qmcplusplus::DiffTwoBodyJastrowOrbital
NumPtcls	Jastrow/LRTwoBodyJastrow.h	/^  IndexType NumPtcls;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
NumPtcls	Jastrow/ThreeBodyBlockSparse.h	/^  int NumPtcls;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
NumPtcls	Jastrow/ThreeBodyGeminal.h	/^  int NumPtcls;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
NumPtcls	Jastrow/ThreeBodyJastrowOrbital.h	/^  IndexType NumPtcls;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
NumPtcls	LCOrbitals.h	/^  int NumPtcls;$/;"	m	class:qmcplusplus::LCOrbitals
NumPtcls	TrialWaveFunction.h	/^  int NumPtcls;$/;"	m	class:qmcplusplus::TrialWaveFunction
NumQuadPoints	Jastrow/NLjobGPU.h	/^  int Elec, NumQuadPoints;$/;"	m	struct:NLjobGPU
NumSPOs	BandInfo.h	/^  int NumSPOs;$/;"	m	struct:qmcplusplus::BandInfoGroup
NumSPOs	LCOrbitals.h	/^  int NumSPOs;$/;"	m	class:qmcplusplus::LCOrbitals
NumSpecies	Jastrow/LRTwoBodyJastrow.h	/^  IndexType NumSpecies;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
NumSpins	EinsplineSetBuilder.h	/^  int NumBands, NumElectrons, NumSpins, NumTwists, NumCoreStates;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
NumSpins	Jastrow/kSpaceJastrow.h	/^  int NumElecs, NumSpins;$/;"	m	class:qmcplusplus::kSpaceJastrow
NumTargetPtcls	IonOrbital.h	/^  int NumTargetPtcls, NumCenters;$/;"	m	struct:qmcplusplus::IonOrbital
NumTargets	Experimental/CorrectingOrbitalBasisSet.h	/^  int NumTargets;$/;"	m	struct:qmcplusplus::CorrectingOrbitalBasisSet
NumTargets	Fermion/BackflowFunctionBase.h	/^  int NumTargets;$/;"	m	class:qmcplusplus::BackflowFunctionBase
NumTargets	Fermion/BackflowTransformation.h	/^  int NumTargets;$/;"	m	class:qmcplusplus::BackflowTransformation
NumTargets	LocalizedBasisSet.h	/^  int NumTargets;$/;"	m	struct:qmcplusplus::LocalizedBasisSet
NumTargets	SparseLocalizedBasisSet.h	/^  int NumTargets;$/;"	m	struct:qmcplusplus::SparseLocalizedBasisSet
NumTwists	EinsplineSetBuilder.h	/^  int NumBands, NumElectrons, NumSpins, NumTwists, NumCoreStates;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
NumUniqueDets_dn	Fermion/MultiSlaterDeterminant.h	/^  int NumUniqueDets_dn;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
NumUniqueDets_up	Fermion/MultiSlaterDeterminant.h	/^  int NumUniqueDets_up;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
NumValenceOrbs	EinsplineSet.h	/^  int NumValenceOrbs, NumCoreOrbs;$/;"	m	class:qmcplusplus::EinsplineSet
NumValenceOrbs	EinsplineSetBuilder.h	/^  int NumDistinctOrbitals, NumCoreOrbs, NumValenceOrbs;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
NumVars	Jastrow/DiffOneBodyJastrowOrbital.h	/^  int NumVars;$/;"	m	class:qmcplusplus::DiffOneBodyJastrowOrbital
NumVars	Jastrow/DiffOneBodySpinJastrowOrbital.h	/^  int NumVars;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
NumVars	Jastrow/DiffTwoBodyJastrowOrbital.h	/^  int NumVars;$/;"	m	class:qmcplusplus::DiffTwoBodyJastrowOrbital
NumVars	Jastrow/eeI_JastrowOrbital.h	/^  int NumVars;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
NumberOfOrbitals	MixedSPOSet.h	/^  int NumberOfOrbitals;$/;"	m	class:qmcplusplus::MixedSPOSet
NumericalDiffOrbital	DiffOrbitalBase.h	/^  NumericalDiffOrbital(OrbitalBase* orb=0): DiffOrbitalBase(orb) {}$/;"	f	struct:qmcplusplus::NumericalDiffOrbital
NumericalDiffOrbital	DiffOrbitalBase.h	/^struct NumericalDiffOrbital: public DiffOrbitalBase$/;"	s	namespace:qmcplusplus
NumericalJastrow	Jastrow/NumericalJastrowFunctor.h	/^  NumericalJastrow(): InFunc(0), OutFunc(0) { }$/;"	f	struct:qmcplusplus::NumericalJastrow
NumericalJastrow	Jastrow/NumericalJastrowFunctor.h	/^struct NumericalJastrow: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
NumericalMolecularOrbitals	Experimental/NumericalMolecularOrbitals.cpp	/^NumericalMolecularOrbitals::NumericalMolecularOrbitals(ParticleSet& els,$/;"	f	class:qmcplusplus::NumericalMolecularOrbitals
NumericalMolecularOrbitals	Experimental/NumericalMolecularOrbitals.h	/^class NumericalMolecularOrbitals: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
NumericalOrbitalSetBuilder	Experimental/NumericalOrbitalSetBuilder.cpp	/^NumericalOrbitalSetBuilder::NumericalOrbitalSetBuilder(ParticleSet& p,$/;"	f	class:qmcplusplus::NumericalOrbitalSetBuilder
NumericalOrbitalSetBuilder	Experimental/NumericalOrbitalSetBuilder.h	/^class NumericalOrbitalSetBuilder: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
NumericalOrbitalType	Experimental/NumericalOrbitalSetBuilder.h	/^  typedef TriCubicSplineT<ValueType,RealType> NumericalOrbitalType;$/;"	t	class:qmcplusplus::NumericalOrbitalSetBuilder
NumericalOrbitals	Experimental/NumericalOrbitalSetBuilder.h	/^  std::map<std::string,NumericalOrbitalType* > NumericalOrbitals;$/;"	m	class:qmcplusplus::NumericalOrbitalSetBuilder
NumericalOrbitals	Experimental/SplineSetBuilder.h	/^  std::map<std::string,SPOType* > NumericalOrbitals;$/;"	m	class:qmcplusplus::SplineSetBuilder
NumericalRGFBuilder	Experimental/NumericalRGFBuilder.cpp	/^NumericalRGFBuilder::NumericalRGFBuilder(xmlNodePtr cur)$/;"	f	class:qmcplusplus::NumericalRGFBuilder
NumericalRGFBuilder	Experimental/NumericalRGFBuilder.h	/^struct NumericalRGFBuilder: public RGFBuilderBase$/;"	s	namespace:qmcplusplus
Numlm	AtomicOrbital.h	/^  int lMax, Numlm, NumBands;$/;"	m	class:qmcplusplus::AtomicOrbital
Nup	AGPDeterminant.h	/^  int Nup;$/;"	m	class:qmcplusplus::AGPDeterminant
ONEBODY	OrbitalConstraintsBase.h	/^  enum {MULTIPLE=0, LONGRANGE, ONEBODY, TWOBODY, THREEBODY, FOURBODY};$/;"	e	enum:qmcplusplus::OrbitalConstraintsBase::__anon19
ONE_BODY_JASTROW_ORBITAL_BSPLINE_H	Jastrow/OneBodyJastrowOrbitalBspline.h	17;"	d
OPTIMIZABLE_SPO_BUILDER_H	OptimizableSPOBuilder.h	18;"	d
OPTIMIZABLE_SPO_SET_H	OptimizableSPOSet.h	19;"	d
ORB_ALLWALKER	Fermion/BackflowFunctionBase.h	/^    ORB_ALLWALKER  \/*!< all walkers update *\/$/;"	e	enum:qmcplusplus::BackflowFunctionBase::__anon12
ORB_ALLWALKER	Fermion/BackflowTransformation.h	/^    ORB_ALLWALKER  \/*!< all walkers update *\/$/;"	e	enum:qmcplusplus::BackflowTransformation::__anon14
ORB_ALLWALKER	OrbitalBase.h	/^    ORB_ALLWALKER  \/*!< all walkers update *\/$/;"	e	enum:qmcplusplus::OrbitalBase::__anon18
ORB_PBYP_ALL	Fermion/BackflowFunctionBase.h	/^    ORB_PBYP_ALL,     \/*!< particle-by-particle, update Value-Gradient-Laplacian *\/$/;"	e	enum:qmcplusplus::BackflowFunctionBase::__anon12
ORB_PBYP_ALL	Fermion/BackflowTransformation.h	/^    ORB_PBYP_ALL,     \/*!< particle-by-particle, update Value-Gradient-Laplacian *\/$/;"	e	enum:qmcplusplus::BackflowTransformation::__anon14
ORB_PBYP_ALL	OrbitalBase.h	/^    ORB_PBYP_ALL,     \/*!< particle-by-particle, update Value-Gradient-Laplacian *\/$/;"	e	enum:qmcplusplus::OrbitalBase::__anon18
ORB_PBYP_PARTIAL	Fermion/BackflowFunctionBase.h	/^    ORB_PBYP_PARTIAL, \/*!< particle-by-particle, update Value and Grdient *\/$/;"	e	enum:qmcplusplus::BackflowFunctionBase::__anon12
ORB_PBYP_PARTIAL	Fermion/BackflowTransformation.h	/^    ORB_PBYP_PARTIAL, \/*!< particle-by-particle, update Value and Grdient *\/$/;"	e	enum:qmcplusplus::BackflowTransformation::__anon14
ORB_PBYP_PARTIAL	OrbitalBase.h	/^    ORB_PBYP_PARTIAL, \/*!< particle-by-particle, update Value and Grdient *\/$/;"	e	enum:qmcplusplus::OrbitalBase::__anon18
ORB_PBYP_RATIO	Fermion/BackflowFunctionBase.h	/^    ORB_PBYP_RATIO,   \/*!< particle-by-particle ratio only *\/$/;"	e	enum:qmcplusplus::BackflowFunctionBase::__anon12
ORB_PBYP_RATIO	Fermion/BackflowTransformation.h	/^    ORB_PBYP_RATIO,   \/*!< particle-by-particle ratio only *\/$/;"	e	enum:qmcplusplus::BackflowTransformation::__anon14
ORB_PBYP_RATIO	OrbitalBase.h	/^    ORB_PBYP_RATIO,   \/*!< particle-by-particle ratio only *\/$/;"	e	enum:qmcplusplus::OrbitalBase::__anon18
ORB_WALKER	Fermion/BackflowFunctionBase.h	/^    ORB_WALKER,    \/*!< walker update *\/$/;"	e	enum:qmcplusplus::BackflowFunctionBase::__anon12
ORB_WALKER	Fermion/BackflowTransformation.h	/^    ORB_WALKER,    \/*!< walker update *\/$/;"	e	enum:qmcplusplus::BackflowTransformation::__anon14
ORB_WALKER	OrbitalBase.h	/^    ORB_WALKER,    \/*!< walker update *\/$/;"	e	enum:qmcplusplus::OrbitalBase::__anon18
ObjectID	Experimental/Bspline3DSetBase.h	/^  int ObjectID;$/;"	m	struct:qmcplusplus::Bspline3DSetBase
Occ	EinsplineSetBuilder.h	/^  std::vector<int> Occ;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
Occ	SPOSetBase.h	/^  Vector<RealType> Occ;$/;"	m	class:qmcplusplus::SPOSetBase
Occupation	LCOrbitals.h	/^  std::vector<RealType> Occupation;$/;"	m	class:qmcplusplus::LCOrbitals
OccupyBands	EinsplineSetBuilderCommon.cpp	/^EinsplineSetBuilder::OccupyBands(int spin, int sortBands, int numOrbs)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
OccupyBands	Experimental/EinsplineSetBuilder.cpp	/^EinsplineSetBuilder::OccupyBands(int spin, bool sortBands)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
OccupyBands_ESHDF	EinsplineSetBuilderESHDF.fft.cpp	/^void EinsplineSetBuilder::OccupyBands_ESHDF(int spin, int sortBands, int numOrbs)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
OccupyBands_ESHDF	Experimental/EinsplineSetBuilder.cpp	/^EinsplineSetBuilder::OccupyBands_ESHDF(int spin, bool sortBands)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
OccupyBands_ESHDF	Experimental/EinsplineSetBuilderESHDF.cpp	/^EinsplineSetBuilder::OccupyBands_ESHDF(int spin, int sortBands)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
OffSet	Jastrow/CompositeFunctor.h	/^  real_type OffSet;$/;"	m	struct:qmcplusplus::TruncatedPadeFunctor
OffSet	Jastrow/CubicBsplineGroup.h	/^  value_type OffSet;$/;"	m	class:qmcplusplus::CubicBsplineGroup
OffSet	Jastrow/DiffOneBodyJastrowOrbital.h	/^  std::vector<std::pair<int,int> > OffSet;$/;"	m	class:qmcplusplus::DiffOneBodyJastrowOrbital
OffSet	Jastrow/DiffTwoBodyJastrowOrbital.h	/^  std::vector<std::pair<int,int> > OffSet;$/;"	m	class:qmcplusplus::DiffTwoBodyJastrowOrbital
OneBody	Fermion/BackflowBuilder.h	/^  bool OneBody;$/;"	m	class:qmcplusplus::BackflowBuilder
OneBodyCoefs	Jastrow/kSpaceJastrow.h	/^  std::vector<ComplexType> OneBodyCoefs;$/;"	m	class:qmcplusplus::kSpaceJastrow
OneBodyGvecs	Jastrow/kSpaceJastrow.h	/^  std::vector<PosType> OneBodyGvecs;$/;"	m	class:qmcplusplus::kSpaceJastrow
OneBodyID	Jastrow/kSpaceJastrow.h	/^  std::string OneBodyID;$/;"	m	class:qmcplusplus::kSpaceJastrow
OneBodyJastrowOrbital	Jastrow/OneBodyJastrowOrbital.h	/^  OneBodyJastrowOrbital(const ParticleSet& centers, ParticleSet& els)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
OneBodyJastrowOrbital	Jastrow/OneBodyJastrowOrbital.h	/^class OneBodyJastrowOrbital: public OrbitalBase$/;"	c	namespace:qmcplusplus
OneBodyJastrowOrbitalBspline	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  OneBodyJastrowOrbitalBspline(ParticleSet &centers, ParticleSet& elecs) :$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
OneBodyJastrowOrbitalBspline	Jastrow/OneBodyJastrowOrbitalBspline.h	/^class OneBodyJastrowOrbitalBspline :$/;"	c	namespace:qmcplusplus
OneBodyPhase	Jastrow/kSpaceJastrow.h	/^  std::vector<RealType> OneBodyPhase, TwoBodyPhase;$/;"	m	class:qmcplusplus::kSpaceJastrow
OneBodySpinJastrowOrbital	Jastrow/OneBodySpinJastrowOrbital.h	/^  OneBodySpinJastrowOrbital(const ParticleSet& centers, ParticleSet& els)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
OneBodySpinJastrowOrbital	Jastrow/OneBodySpinJastrowOrbital.h	/^class OneBodySpinJastrowOrbital: public OrbitalBase$/;"	c	namespace:qmcplusplus
OneBodySymmCoefs	Jastrow/kSpaceJastrow.h	/^  std::vector<kSpaceCoef<ComplexType> > OneBodySymmCoefs;$/;"	m	class:qmcplusplus::kSpaceJastrow
OneBodySymmType	Jastrow/kSpaceJastrow.h	/^  SymmetryType OneBodySymmType, TwoBodySymmType;$/;"	m	class:qmcplusplus::kSpaceJastrow
OneBodyVarMap	Jastrow/kSpaceJastrow.h	/^  std::vector<int> OneBodyVarMap;$/;"	m	class:qmcplusplus::kSpaceJastrow
OneBody_e2iGr	Jastrow/kSpaceJastrow.h	/^  std::vector<ComplexType> OneBody_e2iGr,$/;"	m	class:qmcplusplus::kSpaceJastrow
OneBody_rhoG	Jastrow/kSpaceJastrow.h	/^  std::vector<ComplexType> OneBody_rhoG, TwoBody_rhoG;$/;"	m	class:qmcplusplus::kSpaceJastrow
OneGradGPU	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> SumGPU, GradLaplGPU, OneGradGPU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
OneGradGPU	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> SumGPU, GradLaplGPU, OneGradGPU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
OneGradHost	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> SumHost, GradLaplHost, OneGradHost;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
OneGradHost	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> SumHost, GradLaplHost, OneGradHost;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
OneOverC	Jastrow/PadeFunctors.h	/^  real_type OneOverC, B2;$/;"	m	struct:qmcplusplus::ScaledPadeFunctor
OneOverE	Jastrow/CompositeFunctor.h	/^  real_type OneOverE;$/;"	m	struct:qmcplusplus::DCuspCorrectionDEFunctor
OneOverL	Jastrow/PolyFunctor.h	/^  real_type OneOverL;$/;"	m	struct:qmcplusplus::PolyFunctor
OneOverM	TrialWaveFunction.h	/^  RealType OneOverM;$/;"	m	class:qmcplusplus::TrialWaveFunction
OneOverRc	Jastrow/DerivWMFunctor.h	/^  real_type OneOverRc;$/;"	m	struct:qmcplusplus::D2WMDB2Functor
OneOverRc	Jastrow/DerivWMFunctor.h	/^  real_type OneOverRc;$/;"	m	struct:qmcplusplus::DWMDBFunctor
OneOverRc	Jastrow/WMFunctor.h	/^  real_type OneOverRc;$/;"	m	struct:qmcplusplus::WMFunctor
OneOverRc	Jastrow/WMFunctor.h	/^  real_type OneOverRc;$/;"	m	struct:qmcplusplus::WMFunctorSet
OneOverRs	Jastrow/LRBreakupUtilities.h	/^  T OneOverRs;$/;"	m	struct:qmcplusplus::DerivYukawaBreakup
OneOverRsSq	Jastrow/kSpaceJastrow.h	/^  T OneOverRsSq;$/;"	m	struct:qmcplusplus::RPA0
OneOverSqrtRs	Jastrow/LRBreakupUtilities.h	/^  T OneOverSqrtRs;$/;"	m	struct:qmcplusplus::DerivYukawaBreakup
OneOverSqrtRs	Jastrow/LRBreakupUtilities.h	/^  T OneOverSqrtRs;$/;"	m	struct:qmcplusplus::YukawaBreakup
OneOverSqrtRs3	Jastrow/LRBreakupUtilities.h	/^  T OneOverSqrtRs3;$/;"	m	struct:qmcplusplus::DerivYukawaBreakup
OpenEndGrid	Experimental/TricubicBsplineSetBuilder.h	/^  bool OpenEndGrid;$/;"	m	class:qmcplusplus::TricubicBsplineSetBuilder
OpenGaussianSlaterFunctor	Jastrow/OpenGaussianSlaterFunctor.h	/^  OpenGaussianSlaterFunctor(real_type a=1.0, real_type b=1.0 ):ID_A("G_A"), ID_B("G_B")$/;"	f	struct:qmcplusplus::OpenGaussianSlaterFunctor
OpenGaussianSlaterFunctor	Jastrow/OpenGaussianSlaterFunctor.h	/^struct OpenGaussianSlaterFunctor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
Opt_A	Jastrow/PadeFunctors.h	/^  bool Opt_A, Opt_B, Opt_C, Opt_D;$/;"	m	struct:qmcplusplus::PadeTwo2ndOrderFunctor
Opt_A	Jastrow/PadeFunctors.h	/^  bool Opt_A, Opt_B, Opt_C;$/;"	m	struct:qmcplusplus::Pade2ndOrderFunctor
Opt_A	Jastrow/PadeFunctors.h	/^  bool Opt_A;$/;"	m	struct:qmcplusplus::PadeFunctor
Opt_B	Jastrow/PadeFunctors.h	/^  bool Opt_A, Opt_B, Opt_C, Opt_D;$/;"	m	struct:qmcplusplus::PadeTwo2ndOrderFunctor
Opt_B	Jastrow/PadeFunctors.h	/^  bool Opt_A, Opt_B, Opt_C;$/;"	m	struct:qmcplusplus::Pade2ndOrderFunctor
Opt_B	Jastrow/PadeFunctors.h	/^  bool Opt_B;$/;"	m	struct:qmcplusplus::PadeFunctor
Opt_C	Jastrow/PadeFunctors.h	/^  bool Opt_A, Opt_B, Opt_C, Opt_D;$/;"	m	struct:qmcplusplus::PadeTwo2ndOrderFunctor
Opt_C	Jastrow/PadeFunctors.h	/^  bool Opt_A, Opt_B, Opt_C;$/;"	m	struct:qmcplusplus::Pade2ndOrderFunctor
Opt_D	Jastrow/PadeFunctors.h	/^  bool Opt_A, Opt_B, Opt_C, Opt_D;$/;"	m	struct:qmcplusplus::PadeTwo2ndOrderFunctor
Optimizable	Fermion/DiracDeterminantBase.h	/^  bool Optimizable;$/;"	m	class:qmcplusplus::DiracDeterminantBase
Optimizable	Fermion/MultiDiracDeterminantBase.h	/^  bool Optimizable;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
Optimizable	Fermion/MultiDiracDeterminantWithBackflow.h	/^  bool Optimizable;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
Optimizable	OrbitalBase.h	/^  bool Optimizable;$/;"	m	struct:qmcplusplus::OrbitalBase
Optimizable	SPOSetBase.h	/^  bool Optimizable;$/;"	m	class:qmcplusplus::SPOSetBase
OptimizableSPOBuilder	OptimizableSPOBuilder.cpp	/^OptimizableSPOBuilder::OptimizableSPOBuilder$/;"	f	class:qmcplusplus::OptimizableSPOBuilder
OptimizableSPOBuilder	OptimizableSPOBuilder.h	/^class OptimizableSPOBuilder : public BasisSetBuilder$/;"	c	namespace:qmcplusplus
OptimizableSPOSet	OptimizableSPOSet.h	/^  OptimizableSPOSet() : N(0), M(0), derivScale(10.0), thr(0.0), GSOrbitals(0), BasisOrbitals(0)$/;"	f	class:qmcplusplus::OptimizableSPOSet
OptimizableSPOSet	OptimizableSPOSet.h	/^  OptimizableSPOSet(int num_orbs, SPOSetBase *gsOrbs,$/;"	f	class:qmcplusplus::OptimizableSPOSet
OptimizableSPOSet	OptimizableSPOSet.h	/^class OptimizableSPOSet : public SPOSetBase$/;"	c	namespace:qmcplusplus
OptimizableSetType	Experimental/NoCuspFunctor.h	/^  typedef typename OptimizableFunctorBase<T>::OptimizableSetType OptimizableSetType;$/;"	t	struct:qmcplusplus::NoCuspFunctor
OptimizableSetType	Jastrow/DerivPadeFunctors.h	/^  typedef typename OptimizableFunctorBase<T>::OptimizableSetType OptimizableSetType;$/;"	t	struct:qmcplusplus::D2PadeDB2Functor
OptimizableSetType	Jastrow/DerivPadeFunctors.h	/^  typedef typename OptimizableFunctorBase<T>::OptimizableSetType OptimizableSetType;$/;"	t	struct:qmcplusplus::DPadeDBFunctor
OptimizableSetType	Jastrow/DerivWMFunctor.h	/^  typedef typename OptimizableFunctorBase<T>::OptimizableSetType OptimizableSetType;$/;"	t	struct:qmcplusplus::D2WMDB2Functor
OptimizableSetType	Jastrow/DerivWMFunctor.h	/^  typedef typename OptimizableFunctorBase<T>::OptimizableSetType OptimizableSetType;$/;"	t	struct:qmcplusplus::DWMDBFunctor
OptimizableSetType	Jastrow/PolyFunctor.h	/^  typedef typename OptimizableFunctorBase<T>::OptimizableSetType OptimizableSetType;$/;"	t	struct:qmcplusplus::PolyFunctor
OptimizableSetType	Jastrow/RPAJastrowFunctor.h	/^  typedef typename OptimizableFunctorBase<T>::OptimizableSetType OptimizableSetType;$/;"	t	struct:qmcplusplus::RPAJastrowFunctor
OptimizableSetType	SphericalOrbitalSet.h	/^  typedef VarRegistry<RealType>                       OptimizableSetType;$/;"	t	struct:qmcplusplus::SphericalOrbitalSet
Optimize	Fermion/Backflow_ee_kSpace.h	/^  bool Optimize;$/;"	m	class:qmcplusplus::Backflow_ee_kSpace
OrbGroups	MultiGridBsplineSetReader.h	/^  std::vector<int> OrbGroups;$/;"	m	struct:qmcplusplus::MultiGridBsplineSetReader
OrbGroups	SplineAdoptorReaderP.h	/^  std::vector<int> OrbGroups;$/;"	m	struct:qmcplusplus::SplineAdoptorReader
OrbGroups	SplineMixedAdoptorReaderP.h	/^  std::vector<int> OrbGroups;$/;"	m	struct:qmcplusplus::SplineMixedAdoptorReader
OrbSet	AtomicOrbitals/HFAtomicSTOSetBuilder.h	/^  std::map<std::string, SPO_t*>   OrbSet;$/;"	m	class:qmcplusplus::HFAtomicSTOSetBuilder
Orbital	AtomicOrbitals/HFAtomicSTOSet.h	/^  std::vector<SPO_t*> Orbital;$/;"	m	struct:qmcplusplus::HFAtomicSTOSet
OrbitalBase	OrbitalBase.cpp	/^OrbitalBase::OrbitalBase():$/;"	f	class:qmcplusplus::OrbitalBase
OrbitalBase	OrbitalBase.h	/^struct OrbitalBase: public QMCTraits$/;"	s	namespace:qmcplusplus
OrbitalBasePtr	OrbitalBase.h	/^typedef OrbitalBase*                       OrbitalBasePtr;$/;"	t	namespace:qmcplusplus
OrbitalBasePtr	OrbitalBase.h	/^typedef boost::shared_ptr<OrbitalBase>     OrbitalBasePtr;$/;"	t	namespace:qmcplusplus
OrbitalBuilderBase	OrbitalBuilderBase.cpp	/^OrbitalBuilderBase::OrbitalBuilderBase(ParticleSet& p, TrialWaveFunction& psi):$/;"	f	class:qmcplusplus::OrbitalBuilderBase
OrbitalBuilderBase	OrbitalBuilderBase.h	/^class OrbitalBuilderBase: public MPIObjectBase$/;"	c	namespace:qmcplusplus
OrbitalConstraintsBase	OrbitalConstraintsBase.cpp	/^OrbitalConstraintsBase::OrbitalConstraintsBase(ParticleSet& p, TrialWaveFunction& psi)$/;"	f	class:qmcplusplus::OrbitalConstraintsBase
OrbitalConstraintsBase	OrbitalConstraintsBase.h	/^struct OrbitalConstraintsBase: public OrbitalBuilderBase$/;"	s	namespace:qmcplusplus
OrbitalCount	DistributedSPOSet.h	/^  std::vector<int> OrbitalCount;$/;"	m	struct:qmcplusplus::DistributedSPOSet
OrbitalIndex	DistributedSPOSet.h	/^  std::vector<int> OrbitalIndex;$/;"	m	struct:qmcplusplus::DistributedSPOSet
OrbitalMap	Experimental/EinsplineSetBuilder.cpp	/^EinsplineSetBuilder::OrbitalMap;$/;"	m	class:qmcplusplus::EinsplineSetBuilder	file:
OrbitalName	OrbitalBase.h	/^  std::string OrbitalName;$/;"	m	struct:qmcplusplus::OrbitalBase
OrbitalOffset	DistributedSPOSet.h	/^  std::vector<int> OrbitalOffset;$/;"	m	struct:qmcplusplus::DistributedSPOSet
OrbitalPath	EinsplineSetBuilderOld.cpp	/^EinsplineSetBuilder::OrbitalPath(int ti, int bi)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
OrbitalPath	Experimental/EinsplineSetBuilder.cpp	/^EinsplineSetBuilder::OrbitalPath(int ti, int bi)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
OrbitalSetSize	SPOSetBase.h	/^  IndexType OrbitalSetSize;$/;"	m	class:qmcplusplus::SPOSetBase
OrbitalSetTraits	OrbitalSetTraits.h	/^struct OrbitalSetTraits\/\/: public OrbitalTraits<T>$/;"	s	namespace:qmcplusplus
OrbitalType	EinsplineSetBuilder.h	/^  int OrbitalType;$/;"	m	struct:qmcplusplus::H5OrbSet
Orbitals	legacy/EinsplineSetLocal.h	/^  std::vector<EinsplineOrb<std::complex<double>,OHMMS_DIM>*> Orbitals;$/;"	m	class:qmcplusplus::EinsplineSetLocal
Ordered	TrialWaveFunction.h	/^  bool Ordered;$/;"	m	class:qmcplusplus::TrialWaveFunction
Origin	Experimental/TricubicBsplineSetBuilder.h	/^    PosType Origin;$/;"	m	struct:qmcplusplus::TricubicBsplineSetBuilder::RSOType
Origin	Spline3D/SplineGridHandler.h	/^  pos_type Origin;$/;"	m	struct:qmcplusplus::SplineGridHandler
Original	Experimental/NumericalMolecularOrbitals.h	/^  GridMolecularOrbitals *Original;$/;"	m	class:qmcplusplus::NumericalMolecularOrbitals
Origins	Experimental/Bspline3DSetBase.h	/^  std::vector<PosType> Origins;$/;"	m	struct:qmcplusplus::Bspline3DSetBase
Orthorhombic	EinsplineSet.h	/^  bool Orthorhombic;$/;"	m	class:qmcplusplus::EinsplineSet
Orthorhombic	Experimental/Bspline3DSetBase.h	/^  bool Orthorhombic;$/;"	m	struct:qmcplusplus::Bspline3DSetBase
Orthorhombic	Spline3D/SplineGridHandler.h	/^  bool Orthorhombic;$/;"	m	struct:qmcplusplus::SplineGridHandler
OutFunc	Jastrow/NumericalJastrowFunctor.h	/^  FNOUT *OutFunc;$/;"	m	struct:qmcplusplus::NumericalJastrow
OutFunc	Jastrow/SplineFunctors.h	/^  FNOUT *OutFunc;$/;"	m	struct:qmcplusplus::CubicSplineBasisSet
OutFunc	Jastrow/SplineFunctors.h	/^  FNOUT OutFunc;$/;"	m	struct:qmcplusplus::CubicSplineSingle
OutFuncType	Jastrow/Experimental/AnyConstraints.h	/^  typedef CubicSplineSingle<RealType,SplineEngineType> OutFuncType;$/;"	t	struct:qmcplusplus::AnyConstraints
OutFuncType	Jastrow/Experimental/NJAABuilder.h	/^  typedef FuncType::FNOUT             OutFuncType;$/;"	t	struct:qmcplusplus::NJAABuilder
OutFuncType	Jastrow/Experimental/NJABBuilder.h	/^  typedef FuncType::FNOUT             OutFuncType;$/;"	t	struct:qmcplusplus::NJABBuilder
OutFuncType	Jastrow/WMJastrowBuilder.h	/^  typedef CubicSplineSingle<RealType,SplineEngineType> OutFuncType;$/;"	t	class:qmcplusplus::WMJastrowBuilder
Out_	Jastrow/Experimental/AnyConstraints.h	/^    OutFuncType* Out_;$/;"	m	struct:qmcplusplus::AnyConstraints::BasisGroupType
Out_	Jastrow/WMJastrowBuilder.h	/^    OutFuncType* Out_;$/;"	m	struct:qmcplusplus::WMJastrowBuilder::BasisGroupType
OwnBasisSet	PlaneWave/PWOrbitalSet.h	/^  bool OwnBasisSet;$/;"	m	class:qmcplusplus::PWOrbitalSet
OwnBasisSet	PlaneWave/PWRealOrbitalSet.h	/^  bool OwnBasisSet;$/;"	m	class:qmcplusplus::PWRealOrbitalSet
P	Experimental/Bspline3DSetBase.h	/^  std::vector<const StorageType*> P;$/;"	m	struct:qmcplusplus::Bspline3DSetBase
P	Experimental/TricubicBsplineSPOSet.h	/^  std::map<int,const StorageType*> P;$/;"	m	class:qmcplusplus::TricubicBsplineSPOSet
P	Experimental/TricubicBsplineSPOSet.h	/^  std::vector<const StorageType*> P;$/;"	m	class:qmcplusplus::TricubicBsplineSPOSet
P	Experimental/TricubicBsplineTwistSet.h	/^  std::map<int,const StorageType*> P;$/;"	m	class:qmcplusplus::TricubicBsplineTwistSet
P	Jastrow/CubicBsplineGroup.h	/^  container_type P;$/;"	m	class:qmcplusplus::CubicBsplineGroup
P	Spline3D/SplineBasisSet.h	/^  std::vector<const StorageType*> P;$/;"	m	class:qmcplusplus::SplineBasisSet
PAD	AtomicOrbitalCuda.h	/^  int PAD[2];$/;"	m	class:HybridData
PAD	AtomicOrbitalCuda.h	/^  int PAD[6];$/;"	m	class:AtomicOrbitalCuda
PAD	EinsplineSet.h	/^  T PAD[2];$/;"	m	struct:qmcplusplus::AtomicPolyJob
PAD	EinsplineSet.h	/^  T PAD[3];$/;"	m	struct:qmcplusplus::AtomicSplineJob
PCID	MultiGridBsplineSet.h	/^    std::vector<int> PCID;$/;"	m	struct:qmcplusplus::MultiGridBsplineSet
PHASE_FACTORS_H	PhaseFactors.h	2;"	d
PL_t	ElectronGas/HEGGrid.h	/^  typedef CrystalLattice<T,2> PL_t;$/;"	t	struct:qmcplusplus::HEGGrid
PL_t	ElectronGas/HEGGrid.h	/^  typedef CrystalLattice<T,3> PL_t;$/;"	t	struct:qmcplusplus::HEGGrid
PSI_DIM	DistributedSPOSet.cpp	18;"	d	file:
PWBasis	PlaneWave/PWBasis.h	/^  PWBasis():maxmaxg(0), NumPlaneWaves(0)$/;"	f	class:qmcplusplus::PWBasis
PWBasis	PlaneWave/PWBasis.h	/^  PWBasis(const PosType& twistangle):$/;"	f	class:qmcplusplus::PWBasis
PWBasis	PlaneWave/PWBasis.h	/^class PWBasis: public QMCTraits$/;"	c	namespace:qmcplusplus
PWBasisPtr	PlaneWave/PWOrbitalBuilder.h	/^  typedef PWOrbitalSet::PWBasisPtr PWBasisPtr;$/;"	t	class:qmcplusplus::PWOrbitalBuilder
PWBasisPtr	PlaneWave/PWOrbitalSet.h	/^  typedef PWBasis*                   PWBasisPtr;$/;"	t	class:qmcplusplus::PWOrbitalSet
PWBasisPtr	PlaneWave/PWOrbitalSet.h	/^  typedef boost::shared_ptr<PWBasis> PWBasisPtr;$/;"	t	class:qmcplusplus::PWOrbitalSet
PWBasisPtr	PlaneWave/PWRealOrbitalSet.h	/^  typedef PWBasis*                   PWBasisPtr;$/;"	t	class:qmcplusplus::PWRealOrbitalSet
PWBasisPtr	PlaneWave/PWRealOrbitalSet.h	/^  typedef boost::shared_ptr<PWBasis> PWBasisPtr;$/;"	t	class:qmcplusplus::PWRealOrbitalSet
PWOSet	Experimental/PlaneWaveOrbitalBuilder.h	/^  PlaneWaveOrbitalSet *PWOSet;$/;"	m	class:qmcplusplus::PlaneWaveOrbitalBuilder
PWOrbitalBuilder	PlaneWave/PWOrbitalBuilder.cpp	/^PWOrbitalBuilder::PWOrbitalBuilder(ParticleSet& els, TrialWaveFunction& psi, PtclPoolType& psets)$/;"	f	class:qmcplusplus::PWOrbitalBuilder
PWOrbitalBuilder	PlaneWave/PWOrbitalBuilder.h	/^class PWOrbitalBuilder: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
PWOrbitalSet	PlaneWave/PWOrbitalSet.h	/^  PWOrbitalSet(): OwnBasisSet(false)$/;"	f	class:qmcplusplus::PWOrbitalSet
PWOrbitalSet	PlaneWave/PWOrbitalSet.h	/^class PWOrbitalSet: public SPOSetBase$/;"	c	namespace:qmcplusplus
PWParameterSet	PlaneWave/PWParameterSet.cpp	/^PWParameterSet::PWParameterSet():$/;"	f	class:qmcplusplus::PWParameterSet
PWParameterSet	PlaneWave/PWParameterSet.h	/^struct PWParameterSet: public MPIObjectBase$/;"	s	namespace:qmcplusplus
PWRealOrbitalSet	PlaneWave/PWRealOrbitalSet.h	/^  PWRealOrbitalSet(): OwnBasisSet(false)$/;"	f	class:qmcplusplus::PWRealOrbitalSet
PWRealOrbitalSet	PlaneWave/PWRealOrbitalSet.h	/^class PWRealOrbitalSet: public SPOSetBase$/;"	c	namespace:qmcplusplus
PW_GRADX	PlaneWave/PWBasis.h	/^  enum {PW_VALUE, PW_LAP, PW_GRADX, PW_GRADY, PW_GRADZ, PW_MAXINDEX};$/;"	e	enum:qmcplusplus::PWBasis::__anon23
PW_GRADX	PlaneWave/PWOrbitalSet.h	/^        PW_GRADX=   BasisSet_t::PW_GRADX,$/;"	e	enum:qmcplusplus::PWOrbitalSet::__anon24
PW_GRADX	PlaneWave/PWRealOrbitalSet.h	/^        PW_GRADX=   BasisSet_t::PW_GRADX,$/;"	e	enum:qmcplusplus::PWRealOrbitalSet::__anon22
PW_GRADY	PlaneWave/PWBasis.h	/^  enum {PW_VALUE, PW_LAP, PW_GRADX, PW_GRADY, PW_GRADZ, PW_MAXINDEX};$/;"	e	enum:qmcplusplus::PWBasis::__anon23
PW_GRADY	PlaneWave/PWOrbitalSet.h	/^        PW_GRADY=   BasisSet_t::PW_GRADY,$/;"	e	enum:qmcplusplus::PWOrbitalSet::__anon24
PW_GRADY	PlaneWave/PWRealOrbitalSet.h	/^        PW_GRADY=   BasisSet_t::PW_GRADY,$/;"	e	enum:qmcplusplus::PWRealOrbitalSet::__anon22
PW_GRADZ	PlaneWave/PWBasis.h	/^  enum {PW_VALUE, PW_LAP, PW_GRADX, PW_GRADY, PW_GRADZ, PW_MAXINDEX};$/;"	e	enum:qmcplusplus::PWBasis::__anon23
PW_GRADZ	PlaneWave/PWOrbitalSet.h	/^        PW_GRADZ=   BasisSet_t::PW_GRADZ,$/;"	e	enum:qmcplusplus::PWOrbitalSet::__anon24
PW_GRADZ	PlaneWave/PWRealOrbitalSet.h	/^        PW_GRADZ=   BasisSet_t::PW_GRADZ,$/;"	e	enum:qmcplusplus::PWRealOrbitalSet::__anon22
PW_LAP	PlaneWave/PWBasis.h	/^  enum {PW_VALUE, PW_LAP, PW_GRADX, PW_GRADY, PW_GRADZ, PW_MAXINDEX};$/;"	e	enum:qmcplusplus::PWBasis::__anon23
PW_LAP	PlaneWave/PWOrbitalSet.h	/^        PW_LAP=     BasisSet_t::PW_LAP,$/;"	e	enum:qmcplusplus::PWOrbitalSet::__anon24
PW_LAP	PlaneWave/PWRealOrbitalSet.h	/^        PW_LAP=     BasisSet_t::PW_LAP,$/;"	e	enum:qmcplusplus::PWRealOrbitalSet::__anon22
PW_MAXINDEX	PlaneWave/PWBasis.h	/^  enum {PW_VALUE, PW_LAP, PW_GRADX, PW_GRADY, PW_GRADZ, PW_MAXINDEX};$/;"	e	enum:qmcplusplus::PWBasis::__anon23
PW_MAXINDEX	PlaneWave/PWOrbitalSet.h	/^        PW_MAXINDEX=BasisSet_t::PW_MAXINDEX$/;"	e	enum:qmcplusplus::PWOrbitalSet::__anon24
PW_MAXINDEX	PlaneWave/PWRealOrbitalSet.h	/^        PW_MAXINDEX=BasisSet_t::PW_MAXINDEX$/;"	e	enum:qmcplusplus::PWRealOrbitalSet::__anon22
PW_VALUE	PlaneWave/PWBasis.h	/^  enum {PW_VALUE, PW_LAP, PW_GRADX, PW_GRADY, PW_GRADZ, PW_MAXINDEX};$/;"	e	enum:qmcplusplus::PWBasis::__anon23
PW_VALUE	PlaneWave/PWOrbitalSet.h	/^  enum {PW_VALUE=   BasisSet_t::PW_VALUE,$/;"	e	enum:qmcplusplus::PWOrbitalSet::__anon24
PW_VALUE	PlaneWave/PWRealOrbitalSet.h	/^  enum {PW_VALUE=   BasisSet_t::PW_VALUE,$/;"	e	enum:qmcplusplus::PWRealOrbitalSet::__anon22
Pade2ndOrderFunctor	Jastrow/PadeFunctors.h	/^  Pade2ndOrderFunctor(real_type a=1.0, real_type b=1.0, real_type c=1.0)$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
Pade2ndOrderFunctor	Jastrow/PadeFunctors.h	/^struct Pade2ndOrderFunctor:public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
PadeBuilder	Jastrow/Experimental/PadeBuilder.cpp	/^PadeBuilder::PadeBuilder(ParticleSet& p, TrialWaveFunction& psi,$/;"	f	class:qmcplusplus::PadeBuilder
PadeConstraints	Jastrow/Experimental/PadeConstraints.cpp	/^PadeConstraints::PadeConstraints(ParticleSet& p, TrialWaveFunction& psi, bool nospin):$/;"	f	class:qmcplusplus::PadeConstraints
PadeConstraints	Jastrow/Experimental/PadeConstraints.h	/^struct PadeConstraints: public OrbitalConstraintsBase$/;"	s	namespace:qmcplusplus
PadeFunctor	Jastrow/PadeFunctors.h	/^  PadeFunctor(): Scale(1.0),ID_A("0"),ID_B("0") { }$/;"	f	struct:qmcplusplus::PadeFunctor
PadeFunctor	Jastrow/PadeFunctors.h	/^  explicit PadeFunctor(real_type a, const std::string& ida)$/;"	f	struct:qmcplusplus::PadeFunctor
PadeFunctor	Jastrow/PadeFunctors.h	/^  explicit PadeFunctor(real_type a, real_type b, real_type s=1.0):$/;"	f	struct:qmcplusplus::PadeFunctor
PadeFunctor	Jastrow/PadeFunctors.h	/^struct PadeFunctor:public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
PadeJastrowBuilder	Jastrow/PadeJastrowBuilder.cpp	/^PadeJastrowBuilder::PadeJastrowBuilder(ParticleSet& target, TrialWaveFunction& psi,$/;"	f	class:qmcplusplus::PadeJastrowBuilder
PadeJastrowBuilder	Jastrow/PadeJastrowBuilder.h	/^struct PadeJastrowBuilder: public OrbitalBuilderBase$/;"	s	namespace:qmcplusplus
PadeOrbital	MolecularOrbitals/NGOBuilder.cpp	/^  PadeOrbital(const char* node_name="radfunc"):$/;"	f	struct:qmcplusplus::PadeOrbital
PadeOrbital	MolecularOrbitals/NGOBuilder.cpp	/^struct PadeOrbital: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus	file:
PadeTwo2ndOrderFunctor	Jastrow/PadeFunctors.h	/^  PadeTwo2ndOrderFunctor(real_type a=1.0, real_type b=1.0, real_type c=1.0, real_type d=1.0)$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
PadeTwo2ndOrderFunctor	Jastrow/PadeFunctors.h	/^struct PadeTwo2ndOrderFunctor:public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
PairID	Experimental/TwoBodyJastrowFunction.h	/^  Matrix<int> PairID;$/;"	m	class:qmcplusplus::TwoBodyJastrow
PairID	Fermion/Backflow_ee.h	/^  Matrix<int> PairID;$/;"	m	class:qmcplusplus::Backflow_ee
PairID	Fermion/Backflow_ee_kSpace.h	/^  Matrix<int> PairID;$/;"	m	class:qmcplusplus::Backflow_ee_kSpace
PairID	Jastrow/TwoBodyJastrowOrbital.h	/^  Matrix<int> PairID;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
ParamArray	Jastrow/BsplineFunctor3D.h	/^  Array<real_type,3> ParamArray;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
ParamIndex	OptimizableSPOSet.h	/^  std::vector<TinyVector<int,2> > ParamIndex;$/;"	m	class:qmcplusplus::OptimizableSPOSet
ParamPointers	OptimizableSPOSet.h	/^  std::vector<RealType*> ParamPointers;$/;"	m	class:qmcplusplus::OptimizableSPOSet
ParameterNames	Fermion/BFsplineFunctor.h	/^  std::vector<std::string> ParameterNames;$/;"	m	struct:qmcplusplus::BFsplineFunctor
ParameterNames	Jastrow/BsplineFunctor.h	/^  std::vector<std::string> ParameterNames;$/;"	m	struct:qmcplusplus::BsplineFunctor
ParameterNames	Jastrow/BsplineFunctor3D.h	/^  std::vector<std::string> ParameterNames;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
ParameterNames	Jastrow/PolynomialFunctor3D.h	/^  std::vector<std::string> ParameterNames;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
Parameters	Fermion/BFsplineFunctor.h	/^  std::vector<real_type> Parameters;$/;"	m	struct:qmcplusplus::BFsplineFunctor
Parameters	Jastrow/BesselZeroFunctor.h	/^  std::vector<real_type> Parameters;$/;"	m	struct:qmcplusplus::BesselZero
Parameters	Jastrow/BsplineFunctor.h	/^  std::vector<real_type> Parameters;$/;"	m	struct:qmcplusplus::BsplineFunctor
Parameters	Jastrow/BsplineFunctor3D.h	/^  std::vector<real_type> Parameters;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
Parameters	Jastrow/PolynomialFunctor3D.h	/^  std::vector<real_type> Parameters, d_valsFD;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
Params	Jastrow/WMFunctor.h	/^  std::vector<variable_type> Params;$/;"	m	struct:qmcplusplus::WMFunctorSet
ParticleAlpha	IonOrbital.h	/^  std::vector<RealType> ParticleAlpha;$/;"	m	struct:qmcplusplus::IonOrbital
ParticleCenter	IonOrbital.h	/^  std::vector<int> ParticleCenter;$/;"	m	struct:qmcplusplus::IonOrbital
ParticleLayout_t	Experimental/PlaneWaveBasis.h	/^  typedef ParticleSet::ParticleLayout_t ParticleLayout_t;$/;"	t	class:qmcplusplus::PlaneWaveBasis
ParticleLayout_t	PlaneWave/PWBasis.h	/^  typedef ParticleSet::ParticleLayout_t ParticleLayout_t;$/;"	t	class:qmcplusplus::PWBasis
ParticleSets	EinsplineSetBuilder.h	/^  PtclPoolType &ParticleSets;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
PhaseDiff	TrialWaveFunction.h	/^  RealType PhaseDiff;$/;"	m	class:qmcplusplus::TrialWaveFunction
PhaseValue	OrbitalBase.h	/^  RealType PhaseValue;$/;"	m	struct:qmcplusplus::OrbitalBase
PhaseValue	TrialWaveFunction.h	/^  RealType PhaseValue;$/;"	m	class:qmcplusplus::TrialWaveFunction
Phi	BasisSetBase.h	/^  ValueVector_t Phi;$/;"	m	struct:qmcplusplus::BasisSetBase
Phi	DistributedSPOSet.h	/^  BspineSetType* Phi;$/;"	m	struct:qmcplusplus::DistributedSPOSet
Phi	Experimental/DiracDeterminant.h	/^  SPOSet* Phi;$/;"	m	class:qmcplusplus::DiracDeterminant
Phi	Experimental/SingleParticleOrbitalSet.h	/^  SPOContainer_t Phi;$/;"	m	struct:qmcplusplus::SingleParticleOrbitalSet
Phi	Fermion/DiracDeterminantBase.h	/^  SPOSetBasePtr Phi;$/;"	m	class:qmcplusplus::DiracDeterminantBase
Phi	Fermion/DiracDeterminantT.h	/^  SPOSet& Phi;$/;"	m	class:qmcplusplus::DiracDeterminantT
Phi	Fermion/MultiDiracDeterminantBase.h	/^  SPOSetBasePtr Phi;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
Phi	Fermion/MultiDiracDeterminantWithBackflow.h	/^  SPOSetBasePtr Phi;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
Phi	Jastrow/LinearCombinationFunctor.h	/^  std::vector<ComponentType*> Phi;$/;"	m	struct:LinearCombinationFunctor
Pivot	AGPDeterminant.h	/^  IndexVector_t Pivot;$/;"	m	class:qmcplusplus::AGPDeterminant
Pivot	Experimental/DiracDeterminant.h	/^  Vector<IndexType> Pivot;$/;"	m	class:qmcplusplus::DiracDeterminant
Pivot	Fermion/DiracDeterminantBase.h	/^  Vector<IndexType> Pivot;$/;"	m	class:qmcplusplus::DiracDeterminantBase
Pivot	Fermion/MultiDiracDeterminantBase.h	/^  Vector<IndexType> Pivot;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
Pivot	Fermion/MultiDiracDeterminantBase_help.h	/^  std::vector<int> Pivot;$/;"	m	struct:qmcplusplus::MyDeterminant
Pivot	Fermion/MultiDiracDeterminantWithBackflow.h	/^  Vector<IndexType> Pivot;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
PlaneWaveBasis	Experimental/PlaneWaveBasis.h	/^  PlaneWaveBasis(TinyVector<RealType,3> twistangle, int nptcl): NumPtcls(nptcl), twist(twistangle)$/;"	f	class:qmcplusplus::PlaneWaveBasis
PlaneWaveBasis	Experimental/PlaneWaveBasis.h	/^class PlaneWaveBasis: public QMCTraits$/;"	c	namespace:qmcplusplus
PlaneWaveOrbitalBuilder	Experimental/PlaneWaveOrbitalBuilder.cpp	/^PlaneWaveOrbitalBuilder::PlaneWaveOrbitalBuilder(ParticleSet& els, TrialWaveFunction& psi):$/;"	f	class:qmcplusplus::PlaneWaveOrbitalBuilder
PlaneWaveOrbitalBuilder	Experimental/PlaneWaveOrbitalBuilder.h	/^class PlaneWaveOrbitalBuilder: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
PlaneWaveOrbitalSet	Experimental/PlaneWaveOrbitalSet.h	/^  PlaneWaveOrbitalSet(ParticleSet* ref, int nspins,int nbands,$/;"	f	class:qmcplusplus::PlaneWaveOrbitalSet
PlaneWaveOrbitalSet	Experimental/PlaneWaveOrbitalSet.h	/^class PlaneWaveOrbitalSet: public OhmmsElementBase$/;"	c	namespace:qmcplusplus
PointType	EinsplineAdoptor.h	/^  typedef TinyVector<ST,D>   PointType;$/;"	t	struct:qmcplusplus::SplineAdoptorBase
PointType	EinsplineAdoptor.h	/^  typedef typename SplineAdoptor::PointType  PointType;$/;"	t	struct:qmcplusplus::BsplineSet
PointType	Experimental/EinsplineAdoptorPacked.h	/^  typedef TinyVector<ST,D>     PointType;$/;"	t	struct:qmcplusplus::SplineC2CAdoptorPacked
PointType	Experimental/EinsplineAdoptorPacked.h	/^  typedef TinyVector<ST,D> PointType;$/;"	t	struct:qmcplusplus::SplineC2RAdoptorPacked
PointType	Experimental/EinsplineMixedAdoptor.h	/^  typedef TinyVector<ST,D>                            PointType;$/;"	t	struct:qmcplusplus::SplineMixedAdoptor
PointType	Experimental/EinsplineMixedAdoptor.h	/^  typedef TinyVector<ST,D>                            PointType;$/;"	t	struct:qmcplusplus::SplineOpenAdoptor
PointType	Experimental/SplineOpenAdoptor.h	/^  typedef TinyVector<ST,D>                            PointType;$/;"	t	struct:qmcplusplus::SplineOpenAdoptor
PointType	SplineC2XAdoptor.h	/^  typedef typename SplineAdoptorBase<ST,D>::PointType         PointType;$/;"	t	struct:qmcplusplus::SplineC2RPackedAdoptor
PointType	SplineC2XAdoptor.h	/^  typedef typename SplineAdoptorBase<ST,D>::PointType  PointType;$/;"	t	struct:qmcplusplus::SplineC2CPackedAdoptor
PointType	SplineMixedAdoptor.h	/^  typedef typename SplineAdoptorBase<ST,D>::PointType PointType;$/;"	t	struct:qmcplusplus::SplineMixedAdoptor
PointType	SplineMixedAdoptor.h	/^  typedef typename SplineAdoptorBase<ST,D>::PointType PointType;$/;"	t	struct:qmcplusplus::SplineOpenAdoptor
PointType	SplineR2RAdoptor.h	/^  typedef typename SplineAdoptorBase<ST,D>::PointType PointType;$/;"	t	struct:qmcplusplus::SplineR2RAdoptor
PolarizedJastrow	Jastrow/PolarizedJastrow.h	/^  PolarizedJastrow():alpha(0.0)$/;"	f	class:qmcplusplus::PolarizedJastrow
PolarizedJastrow	Jastrow/PolarizedJastrow.h	/^class PolarizedJastrow: public OrbitalBase$/;"	c	namespace:qmcplusplus
PolyCoefs	AtomicOrbital.h	/^  Array<StorageType,3> PolyCoefs;$/;"	m	class:qmcplusplus::AtomicOrbital
PolyCoefs	EinsplineSet.h	/^  T* PolyCoefs;$/;"	m	struct:qmcplusplus::AtomicPolyJob
PolyConstraints	Jastrow/PolyConstraints.cpp	/^PolyConstraints::PolyConstraints(ParticleSet& p, TrialWaveFunction& psi, bool spinInd):$/;"	f	class:qmcplusplus::PolyConstraints
PolyConstraints	Jastrow/PolyConstraints.h	/^struct PolyConstraints: public OrbitalConstraintsBase$/;"	s	namespace:qmcplusplus
PolyFunctor	Jastrow/PolyFunctor.h	/^  inline PolyFunctor(): L(10.0), K(0), N(0), OneOverL(0),KOverL(0), KKOverL2(0)$/;"	f	struct:qmcplusplus::PolyFunctor
PolyFunctor	Jastrow/PolyFunctor.h	/^  inline PolyFunctor(real_type rc, int k): L(rc), K(k), N(0)$/;"	f	struct:qmcplusplus::PolyFunctor
PolyFunctor	Jastrow/PolyFunctor.h	/^struct PolyFunctor: public OptimizableFunctorBase<T>$/;"	s	namespace:qmcplusplus
PolyOrder	AtomicOrbital.h	/^  int PolyOrder;$/;"	m	class:qmcplusplus::AtomicOrbital
PolyOrder	EinsplineSet.h	/^  int lMax, PolyOrder, YlmIndex;$/;"	m	struct:qmcplusplus::AtomicPolyJob
PolyRadii_GPU	EinsplineSet.h	/^  gpu::device_vector<CudaRealType>  CutoffRadii_GPU, PolyRadii_GPU;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
PolyRadius	AtomicOrbital.h	/^  RealType CutoffRadius, SplineRadius, PolyRadius;$/;"	m	class:qmcplusplus::AtomicOrbital
PolynomialFunctor3D	Jastrow/PolynomialFunctor3D.h	/^  PolynomialFunctor3D(real_type ee_cusp=0.0, real_type eI_cusp=0.0) :$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
PolynomialFunctor3D	Jastrow/PolynomialFunctor3D.h	/^struct PolynomialFunctor3D: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
Pos	AtomicOrbital.h	/^  PosType Pos;$/;"	m	class:qmcplusplus::AtomicOrbital
PosType	AtomicOrbital.h	/^  typedef QMCTraits::PosType                    PosType;$/;"	t	class:qmcplusplus::AtomicOrbital
PosType	DiffOrbitalBase.h	/^  typedef OrbitalBase::PosType              PosType;$/;"	t	struct:qmcplusplus::DiffOrbitalBase
PosType	EinsplineSet.h	/^  typedef typename EinsplineSetExtended<StorageType>::PosType      PosType;$/;"	t	class:qmcplusplus::EinsplineSetHybrid
PosType	ElectronGas/HEGGrid.h	/^  typedef typename PL_t::SingleParticlePos_t PosType;$/;"	t	struct:qmcplusplus::HEGGrid
PosType	Experimental/TricubicBsplineSPOSet.h	/^  typedef typename TricubicBsplineTraits<T>::PosType     PosType;$/;"	t	class:qmcplusplus::TricubicBsplineSPOSet
PosType	Experimental/TricubicBsplineTwistSet.h	/^  typedef typename TricubicBsplineTraits<T>::PosType     PosType;$/;"	t	class:qmcplusplus::TricubicBsplineTwistSet
PosType	Fermion/BackflowFunctionBase.h	/^  typedef TinyVector<RealType,DIM>       PosType;$/;"	t	class:qmcplusplus::BackflowFunctionBase
PosType	Fermion/BackflowTransformation.h	/^  typedef TinyVector<RealType,DIM>       PosType;$/;"	t	class:qmcplusplus::BackflowTransformation
PosType	Fermion/ci_node.h	/^  typedef TinyVector<real_type,OHMMS_DIM>   PosType;$/;"	t	struct:qmcplusplus::ci_node
PosType	LCOrbitals.h	/^  typedef typename BS::PosType   PosType;$/;"	t	class:qmcplusplus::LCOrbitals
PosType	OrbitalBuilderBase.h	/^  typedef TrialWaveFunction::PosType   PosType;$/;"	t	class:qmcplusplus::OrbitalBuilderBase
PosType	OrbitalSetTraits.h	/^  typedef TinyVector<RealType,DIM>       PosType;$/;"	t	struct:qmcplusplus::OrbitalSetTraits
PosType	SphericalBasisSet.h	/^  typedef typename OrbitalSetTraits<value_type>::PosType       PosType;$/;"	t	struct:qmcplusplus::SphericalBasisSet
PosType	SphericalOrbitalSet.h	/^  typedef typename OrbitalSetTraits<value_type>::PosType       PosType;$/;"	t	struct:qmcplusplus::SphericalOrbitalSet
PosType	TrialWaveFunction.h	/^  typedef OrbitalBase::PosType            PosType;$/;"	t	class:qmcplusplus::TrialWaveFunction
PosType	legacy/EinsplineOrb.h	/^  typedef TinyVector<real_type,D> PosType;$/;"	t	class:qmcplusplus::EinsplineOrb
Prefactor	Jastrow/kSpaceJastrow.h	/^  double Prefactor;$/;"	m	class:qmcplusplus::kSpaceJastrow
PrimCell	EinsplineSetBuilder.h	/^  UnitCellType SuperCell, PrimCell, PrimCellInv;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
PrimCellInv	EinsplineSetBuilder.h	/^  UnitCellType SuperCell, PrimCell, PrimCellInv;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
PrimLattice	EinsplineAdoptor.h	/^  CrystalLattice<ST,D>       PrimLattice;$/;"	m	struct:qmcplusplus::SplineAdoptorBase
PrimLattice	EinsplineSet.h	/^  UnitCellType SuperLattice, PrimLattice;$/;"	m	class:qmcplusplus::EinsplineSet
PrimLattice	Experimental/EinsplineAdoptorPacked.h	/^  UnitCellType        PrimLattice;$/;"	m	struct:qmcplusplus::SplineC2CAdoptorPacked
PrimLattice	Experimental/EinsplineAdoptorPacked.h	/^  UnitCellType        PrimLattice;$/;"	m	struct:qmcplusplus::SplineC2RAdoptorPacked
PrimLattice	Experimental/EinsplineMixedAdoptor.h	/^  UnitCellType PrimLattice;$/;"	m	struct:qmcplusplus::SplineMixedAdoptor
PrimLattice	Experimental/EinsplineMixedAdoptor.h	/^  UnitCellType PrimLattice;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
PrimLattice	Experimental/SplineOpenAdoptor.h	/^  UnitCellType PrimLattice;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
PrimLattice	MuffinTin.h	/^  UnitCellType PrimLattice;$/;"	m	class:qmcplusplus::MuffinTinClass
PrimLattice	Spline3D/twist_handler.hpp	/^      unitcell_type PrimLattice;$/;"	m	struct:qmcplusplus::twist_handler
PrintTables	OrbitalConstraintsBase.h	/^  bool PrintTables;$/;"	m	struct:qmcplusplus::OrbitalConstraintsBase
ProductOrbital	ProductOrbital.h	/^  ProductOrbital(OrbitalConstraintsBase* control):$/;"	f	struct:qmcplusplus::ProductOrbital
ProductOrbital	ProductOrbital.h	/^struct ProductOrbital: public OrbitalBase$/;"	s	namespace:qmcplusplus
Ps	HarmonicOscillator/SHOSetBuilder.h	/^    ParticleSet& Ps;$/;"	m	struct:qmcplusplus::SHOSetBuilder
Psi	Jastrow/RPAJastrow.h	/^  std::vector<OrbitalBase*> Psi;$/;"	m	struct:qmcplusplus::RPAJastrow
Psi	ProductOrbital.h	/^  std::vector<OrbitalBase*> Psi;$/;"	m	struct:qmcplusplus::ProductOrbital
Psi1	Experimental/CuspCorr.h	/^  SPOSetBasePtr Psi1,Psi2;$/;"	m	class:qmcplusplus::CuspCorr
Psi2	Experimental/CuspCorr.h	/^  SPOSetBasePtr Psi1,Psi2;$/;"	m	class:qmcplusplus::CuspCorr
PtclPool	SPOSetScanner.h	/^    PtclPoolType& PtclPool;$/;"	m	class:qmcplusplus::SPOSetScanner
PtclPoolType	AFMSPOBuilder.h	/^  typedef std::map<std::string,ParticleSet*> PtclPoolType;$/;"	t	class:qmcplusplus::AFMSPOBuilder
PtclPoolType	EinsplineSetBuilder.h	/^  typedef std::map<std::string,ParticleSet*> PtclPoolType;$/;"	t	class:qmcplusplus::EinsplineSetBuilder
PtclPoolType	Experimental/MolecularOrbitalBuilder.h	/^  typedef std::map<std::string,ParticleSet*> PtclPoolType;$/;"	t	struct:qmcplusplus::MolecularOrbitalBuilder
PtclPoolType	Experimental/SplineSetBuilder.h	/^  typedef std::map<std::string,ParticleSet*> PtclPoolType;$/;"	t	class:qmcplusplus::SplineSetBuilder
PtclPoolType	Experimental/TricubicBsplineSetBuilder.h	/^  typedef std::map<std::string,ParticleSet*>      PtclPoolType;$/;"	t	class:qmcplusplus::TricubicBsplineSetBuilder
PtclPoolType	Fermion/BackflowBuilder.h	/^  typedef std::map<std::string,ParticleSet*>   PtclPoolType;$/;"	t	class:qmcplusplus::BackflowBuilder
PtclPoolType	Fermion/BackflowTransformation.h	/^  typedef std::map<std::string,ParticleSet*>   PtclPoolType;$/;"	t	class:qmcplusplus::BackflowTransformation
PtclPoolType	OptimizableSPOBuilder.h	/^  typedef std::map<std::string,ParticleSet*> PtclPoolType;$/;"	t	class:qmcplusplus::OptimizableSPOBuilder
PtclPoolType	OrbitalBuilderBase.h	/^  typedef std::map<std::string,ParticleSet*> PtclPoolType;$/;"	t	class:qmcplusplus::OrbitalBuilderBase
PtclPoolType	SPOSetScanner.h	/^    typedef std::map<std::string,ParticleSet*>         PtclPoolType;$/;"	t	class:qmcplusplus::SPOSetScanner
PtclPoolType	WaveFunctionFactory.h	/^  typedef std::map<std::string,ParticleSet*> PtclPoolType;$/;"	t	struct:qmcplusplus::WaveFunctionFactory
PtclRef	IonOrbital.h	/^  ParticleSet &CenterRef, &PtclRef;$/;"	m	struct:qmcplusplus::IonOrbital
PtclRef	Jastrow/TwoBodyJastrowOrbital.h	/^  ParticleSet *PtclRef;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
PtclRef	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  ParticleSet &PtclRef;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
QDwf	Experimental/QDwf.h	/^  QDwf()$/;"	f	class:QDwf
QDwf	Experimental/QDwf.h	/^class QDwf$/;"	c
QDwfBuilder	Experimental/QDwfBuilder.h	/^  QDwfBuilder(TrialWaveFunction& a) : OrbitalBuilderBase(a) {}$/;"	f	class:qmcplusplus::QDwfBuilder
QDwfBuilder	Experimental/QDwfBuilder.h	/^class QDwfBuilder: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
QMCPACK	EinsplineSetBuilder.h	/^  typedef enum {QMCPACK, ESHDF} FormatType;$/;"	e	enum:qmcplusplus::EinsplineSetBuilder::__anon5
QMCPLUSPLUS_AGPDETERMINANT_GEMINALBUILDER_H	AGPDeterminantBuilder.h	19;"	d
QMCPLUSPLUS_AGP_DIRACDETERMINANT_H	AGPDeterminant.h	19;"	d
QMCPLUSPLUS_ANY2RADIALGRIDFUNCTOR_H	Experimental/Any2GridBuilder.h	15;"	d
QMCPLUSPLUS_ANY_CONSTRAINTS_H	Jastrow/Experimental/AnyConstraints.h	16;"	d
QMCPLUSPLUS_ATOMICORBITALBUILDER_H	MolecularOrbitals/AtomicBasisBuilder.h	18;"	d
QMCPLUSPLUS_ATOMIC_HARTREEFOCK_STO_H	AtomicOrbitals/HFAtomicSTOSet.h	16;"	d
QMCPLUSPLUS_ATOMIC_HARTREEFOCK_STO_IOXML_H	AtomicOrbitals/HFAtomicSTOSetBuilder.h	16;"	d
QMCPLUSPLUS_BACKFLOW_BUILDER_H	Fermion/BackflowBuilder.h	16;"	d
QMCPLUSPLUS_BACKFLOW_EE_KSPACE_H	Fermion/Backflow_ee_kSpace.h	17;"	d
QMCPLUSPLUS_BACKFLOW_ELEC_ION_H	Fermion/Backflow_eI.h	17;"	d
QMCPLUSPLUS_BACKFLOW_ELEC_ION_SPINH	Fermion/Backflow_eI_spin.h	16;"	d
QMCPLUSPLUS_BACKFLOW_E_E_H	Fermion/Backflow_ee.h	17;"	d
QMCPLUSPLUS_BACKFLOW_FUNCTIONBASE_H	Fermion/BackflowFunctionBase.h	17;"	d
QMCPLUSPLUS_BACKFLOW_TRANSFORMATION_H	Fermion/BackflowTransformation.h	17;"	d
QMCPLUSPLUS_BANDINFO_H	BandInfo.h	19;"	d
QMCPLUSPLUS_BASISSETBASE_H	BasisSetBase.h	22;"	d
QMCPLUSPLUS_BASISSETFACTORY_H	BasisSetFactory.h	17;"	d
QMCPLUSPLUS_BESSELZERO_FUNCTOR_H	Jastrow/BesselZeroFunctor.h	15;"	d
QMCPLUSPLUS_BFSPLINE_FUNCTOR_H	Fermion/BFsplineFunctor.h	15;"	d
QMCPLUSPLUS_BSPLINE3DSET_H	Experimental/Bspline3DSet.h	24;"	d
QMCPLUSPLUS_BSPLINE3DSET_TRUCATEDANDTRANSLATED_H	Experimental/Bspline3DSetTrunc.h	24;"	d
QMCPLUSPLUS_BSPLINE3D_FUNCTOR_H	Jastrow/BsplineFunctor3D.h	17;"	d
QMCPLUSPLUS_BSPLINE3D_TEMPLATED_H	Experimental/Bspline3DSetTemp.h	25;"	d
QMCPLUSPLUS_BSPLINE_AO_BUILDER_H	MolecularOrbitals/BsplineAOBuilder.h	16;"	d
QMCPLUSPLUS_BSPLINE_FUNCTOR_H	Jastrow/BsplineFunctor.h	21;"	d
QMCPLUSPLUS_BSPLINE_JASTROW_BUILDER_H	Jastrow/BsplineJastrowBuilder.h	16;"	d
QMCPLUSPLUS_BSPLINE_READER_BASE_H	BsplineReaderBase.h	21;"	d
QMCPLUSPLUS_CHEBYSHEV_JASTROWFUNCTION_H	Jastrow/ChebyshevFunctor.h	17;"	d
QMCPLUSPLUS_CI_BUILDER_H	Fermion/ci_builder.h	16;"	d
QMCPLUSPLUS_CI_CONFIGURATION2_H	Fermion/ci_configuration2.h	16;"	d
QMCPLUSPLUS_CI_CONFIGURATION_H	Fermion/ci_configuration.h	16;"	d
QMCPLUSPLUS_CI_NODE_H	Fermion/ci_node.h	17;"	d
QMCPLUSPLUS_COMBOFUNCTORWITHCONSTRAINTS_H	Jastrow/LinearCombinationFunctor.h	18;"	d
QMCPLUSPLUS_COMMON_EEN_JASTROW_H	Jastrow/eeI_JastrowOrbital.h	20;"	d
QMCPLUSPLUS_COMMON_TWOBODYJASTROW_H	Jastrow/TwoBodyJastrowOrbital.h	21;"	d
QMCPLUSPLUS_COMPOSITEFUNCTORS_H	Jastrow/CompositeFunctor.h	17;"	d
QMCPLUSPLUS_COMPOSITE_SPOSET_H	CompositeSPOSet.h	17;"	d
QMCPLUSPLUS_CONSTANTORBITAL_H	ConstantOrbital.h	14;"	d
QMCPLUSPLUS_CORRECTINGORBITALBASISSET_H	Experimental/CorrectingOrbitalBasisSet.h	23;"	d
QMCPLUSPLUS_CUBICBSPLINEGROUP_H	Jastrow/CubicBsplineGroup.h	16;"	d
QMCPLUSPLUS_CUBICFUNCTORSFORJASTROW_H	Jastrow/SplineFunctors.h	18;"	d
QMCPLUSPLUS_DERIV_PADEFUNCTORS_H	Jastrow/DerivPadeFunctors.h	27;"	d
QMCPLUSPLUS_DETSET_BUILDER_WITH_BASISSET_H	Experimental/DetSetBuilderWithBasisSet.h	16;"	d
QMCPLUSPLUS_DIFFERENTIAL_ONEBODYJASTROW_H	Jastrow/DiffOneBodyJastrowOrbital.h	16;"	d
QMCPLUSPLUS_DIFFERENTIAL_ONEBODYSPINJASTROW_H	Jastrow/DiffOneBodySpinJastrowOrbital.h	16;"	d
QMCPLUSPLUS_DIFFERENTIAL_ORBITAL_BASE_H	DiffOrbitalBase.h	16;"	d
QMCPLUSPLUS_DIFFERENTIAL_TWOBODYJASTROW_H	Jastrow/DiffTwoBodyJastrowOrbital.h	18;"	d
QMCPLUSPLUS_DIRACDETERMINANTITERATIVE_H	Fermion/DiracDeterminantIterative.h	19;"	d
QMCPLUSPLUS_DIRACDETERMINANTTRUNCATION_H	Fermion/DiracDeterminantTruncation.h	19;"	d
QMCPLUSPLUS_DIRACDETERMINANTWITHBACKFLOW_H	Fermion/DiracDeterminantWithBackflow.h	19;"	d
QMCPLUSPLUS_DIRACDETERMINANTWITHBASE_H	Fermion/DiracDeterminantBase.h	23;"	d
QMCPLUSPLUS_DIRACDETERMINANT_H	Experimental/DiracDeterminant.h	18;"	d
QMCPLUSPLUS_DIRACDETERMINANT_TEMPLATE_H	Fermion/DiracDeterminantT.h	18;"	d
QMCPLUSPLUS_DIRAC_DETERMINANT_CUDA_H	Fermion/DiracDeterminantCUDA.h	22;"	d
QMCPLUSPLUS_DISTRIBUTEDORBITALSET_H	DistributedSPOSet.h	17;"	d
QMCPLUSPLUS_DUMMYBASISSET_H	DummyBasisSet.h	15;"	d
QMCPLUSPLUS_EEI_JASTROW_BUILDER_H	Jastrow/eeI_JastrowBuilder.h	15;"	d
QMCPLUSPLUS_EINSPLINEBUILDER_HELPER_H	einspline_helper.hpp	17;"	d
QMCPLUSPLUS_EINSPLINE_ADOPTOR_H	EinsplineAdoptor.h	34;"	d
QMCPLUSPLUS_EINSPLINE_ADOPTOR_PACKED_H	Experimental/EinsplineAdoptorPacked.h	20;"	d
QMCPLUSPLUS_EINSPLINE_BASE_ADOPTOR_READERP_H	SplineAdoptorReaderP.h	24;"	d
QMCPLUSPLUS_EINSPLINE_BASE_ADOPTOR_READER_H	legacy/SplineAdoptorReader.h	24;"	d
QMCPLUSPLUS_EINSPLINE_BUILDER_ESHDF_BIG_H	Experimental/BigEinsplineSetBuilder.cpp	17;"	d	file:
QMCPLUSPLUS_EINSPLINE_BUILDER_ESHDF_H	Experimental/EinsplineSetBuilderReadBands_ESHDF2.cpp	17;"	d	file:
QMCPLUSPLUS_EINSPLINE_C2X_ADOPTOR_H	SplineC2XAdoptor.h	22;"	d
QMCPLUSPLUS_EINSPLINE_MIXED_ADOPTOR_H	Experimental/EinsplineMixedAdoptor.h	23;"	d
QMCPLUSPLUS_EINSPLINE_MIXED_ADOPTOR_H	SplineMixedAdoptor.h	24;"	d
QMCPLUSPLUS_EINSPLINE_MULTIGRID_ADOPTOR_H	MultiGridBsplineSet.h	15;"	d
QMCPLUSPLUS_EINSPLINE_ORB_H	legacy/EinsplineOrb.h	20;"	d
QMCPLUSPLUS_EINSPLINE_R2RADOPTOR_H	SplineR2RAdoptor.h	16;"	d
QMCPLUSPLUS_EINSPLINE_SET_BUILDER_H	EinsplineSetBuilder.h	24;"	d
QMCPLUSPLUS_EINSPLINE_SET_H	EinsplineSet.h	19;"	d
QMCPLUSPLUS_EINSPLINE_SET_LOCAL_H	legacy/EinsplineSetLocal.h	19;"	d
QMCPLUSPLUS_EINSPLINE_SET_TEMPATE_H	Spline3D/EinsplineSetTemp.hpp	21;"	d
QMCPLUSPLUS_EINSPLINE_SPLINEOPENADOPTOR_H	Experimental/SplineOpenAdoptor.h	17;"	d
QMCPLUSPLUS_EINSPLINE_SPLINE_MIXEDGRID_ADOPTOR_PARALLEL_READER_H	MultiGridBsplineSetReader.h	19;"	d
QMCPLUSPLUS_EINSPLINE_SPLINE_MIXED_ADOPTOR_PARALLEL_READER_H	SplineMixedAdoptorReaderP.h	20;"	d
QMCPLUSPLUS_EINSPLINE_SPLINE_MIXED_ADOPTOR_READER_H	legacy/SplineMixedAdoptorReader.h	20;"	d
QMCPLUSPLUS_ELECTRONGAS_COMPLEXORBITALS_H	ElectronGas/ElectronGasComplexOrbitalBuilder.h	17;"	d
QMCPLUSPLUS_ELECTRONGAS_ORBITALS_H	ElectronGas/ElectronGasOrbitalBuilder.h	18;"	d
QMCPLUSPLUS_EXCITATION_NODE_H	Fermion/excitation_node.h	16;"	d
QMCPLUSPLUS_FDLRWFN_H	FDLRWfn.h	9;"	d
QMCPLUSPLUS_FERMIONBASE_H	FermionBase.h	17;"	d
QMCPLUSPLUS_GAUSSIANFUNCTOR	Fermion/GaussianFunctor.h	17;"	d
QMCPLUSPLUS_GAUSSIANORBITAL_MOLECULARORBITALS_H	Experimental/GTOMolecularOrbitals.h	16;"	d
QMCPLUSPLUS_GAUSSIANSLATER_H	Jastrow/OpenGaussianSlaterFunctor.h	15;"	d
QMCPLUSPLUS_GAUSSIAN_H	Jastrow/GaussianFunctor.h	17;"	d
QMCPLUSPLUS_GENERALIZED_JASTROWBUILDER_H	Jastrow/JastrowBuilder.h	17;"	d
QMCPLUSPLUS_GENERIC_JASTROW_BUILDER_H	Jastrow/Experimental/OldJastrowBuilder.h	16;"	d
QMCPLUSPLUS_GENERIC_MOLECULARORBITALBUILDER_H	Experimental/MolecularOrbitalBuilder.h	17;"	d
QMCPLUSPLUS_GENERIC_ONEBODYJASTROWSPIN_H	Jastrow/OneBodySpinJastrowOrbital.h	17;"	d
QMCPLUSPLUS_GENERIC_ONEBODYJASTROW_H	Jastrow/OneBodyJastrowOrbital.h	20;"	d
QMCPLUSPLUS_GENERIC_PRODUCT_WITHCONSTRAINTS_H	ProductOrbital.h	19;"	d
QMCPLUSPLUS_GENERIC_THREEBODYJASTROWORBITAL_H	Jastrow/ThreeBodyJastrowOrbital.h	16;"	d
QMCPLUSPLUS_GENERIC_THREEBODYPADE_H	Jastrow/ThreeBodyPade.h	18;"	d
QMCPLUSPLUS_GENERIC_TWOBODYJASTROW_H	Experimental/TwoBodyJastrowFunction.h	17;"	d
QMCPLUSPLUS_GENERIC_TWOBODYJASTROW_SHARED_H	Experimental/TwoBodyJastrowFunction.Shared.h	16;"	d
QMCPLUSPLUS_GTO_BUILDER_H	MolecularOrbitals/GTOBuilder.h	15;"	d
QMCPLUSPLUS_HEGGRID_H	ElectronGas/HEGGrid.h	18;"	d
QMCPLUSPLUS_HEPRESETHF_H	AtomicOrbitals/HeSTOClementiRottie.h	16;"	d
QMCPLUSPLUS_ION_ORBITAL	IonOrbital.h	19;"	d
QMCPLUSPLUS_ION_ORBITAL_BUILDER_H	IonOrbitalBuilder.h	16;"	d
QMCPLUSPLUS_JASTROWBASISBUILDER_H	Jastrow/JastrowBasisBuilder.h	17;"	d
QMCPLUSPLUS_KSPACE_JASTROW_BUILDER_H	Jastrow/kSpaceJastrowBuilder.h	16;"	d
QMCPLUSPLUS_LCORBITALSETBUILDER_H	Fermion/SlaterDetBuilder.h	17;"	d
QMCPLUSPLUS_LINEARCOMIBINATIONORBITALSETWITHCORRECTION_TEMP_H	Experimental/LCOrbitalSetWithCorrection.h	18;"	d
QMCPLUSPLUS_LINEARCOMIBINATIONORBITALSET_OPTIMIZABLE_H	LCOrbitalSetOpt.h	11;"	d
QMCPLUSPLUS_LINEARCOMIBINATIONORBITALSET_TEMP_H	LCOrbitalSet.h	18;"	d
QMCPLUSPLUS_LINEARCOMIBINATIONORBITALS_H	LCOrbitals.h	17;"	d
QMCPLUSPLUS_LOCALIZEDBASISSET_H	LocalizedBasisSet.h	23;"	d
QMCPLUSPLUS_LONGRANGEJASTROW_BREAKUPUTILITY_H	Jastrow/LRBreakupUtilities.h	20;"	d
QMCPLUSPLUS_LR_KSPACEJASTROW_H	Jastrow/kSpaceJastrow.h	25;"	d
QMCPLUSPLUS_LR_RPAJASTROW_H	Jastrow/LRTwoBodyJastrow.h	25;"	d
QMCPLUSPLUS_MCMILLANJ2G_H	Jastrow/McMillanJ2GFunctor.h	16;"	d
QMCPLUSPLUS_MCMILLANJ2_H	Jastrow/McMillanJ2Functor.h	16;"	d
QMCPLUSPLUS_MIXED_SINGLEPARTICLEBASISSET_H	MixedSPOSet.h	16;"	d
QMCPLUSPLUS_MOBASISBUILDER_H	MolecularOrbitals/MolecularBasisBuilder.h	19;"	d
QMCPLUSPLUS_MODIFIED_PADEFUNCTION_H	Jastrow/ModPadeFunctor.h	17;"	d
QMCPLUSPLUS_MULTIDIRACDETERMINANTWITHBASE_H	Fermion/MultiDiracDeterminantBase.h	21;"	d
QMCPLUSPLUS_MULTIDIRACDETERMINANTWITHBASE_H	Fermion/MultiDiracDeterminantWithBackflow.h	19;"	d
QMCPLUSPLUS_MULTIDIRACDETERMINANTWITHBASE_HELP_H	Fermion/MultiDiracDeterminantBase_help.h	21;"	d
QMCPLUSPLUS_MULTISLATERDETERMINANTFAST_ORBITAL_H	Fermion/MultiSlaterDeterminantFast.h	17;"	d
QMCPLUSPLUS_MULTISLATERDETERMINANTWITHBACKFLOW_ORBITAL_H	Fermion/MultiSlaterDeterminantWithBackflow.h	17;"	d
QMCPLUSPLUS_MULTISLATERDETERMINANT_ORBITAL_H	Fermion/MultiSlaterDeterminant.h	17;"	d
QMCPLUSPLUS_NOCUSPJASTROW_H	Experimental/NoCuspFunctor.h	19;"	d
QMCPLUSPLUS_NUMERICALGRIDORBITALBUILDER_H	MolecularOrbitals/NGOBuilder.h	17;"	d
QMCPLUSPLUS_NUMERICALORBITALSETBUILDER_H	Experimental/NumericalOrbitalSetBuilder.h	16;"	d
QMCPLUSPLUS_NUMERICALRADIALGRIDFUNCTOR_H	Experimental/NumericalRGFBuilder.h	15;"	d
QMCPLUSPLUS_NUMERICAL_JASTROWFUNCTIONS_H	Jastrow/NumericalJastrowFunctor.h	16;"	d
QMCPLUSPLUS_NUMERICAL_JASTROW_AA_BUILDER_H	Jastrow/Experimental/NJAABuilder.h	16;"	d
QMCPLUSPLUS_NUMERICAL_JASTROW_AB_BUILDER_H	Jastrow/Experimental/NJABBuilder.h	16;"	d
QMCPLUSPLUS_NUMERICAL_MOLECULARORBITALS_H	Experimental/NumericalMolecularOrbitals.h	15;"	d
QMCPLUSPLUS_NUMERICAL_PBC_JASTROW_AA_BUILDER_H	Jastrow/Experimental/JAAPBCBuilder.h	15;"	d
QMCPLUSPLUS_ORBITALBASE_H	OrbitalBase.h	19;"	d
QMCPLUSPLUS_ORBITALCONSTRAINTSBASE_H	OrbitalConstraintsBase.h	19;"	d
QMCPLUSPLUS_ORBITALSETTRAITS_H	OrbitalSetTraits.h	20;"	d
QMCPLUSPLUS_ORIGINAL_JASTROW_AA_BUILDER_H	Jastrow/JAABuilder.h	17;"	d
QMCPLUSPLUS_ORIGINAL_JASTROW_AB_BUILDER_H	Jastrow/JABBuilder.h	16;"	d
QMCPLUSPLUS_PADEFUNCTORS_H	Jastrow/PadeFunctors.h	21;"	d
QMCPLUSPLUS_PADE_COMBO_CONSTRAINTS_H	Jastrow/Experimental/PadeConstraints.h	16;"	d
QMCPLUSPLUS_PADE_JASTROW_BUILDER_H	Jastrow/PadeJastrowBuilder.h	15;"	d
QMCPLUSPLUS_PLANEWAVEBASIS_BLAS_H	PlaneWave/PWBasis.h	19;"	d
QMCPLUSPLUS_PLANEWAVEBASIS_H	Experimental/PlaneWaveBasis.h	16;"	d
QMCPLUSPLUS_PLANEWAVE_ORBITALBUILD_H	Experimental/PlaneWaveOrbitalBuilder.h	15;"	d
QMCPLUSPLUS_PLANEWAVE_ORBITALBUILD_V0_H	PlaneWave/PWOrbitalBuilder.h	19;"	d
QMCPLUSPLUS_PLANEWAVE_ORBITALSET_BLAS_H	PlaneWave/PWOrbitalSet.h	19;"	d
QMCPLUSPLUS_PLANEWAVE_ORBITALSET_H	Experimental/PlaneWaveOrbitalSet.h	16;"	d
QMCPLUSPLUS_PLANEWAVE_REALORBITALSET_BLAS_H	PlaneWave/PWRealOrbitalSet.h	23;"	d
QMCPLUSPLUS_POLARIZED_ONEBODYJASTROW_H	Jastrow/PolarizedJastrow.h	16;"	d
QMCPLUSPLUS_POLYFUNCTOR_H	Jastrow/PolyFunctor.h	16;"	d
QMCPLUSPLUS_POLYNOMIAL3D_FUNCTOR_H	Jastrow/PolynomialFunctor3D.h	17;"	d
QMCPLUSPLUS_POLYNOMIAL_CONSTRAINTS_H	Jastrow/PolyConstraints.h	16;"	d
QMCPLUSPLUS_PWPARAMETERSET_H	PlaneWave/PWParameterSet.h	19;"	d
QMCPLUSPLUS_QDWFBUILDER_H	Experimental/QDwfBuilder.h	15;"	d
QMCPLUSPLUS_RNDIRACDETERMINANTWITHBASEALTERNATE_H	Fermion/RNDiracDeterminantBaseAlternate.h	17;"	d
QMCPLUSPLUS_RNDIRACDETERMINANTWITHBASE_H	Fermion/RNDiracDeterminantBase.h	17;"	d
QMCPLUSPLUS_RPA_FUNCTOR_H	Jastrow/RPAJastrowFunctor.h	16;"	d
QMCPLUSPLUS_RPA_JASTROW_H	Jastrow/RPAJastrow.h	17;"	d
QMCPLUSPLUS_SHOSET_H	HarmonicOscillator/SHOSet.h	16;"	d
QMCPLUSPLUS_SHO_BASIS_BUILDER_H	HarmonicOscillator/SHOSetBuilder.h	16;"	d
QMCPLUSPLUS_SINGLEPARTICLEORBITALSETBASE_H	SPOSetBase.h	21;"	d
QMCPLUSPLUS_SINGLEPARTICLEORBITALSET_H	Experimental/SingleParticleOrbitalSet.h	16;"	d
QMCPLUSPLUS_SINGLE_RPA_JASTROW_H	Jastrow/singleRPAJastrowBuilder.h	16;"	d
QMCPLUSPLUS_SLATERDETERMINANT_ORBITAL_H	Experimental/SlaterDeterminant.h	16;"	d
QMCPLUSPLUS_SLATERDETERMINANT_WITHBACKFLOW_H	Fermion/SlaterDetWithBackflow.h	17;"	d
QMCPLUSPLUS_SLATERDETERMINANT_WITHBASE_H	Fermion/SlaterDet.h	19;"	d
QMCPLUSPLUS_SLATERDETOPT_H	Fermion/SlaterDetOpt.h	11;"	d
QMCPLUSPLUS_SLATERTYPEORBITAL_BUILDER_H	MolecularOrbitals/STOBuilder.h	15;"	d
QMCPLUSPLUS_SLATERTYPEORBITAL_MOLECULARORBITALS_H	Experimental/STOMolecularOrbitals.h	16;"	d
QMCPLUSPLUS_SPARSELOCALIZEDBASISSET_H	SparseLocalizedBasisSet.h	21;"	d
QMCPLUSPLUS_SPHERICALBASISBUILDER_H	Jastrow/CBSOBuilder.h	15;"	d
QMCPLUSPLUS_SPHERICALORBITALSET_H	SphericalOrbitalSet.h	17;"	d
QMCPLUSPLUS_SPHERICALORBITAL_BASISSET_H	SphericalBasisSet.h	20;"	d
QMCPLUSPLUS_SPLINE3DBASISSET_H	Spline3D/SplineBasisSet.h	19;"	d
QMCPLUSPLUS_SPLINE3DBUILDER_H	Experimental/Spline3DBuilder.h	15;"	d
QMCPLUSPLUS_SPLINESETBUILDER_H	Experimental/SplineSetBuilder.h	16;"	d
QMCPLUSPLUS_SPLINE_GRID_HANDLER_H	Spline3D/SplineGridHandler.h	19;"	d
QMCPLUSPLUS_SPOSETCOMBO_NOCOPY_H	SPOSetComboNoCopy.h	17;"	d
QMCPLUSPLUS_SPOSETPROXY_FORMSD_H	Fermion/SPOSetProxyForMSD.h	18;"	d
QMCPLUSPLUS_SPOSETPROXY_H	Fermion/SPOSetProxy.h	19;"	d
QMCPLUSPLUS_SPOSET_INFO_H	SPOSetInfo.h	16;"	d
QMCPLUSPLUS_SPOSET_INPUT_INFO_H	SPOSetInputInfo.h	16;"	d
QMCPLUSPLUS_SPOSET_SCANNER_H	SPOSetScanner.h	14;"	d
QMCPLUSPLUS_SPO_INFO_H	SPOInfo.h	16;"	d
QMCPLUSPLUS_THREEBODY_BLOCKSPARSE_H	Jastrow/ThreeBodyBlockSparse.h	16;"	d
QMCPLUSPLUS_THREEBODY_GEMINALBUILDER_H	Jastrow/ThreeBodyGeminalBuilder.h	18;"	d
QMCPLUSPLUS_THREEBODY_GEMINAL_H	Jastrow/ThreeBodyGeminal.h	16;"	d
QMCPLUSPLUS_THREEBODY_PADE_BUILDER_H	Jastrow/ThreeBodyPadeBuilder.h	18;"	d
QMCPLUSPLUS_TRIALORBITALBUILDERBASE_H	OrbitalBuilderBase.h	21;"	d
QMCPLUSPLUS_TRIALWAVEFUNCTION_FACTORY_H	WaveFunctionFactory.h	20;"	d
QMCPLUSPLUS_TRIALWAVEFUNCTION_H	TrialWaveFunction.h	23;"	d
QMCPLUSPLUS_TRICUBICSPLINE3DBUILDER_H	Experimental/TriCubicSplineBuilder.h	15;"	d
QMCPLUSPLUS_TRICUBIC_BSPLINESETBUILDER_H	Experimental/TricubicBsplineSetBuilder.h	16;"	d
QMCPLUSPLUS_TRICUBIC_B_SPLINE_TWISTSET_H	Experimental/TricubicBsplineTwistSet.h	16;"	d
QMCPLUSPLUS_TWIST_HANDLER_H	Spline3D/twist_handler.hpp	16;"	d
QMCPLUSPLUS_TWOBODYJASTROWCOMBO_BUILDER_H	Jastrow/Experimental/TwoBodyJastrowBuilder.h	15;"	d
QMCPLUSPLUS_WMFUNCTOR_SM_CONSTRAINTS_H	Jastrow/Experimental/WMConstraints.h	16;"	d
QMCPLUSPLUS_WMFUNCTOR_WITHPADECORRECTION_H	Jastrow/DerivWMFunctor.h	16;"	d
QMCPLUSPLUS_WMFUNCTOR_WITHPADECORRECTION_H	Jastrow/WMFunctor.h	16;"	d
QMCPLUSPLUS_WM_JASTROW_BUILDER_H	Jastrow/WMJastrowBuilder.h	16;"	d
QP	Fermion/BackflowTransformation.h	/^  ParticleSet QP;$/;"	m	class:qmcplusplus::BackflowTransformation
Qmat	Fermion/DiracDeterminantWithBackflow.h	/^  HessMatrix_t Ajk_sum,Qmat;$/;"	m	class:qmcplusplus::DiracDeterminantWithBackflow
Qmat	Fermion/MultiDiracDeterminantWithBackflow.h	/^  HessMatrix_t Ajk_sum,Qmat;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
QuadPoints	Jastrow/NLjobGPU.h	/^  S *R, *QuadPoints, *Ratios;$/;"	m	struct:NLjobGPU
QuantumNumberType	OrbitalSetTraits.h	/^typedef TinyVector<int,4> QuantumNumberType;$/;"	t	namespace:qmcplusplus
R	Jastrow/NLjobGPU.h	/^  S *R, *QuadPoints, *Ratios;$/;"	m	struct:NLjobGPU
R0	Fermion/GaussianFunctor.h	/^  std::vector<real_type> R0;$/;"	m	class:qmcplusplus::GaussianFunctor
R0	Jastrow/McMillanJ2Functor.h	/^  real_type R0;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
R0	Jastrow/McMillanJ2GFunctor.h	/^  real_type A, B, R0, c1, c2;$/;"	m	struct:qmcplusplus::McMillanJ2GFunctor
R0_id	Fermion/GaussianFunctor.h	/^  std::vector<std::string> R0_id;$/;"	m	class:qmcplusplus::GaussianFunctor
R1	Jastrow/NumericalJastrowFunctor.h	/^  T R1;$/;"	m	struct:qmcplusplus::CutoffFunctor
R12	Jastrow/CompositeFunctor.h	/^  real_type R12;$/;"	m	struct:qmcplusplus::CuspCorrectionFunctor
R12	Jastrow/CompositeFunctor.h	/^  real_type R12;$/;"	m	struct:qmcplusplus::DCuspCorrectionDEFunctor
R12	Jastrow/NumericalJastrowFunctor.h	/^  T R12;$/;"	m	struct:qmcplusplus::CutoffFunctor
R2	Jastrow/NumericalJastrowFunctor.h	/^  T R2;$/;"	m	struct:qmcplusplus::CutoffFunctor
RC	Jastrow/GaussianFunctor.h	/^  real_type A, B, C, RC;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
RC	Jastrow/GaussianFunctor.h	/^  real_type RC;$/;"	m	struct:qmcplusplus::GaussianFunctor
RC	Jastrow/McMillanJ2Functor.h	/^  real_type RC;$/;"	m	struct:qmcplusplus::ModMcMillanJ2Functor
RC	Jastrow/McMillanJ2Functor.h	/^  real_type RC;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
RECOMPUTE_TIMER	TrialWaveFunction.cpp	/^               RECOMPUTE_TIMER, DERIVS_TIMER, TIMER_SKIP$/;"	e	enum:qmcplusplus::__anon33	file:
RECOMPUTE_TIMER	TrialWaveFunction_CUDA.cpp	/^               RECOMPUTE_TIMER, DERIVS_TIMER, TIMER_SKIP$/;"	e	enum:qmcplusplus::__anon34	file:
RNDiracDeterminantBase	Fermion/RNDiracDeterminantBase.cpp	/^RNDiracDeterminantBase::RNDiracDeterminantBase(SPOSetBasePtr const &spos, int first):$/;"	f	class:qmcplusplus::RNDiracDeterminantBase
RNDiracDeterminantBase	Fermion/RNDiracDeterminantBase.cpp	/^RNDiracDeterminantBase::RNDiracDeterminantBase(const RNDiracDeterminantBase& s):$/;"	f	class:qmcplusplus::RNDiracDeterminantBase
RNDiracDeterminantBase	Fermion/RNDiracDeterminantBase.h	/^class RNDiracDeterminantBase: public DiracDeterminantBase$/;"	c	namespace:qmcplusplus
RNDiracDeterminantBaseAlternate	Fermion/RNDiracDeterminantBaseAlternate.cpp	/^RNDiracDeterminantBaseAlternate::RNDiracDeterminantBaseAlternate(SPOSetBasePtr const &spos, int first):$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
RNDiracDeterminantBaseAlternate	Fermion/RNDiracDeterminantBaseAlternate.cpp	/^RNDiracDeterminantBaseAlternate::RNDiracDeterminantBaseAlternate(const RNDiracDeterminantBaseAlternate& s):$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
RNDiracDeterminantBaseAlternate	Fermion/RNDiracDeterminantBaseAlternate.h	/^class RNDiracDeterminantBaseAlternate: public DiracDeterminantBase$/;"	c	namespace:qmcplusplus
RPA0	Jastrow/kSpaceJastrow.h	/^  RPA0(T rs=1):Rs(rs)$/;"	f	struct:qmcplusplus::RPA0
RPA0	Jastrow/kSpaceJastrow.h	/^struct RPA0$/;"	s	namespace:qmcplusplus
RPABFeeBreakup	Jastrow/LRBreakupUtilities.h	/^  inline RPABFeeBreakup() {}$/;"	f	struct:qmcplusplus::RPABFeeBreakup
RPABFeeBreakup	Jastrow/LRBreakupUtilities.h	/^struct RPABFeeBreakup$/;"	s	namespace:qmcplusplus
RPABreakup	Jastrow/LRBreakupUtilities.h	/^  inline RPABreakup() {}$/;"	f	struct:qmcplusplus::RPABreakup
RPABreakup	Jastrow/LRBreakupUtilities.h	/^struct RPABreakup$/;"	s	namespace:qmcplusplus
RPAJastrow	Jastrow/RPAJastrow.cpp	/^RPAJastrow::RPAJastrow(ParticleSet& target, bool is_manager)$/;"	f	class:qmcplusplus::RPAJastrow
RPAJastrow	Jastrow/RPAJastrow.h	/^struct RPAJastrow: public OrbitalBase$/;"	s	namespace:qmcplusplus
RPAJastrowFunctor	Jastrow/RPAJastrowFunctor.h	/^  RPAJastrowFunctor(RPAJastrow<T>* func): SameSpin(true)$/;"	f	struct:qmcplusplus::RPAJastrowFunctor
RPAJastrowFunctor	Jastrow/RPAJastrowFunctor.h	/^  RPAJastrowFunctor(bool samespin=true): SameSpin(samespin)$/;"	f	struct:qmcplusplus::RPAJastrowFunctor
RPAJastrowFunctor	Jastrow/RPAJastrowFunctor.h	/^struct RPAJastrowFunctor: public OptimizableFunctorBase<T>$/;"	s	namespace:qmcplusplus
RSOType	Experimental/TricubicBsplineSetBuilder.h	/^    RSOType():Coeffs(0) {}$/;"	f	struct:qmcplusplus::TricubicBsplineSetBuilder::RSOType
RSOType	Experimental/TricubicBsplineSetBuilder.h	/^    RSOType(const PosType& c, const PosType o, StorageType* d): Center(c),Origin(o),Coeffs(d) {}$/;"	f	struct:qmcplusplus::TricubicBsplineSetBuilder::RSOType
RSOType	Experimental/TricubicBsplineSetBuilder.h	/^  struct RSOType$/;"	s	class:qmcplusplus::TricubicBsplineSetBuilder
R_B	Jastrow/BesselZeroFunctor.h	/^  real_type R_B,R_Binv;$/;"	m	struct:qmcplusplus::BesselZero
R_Binv	Jastrow/BesselZeroFunctor.h	/^  real_type R_B,R_Binv;$/;"	m	struct:qmcplusplus::BesselZero
RadFun	Fermion/Backflow_eI.h	/^  std::vector<FT*> RadFun;$/;"	m	class:qmcplusplus::Backflow_eI
RadFun	Fermion/Backflow_ee.h	/^  std::vector<FT*> RadFun;$/;"	m	class:qmcplusplus::Backflow_ee
RadFunc	Fermion/Backflow_eI_spin.h	/^  Matrix<FT*> RadFunc;$/;"	m	class:qmcplusplus::Backflow_eI_spin
RadialGrid	MuffinTin.h	/^  NUgrid *RadialGrid;$/;"	m	class:qmcplusplus::MuffinTinClass
RadialGridType	OrbitalConstraintsBase.h	/^  typedef OneDimGridFactory::GridType RadialGridType;$/;"	t	struct:qmcplusplus::OrbitalConstraintsBase
RadialOrbitalType	Experimental/GTOMolecularOrbitals.h	/^  typedef GaussianCombo<RealType>                    RadialOrbitalType;$/;"	t	class:qmcplusplus::GTOMolecularOrbitals
RadialOrbitalType	Experimental/STOMolecularOrbitals.h	/^  typedef SlaterCombo<RealType>                      RadialOrbitalType;$/;"	t	class:qmcplusplus::STOMolecularOrbitals
RadialOrbitalType	Jastrow/CBSOBuilder.h	/^  typedef CubicSplineSingle<RealType,SplineEngineType> RadialOrbitalType;$/;"	t	class:qmcplusplus::CBSOBuilder
RadialOrbitalType	MolecularOrbitals/BsplineAOBuilder.h	/^  typedef BsplineFunctor<RealType>                 RadialOrbitalType;$/;"	t	class:qmcplusplus::BsplineAOBuilder
RadialOrbitalType	MolecularOrbitals/GTOBuilder.h	/^  typedef GaussianCombo<RealType>                    RadialOrbitalType;$/;"	t	class:qmcplusplus::GTOBuilder
RadialOrbitalType	MolecularOrbitals/NGOBuilder.h	/^  typedef NGOrbital                                     RadialOrbitalType;$/;"	t	class:qmcplusplus::NGOBuilder
RadialOrbitalType	MolecularOrbitals/STOBuilder.h	/^  typedef SlaterCombo<RealType>                      RadialOrbitalType;$/;"	t	class:qmcplusplus::STOBuilder
RadialOrbital_t	AtomicOrbitals/HFAtomicSTOSet.h	/^  typedef GenericSTO<RealType>              RadialOrbital_t;$/;"	t	struct:qmcplusplus::HFAtomicSTOSet
RadialOrbital_t	AtomicOrbitals/HFAtomicSTOSet.h	/^  typedef GenericSTO<T> RadialOrbital_t;$/;"	t	struct:qmcplusplus::ComboSTO
RadialOrbital_t	AtomicOrbitals/HFAtomicSTOSetBuilder.h	/^  typedef HFAtomicSTOSet::RadialOrbital_t RadialOrbital_t;$/;"	t	class:qmcplusplus::HFAtomicSTOSetBuilder
RadialOrbital_t	SphericalBasisSet.h	/^  typedef ROT                                                  RadialOrbital_t;$/;"	t	struct:qmcplusplus::SphericalBasisSet
RadialOrbital_t	SphericalOrbitalSet.h	/^  typedef ROT                                                  RadialOrbital_t;$/;"	t	struct:qmcplusplus::SphericalOrbitalSet
RadialSpline	AtomicOrbital.h	/^  SplineType *RadialSpline;$/;"	m	class:qmcplusplus::AtomicOrbital
RadialSplines	MuffinTin.h	/^  multi_NUBspline_1d_z *RadialSplines;$/;"	m	class:qmcplusplus::MuffinTinClass
RadialVec	MuffinTin.h	/^  Vector<std::complex<double> > RadialVec, dRadialVec, d2RadialVec;$/;"	m	class:qmcplusplus::MuffinTinClass
Ratio1AllTimer	Fermion/MultiSlaterDeterminant.h	/^  NewTimer Ratio1Timer,Ratio1GradTimer,Ratio1AllTimer,AccRejTimer,evalOrbTimer;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
Ratio1AllTimer	Fermion/MultiSlaterDeterminantFast.h	/^  NewTimer Ratio1Timer,Ratio1GradTimer,Ratio1AllTimer, AccRejTimer;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
Ratio1GradTimer	Fermion/MultiSlaterDeterminant.h	/^  NewTimer Ratio1Timer,Ratio1GradTimer,Ratio1AllTimer,AccRejTimer,evalOrbTimer;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
Ratio1GradTimer	Fermion/MultiSlaterDeterminantFast.h	/^  NewTimer Ratio1Timer,Ratio1GradTimer,Ratio1AllTimer, AccRejTimer;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
Ratio1Timer	Fermion/MultiSlaterDeterminant.h	/^  NewTimer Ratio1Timer,Ratio1GradTimer,Ratio1AllTimer,AccRejTimer,evalOrbTimer;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
Ratio1Timer	Fermion/MultiSlaterDeterminantFast.h	/^  NewTimer Ratio1Timer,Ratio1GradTimer,Ratio1AllTimer, AccRejTimer;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
RatioAllTimer	Fermion/MultiSlaterDeterminant.h	/^  NewTimer RatioTimer,RatioGradTimer,RatioAllTimer,UpdateTimer,EvaluateTimer;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
RatioAllTimer	Fermion/MultiSlaterDeterminantFast.h	/^  NewTimer RatioTimer,RatioGradTimer,RatioAllTimer,UpdateTimer,EvaluateTimer;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
RatioGradTimer	Fermion/MultiSlaterDeterminant.h	/^  NewTimer RatioTimer,RatioGradTimer,RatioAllTimer,UpdateTimer,EvaluateTimer;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
RatioGradTimer	Fermion/MultiSlaterDeterminantFast.h	/^  NewTimer RatioTimer,RatioGradTimer,RatioAllTimer,UpdateTimer,EvaluateTimer;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
RatioRowList_d	Fermion/DiracDeterminantCUDA.h	/^  gpu::device_vector<CudaValueType*> RatioRowList_d;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
RatioRowList_host	Fermion/DiracDeterminantCUDA.h	/^  gpu::host_vector<CudaValueType*> RatioRowList_host[2];$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
RatioTimer	Fermion/DiracDeterminantBase.h	/^  NewTimer UpdateTimer, RatioTimer, InverseTimer, BufferTimer, SPOVTimer, SPOVGLTimer;$/;"	m	class:qmcplusplus::DiracDeterminantBase
RatioTimer	Fermion/MultiDiracDeterminantBase.h	/^  NewTimer UpdateTimer, RatioTimer, InverseTimer, buildTableTimer, readMatTimer, evalWTimer, evalOrbTimer,evalOrb1Timer;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
RatioTimer	Fermion/MultiDiracDeterminantWithBackflow.h	/^  NewTimer UpdateTimer, RatioTimer, InverseTimer, buildTableTimer, readMatTimer, evalWTimer, evalOrbTimer,evalOrb1Timer;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
RatioTimer	Fermion/MultiSlaterDeterminant.h	/^  NewTimer RatioTimer,RatioGradTimer,RatioAllTimer,UpdateTimer,EvaluateTimer;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
RatioTimer	Fermion/MultiSlaterDeterminantFast.h	/^  NewTimer RatioTimer,RatioGradTimer,RatioAllTimer,UpdateTimer,EvaluateTimer;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
Ratios	Jastrow/NLjobGPU.h	/^  S *R, *QuadPoints, *Ratios;$/;"	m	struct:NLjobGPU
Rc	Experimental/CuspCorr.h	/^  RealType Rc_init,Rc,C,sg,Z,valAtZero,valAtRc,Rc_max;$/;"	m	class:qmcplusplus::CuspCorr
Rc	Jastrow/LRBreakupUtilities.h	/^  T Rc;$/;"	m	struct:qmcplusplus::DerivYukawaBreakup
Rc_init	Experimental/CuspCorr.h	/^  RealType Rc_init,Rc,C,sg,Z,valAtZero,valAtRc,Rc_max;$/;"	m	class:qmcplusplus::CuspCorr
Rc_max	Experimental/CuspCorr.h	/^  RealType Rc_init,Rc,C,sg,Z,valAtZero,valAtRc,Rc_max;$/;"	m	class:qmcplusplus::CuspCorr
Rcut	BsplineReaderBase.h	/^  double Rcut;$/;"	m	struct:qmcplusplus::BsplineReaderBase
Rcut	Experimental/LCOrbitalSetWithCorrection.h	/^  RealType Rcut;$/;"	m	class:qmcplusplus::LCOrbitalSetWithCorrection
Rcut	Fermion/BackflowBuilder.h	/^  RealType Rcut;$/;"	m	class:qmcplusplus::BackflowBuilder
Rcut	Jastrow/CompositeFunctor.h	/^  real_type Rcut;$/;"	m	struct:qmcplusplus::CuspCorrectionFunctor
Rcut	Jastrow/CompositeFunctor.h	/^  real_type Rcut;$/;"	m	struct:qmcplusplus::DCuspCorrectionDEFunctor
Rcut	Jastrow/CompositeFunctor.h	/^  real_type Rcut;$/;"	m	struct:qmcplusplus::TruncatedPadeFunctor
Rcut	Jastrow/DerivWMFunctor.h	/^  real_type Rcut;$/;"	m	struct:qmcplusplus::D2WMDB2Functor
Rcut	Jastrow/DerivWMFunctor.h	/^  real_type Rcut;$/;"	m	struct:qmcplusplus::DWMDBFunctor
Rcut	Jastrow/Experimental/AnyConstraints.h	/^    RealType Rcut;$/;"	m	struct:qmcplusplus::AnyConstraints::BasisGroupType
Rcut	Jastrow/Experimental/WMConstraints.h	/^  RealType Rcut;$/;"	m	struct:qmcplusplus::WMConstraints
Rcut	Jastrow/NumericalJastrowFunctor.h	/^  CutoffFunctor<real_type> Rcut;$/;"	m	struct:qmcplusplus::NumericalJastrow
Rcut	Jastrow/RPAJastrow.h	/^  RealType Rcut;$/;"	m	struct:qmcplusplus::RPAJastrow
Rcut	Jastrow/WMFunctor.h	/^  real_type Rcut;$/;"	m	struct:qmcplusplus::WMFunctor
Rcut	Jastrow/WMFunctor.h	/^  real_type Rcut;$/;"	m	struct:qmcplusplus::WMFunctorSet
Rcut	Jastrow/WMJastrowBuilder.h	/^    RealType Rcut;$/;"	m	struct:qmcplusplus::WMJastrowBuilder::BasisGroupType
Rcut	Jastrow/singleRPAJastrowBuilder.h	/^  RealType Rcut;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
Rcut	MultiGridBsplineSet.h	/^    RealType Rcut;$/;"	m	struct:qmcplusplus::MultiGridBsplineSet
Rcut	OrbitalConstraintsBase.h	/^  RealType Rcut;$/;"	m	struct:qmcplusplus::OrbitalConstraintsBase
Rcut	PlaneWave/PWParameterSet.h	/^  double Rcut;$/;"	m	struct:qmcplusplus::PWParameterSet
Rcut	Spline3D/SplineGridHandler.h	/^  T Rcut;$/;"	m	struct:qmcplusplus::SplineGridHandler
Rcut2	Experimental/Bspline3DSetBase.h	/^  RealType Rcut2;$/;"	m	struct:qmcplusplus::Bspline3DSetBase
Rcut2	Spline3D/SplineGridHandler.h	/^  T Rcut2;$/;"	m	struct:qmcplusplus::SplineGridHandler
ReadBands	EinsplineSetBuilderOld.cpp	/^EinsplineSetBuilder::ReadBands$/;"	f	class:qmcplusplus::EinsplineSetBuilder
ReadBands	Experimental/EinsplineSetBuilder.cpp	/^EinsplineSetBuilder::ReadBands (int spin, EinsplineSetLocal* orbitalSet)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
ReadBands	Experimental/EinsplineSetBuilder.cpp	/^EinsplineSetBuilder::ReadBands$/;"	f	class:qmcplusplus::EinsplineSetBuilder
ReadBands_ESHDF	EinsplineSetBuilderReadBands_ESHDF.cpp	/^void EinsplineSetBuilder::ReadBands_ESHDF(int spin, EinsplineSetExtended<double>* orbitalSet)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
ReadBands_ESHDF	EinsplineSetBuilderReadBands_ESHDF.cpp	/^void EinsplineSetBuilder::ReadBands_ESHDF(int spin, EinsplineSetExtended<std::complex<double > >* orbitalSet)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
ReadBands_ESHDF	Experimental/EinsplineSetBuilder.cpp	/^EinsplineSetBuilder::ReadBands_ESHDF$/;"	f	class:qmcplusplus::EinsplineSetBuilder
ReadBands_ESHDF	Experimental/EinsplineSetBuilderESHDF.cpp	/^EinsplineSetBuilder::ReadBands_ESHDF$/;"	f	class:qmcplusplus::EinsplineSetBuilder
ReadBands_ESHDF_Big	Experimental/BigEinsplineSetBuilder.cpp	/^void EinsplineSetBuilder::ReadBands_ESHDF_Big(int spin, SPE* orbitalSet)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
ReadBands_ESHDF_Complex	Experimental/EinsplineSetBuilderReadBands_ESHDF2.cpp	/^void EinsplineSetBuilder::ReadBands_ESHDF_Complex(int spin, SPE* orbitalSet)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
ReadBands_ESHDF_Real	Experimental/EinsplineSetBuilderReadBands_ESHDF2.cpp	/^void EinsplineSetBuilder::ReadBands_ESHDF_Real(int spin, SPE* orbitalSet)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
ReadGvectors_ESHDF	EinsplineSetBuilderReadBands_ESHDF.cpp	/^bool EinsplineSetBuilder::ReadGvectors_ESHDF()$/;"	f	class:qmcplusplus::EinsplineSetBuilder
ReadGvectors_ESHDF	Experimental/EinsplineSetBuilder.cpp	/^EinsplineSetBuilder::ReadGvectors_ESHDF()$/;"	f	class:qmcplusplus::EinsplineSetBuilder
ReadHDFWavefunction010	Experimental/PlaneWaveOrbitalBuilder.cpp	/^void PlaneWaveOrbitalBuilder::ReadHDFWavefunction010(hid_t hfile, RealType& ecut)$/;"	f	class:qmcplusplus::PlaneWaveOrbitalBuilder
ReadOrbitalInfo	EinsplineSetBuilderOld.cpp	/^EinsplineSetBuilder::ReadOrbitalInfo()$/;"	f	class:qmcplusplus::EinsplineSetBuilder
ReadOrbitalInfo	Experimental/EinsplineSetBuilder.cpp	/^EinsplineSetBuilder::ReadOrbitalInfo()$/;"	f	class:qmcplusplus::EinsplineSetBuilder
ReadOrbitalInfo_ESHDF	EinsplineSetBuilderESHDF.fft.cpp	/^bool EinsplineSetBuilder::ReadOrbitalInfo_ESHDF()$/;"	f	class:qmcplusplus::EinsplineSetBuilder
ReadOrbitalInfo_ESHDF	Experimental/EinsplineSetBuilder.cpp	/^EinsplineSetBuilder::ReadOrbitalInfo_ESHDF()$/;"	f	class:qmcplusplus::EinsplineSetBuilder
ReadOrbitalInfo_ESHDF	Experimental/EinsplineSetBuilderESHDF.cpp	/^EinsplineSetBuilder::ReadOrbitalInfo_ESHDF()$/;"	f	class:qmcplusplus::EinsplineSetBuilder
Real Spherical Harmonics	AtomicOrbital.tex	/^radial basis (e.g. splines).$/;"	s
RealEGOSet	ElectronGas/ElectronGasOrbitalBuilder.cpp	/^RealEGOSet::RealEGOSet(const std::vector<PosType>& k, const std::vector<RealType>& k2): K(k),mK2(k2)$/;"	f	class:qmcplusplus::RealEGOSet
RealEGOSet	ElectronGas/ElectronGasOrbitalBuilder.h	/^struct RealEGOSet: public SPOSetBase$/;"	s	namespace:qmcplusplus
RealGGGMatrix_t	EinsplineSet.h	/^  typedef Matrix<RealGGGType>                                   RealGGGMatrix_t;$/;"	t	class:qmcplusplus::EinsplineSetExtended
RealGGGType	EinsplineSet.h	/^  typedef TinyVector<RealHessType, 3>                           RealGGGType;$/;"	t	class:qmcplusplus::EinsplineSetExtended
RealGGGVector_t	EinsplineSet.h	/^  typedef Vector<RealGGGType>                                   RealGGGVector_t;$/;"	t	class:qmcplusplus::EinsplineSetExtended
RealGradMatrix_t	EinsplineSet.h	/^  typedef Matrix<TinyVector<double,OHMMS_DIM> >                 RealGradMatrix_t;$/;"	t	class:qmcplusplus::EinsplineSetExtended
RealGradVector_t	AtomicOrbital.h	/^  typedef Vector<TinyVector<double,OHMMS_DIM> > RealGradVector_t;$/;"	t	class:qmcplusplus::AtomicOrbital
RealGradVector_t	EinsplineSet.h	/^  typedef Vector<TinyVector<double,OHMMS_DIM> >                 RealGradVector_t;$/;"	t	class:qmcplusplus::EinsplineSetExtended
RealHessMatrix_t	EinsplineSet.h	/^  typedef Matrix<RealHessType>                                  RealHessMatrix_t;$/;"	t	class:qmcplusplus::EinsplineSetExtended
RealHessType	EinsplineSet.h	/^  typedef Tensor<double,OHMMS_DIM>                              RealHessType;$/;"	t	class:qmcplusplus::EinsplineSetExtended
RealHessVector_t	AtomicOrbital.h	/^  typedef Vector<Tensor<double,OHMMS_DIM> >     RealHessVector_t;$/;"	t	class:qmcplusplus::AtomicOrbital
RealHessVector_t	EinsplineSet.h	/^  typedef Vector<RealHessType>                                  RealHessVector_t;$/;"	t	class:qmcplusplus::EinsplineSetExtended
RealMatrix_t	OrbitalBase.h	/^  typedef OrbitalSetTraits<RealType>::ValueMatrix_t       RealMatrix_t;$/;"	t	struct:qmcplusplus::OrbitalBase
RealMatrix_t	TrialWaveFunction.h	/^  typedef OrbitalBase::RealMatrix_t    RealMatrix_t;$/;"	t	class:qmcplusplus::TrialWaveFunction
RealType	AtomicOrbital.h	/^  typedef QMCTraits::RealType                   RealType;$/;"	t	class:qmcplusplus::AtomicOrbital
RealType	BasisSetBase.h	/^  typedef typename OrbitalSetTraits<T>::RealType      RealType;$/;"	t	struct:qmcplusplus::BasisSetBase
RealType	DiffOrbitalBase.h	/^  typedef OrbitalBase::RealType             RealType;$/;"	t	struct:qmcplusplus::DiffOrbitalBase
RealType	ElectronGas/HEGGrid.h	/^  typedef typename PL_t::Scalar_t            RealType;$/;"	t	struct:qmcplusplus::HEGGrid
RealType	Experimental/CorrectingOrbitalBasisSet.h	/^  typedef typename BasisSetType::RealType      RealType;$/;"	t	struct:qmcplusplus::CorrectingOrbitalBasisSet
RealType	Experimental/PlaneWaveOrbitalSet.h	/^  typedef PlaneWaveBasis::RealType  RealType;$/;"	t	class:qmcplusplus::PlaneWaveOrbitalSet
RealType	Fermion/BackflowFunctionBase.h	/^  typedef OHMMS_PRECISION                RealType;$/;"	t	class:qmcplusplus::BackflowFunctionBase
RealType	Fermion/BackflowTransformation.h	/^  typedef OHMMS_PRECISION                RealType;$/;"	t	class:qmcplusplus::BackflowTransformation
RealType	LCOrbitals.h	/^  typedef typename BS::RealType  RealType;$/;"	t	class:qmcplusplus::LCOrbitals
RealType	LocalizedBasisSet.h	/^  typedef typename BasisSetType::RealType      RealType;$/;"	t	struct:qmcplusplus::LocalizedBasisSet
RealType	MuffinTin.h	/^  typedef QMCTraits::RealType RealType;$/;"	t	class:qmcplusplus::MuffinTinClass
RealType	OrbitalBuilderBase.h	/^  typedef TrialWaveFunction::RealType  RealType;$/;"	t	class:qmcplusplus::OrbitalBuilderBase
RealType	OrbitalSetTraits.h	/^  typedef typename scalar_traits <T>::real_type RealType;$/;"	t	struct:qmcplusplus::OrbitalSetTraits
RealType	SPOInfo.cpp	/^  typedef QMCTraits::RealType RealType;$/;"	t	namespace:qmcplusplus	file:
RealType	SPOInfo.h	/^      typedef QMCTraits::RealType RealType;$/;"	t	struct:qmcplusplus::spoinfo::EnergyOrder
RealType	SPOInfo.h	/^    typedef QMCTraits::RealType RealType;$/;"	t	struct:qmcplusplus::SPOInfo
RealType	SPOSetInfo.cpp	/^  typedef QMCTraits::RealType RealType;$/;"	t	namespace:qmcplusplus	file:
RealType	SPOSetInfo.h	/^    typedef QMCTraits::RealType RealType;$/;"	t	class:qmcplusplus::SPOSetInfo
RealType	SPOSetInfo.h	/^    typedef QMCTraits::RealType RealType;$/;"	t	struct:qmcplusplus::SPOSetInfoSimple
RealType	SPOSetInputInfo.cpp	/^  typedef QMCTraits::RealType RealType;$/;"	t	namespace:qmcplusplus	file:
RealType	SPOSetInputInfo.h	/^    typedef QMCTraits::RealType RealType;$/;"	t	struct:qmcplusplus::SPOSetInputInfo
RealType	SPOSetScanner.h	/^    typedef QMCTraits::RealType                        RealType;$/;"	t	class:qmcplusplus::SPOSetScanner
RealType	SparseLocalizedBasisSet.h	/^  typedef typename BasisSetType::RealType      RealType;$/;"	t	struct:qmcplusplus::SparseLocalizedBasisSet
RealType	SphericalBasisSet.h	/^  typedef typename OrbitalSetTraits<value_type>::RealType      RealType;$/;"	t	struct:qmcplusplus::SphericalBasisSet
RealType	SphericalOrbitalSet.h	/^  typedef typename OrbitalSetTraits<value_type>::RealType      RealType;$/;"	t	struct:qmcplusplus::SphericalOrbitalSet
RealType	TrialWaveFunction.h	/^  typedef OrbitalBase::RealType           RealType;$/;"	t	class:qmcplusplus::TrialWaveFunction
RealType	TrialWaveFunction.h	/^  typedef OrbitalBase::RealType           RealType;$/;"	t	struct:qmcplusplus::CoefficientHolder
RealValueMatrix_t	EinsplineSet.h	/^  typedef Matrix<double>                                        RealValueMatrix_t;$/;"	t	class:qmcplusplus::EinsplineSetExtended
RealValueVector_t	AtomicOrbital.h	/^  typedef Vector<double>                        RealValueVector_t;$/;"	t	class:qmcplusplus::AtomicOrbital
RealValueVector_t	EinsplineSet.h	/^  typedef Vector<double>                                        RealValueVector_t;$/;"	t	class:qmcplusplus::EinsplineSetExtended
Real_t	Spline3D/EinsplineSetTemp.hpp	/^    typedef double Real_t;$/;"	t	struct:qmcplusplus::bspline_engine_traits
RecipLattice	EinsplineSetBuilder.h	/^  Tensor<double,OHMMS_DIM> Lattice, RecipLattice, LatticeInv, SuperLattice, GGt;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
RecomputeNeedsDistanceTable	OrbitalBase.h	/^  bool RecomputeNeedsDistanceTable;$/;"	m	struct:qmcplusplus::OrbitalBase
RecomputeNeedsDistanceTable	TrialWaveFunction.h	/^  bool RecomputeNeedsDistanceTable;$/;"	m	class:qmcplusplus::TrialWaveFunction
RecvBuffer	DistributedSPOSet.h	/^  std::vector<BufferType*> RecvBuffer;$/;"	m	struct:qmcplusplus::DistributedSPOSet
ReferenceDeterminant	Fermion/MultiDiracDeterminantBase.h	/^  int ReferenceDeterminant;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
ReferenceDeterminant	Fermion/MultiDiracDeterminantWithBackflow.h	/^  int ReferenceDeterminant;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
RemoteNodes	DistributedSPOSet.h	/^  std::vector<int> RemoteNodes;$/;"	m	struct:qmcplusplus::DistributedSPOSet
ReportLevel	Experimental/LCOrbitalSetWithCorrection.h	/^  int ReportLevel;$/;"	m	class:qmcplusplus::LCOrbitalSetWithCorrection
ReportLevel	Fermion/BFsplineFunctor.h	/^  int ReportLevel;$/;"	m	struct:qmcplusplus::BFsplineFunctor
ReportLevel	Jastrow/BsplineFunctor.h	/^  int ReportLevel;$/;"	m	struct:qmcplusplus::BsplineFunctor
ReportLevel	LCOrbitalSet.h	/^  int ReportLevel;$/;"	m	class:qmcplusplus::LCOrbitalSet
ResetCount	Fermion/BFsplineFunctor.h	/^  int ResetCount;$/;"	m	struct:qmcplusplus::BFsplineFunctor
ResetCount	Jastrow/BsplineFunctor.h	/^  int ResetCount;$/;"	m	struct:qmcplusplus::BsplineFunctor
ResetCount	Jastrow/BsplineFunctor3D.h	/^  int ResetCount;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
ResetCount	Jastrow/PolynomialFunctor3D.h	/^  int ResetCount;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
Rhok	Fermion/Backflow_ee_kSpace.h	/^  Vector<ComplexType> Rhok;$/;"	m	class:qmcplusplus::Backflow_ee_kSpace
Rhok	Jastrow/LRTwoBodyJastrow.h	/^  Vector<ComplexType> Rhok;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
Rhok_i	Jastrow/LRTwoBodyJastrow.h	/^  Vector<RealType> Rhok_i;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
Rhok_r	Jastrow/LRTwoBodyJastrow.h	/^  Vector<RealType> Rhok_r;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
Rmax	Jastrow/CompositeFunctor.h	/^  real_type Rmax;$/;"	m	struct:qmcplusplus::CuspCorrectionFunctor
Rmax	Jastrow/CompositeFunctor.h	/^  real_type Rmax;$/;"	m	struct:qmcplusplus::DCuspCorrectionDEFunctor
Rmax	Jastrow/CompositeFunctor.h	/^  real_type Rmax;$/;"	m	struct:qmcplusplus::TruncatedPadeFunctor
Rmax	Jastrow/SplineFunctors.h	/^  real_type Rmax;$/;"	m	struct:qmcplusplus::CubicSplineBasisSet
Rmax	Jastrow/SplineFunctors.h	/^  real_type Rmax;$/;"	m	struct:qmcplusplus::CubicSplineSingle
RmaxFixed	Jastrow/CompositeFunctor.h	/^  real_type RmaxFixed;$/;"	m	struct:qmcplusplus::CuspCorrectionFunctor
RmaxFixed	Jastrow/CompositeFunctor.h	/^  real_type RmaxFixed;$/;"	m	struct:qmcplusplus::DCuspCorrectionDEFunctor
Rnl	AtomicOrbitals/HFAtomicSTOSet.h	/^  std::vector<RadialOrbital_t*> Rnl;$/;"	m	struct:qmcplusplus::ComboSTO
Rnl	AtomicOrbitals/HFAtomicSTOSetBuilder.h	/^  std::vector<RadialOrbital_t*> Rnl;$/;"	m	class:qmcplusplus::HFAtomicSTOSetBuilder
Rnl	SphericalBasisSet.h	/^  std::vector<ROT*> Rnl;$/;"	m	struct:qmcplusplus::SphericalBasisSet
Rnl	SphericalOrbitalSet.h	/^  std::vector<ROT*> Rnl;$/;"	m	struct:qmcplusplus::SphericalOrbitalSet
RnlID	AtomicOrbitals/HFAtomicSTOSetBuilder.h	/^  std::map<std::string,int> RnlID;$/;"	m	class:qmcplusplus::HFAtomicSTOSetBuilder
RnlID	Experimental/GTOMolecularOrbitals.h	/^  std::map<std::string,int>    RnlID;$/;"	m	class:qmcplusplus::GTOMolecularOrbitals
RnlID	Experimental/STOMolecularOrbitals.h	/^  std::map<std::string,int>    RnlID;$/;"	m	class:qmcplusplus::STOMolecularOrbitals
RnlID	MolecularOrbitals/AtomicBasisBuilder.h	/^  std::map<std::string,int>  RnlID;$/;"	m	struct:qmcplusplus::AtomicBasisBuilder
RnlID	SphericalBasisSet.h	/^  std::vector<QuantumNumberType> RnlID;$/;"	m	struct:qmcplusplus::SphericalBasisSet
RnlID	SphericalOrbitalSet.h	/^  std::vector<QuantumNumberType> RnlID;$/;"	m	struct:qmcplusplus::SphericalOrbitalSet
RnlPool	AtomicOrbitals/HFAtomicSTOSet.h	/^  std::vector<RadialOrbital_t*> RnlPool;$/;"	m	struct:qmcplusplus::HFAtomicSTOSet
Rnow	DistributedSPOSet.h	/^  std::vector<PosType> Rnow;$/;"	m	struct:qmcplusplus::DistributedSPOSet
RotateBands_ESHDF	EinsplineSetBuilderESHDF.fft.cpp	/^void EinsplineSetBuilder::RotateBands_ESHDF (int spin, EinsplineSetExtended<double>* orbitalSet)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
RotateBands_ESHDF	EinsplineSetBuilderESHDF.fft.cpp	/^void EinsplineSetBuilder::RotateBands_ESHDF (int spin, EinsplineSetExtended<std::complex<double > >* orbitalSet)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
RotateBands_ESHDF	Experimental/EinsplineSetBuilder.cpp	/^EinsplineSetBuilder::RotateBands_ESHDF$/;"	f	class:qmcplusplus::EinsplineSetBuilder
RotateBands_ESHDF	Experimental/EinsplineSetBuilderESHDF.cpp	/^EinsplineSetBuilder::RotateBands_ESHDF$/;"	f	class:qmcplusplus::EinsplineSetBuilder
RowStride	Fermion/DiracDeterminantCUDA.h	/^  int RowStride;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
Rr	Experimental/CuspCorr.h	/^  inline RealType Rr(RealType r)$/;"	f	class:qmcplusplus::CuspCorr
Rs	Fermion/BackflowBuilder.h	/^  RealType Rs;$/;"	m	class:qmcplusplus::BackflowBuilder
Rs	Jastrow/LRBreakupUtilities.h	/^  T Rs;$/;"	m	struct:qmcplusplus::DerivRPABreakup
Rs	Jastrow/LRBreakupUtilities.h	/^  T Rs;$/;"	m	struct:qmcplusplus::DerivYukawaBreakup
Rs	Jastrow/LRBreakupUtilities.h	/^  T Rs;$/;"	m	struct:qmcplusplus::EPRPABreakup
Rs	Jastrow/LRBreakupUtilities.h	/^  T Rs;$/;"	m	struct:qmcplusplus::RPABFeeBreakup
Rs	Jastrow/LRBreakupUtilities.h	/^  T Rs;$/;"	m	struct:qmcplusplus::RPABreakup
Rs	Jastrow/LRBreakupUtilities.h	/^  T Rs;$/;"	m	struct:qmcplusplus::YukawaBreakup
Rs	Jastrow/LRBreakupUtilities.h	/^  T Rs;$/;"	m	struct:qmcplusplus::derivEPRPABreakup
Rs	Jastrow/LRTwoBodyJastrow.h	/^  RealType Rs;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
Rs	Jastrow/RPAJastrow.h	/^  RealType Rs;$/;"	m	struct:qmcplusplus::RPAJastrow
Rs	Jastrow/kSpaceJastrow.h	/^  T Rs;$/;"	m	struct:qmcplusplus::RPA0
Rs	Jastrow/singleRPAJastrowBuilder.h	/^  RealType Rs;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
SHOSet	HarmonicOscillator/SHOSet.cpp	/^  SHOSet::SHOSet(RealType l, PosType c, const std::vector<SHOState*>& sho_states)$/;"	f	class:qmcplusplus::SHOSet
SHOSet	HarmonicOscillator/SHOSet.h	/^  struct SHOSet : public SPOSetBase$/;"	s	namespace:qmcplusplus
SHOSetBuilder	HarmonicOscillator/SHOSetBuilder.cpp	/^  SHOSetBuilder::SHOSetBuilder(ParticleSet& P) $/;"	f	class:qmcplusplus::SHOSetBuilder
SHOSetBuilder	HarmonicOscillator/SHOSetBuilder.h	/^  struct SHOSetBuilder : public BasisSetBuilder$/;"	s	namespace:qmcplusplus
SHOState	HarmonicOscillator/SHOSet.h	/^    SHOState()$/;"	f	struct:qmcplusplus::SHOState
SHOState	HarmonicOscillator/SHOSet.h	/^  struct SHOState : public SPOInfo$/;"	s	namespace:qmcplusplus
SPOContainer_t	Experimental/SingleParticleOrbitalSet.h	/^  typedef std::vector<OT*>             SPOContainer_t;$/;"	t	struct:qmcplusplus::SingleParticleOrbitalSet
SPOInfo	SPOInfo.cpp	/^  SPOInfo::SPOInfo()$/;"	f	class:qmcplusplus::SPOInfo
SPOInfo	SPOInfo.cpp	/^  SPOInfo::SPOInfo(int orb_index,RealType en)$/;"	f	class:qmcplusplus::SPOInfo
SPOInfo	SPOInfo.h	/^  struct SPOInfo$/;"	s	namespace:qmcplusplus
SPOMap	SPOSetScanner.h	/^    SPOMapType& SPOMap;$/;"	m	class:qmcplusplus::SPOSetScanner
SPOMapType	SPOSetScanner.h	/^    typedef std::map<std::string,SPOSetBasePtr>        SPOMapType;$/;"	t	class:qmcplusplus::SPOSetScanner
SPOPoolType	AFMSPOBuilder.h	/^  typedef std::map<std::string,SPOSetBase*>  SPOPoolType;$/;"	t	class:qmcplusplus::AFMSPOBuilder
SPOPoolType	OptimizableSPOBuilder.h	/^  typedef std::map<std::string,SPOSetBase*>  SPOPoolType;$/;"	t	class:qmcplusplus::OptimizableSPOBuilder
SPOPool_t	BasisSetBase.h	/^  typedef std::map<std::string,SPOSetBase*> SPOPool_t;$/;"	t	struct:qmcplusplus::BasisSetBuilder
SPOPool_t	SPOSetBase.h	/^  typedef std::map<std::string,SPOSetBase*> SPOPool_t;$/;"	t	class:qmcplusplus::SPOSetBase
SPOSet	Experimental/NumericalOrbitalSetBuilder.h	/^  std::map<std::string,SPOSetType*>       SPOSet;$/;"	m	class:qmcplusplus::NumericalOrbitalSetBuilder
SPOSet	Experimental/SplineSetBuilder.h	/^  std::map<std::string,SPOSetType*> SPOSet;$/;"	m	class:qmcplusplus::SplineSetBuilder
SPOSetBase	SPOSetBase.h	/^  SPOSetBase()$/;"	f	class:qmcplusplus::SPOSetBase
SPOSetBase	SPOSetBase.h	/^class SPOSetBase: public QMCTraits$/;"	c	namespace:qmcplusplus
SPOSetBasePtr	Experimental/CuspCorr.h	/^  typedef SPOSetBase*        SPOSetBasePtr;$/;"	t	class:qmcplusplus::CuspCorr
SPOSetBasePtr	Fermion/MultiSlaterDeterminant.h	/^  typedef SPOSetBase*              SPOSetBasePtr;$/;"	t	class:qmcplusplus::MultiSlaterDeterminant
SPOSetBasePtr	Fermion/MultiSlaterDeterminantFast.h	/^  typedef SPOSetBase*              SPOSetBasePtr;$/;"	t	class:qmcplusplus::MultiSlaterDeterminantFast
SPOSetBasePtr	SPOSetBase.h	/^typedef SPOSetBase*                   SPOSetBasePtr;$/;"	t	namespace:qmcplusplus
SPOSetBasePtr	SPOSetBase.h	/^typedef boost::shared_ptr<SPOSetBase> SPOSetBasePtr;$/;"	t	namespace:qmcplusplus
SPOSetComboNoCopy	SPOSetComboNoCopy.h	/^    SPOSetComboNoCopy() { }$/;"	f	struct:qmcplusplus::SPOSetComboNoCopy
SPOSetComboNoCopy	SPOSetComboNoCopy.h	/^  struct SPOSetComboNoCopy: public SPOSetBase$/;"	s	namespace:qmcplusplus
SPOSetID	Fermion/MultiSlaterDeterminant.h	/^  std::map<std::string,int> SPOSetID;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
SPOSetID	Fermion/MultiSlaterDeterminantFast.h	/^  std::map<std::string,int> SPOSetID;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
SPOSetInfo	SPOSetInfo.cpp	/^  SPOSetInfo::SPOSetInfo() $/;"	f	class:qmcplusplus::SPOSetInfo
SPOSetInfo	SPOSetInfo.h	/^  class SPOSetInfo$/;"	c	namespace:qmcplusplus
SPOSetInfoSimple	SPOSetInfo.h	/^    SPOSetInfoSimple() { }$/;"	f	struct:qmcplusplus::SPOSetInfoSimple
SPOSetInfoSimple	SPOSetInfo.h	/^  struct SPOSetInfoSimple$/;"	s	namespace:qmcplusplus
SPOSetInputInfo	SPOSetInputInfo.h	/^    SPOSetInputInfo()$/;"	f	struct:qmcplusplus::SPOSetInputInfo
SPOSetInputInfo	SPOSetInputInfo.h	/^    SPOSetInputInfo(xmlNodePtr cur) $/;"	f	struct:qmcplusplus::SPOSetInputInfo
SPOSetInputInfo	SPOSetInputInfo.h	/^  struct SPOSetInputInfo$/;"	s	namespace:qmcplusplus
SPOSetMap	EinsplineSetBuilder.h	/^  std::map<H5OrbSet,SPOSetBase*,H5OrbSet> SPOSetMap;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
SPOSetMap	Experimental/EinsplineSetBuilder.cpp	/^std::map<H5OrbSet,SPOSetBase*,H5OrbSet>  EinsplineSetBuilder::SPOSetMap;$/;"	m	class:qmcplusplus::EinsplineSetBuilder	file:
SPOSetProxy	Fermion/SPOSetProxy.cpp	/^SPOSetProxy::SPOSetProxy(SPOSetBasePtr const& spos, int first, int last)$/;"	f	class:qmcplusplus::SPOSetProxy
SPOSetProxy	Fermion/SPOSetProxy.h	/^struct SPOSetProxy: public SPOSetBase$/;"	s	namespace:qmcplusplus
SPOSetProxyForMSD	Fermion/SPOSetProxyForMSD.cpp	/^SPOSetProxyForMSD::SPOSetProxyForMSD(SPOSetBasePtr const& spos, int first, int last)$/;"	f	class:qmcplusplus::SPOSetProxyForMSD
SPOSetProxyForMSD	Fermion/SPOSetProxyForMSD.h	/^struct SPOSetProxyForMSD: public SPOSetBase$/;"	s	namespace:qmcplusplus
SPOSetProxyPtr	Fermion/MultiSlaterDeterminant.h	/^  typedef SPOSetProxyForMSD*             SPOSetProxyPtr;$/;"	t	class:qmcplusplus::MultiSlaterDeterminant
SPOSetProxyPtr	Fermion/MultiSlaterDeterminantFast.h	/^  typedef SPOSetProxyForMSD*             SPOSetProxyPtr;$/;"	t	class:qmcplusplus::MultiSlaterDeterminantFast
SPOSetScanner	SPOSetScanner.h	/^    SPOSetScanner(SPOMapType& spomap, ParticleSet& targetPtcl, PtclPoolType& psets): SPOMap(spomap), target(targetPtcl), PtclPool(psets), ions(0){};$/;"	f	class:qmcplusplus::SPOSetScanner
SPOSetScanner	SPOSetScanner.h	/^  class SPOSetScanner$/;"	c	namespace:qmcplusplus
SPOSetType	Experimental/NumericalOrbitalSetBuilder.h	/^  typedef MixedSPOSet<LOType> SPOSetType;$/;"	t	class:qmcplusplus::NumericalOrbitalSetBuilder
SPOSetType	Experimental/SplineSetBuilder.h	/^  typedef SingleParticleOrbitalSet<SPOType>             SPOSetType;$/;"	t	class:qmcplusplus::SplineSetBuilder
SPOSetType	PlaneWave/PWOrbitalBuilder.h	/^  typedef PWOrbitalSet             SPOSetType;$/;"	t	class:qmcplusplus::PWOrbitalBuilder
SPOSet_t	Experimental/QDwfBuilder.h	/^  typedef SingleParticleOrbitalSet<QDwf> SPOSet_t;$/;"	t	class:qmcplusplus::QDwfBuilder
SPOSet_t	Experimental/Spline3DBuilder.h	/^  typedef SingleParticleOrbitalSet<Spline3D> SPOSet_t;$/;"	t	class:qmcplusplus::Spline3DBuilder
SPOSet_t	Experimental/TriCubicSplineBuilder.h	/^  typedef SingleParticleOrbitalSet<TriCubicSpline> SPOSet_t;$/;"	t	class:qmcplusplus::TriCubicSplineBuilder
SPOType	Experimental/SplineSetBuilder.h	/^  typedef TriCubicSplineT<ValueType,RealType>           SPOType;$/;"	t	class:qmcplusplus::SplineSetBuilder
SPOVGLTimer	Fermion/DiracDeterminantBase.h	/^  NewTimer UpdateTimer, RatioTimer, InverseTimer, BufferTimer, SPOVTimer, SPOVGLTimer;$/;"	m	class:qmcplusplus::DiracDeterminantBase
SPOVTimer	Fermion/DiracDeterminantBase.h	/^  NewTimer UpdateTimer, RatioTimer, InverseTimer, BufferTimer, SPOVTimer, SPOVGLTimer;$/;"	m	class:qmcplusplus::DiracDeterminantBase
SPO_t	AtomicOrbitals/HFAtomicSTOSet.h	/^  typedef ComboSTO<RealType,PosType>        SPO_t;$/;"	t	struct:qmcplusplus::HFAtomicSTOSet
SPO_t	AtomicOrbitals/HFAtomicSTOSetBuilder.h	/^  typedef HFAtomicSTOSet::SPO_t           SPO_t;$/;"	t	class:qmcplusplus::HFAtomicSTOSetBuilder
SPOrbital_t	Experimental/SingleParticleOrbitalSet.h	/^  typedef OT                      SPOrbital_t;$/;"	t	struct:qmcplusplus::SingleParticleOrbitalSet
SRA	Jastrow/RPAJastrow.h	/^  ShortRangePartAdapter<RealType>* SRA;$/;"	m	struct:qmcplusplus::RPAJastrow
SRA	Jastrow/singleRPAJastrowBuilder.h	/^  ShortRangePartAdapter<RealType>* SRA;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
STOBuilder	MolecularOrbitals/STOBuilder.cpp	/^STOBuilder::STOBuilder(xmlNodePtr cur): Normalized(true), m_orbitals(0)$/;"	f	class:qmcplusplus::STOBuilder
STOBuilder	MolecularOrbitals/STOBuilder.h	/^class STOBuilder: public QMCTraits$/;"	c	namespace:qmcplusplus
STOMolecularOrbitals	Experimental/STOMolecularOrbitals.cpp	/^STOMolecularOrbitals::STOMolecularOrbitals(ParticleSet& els, TrialWaveFunction& psi,$/;"	f	class:qmcplusplus::STOMolecularOrbitals
STOMolecularOrbitals	Experimental/STOMolecularOrbitals.h	/^class STOMolecularOrbitals: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
SameBlocksForGroup	Jastrow/ThreeBodyBlockSparse.h	/^  bool SameBlocksForGroup;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
SameSpin	Jastrow/RPAJastrowFunctor.h	/^  bool SameSpin;$/;"	m	struct:qmcplusplus::RPAJastrowFunctor
Scale	Jastrow/PadeFunctors.h	/^  real_type Scale;$/;"	m	struct:qmcplusplus::PadeFunctor
ScaledPadeConstraints	Jastrow/Experimental/PadeConstraints.cpp	/^ScaledPadeConstraints::ScaledPadeConstraints(ParticleSet& p, TrialWaveFunction& psi, bool nospin):$/;"	f	class:qmcplusplus::ScaledPadeConstraints
ScaledPadeConstraints	Jastrow/Experimental/PadeConstraints.h	/^struct ScaledPadeConstraints: public OrbitalConstraintsBase$/;"	s	namespace:qmcplusplus
ScaledPadeFunctor	Jastrow/PadeFunctors.h	/^  explicit ScaledPadeFunctor(real_type a=1.0, real_type b=1.0, real_type c=1.0)$/;"	f	struct:qmcplusplus::ScaledPadeFunctor
ScaledPadeFunctor	Jastrow/PadeFunctors.h	/^struct ScaledPadeFunctor:public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
SendBuffer	DistributedSPOSet.h	/^  std::vector<BufferType*> SendBuffer;$/;"	m	struct:qmcplusplus::DistributedSPOSet
ShortRangePartAdapter	Jastrow/LRBreakupUtilities.h	/^  explicit ShortRangePartAdapter(HandlerType* inhandler): Uconst(0), myHandler(inhandler)$/;"	f	struct:qmcplusplus::ShortRangePartAdapter
ShortRangePartAdapter	Jastrow/LRBreakupUtilities.h	/^struct ShortRangePartAdapter : OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
ShortRangeRPA	Jastrow/RPAJastrow.h	/^  OrbitalBase* ShortRangeRPA;$/;"	m	struct:qmcplusplus::RPAJastrow
Siblings	Jastrow/CubicBsplineGroup.h	/^  std::vector<ThisType*> Siblings;$/;"	m	class:qmcplusplus::CubicBsplineGroup
SinV	Experimental/EinsplineAdoptorPacked.h	/^  std::vector<real_type>   SinV;$/;"	m	struct:qmcplusplus::SplineC2RAdoptorPacked
SinV	SplineC2XAdoptor.h	/^  std::vector<ST>   SinV;$/;"	m	struct:qmcplusplus::SplineC2RPackedAdoptor
SingleParticleOrbitalSet	Experimental/SingleParticleOrbitalSet.h	/^  SingleParticleOrbitalSet(int norbs=0)$/;"	f	struct:qmcplusplus::SingleParticleOrbitalSet
SingleParticleOrbitalSet	Experimental/SingleParticleOrbitalSet.h	/^struct SingleParticleOrbitalSet: public SPOSetBase$/;"	s	namespace:qmcplusplus
SingleSplineType	EinsplineAdoptor.h	/^  typedef UBspline_3d_c       SingleSplineType;$/;"	t	struct:qmcplusplus::einspline_traits
SingleSplineType	EinsplineAdoptor.h	/^  typedef UBspline_3d_d       SingleSplineType;$/;"	t	struct:qmcplusplus::einspline_traits
SingleSplineType	EinsplineAdoptor.h	/^  typedef UBspline_3d_d      SingleSplineType;$/;"	t	struct:qmcplusplus::SplineAdoptorBase
SingleSplineType	EinsplineAdoptor.h	/^  typedef UBspline_3d_s       SingleSplineType;$/;"	t	struct:qmcplusplus::einspline_traits
SingleSplineType	EinsplineAdoptor.h	/^  typedef UBspline_3d_z       SingleSplineType;$/;"	t	struct:qmcplusplus::einspline_traits
SingleSplineType	MultiGridBsplineSet.h	/^    typedef typename SplineAdoptor::SingleSplineType SingleSplineType;$/;"	t	struct:qmcplusplus::MultiGridBsplineSet
SingleSplineType	MultiGridBsplineSetReader.h	/^  typedef typename SA::SingleSplineType SingleSplineType;$/;"	t	struct:qmcplusplus::MultiGridBsplineSetReader
SingleSplineType	SplineC2XAdoptor.h	/^  typedef typename SplineAdoptorBase<ST,D>::SingleSplineType SingleSplineType;$/;"	t	struct:qmcplusplus::SplineC2CPackedAdoptor
SingleSplineType	SplineC2XAdoptor.h	/^  typedef typename SplineAdoptorBase<ST,D>::SingleSplineType SingleSplineType;$/;"	t	struct:qmcplusplus::SplineC2RPackedAdoptor
SingleSplineType	SplineMixedAdoptor.h	/^  typedef typename SplineAdoptorBase<ST,D>::SingleSplineType SingleSplineType;$/;"	t	struct:qmcplusplus::SplineMixedAdoptor
SingleSplineType	SplineMixedAdoptor.h	/^  typedef typename SplineAdoptorBase<ST,D>::SingleSplineType SingleSplineType;$/;"	t	struct:qmcplusplus::SplineOpenAdoptor
SingleSplineType	SplineR2RAdoptor.h	/^  typedef typename SplineAdoptorBase<ST,D>::SingleSplineType SingleSplineType;$/;"	t	struct:qmcplusplus::SplineR2RAdoptor
SizeOfBasisPerCenter	Jastrow/JastrowBasisBuilder.h	/^  std::vector<int> SizeOfBasisPerCenter;$/;"	m	class:qmcplusplus::JastrowBasisBuilder
SlaterDet	Fermion/SlaterDet.cpp	/^SlaterDet::SlaterDet(ParticleSet& targetPtcl)$/;"	f	class:qmcplusplus::SlaterDet
SlaterDet	Fermion/SlaterDet.h	/^  SlaterDet() {}$/;"	f	class:qmcplusplus::SlaterDet
SlaterDet	Fermion/SlaterDet.h	/^class SlaterDet: public OrbitalBase, public FermionBase$/;"	c	namespace:qmcplusplus
SlaterDetBuilder	Fermion/SlaterDetBuilder.cpp	/^SlaterDetBuilder::SlaterDetBuilder(ParticleSet& els, TrialWaveFunction& psi,$/;"	f	class:qmcplusplus::SlaterDetBuilder
SlaterDetBuilder	Fermion/SlaterDetBuilder.h	/^class SlaterDetBuilder: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
SlaterDetOpt	Fermion/SlaterDetOpt.cpp	/^SlaterDetOpt::SlaterDetOpt(ParticleSet & targetPtcl, SPOSetBase * spo_ptr, const int up_or_down)$/;"	f	class:qmcplusplus::SlaterDetOpt
SlaterDetOpt	Fermion/SlaterDetOpt.h	/^class SlaterDetOpt: public OrbitalBase, public FermionBase {$/;"	c	namespace:qmcplusplus
SlaterDetSet	Experimental/NumericalOrbitalSetBuilder.h	/^  std::vector<SlaterDeterminant_t*>  SlaterDetSet;$/;"	m	class:qmcplusplus::NumericalOrbitalSetBuilder
SlaterDetWithBackflow	Fermion/SlaterDetWithBackflow.cpp	/^SlaterDetWithBackflow::SlaterDetWithBackflow(ParticleSet& targetPtcl, BackflowTransformation *BF):SlaterDet(targetPtcl),BFTrans(BF)$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
SlaterDetWithBackflow	Fermion/SlaterDetWithBackflow.h	/^class SlaterDetWithBackflow: public SlaterDet$/;"	c	namespace:qmcplusplus
SlaterDeterminant	Experimental/SlaterDeterminant.h	/^  SlaterDeterminant():BasisSet(0)$/;"	f	class:qmcplusplus::SlaterDeterminant
SlaterDeterminant	Experimental/SlaterDeterminant.h	/^class SlaterDeterminant: public OrbitalBase$/;"	c	namespace:qmcplusplus
SlaterDeterminant_t	Experimental/NumericalOrbitalSetBuilder.h	/^  typedef SlaterDeterminant<SPOSetType> SlaterDeterminant_t;$/;"	t	class:qmcplusplus::NumericalOrbitalSetBuilder
SlaterDeterminant_t	Fermion/SlaterDetBuilder.h	/^  typedef SlaterDet SlaterDeterminant_t;$/;"	t	class:qmcplusplus::SlaterDetBuilder
Small_r_APW_Fits	MuffinTin.h	/^  std::vector<ComplexExpFitClass<4> > Small_r_APW_Fits;$/;"	m	class:qmcplusplus::MuffinTinClass
Small_r_Core_Fits	MuffinTin.h	/^  std::vector<ExpFitClass<4> > Small_r_Core_Fits;$/;"	m	class:qmcplusplus::MuffinTinClass
SourceIndex	DiffOrbitalBase.h	/^  enum {SourceIndex  = OrbitalBase::SourceIndex,$/;"	e	enum:qmcplusplus::DiffOrbitalBase::__anon4
SourceIndex	Fermion/BackflowFunctionBase.h	/^  enum {SourceIndex  = DistanceTableData::SourceIndex,$/;"	e	enum:qmcplusplus::BackflowFunctionBase::__anon11
SourceIndex	OrbitalBase.h	/^  enum {SourceIndex  = DistanceTableData::SourceIndex,$/;"	e	enum:qmcplusplus::OrbitalBase::__anon17
SourcePtcl	EinsplineSetBuilder.h	/^  ParticleSet *SourcePtcl;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
SparseLocalizedBasisSet	SparseLocalizedBasisSet.h	/^  SparseLocalizedBasisSet(const ParticleSet& ions, ParticleSet& els):$/;"	f	struct:qmcplusplus::SparseLocalizedBasisSet
SparseLocalizedBasisSet	SparseLocalizedBasisSet.h	/^struct SparseLocalizedBasisSet: public BasisSetBase<typename COT::value_type>$/;"	s	namespace:qmcplusplus
SparseToCSR	Fermion/DiracDeterminantIterative.cpp	/^void DiracDeterminantIterative::SparseToCSR(std::vector<int> &Arp, std::vector<int> &Ari,std::vector<double> &Arx)$/;"	f	class:qmcplusplus::DiracDeterminantIterative
SphericalBasisSet	SphericalBasisSet.h	/^  explicit SphericalBasisSet(int lmax, bool addsignforM=false, bool useXYZ=false):Ylm(lmax,addsignforM),XYZ(lmax),useCartesian(useXYZ) {}$/;"	f	struct:qmcplusplus::SphericalBasisSet
SphericalBasisSet	SphericalBasisSet.h	/^struct SphericalBasisSet$/;"	s	namespace:qmcplusplus
SphericalHarmonics_t	AtomicOrbitals/HFAtomicSTOSet.h	/^  typedef SphericalTensor<RealType,PosType> SphericalHarmonics_t;$/;"	t	struct:qmcplusplus::HFAtomicSTOSet
SphericalHarmonics_t	AtomicOrbitals/HFAtomicSTOSet.h	/^  typedef SphericalTensor<T,POS> SphericalHarmonics_t;$/;"	t	struct:qmcplusplus::ComboSTO
SphericalHarmonics_t	SphericalBasisSet.h	/^  typedef SphericalTensor<RealType,PosType>          SphericalHarmonics_t;$/;"	t	struct:qmcplusplus::SphericalBasisSet
SphericalHarmonics_t	SphericalOrbitalSet.h	/^  typedef SphericalTensor<RealType,PosType>           SphericalHarmonics_t;$/;"	t	struct:qmcplusplus::SphericalOrbitalSet
SphericalOrbitalSet	SphericalOrbitalSet.h	/^  explicit SphericalOrbitalSet(int lmax, bool addsignforM=false): Ylm(lmax,addsignforM) { }$/;"	f	struct:qmcplusplus::SphericalOrbitalSet
SphericalOrbitalSet	SphericalOrbitalSet.h	/^struct SphericalOrbitalSet$/;"	s	namespace:qmcplusplus
Spin	BandInfo.h	/^  int Spin;$/;"	m	struct:qmcplusplus::BandInfo
Spin	Fermion/Backflow_eI_spin.h	/^  bool Spin;$/;"	m	class:qmcplusplus::Backflow_eI_spin
Spin	Jastrow/DiffOneBodySpinJastrowOrbital.h	/^  bool Spin;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
Spin	Jastrow/OneBodySpinJastrowOrbital.h	/^  bool Spin;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
SpinSet	EinsplineSetBuilder.h	/^  int SpinSet;$/;"	m	struct:qmcplusplus::H5OrbSet
Spline	legacy/EinsplineWrapper.h	/^  NUBspline_2d_d *Spline;$/;"	m	class:qmcplusplus::NUBsplineClass_2d_d
Spline	legacy/EinsplineWrapper.h	/^  NUBspline_2d_z *Spline;$/;"	m	class:qmcplusplus::NUBsplineClass_2d_z
Spline	legacy/EinsplineWrapper.h	/^  UBspline_2d_d *Spline;$/;"	m	class:qmcplusplus::UBsplineClass_2d_d
Spline	legacy/EinsplineWrapper.h	/^  UBspline_2d_z *Spline;$/;"	m	class:qmcplusplus::UBsplineClass_2d_z
Spline3DBuilder	Experimental/Spline3DBuilder.h	/^  Spline3DBuilder(TrialWaveFunction& a): OrbitalBuilderBase(a),$/;"	f	class:qmcplusplus::Spline3DBuilder
Spline3DBuilder	Experimental/Spline3DBuilder.h	/^class Spline3DBuilder: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
SplineAdoptorBase	EinsplineAdoptor.h	/^  SplineAdoptorBase()$/;"	f	struct:qmcplusplus::SplineAdoptorBase
SplineAdoptorBase	EinsplineAdoptor.h	/^struct SplineAdoptorBase$/;"	s	namespace:qmcplusplus
SplineAdoptorReader	SplineAdoptorReaderP.h	/^  SplineAdoptorReader(EinsplineSetBuilder* e)$/;"	f	struct:qmcplusplus::SplineAdoptorReader
SplineAdoptorReader	SplineAdoptorReaderP.h	/^struct SplineAdoptorReader: public BsplineReaderBase$/;"	s	namespace:qmcplusplus
SplineAdoptorReader	legacy/SplineAdoptorReader.h	/^  SplineAdoptorReader(EinsplineSetBuilder* e): BsplineReaderBase(e)$/;"	f	struct:qmcplusplus::SplineAdoptorReader
SplineAdoptorReader	legacy/SplineAdoptorReader.h	/^struct SplineAdoptorReader: public BsplineReaderBase$/;"	s	namespace:qmcplusplus
SplineBasisSet	Spline3D/SplineBasisSet.h	/^  SplineBasisSet() {}$/;"	f	class:qmcplusplus::SplineBasisSet
SplineBasisSet	Spline3D/SplineBasisSet.h	/^class SplineBasisSet:$/;"	c	namespace:qmcplusplus
SplineC2CAdoptorPacked	Experimental/EinsplineAdoptorPacked.h	/^struct SplineC2CAdoptorPacked$/;"	s	namespace:qmcplusplus
SplineC2CPackedAdoptor	SplineC2XAdoptor.h	/^  SplineC2CPackedAdoptor():MultiSpline(0)$/;"	f	struct:qmcplusplus::SplineC2CPackedAdoptor
SplineC2CPackedAdoptor	SplineC2XAdoptor.h	/^struct SplineC2CPackedAdoptor: public SplineAdoptorBase<ST,D>$/;"	s	namespace:qmcplusplus
SplineC2RAdoptorPacked	Experimental/EinsplineAdoptorPacked.h	/^  SplineC2RAdoptorPacked():MultiSpline(0) { }$/;"	f	struct:qmcplusplus::SplineC2RAdoptorPacked
SplineC2RAdoptorPacked	Experimental/EinsplineAdoptorPacked.h	/^struct SplineC2RAdoptorPacked$/;"	s	namespace:qmcplusplus
SplineC2RPackedAdoptor	SplineC2XAdoptor.h	/^  SplineC2RPackedAdoptor():MultiSpline(0)$/;"	f	struct:qmcplusplus::SplineC2RPackedAdoptor
SplineC2RPackedAdoptor	SplineC2XAdoptor.h	/^struct SplineC2RPackedAdoptor: public SplineAdoptorBase<ST,D>$/;"	s	namespace:qmcplusplus
SplineCoefs	EinsplineSet.h	/^  T* SplineCoefs;$/;"	m	struct:qmcplusplus::AtomicSplineJob
SplineCoefs	Fermion/BFsplineFunctor.h	/^  std::vector<real_type> SplineCoefs;$/;"	m	struct:qmcplusplus::BFsplineFunctor
SplineCoefs	Jastrow/BsplineFunctor.h	/^  std::vector<real_type> SplineCoefs;$/;"	m	struct:qmcplusplus::BsplineFunctor
SplineCoefs	Jastrow/BsplineFunctor3D.h	/^  Array<real_type,3> SplineCoefs;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
SplineDelta	EinsplineSet.h	/^  T dist, SplineDelta;$/;"	m	struct:qmcplusplus::AtomicPolyJob
SplineDelta	EinsplineSet.h	/^  T dist, SplineDelta;$/;"	m	struct:qmcplusplus::AtomicSplineJob
SplineDerivs	Fermion/BFsplineFunctor.h	/^  std::vector<TinyVector<real_type,3> > SplineDerivs;$/;"	m	struct:qmcplusplus::BFsplineFunctor
SplineDerivs	Jastrow/BsplineFunctor.h	/^  std::vector<TinyVector<real_type,3> > SplineDerivs;$/;"	m	struct:qmcplusplus::BsplineFunctor
SplineDerivs	Jastrow/BsplineFunctor3D.h	/^  std::vector<TinyVector<real_type,3> > SplineDerivs;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
SplineDerivsGPU	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> SplineDerivsGPU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
SplineDerivsGPU	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> SplineDerivsGPU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
SplineDerivsHost	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> SplineDerivsHost;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
SplineDerivsHost	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> SplineDerivsHost;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
SplineEngineType	Jastrow/CBSOBuilder.h	/^  typedef CubicBspline<RealType,LINEAR_1DGRID,FIRSTDERIV_CONSTRAINTS> SplineEngineType;$/;"	t	class:qmcplusplus::CBSOBuilder
SplineEngineType	Jastrow/Experimental/AnyConstraints.h	/^  typedef CubicBspline<RealType,LINEAR_1DGRID,FIRSTDERIV_CONSTRAINTS> SplineEngineType;$/;"	t	struct:qmcplusplus::AnyConstraints
SplineEngineType	Jastrow/WMJastrowBuilder.h	/^  typedef CubicBspline<RealType,LINEAR_1DGRID,FIRSTDERIV_CONSTRAINTS> SplineEngineType;$/;"	t	class:qmcplusplus::WMJastrowBuilder
SplineEngineType	Jastrow/singleRPAJastrowBuilder.h	/^  typedef CubicBspline<RealType,LINEAR_1DGRID,FIRSTDERIV_CONSTRAINTS> SplineEngineType;$/;"	t	struct:qmcplusplus::singleRPAJastrowBuilder
SplineGridHandler	Spline3D/SplineGridHandler.h	/^  SplineGridHandler(): Orthorhombic(true),$/;"	f	struct:qmcplusplus::SplineGridHandler
SplineGridHandler	Spline3D/SplineGridHandler.h	/^struct SplineGridHandler$/;"	s	namespace:qmcplusplus
SplineMixedAdoptor	Experimental/EinsplineMixedAdoptor.h	/^  SplineMixedAdoptor(): MultiSpline(0), smallBox(0)$/;"	f	struct:qmcplusplus::SplineMixedAdoptor
SplineMixedAdoptor	Experimental/EinsplineMixedAdoptor.h	/^struct SplineMixedAdoptor$/;"	s	namespace:qmcplusplus
SplineMixedAdoptor	SplineMixedAdoptor.h	/^  SplineMixedAdoptor(): MultiSpline(0), smallBox(0)$/;"	f	struct:qmcplusplus::SplineMixedAdoptor
SplineMixedAdoptor	SplineMixedAdoptor.h	/^struct SplineMixedAdoptor: public SplineR2RAdoptor<ST,TT,D>$/;"	s	namespace:qmcplusplus
SplineMixedAdoptorReader	SplineMixedAdoptorReaderP.h	/^  SplineMixedAdoptorReader(EinsplineSetBuilder* e)$/;"	f	struct:qmcplusplus::SplineMixedAdoptorReader
SplineMixedAdoptorReader	SplineMixedAdoptorReaderP.h	/^struct SplineMixedAdoptorReader: public BsplineReaderBase$/;"	s	namespace:qmcplusplus
SplineMixedAdoptorReader	legacy/SplineMixedAdoptorReader.h	/^  SplineMixedAdoptorReader(EinsplineSetBuilder* e): BsplineReaderBase(e)$/;"	f	struct:qmcplusplus::SplineMixedAdoptorReader
SplineMixedAdoptorReader	legacy/SplineMixedAdoptorReader.h	/^struct SplineMixedAdoptorReader: public BsplineReaderBase$/;"	s	namespace:qmcplusplus
SplineOpenAdoptor	Experimental/EinsplineMixedAdoptor.h	/^  SplineOpenAdoptor(): MultiSpline(0), smallBox(0)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
SplineOpenAdoptor	Experimental/EinsplineMixedAdoptor.h	/^struct SplineOpenAdoptor$/;"	s	namespace:qmcplusplus
SplineOpenAdoptor	Experimental/SplineOpenAdoptor.h	/^  SplineOpenAdoptor(): MultiSpline(0), smallBox(0)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
SplineOpenAdoptor	Experimental/SplineOpenAdoptor.h	/^struct SplineOpenAdoptor$/;"	s	namespace:qmcplusplus
SplineOpenAdoptor	SplineMixedAdoptor.h	/^  SplineOpenAdoptor(): MultiSpline(0), smallBox(0)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
SplineOpenAdoptor	SplineMixedAdoptor.h	/^struct SplineOpenAdoptor: public SplineAdoptorBase<ST,D>$/;"	s	namespace:qmcplusplus
SplineOpenAdoptorReader	Experimental/SplineOpenAdoptor.h	/^  SplineOpenAdoptorReader(EinsplineSetBuilder* e): BsplineReaderBase(e)$/;"	f	struct:qmcplusplus::SplineOpenAdoptorReader
SplineOpenAdoptorReader	Experimental/SplineOpenAdoptor.h	/^struct SplineOpenAdoptorReader: BsplineReaderBase$/;"	s	namespace:qmcplusplus
SplinePoints	AtomicOrbital.h	/^  int SplinePoints;$/;"	m	class:qmcplusplus::AtomicOrbital
SplineR2RAdoptor	SplineR2RAdoptor.h	/^  SplineR2RAdoptor(): MultiSpline(0)$/;"	f	struct:qmcplusplus::SplineR2RAdoptor
SplineR2RAdoptor	SplineR2RAdoptor.h	/^struct SplineR2RAdoptor: public SplineAdoptorBase<ST,D>$/;"	s	namespace:qmcplusplus
SplineRadius	AtomicOrbital.h	/^  RealType CutoffRadius, SplineRadius, PolyRadius;$/;"	m	class:qmcplusplus::AtomicOrbital
SplineRowList_d	Fermion/DiracDeterminantCUDA.h	/^  gpu::device_vector<CudaValueType*> SplineRowList_d;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
SplineRowList_host	Fermion/DiracDeterminantCUDA.h	/^  gpu::host_vector<CudaValueType*> SplineRowList_host;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
SplineSetBuilder	Experimental/SplineSetBuilder.cpp	/^SplineSetBuilder::SplineSetBuilder(ParticleSet& p, PtclPoolType& psets):$/;"	f	class:qmcplusplus::SplineSetBuilder
SplineSetBuilder	Experimental/SplineSetBuilder.h	/^class SplineSetBuilder: public BasisSetBuilder$/;"	c	namespace:qmcplusplus
SplineTimer	AtomicOrbital.h	/^  NewTimer YlmTimer, SplineTimer, SumTimer;$/;"	m	class:qmcplusplus::AtomicOrbital
SplineTraits	AtomicOrbitalCuda.h	/^template<> struct SplineTraits<double,2>$/;"	s
SplineTraits	AtomicOrbitalCuda.h	/^template<> struct SplineTraits<double,3>$/;"	s
SplineTraits	AtomicOrbitalCuda.h	/^template<> struct SplineTraits<float,2>$/;"	s
SplineTraits	AtomicOrbitalCuda.h	/^template<> struct SplineTraits<float,3>$/;"	s
SplineTraits	AtomicOrbitalCuda.h	/^template<> struct SplineTraits<std::complex<double>,2>$/;"	s
SplineTraits	AtomicOrbitalCuda.h	/^template<> struct SplineTraits<std::complex<double>,3>$/;"	s
SplineTraits	AtomicOrbitalCuda.h	/^template<> struct SplineTraits<std::complex<float>,2>$/;"	s
SplineTraits	AtomicOrbitalCuda.h	/^template<> struct SplineTraits<std::complex<float>,3>$/;"	s
SplineTraits	AtomicOrbitalCuda.h	/^template<typename StorageType, int dim> struct SplineTraits {}; $/;"	s
SplineType	AtomicOrbital.h	/^  typedef multi_UBspline_1d_d SplineType;$/;"	t	struct:qmcplusplus::AtomicOrbitalTraits
SplineType	AtomicOrbital.h	/^  typedef multi_UBspline_1d_z SplineType;$/;"	t	struct:qmcplusplus::AtomicOrbitalTraits
SplineType	AtomicOrbital.h	/^  typedef typename AtomicOrbitalTraits<StorageType>::SplineType SplineType;$/;"	t	class:qmcplusplus::AtomicOrbital
SplineType	EinsplineAdoptor.h	/^  typedef multi_UBspline_3d_c SplineType;$/;"	t	struct:qmcplusplus::einspline_traits
SplineType	EinsplineAdoptor.h	/^  typedef multi_UBspline_3d_d SplineType;$/;"	t	struct:qmcplusplus::einspline_traits
SplineType	EinsplineAdoptor.h	/^  typedef multi_UBspline_3d_s SplineType;$/;"	t	struct:qmcplusplus::einspline_traits
SplineType	EinsplineAdoptor.h	/^  typedef multi_UBspline_3d_z SplineType;$/;"	t	struct:qmcplusplus::einspline_traits
SplineType	EinsplineAdoptor.h	/^  typedef typename SplineAdoptor::SplineType SplineType;$/;"	t	struct:qmcplusplus::BsplineSet
SplineType	EinsplineSet.h	/^  typedef multi_UBspline_2d_c SplineType;$/;"	t	struct:qmcplusplus::MultiOrbitalTraits
SplineType	EinsplineSet.h	/^  typedef multi_UBspline_2d_d SplineType;$/;"	t	struct:qmcplusplus::MultiOrbitalTraits
SplineType	EinsplineSet.h	/^  typedef multi_UBspline_2d_s SplineType;$/;"	t	struct:qmcplusplus::MultiOrbitalTraits
SplineType	EinsplineSet.h	/^  typedef multi_UBspline_2d_z SplineType;$/;"	t	struct:qmcplusplus::MultiOrbitalTraits
SplineType	EinsplineSet.h	/^  typedef multi_UBspline_3d_c SplineType;$/;"	t	struct:qmcplusplus::MultiOrbitalTraits
SplineType	EinsplineSet.h	/^  typedef multi_UBspline_3d_d SplineType;$/;"	t	struct:qmcplusplus::MultiOrbitalTraits
SplineType	EinsplineSet.h	/^  typedef multi_UBspline_3d_s SplineType;$/;"	t	struct:qmcplusplus::MultiOrbitalTraits
SplineType	EinsplineSet.h	/^  typedef multi_UBspline_3d_z SplineType;$/;"	t	struct:qmcplusplus::MultiOrbitalTraits
SplineType	EinsplineSet.h	/^  typedef typename MultiOrbitalTraits<StorageType,OHMMS_DIM>::SplineType SplineType;$/;"	t	class:qmcplusplus::EinsplineSetExtended
SplineType	Experimental/EinsplineAdoptorPacked.h	/^  typedef typename einspline_traits<real_type,D>::SplineType           SplineType;$/;"	t	struct:qmcplusplus::SplineC2RAdoptorPacked
SplineType	Experimental/EinsplineAdoptorPacked.h	/^  typedef typename einspline_traits<real_type,D>::SplineType      SplineType;$/;"	t	struct:qmcplusplus::SplineC2CAdoptorPacked
SplineType	Experimental/EinsplineMixedAdoptor.h	/^  typedef typename einspline_traits<ST,D>::SplineType SplineType;$/;"	t	struct:qmcplusplus::SplineMixedAdoptor
SplineType	Experimental/EinsplineMixedAdoptor.h	/^  typedef typename einspline_traits<ST,D>::SplineType SplineType;$/;"	t	struct:qmcplusplus::SplineOpenAdoptor
SplineType	Experimental/SplineOpenAdoptor.h	/^  typedef typename einspline_traits<ST,D>::SplineType SplineType;$/;"	t	struct:qmcplusplus::SplineOpenAdoptor
SplineType	SplineAdoptorReaderP.h	/^  typedef typename adoptor_type::SplineType SplineType;$/;"	t	struct:qmcplusplus::SplineAdoptorReader
SplineType	SplineC2XAdoptor.h	/^  typedef typename einspline_traits<ST,D>::SplineType  SplineType;$/;"	t	struct:qmcplusplus::SplineC2CPackedAdoptor
SplineType	SplineC2XAdoptor.h	/^  typedef typename einspline_traits<ST,D>::SplineType  SplineType;$/;"	t	struct:qmcplusplus::SplineC2RPackedAdoptor
SplineType	SplineMixedAdoptor.h	/^  typedef typename einspline_traits<ST,D>::SplineType SplineType;$/;"	t	struct:qmcplusplus::SplineMixedAdoptor
SplineType	SplineMixedAdoptor.h	/^  typedef typename einspline_traits<ST,D>::SplineType SplineType;$/;"	t	struct:qmcplusplus::SplineOpenAdoptor
SplineType	SplineMixedAdoptorReaderP.h	/^  typedef typename adoptor_type::SplineType SplineType;$/;"	t	struct:qmcplusplus::SplineMixedAdoptorReader
SplineType	SplineR2RAdoptor.h	/^  typedef typename einspline_traits<ST,D>::SplineType SplineType;$/;"	t	struct:qmcplusplus::SplineR2RAdoptor
SplineType	legacy/SplineAdoptorReader.h	/^  typedef typename adoptor_type::SplineType SplineType;$/;"	t	struct:qmcplusplus::SplineAdoptorReader
SplineType	legacy/SplineMixedAdoptorReader.h	/^  typedef typename adoptor_type::SplineType SplineType;$/;"	t	struct:qmcplusplus::SplineMixedAdoptorReader
Spline_t	Spline3D/EinsplineSetTemp.hpp	/^      typedef typename bspline_engine_traits<EngT>::Spline_t Spline_t;$/;"	t	struct:qmcplusplus::bspline_engine
Spline_t	Spline3D/EinsplineSetTemp.hpp	/^    typedef multi_UBspline_3d_d Spline_t;$/;"	t	struct:qmcplusplus::bspline_engine_traits
Spline_t	Spline3D/EinsplineSetTemp.hpp	/^    typedef multi_UBspline_3d_z Spline_t;$/;"	t	struct:qmcplusplus::bspline_engine_traits
Spline_t	Spline3D/EinsplineSetTemp.hpp	/^    typedef typename bspline_engine_traits<EngT>::Spline_t Spline_t;$/;"	t	struct:qmcplusplus::bspline_engine
SqrtRs	Jastrow/LRBreakupUtilities.h	/^  T SqrtRs;$/;"	m	struct:qmcplusplus::DerivYukawaBreakup
SqrtRs	Jastrow/LRBreakupUtilities.h	/^  T SqrtRs;$/;"	m	struct:qmcplusplus::YukawaBreakup
StorageGradHessVector	EinsplineSet.h	/^  StorageGradHessVector_t  StorageGradHessVector;$/;"	m	class:qmcplusplus::EinsplineSetExtended
StorageGradHessVector_t	EinsplineSet.h	/^  typedef typename OrbitalSetTraits<StorageType>::GradHessVector_t  StorageGradHessVector_t;$/;"	t	class:qmcplusplus::EinsplineSetExtended
StorageGradHessVector_t	Experimental/EinsplineAdoptorPacked.h	/^  typedef typename OrbitalSetTraits<real_type>::GradHessVector_t       StorageGradHessVector_t;$/;"	t	struct:qmcplusplus::SplineC2RAdoptorPacked
StorageGradHessVector_t	Experimental/EinsplineAdoptorPacked.h	/^  typedef typename OrbitalSetTraits<real_type>::GradHessVector_t  StorageGradHessVector_t;$/;"	t	struct:qmcplusplus::SplineC2CAdoptorPacked
StorageGradHessVector_t	Experimental/EinsplineMixedAdoptor.h	/^  typedef typename OrbitalSetTraits<ST>::GradHessVector_t   StorageGradHessVector_t;$/;"	t	struct:qmcplusplus::SplineMixedAdoptor
StorageGradHessVector_t	Experimental/EinsplineMixedAdoptor.h	/^  typedef typename OrbitalSetTraits<ST>::GradHessVector_t   StorageGradHessVector_t;$/;"	t	struct:qmcplusplus::SplineOpenAdoptor
StorageGradHessVector_t	Experimental/SplineOpenAdoptor.h	/^  typedef typename OrbitalSetTraits<ST>::GradHessVector_t   StorageGradHessVector_t;$/;"	t	struct:qmcplusplus::SplineOpenAdoptor
StorageGradVector	EinsplineSet.h	/^  StorageGradVector_t  StorageGradVector;$/;"	m	class:qmcplusplus::EinsplineSetExtended
StorageGradVector_t	EinsplineSet.h	/^  typedef typename OrbitalSetTraits<StorageType>::GradVector_t  StorageGradVector_t;$/;"	t	class:qmcplusplus::EinsplineSetExtended
StorageGradVector_t	Experimental/EinsplineAdoptorPacked.h	/^  typedef typename OrbitalSetTraits<real_type>::GradVector_t           StorageGradVector_t;$/;"	t	struct:qmcplusplus::SplineC2RAdoptorPacked
StorageGradVector_t	Experimental/EinsplineAdoptorPacked.h	/^  typedef typename OrbitalSetTraits<real_type>::GradVector_t      StorageGradVector_t;$/;"	t	struct:qmcplusplus::SplineC2CAdoptorPacked
StorageGradVector_t	Experimental/EinsplineMixedAdoptor.h	/^  typedef typename OrbitalSetTraits<ST>::GradVector_t       StorageGradVector_t;$/;"	t	struct:qmcplusplus::SplineMixedAdoptor
StorageGradVector_t	Experimental/EinsplineMixedAdoptor.h	/^  typedef typename OrbitalSetTraits<ST>::GradVector_t       StorageGradVector_t;$/;"	t	struct:qmcplusplus::SplineOpenAdoptor
StorageGradVector_t	Experimental/SplineOpenAdoptor.h	/^  typedef typename OrbitalSetTraits<ST>::GradVector_t       StorageGradVector_t;$/;"	t	struct:qmcplusplus::SplineOpenAdoptor
StorageHessVector	EinsplineSet.h	/^  StorageHessVector_t  StorageHessVector;$/;"	m	class:qmcplusplus::EinsplineSetExtended
StorageHessVector_t	EinsplineSet.h	/^  typedef typename OrbitalSetTraits<StorageType>::HessVector_t  StorageHessVector_t;$/;"	t	class:qmcplusplus::EinsplineSetExtended
StorageHessVector_t	Experimental/EinsplineAdoptorPacked.h	/^  typedef typename OrbitalSetTraits<real_type>::HessVector_t           StorageHessVector_t;$/;"	t	struct:qmcplusplus::SplineC2RAdoptorPacked
StorageHessVector_t	Experimental/EinsplineAdoptorPacked.h	/^  typedef typename OrbitalSetTraits<real_type>::HessVector_t      StorageHessVector_t;$/;"	t	struct:qmcplusplus::SplineC2CAdoptorPacked
StorageHessVector_t	Experimental/EinsplineMixedAdoptor.h	/^  typedef typename OrbitalSetTraits<ST>::HessVector_t       StorageHessVector_t;$/;"	t	struct:qmcplusplus::SplineMixedAdoptor
StorageHessVector_t	Experimental/EinsplineMixedAdoptor.h	/^  typedef typename OrbitalSetTraits<ST>::HessVector_t       StorageHessVector_t;$/;"	t	struct:qmcplusplus::SplineOpenAdoptor
StorageHessVector_t	Experimental/SplineOpenAdoptor.h	/^  typedef typename OrbitalSetTraits<ST>::HessVector_t       StorageHessVector_t;$/;"	t	struct:qmcplusplus::SplineOpenAdoptor
StorageLaplVector	EinsplineSet.h	/^  StorageValueVector_t StorageValueVector, StorageLaplVector;$/;"	m	class:qmcplusplus::EinsplineSetExtended
StorageType	Experimental/Bspline3DSetBase.h	/^  typedef Array<ValueType,DIM>      StorageType;$/;"	t	struct:qmcplusplus::Bspline3DSetBase
StorageType	Experimental/TricubicBsplineSPOSet.h	/^  typedef typename TricubicBsplineTraits<T>::StorageType StorageType;$/;"	t	class:qmcplusplus::TricubicBsplineSPOSet
StorageType	Experimental/TricubicBsplineSetBuilder.h	/^  typedef Bspline3DSetBase::StorageType StorageType;$/;"	t	class:qmcplusplus::TricubicBsplineSetBuilder
StorageType	Experimental/TricubicBsplineTwistSet.h	/^  typedef typename TricubicBsplineTraits<T>::StorageType StorageType;$/;"	t	class:qmcplusplus::TricubicBsplineTwistSet
StorageType	Spline3D/SplineBasisSet.h	/^  typedef ST   StorageType;$/;"	t	class:qmcplusplus::SplineBasisSet
StorageTypeConverter	EinsplineSet.h	/^template<> struct StorageTypeConverter<double,double>$/;"	s	namespace:qmcplusplus
StorageTypeConverter	EinsplineSet.h	/^template<> struct StorageTypeConverter<double,float>$/;"	s	namespace:qmcplusplus
StorageTypeConverter	EinsplineSet.h	/^template<> struct StorageTypeConverter<std::complex<double>,double>$/;"	s	namespace:qmcplusplus
StorageTypeConverter	EinsplineSet.h	/^template<> struct StorageTypeConverter<std::complex<double>,float>$/;"	s	namespace:qmcplusplus
StorageTypeConverter	EinsplineSet.h	/^template<> struct StorageTypeConverter<std::complex<double>,std::complex<double> >$/;"	s	namespace:qmcplusplus
StorageValueVector	EinsplineSet.h	/^  StorageValueVector_t StorageValueVector, StorageLaplVector;$/;"	m	class:qmcplusplus::EinsplineSetExtended
StorageValueVector_t	EinsplineSet.h	/^  typedef typename OrbitalSetTraits<StorageType>::ValueVector_t StorageValueVector_t;$/;"	t	class:qmcplusplus::EinsplineSetExtended
StorageValueVector_t	Experimental/EinsplineAdoptorPacked.h	/^  typedef typename OrbitalSetTraits<real_type>::ValueVector_t          StorageValueVector_t;$/;"	t	struct:qmcplusplus::SplineC2RAdoptorPacked
StorageValueVector_t	Experimental/EinsplineAdoptorPacked.h	/^  typedef typename OrbitalSetTraits<real_type>::ValueVector_t     StorageValueVector_t;$/;"	t	struct:qmcplusplus::SplineC2CAdoptorPacked
StorageValueVector_t	Experimental/EinsplineMixedAdoptor.h	/^  typedef typename OrbitalSetTraits<ST>::ValueVector_t      StorageValueVector_t;$/;"	t	struct:qmcplusplus::SplineMixedAdoptor
StorageValueVector_t	Experimental/EinsplineMixedAdoptor.h	/^  typedef typename OrbitalSetTraits<ST>::ValueVector_t      StorageValueVector_t;$/;"	t	struct:qmcplusplus::SplineOpenAdoptor
StorageValueVector_t	Experimental/SplineOpenAdoptor.h	/^  typedef typename OrbitalSetTraits<ST>::ValueVector_t      StorageValueVector_t;$/;"	t	struct:qmcplusplus::SplineOpenAdoptor
StructureFactor	Jastrow/kSpaceJastrow.cpp	/^kSpaceJastrow::StructureFactor(PosType G, std::vector<ComplexType> &rho_G)$/;"	f	class:qmcplusplus::kSpaceJastrow
SumGPU	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> SumGPU, GradLaplGPU, OneGradGPU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
SumGPU	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> SumGPU, GradLaplGPU, OneGradGPU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
SumHost	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> SumHost, GradLaplHost, OneGradHost;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
SumHost	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> SumHost, GradLaplHost, OneGradHost;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
SumTimer	AtomicOrbital.h	/^  NewTimer YlmTimer, SplineTimer, SumTimer;$/;"	m	class:qmcplusplus::AtomicOrbital
SuperCell	EinsplineSetBuilder.h	/^  UnitCellType SuperCell, PrimCell, PrimCellInv;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
SuperLattice	EinsplineAdoptor.h	/^  CrystalLattice<ST,D>       SuperLattice;$/;"	m	struct:qmcplusplus::SplineAdoptorBase
SuperLattice	EinsplineSet.h	/^  UnitCellType SuperLattice, PrimLattice;$/;"	m	class:qmcplusplus::EinsplineSet
SuperLattice	EinsplineSetBuilder.h	/^  Tensor<double,OHMMS_DIM> Lattice, RecipLattice, LatticeInv, SuperLattice, GGt;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
SuperLattice	Experimental/EinsplineAdoptorPacked.h	/^  UnitCellType        SuperLattice;$/;"	m	struct:qmcplusplus::SplineC2CAdoptorPacked
SuperLattice	Experimental/EinsplineAdoptorPacked.h	/^  UnitCellType        SuperLattice;$/;"	m	struct:qmcplusplus::SplineC2RAdoptorPacked
SuperLattice	Experimental/EinsplineMixedAdoptor.h	/^  UnitCellType SuperLattice;$/;"	m	struct:qmcplusplus::SplineMixedAdoptor
SuperLattice	Experimental/EinsplineMixedAdoptor.h	/^  UnitCellType SuperLattice;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
SuperLattice	Experimental/SplineOpenAdoptor.h	/^  UnitCellType SuperLattice;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
SuperLattice	Spline3D/twist_handler.hpp	/^      unitcell_type SuperLattice;$/;"	m	struct:qmcplusplus::twist_handler
SymmMap	Jastrow/kSpaceJastrowBuilder.h	/^  std::map<std::string,kSpaceJastrow::SymmetryType> SymmMap;$/;"	m	struct:qmcplusplus::kSpaceJastrowBuilder
SymmetryType	Jastrow/kSpaceJastrow.h	/^  typedef enum { CRYSTAL, ISOTROPIC, NOSYMM } SymmetryType;$/;"	t	class:qmcplusplus::kSpaceJastrow	typeref:enum:qmcplusplus::kSpaceJastrow::__anon15
THREEBODY	OrbitalConstraintsBase.h	/^  enum {MULTIPLE=0, LONGRANGE, ONEBODY, TWOBODY, THREEBODY, FOURBODY};$/;"	e	enum:qmcplusplus::OrbitalConstraintsBase::__anon19
TIMER_SKIP	TrialWaveFunction.cpp	/^               RECOMPUTE_TIMER, DERIVS_TIMER, TIMER_SKIP$/;"	e	enum:qmcplusplus::__anon33	file:
TIMER_SKIP	TrialWaveFunction_CUDA.cpp	/^               RECOMPUTE_TIMER, DERIVS_TIMER, TIMER_SKIP$/;"	e	enum:qmcplusplus::__anon34	file:
TRICUBIC_BSPLINE3D_SINGLEORBITALSET_BASE_H	Experimental/Bspline3DSetBase.h	24;"	d
TRICUBIC_BSPLINE_SINGLEORBITALSET_WITHSPECIALIZATION_H	Experimental/TricubicBsplineSPOSet.h	25;"	d
TT	Jastrow/ChebyshevFunctor.h	/^  std::vector<T> TT, dTT, d2TT;$/;"	m	struct:ChebyshevFunctor
TWOBODY	OrbitalConstraintsBase.h	/^  enum {MULTIPLE=0, LONGRANGE, ONEBODY, TWOBODY, THREEBODY, FOURBODY};$/;"	e	enum:qmcplusplus::OrbitalConstraintsBase::__anon19
TWO_BODY_JASTROW_ORBITAL_BSPLINE_H	Jastrow/TwoBodyJastrowOrbitalBspline.h	17;"	d
TargetPtcl	EinsplineSetBuilder.h	/^  ParticleSet &TargetPtcl;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
TaskID	Jastrow/TwoBodyJastrowOrbital.h	/^  int TaskID;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
Temp	BasisSetBase.h	/^  ValueMatrix_t Temp;$/;"	m	struct:qmcplusplus::BasisSetBase
Temp	Experimental/LCOrbitalSetWithCorrection.h	/^  ValueMatrix_t Temp;$/;"	m	class:qmcplusplus::LCOrbitalSetWithCorrection
Temp	LCOrbitalSet.h	/^  ValueMatrix_t Temp;$/;"	m	class:qmcplusplus::LCOrbitalSet
Temp	PlaneWave/PWOrbitalSet.h	/^  Matrix<ValueType> Temp;$/;"	m	class:qmcplusplus::PWOrbitalSet
Temp	PlaneWave/PWRealOrbitalSet.h	/^  Matrix<ComplexType> Temp;$/;"	m	class:qmcplusplus::PWRealOrbitalSet
Tempv	Experimental/LCOrbitalSetWithCorrection.h	/^  ValueMatrix_t Tempv;$/;"	m	class:qmcplusplus::LCOrbitalSetWithCorrection
Tempv	LCOrbitalSet.h	/^  ValueMatrix_t Tempv;$/;"	m	class:qmcplusplus::LCOrbitalSet
TensorType	OrbitalSetTraits.h	/^  typedef Tensor<ValueType,DIM>          TensorType;$/;"	t	struct:qmcplusplus::OrbitalSetTraits
TestMe	Fermion/ILUGMRESInterface.c	/^double TestMe()$/;"	f
ThisBasisSetType	MolecularOrbitals/MolecularBasisBuilder.h	/^  typedef LocalizedBasisSet<COT>   ThisBasisSetType;$/;"	t	class:qmcplusplus::MolecularBasisBuilder
ThisCOT_t	LocalizedBasisSet.h	/^  typedef COT                     ThisCOT_t;$/;"	t	struct:qmcplusplus::LocalizedBasisSet
ThisRadialOrbital_t	LocalizedBasisSet.h	/^  typedef typename COT::RadialOrbital_t    ThisRadialOrbital_t;$/;"	t	struct:qmcplusplus::LocalizedBasisSet
ThisSPOSetType	MultiGridBsplineSetReader.h	/^  typedef MultiGridBsplineSet<SA> ThisSPOSetType;$/;"	t	struct:qmcplusplus::MultiGridBsplineSetReader
ThisType	Jastrow/CubicBsplineGroup.h	/^  typedef CubicBsplineGroup<T,GRIDTYPE>                                            ThisType;$/;"	t	class:qmcplusplus::CubicBsplineGroup
ThisType	SplineMixedAdoptor.h	/^  typedef SplineMixedAdoptor<ST,TT,D> ThisType;$/;"	t	struct:qmcplusplus::SplineMixedAdoptor
ThisType	SplineMixedAdoptor.h	/^  typedef SplineOpenAdoptor<ST,TT,D> ThisType;$/;"	t	struct:qmcplusplus::SplineOpenAdoptor
ThreeBodyBlockSparse	Jastrow/ThreeBodyBlockSparse.cpp	/^ThreeBodyBlockSparse::ThreeBodyBlockSparse(const ParticleSet& ions, ParticleSet& els):$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
ThreeBodyBlockSparse	Jastrow/ThreeBodyBlockSparse.h	/^class ThreeBodyBlockSparse: public OrbitalBase$/;"	c	namespace:qmcplusplus
ThreeBodyGeminal	Jastrow/ThreeBodyGeminal.cpp	/^ThreeBodyGeminal::ThreeBodyGeminal(const ParticleSet& ions, ParticleSet& els):$/;"	f	class:qmcplusplus::ThreeBodyGeminal
ThreeBodyGeminal	Jastrow/ThreeBodyGeminal.h	/^class ThreeBodyGeminal: public OrbitalBase$/;"	c	namespace:qmcplusplus
ThreeBodyGeminalBuilder	Jastrow/ThreeBodyGeminalBuilder.cpp	/^ThreeBodyGeminalBuilder::ThreeBodyGeminalBuilder(ParticleSet& els,$/;"	f	class:qmcplusplus::ThreeBodyGeminalBuilder
ThreeBodyGeminalBuilder	Jastrow/ThreeBodyGeminalBuilder.h	/^class ThreeBodyGeminalBuilder: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
ThreeBodyJastrowOrbital	Jastrow/ThreeBodyJastrowOrbital.h	/^  ThreeBodyJastrowOrbital(ParticleSet& ions, ParticleSet& els):$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
ThreeBodyJastrowOrbital	Jastrow/ThreeBodyJastrowOrbital.h	/^class ThreeBodyJastrowOrbital: public OrbitalBase$/;"	c	namespace:qmcplusplus
ThreeBodyPade	Jastrow/ThreeBodyPade.h	/^  ThreeBodyPade(ParticleSet& ions, ParticleSet& els) :  FirstAddressOfdU(NULL), LastAddressOfdU(NULL)$/;"	f	class:qmcplusplus::ThreeBodyPade
ThreeBodyPade	Jastrow/ThreeBodyPade.h	/^class ThreeBodyPade: public OrbitalBase$/;"	c	namespace:qmcplusplus
ThreeBodyPadeBuilder	Jastrow/ThreeBodyPadeBuilder.cpp	/^ThreeBodyPadeBuilder::ThreeBodyPadeBuilder(ParticleSet& els, TrialWaveFunction& wfs, ParticleSet& ions):$/;"	f	class:qmcplusplus::ThreeBodyPadeBuilder
ThreeBodyPadeBuilder	Jastrow/ThreeBodyPadeBuilder.h	/^class ThreeBodyPadeBuilder: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
TileFactor	EinsplineSet.h	/^  TinyVector<int,3> TileFactor;$/;"	m	class:qmcplusplus::EinsplineSet
TileFactor	EinsplineSetBuilder.h	/^  TinyVector<int,OHMMS_DIM> TileFactor;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
TileIons	EinsplineSetBuilderCommon.cpp	/^EinsplineSetBuilder::TileIons()$/;"	f	class:qmcplusplus::EinsplineSetBuilder
TileIons	Experimental/EinsplineSetBuilder.cpp	/^EinsplineSetBuilder::TileIons()$/;"	f	class:qmcplusplus::EinsplineSetBuilder
TileMatrix	EinsplineSet.h	/^  Tensor<int,OHMMS_DIM> TileMatrix;$/;"	m	class:qmcplusplus::EinsplineSet
TileMatrix	EinsplineSetBuilder.h	/^  Tensor<int,OHMMS_DIM> TileMatrix;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
TileMatrix	Spline3D/twist_handler.hpp	/^      Tensor<int, D> TileMatrix;$/;"	m	struct:qmcplusplus::twist_handler
Tiling	EinsplineSet.h	/^  bool Tiling;$/;"	m	class:qmcplusplus::EinsplineSet
TimerEnum	TrialWaveFunction.cpp	/^             } TimerEnum;$/;"	t	namespace:qmcplusplus	typeref:enum:qmcplusplus::__anon33	file:
TimerEnum	TrialWaveFunction_CUDA.cpp	/^             } TimerEnum;$/;"	t	namespace:qmcplusplus	typeref:enum:qmcplusplus::__anon34	file:
TotalDim	TrialWaveFunction.h	/^  int TotalDim;$/;"	m	class:qmcplusplus::TrialWaveFunction
TotalOrbitalSize	SPOSetBase.h	/^  IndexType TotalOrbitalSize;$/;"	m	class:qmcplusplus::SPOSetBase
TpsiM	Fermion/MultiDiracDeterminantBase.h	/^  ValueMatrix_t psiM,psiM_temp, TpsiM, psiMinv, psiMinv_temp;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
TpsiM	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueMatrix_t psiM,psiM_temp, TpsiM, psiMinv, psiMinv_temp;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
TranslateGrid	Experimental/TricubicBsplineSetBuilder.h	/^  bool TranslateGrid;$/;"	m	class:qmcplusplus::TricubicBsplineSetBuilder
TriCubicSplineBuilder	Experimental/TriCubicSplineBuilder.h	/^  TriCubicSplineBuilder(TrialWaveFunction& a,$/;"	f	class:qmcplusplus::TriCubicSplineBuilder
TriCubicSplineBuilder	Experimental/TriCubicSplineBuilder.h	/^class TriCubicSplineBuilder: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
TrialWaveFunction	TrialWaveFunction.cpp	/^TrialWaveFunction::TrialWaveFunction()$/;"	f	class:qmcplusplus::TrialWaveFunction
TrialWaveFunction	TrialWaveFunction.cpp	/^TrialWaveFunction::TrialWaveFunction(Communicate* c)$/;"	f	class:qmcplusplus::TrialWaveFunction
TrialWaveFunction	TrialWaveFunction.h	/^class TrialWaveFunction: public MPIObjectBase$/;"	c	namespace:qmcplusplus
TricubicBsplineSPOSet	Experimental/TricubicBsplineSPOSet.h	/^  TricubicBsplineSPOSet() { }$/;"	f	class:qmcplusplus::TricubicBsplineSPOSet
TricubicBsplineSPOSet	Experimental/TricubicBsplineSPOSet.h	/^  TricubicBsplineSPOSet()$/;"	f	class:qmcplusplus::TricubicBsplineSPOSet
TricubicBsplineSPOSet	Experimental/TricubicBsplineSPOSet.h	/^class TricubicBsplineSPOSet: public TricubicBsplineTraits<T> {};$/;"	c	namespace:qmcplusplus
TricubicBsplineSPOSet	Experimental/TricubicBsplineSPOSet.h	/^class TricubicBsplineSPOSet<T,false,false>: public TricubicBsplineTraits<T>$/;"	c	namespace:qmcplusplus
TricubicBsplineSPOSet	Experimental/TricubicBsplineSPOSet.h	/^class TricubicBsplineSPOSet<T,false,true>: public TricubicBsplineTraits<T>$/;"	c	namespace:qmcplusplus
TricubicBsplineSPOSet	Experimental/TricubicBsplineSPOSet.h	/^class TricubicBsplineSPOSet<T,true,false>: public TricubicBsplineTraits<T>$/;"	c	namespace:qmcplusplus
TricubicBsplineSPOSet	Experimental/TricubicBsplineSPOSet.h	/^class TricubicBsplineSPOSet<T,true,true>: public TricubicBsplineTraits<T>$/;"	c	namespace:qmcplusplus
TricubicBsplineSetBuilder	Experimental/TricubicBsplineSetBuilder.cpp	/^TricubicBsplineSetBuilder::TricubicBsplineSetBuilder(ParticleSet& p, PtclPoolType& psets, xmlNodePtr cur):$/;"	f	class:qmcplusplus::TricubicBsplineSetBuilder
TricubicBsplineSetBuilder	Experimental/TricubicBsplineSetBuilder.h	/^class TricubicBsplineSetBuilder: public BasisSetBuilder$/;"	c	namespace:qmcplusplus
TricubicBsplineTwistSet	Experimental/TricubicBsplineTwistSet.h	/^  TricubicBsplineTwistSet()$/;"	f	class:qmcplusplus::TricubicBsplineTwistSet
TricubicBsplineTwistSet	Experimental/TricubicBsplineTwistSet.h	/^class TricubicBsplineTwistSet: public TricubicBsplineTraits<T>$/;"	c	namespace:qmcplusplus
TripletID	Jastrow/eeI_JastrowOrbital.h	/^  int TripletID(int i, int j, int k) {$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
TruncatedPadeFunctor	Jastrow/CompositeFunctor.h	/^  TruncatedPadeFunctor(real_type a=-0.5, OptimizableFunctorBase* fin=0, real_type rmax=10):$/;"	f	struct:qmcplusplus::TruncatedPadeFunctor
TruncatedPadeFunctor	Jastrow/CompositeFunctor.h	/^struct TruncatedPadeFunctor:public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
TruncatedShiftedGaussianFunctor	Jastrow/GaussianFunctor.h	/^  TruncatedShiftedGaussianFunctor(real_type a=1.0 , real_type b=1.0 , real_type c=1.0):ID_A("SG_A"), ID_B("SG_B"),ID_C("SG_C")$/;"	f	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
TruncatedShiftedGaussianFunctor	Jastrow/GaussianFunctor.h	/^struct TruncatedShiftedGaussianFunctor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
TwistAngle	Experimental/Bspline3DSetBase.h	/^  PosType TwistAngle;$/;"	m	struct:qmcplusplus::Bspline3DSetBase
TwistAngle	Experimental/TricubicBsplineSetBuilder.h	/^  PosType TwistAngle;$/;"	m	class:qmcplusplus::TricubicBsplineSetBuilder
TwistAngle	Experimental/TricubicBsplineTwistSet.h	/^  PosType TwistAngle;$/;"	m	class:qmcplusplus::TricubicBsplineTwistSet
TwistAngle	PlaneWave/PWOrbitalBuilder.h	/^  PosType TwistAngle;$/;"	m	class:qmcplusplus::PWOrbitalBuilder
TwistAngle	PlaneWave/PWOrbitalSet.h	/^  PosType TwistAngle;$/;"	m	class:qmcplusplus::PWOrbitalSet
TwistAngle	PlaneWave/PWRealOrbitalSet.h	/^  PosType TwistAngle;$/;"	m	class:qmcplusplus::PWRealOrbitalSet
TwistAngles	AtomicOrbital.h	/^  std::vector<PosType> TwistAngles;$/;"	m	class:qmcplusplus::AtomicOrbital
TwistAngles	EinsplineSetBuilder.h	/^  std::vector<TinyVector<double,OHMMS_DIM> > TwistAngles;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
TwistIndex	BandInfo.h	/^  int TwistIndex;$/;"	m	struct:qmcplusplus::BandInfo
TwistIndex	BandInfo.h	/^  int TwistIndex;$/;"	m	struct:qmcplusplus::BandInfoGroup
TwistMap	EinsplineSetBuilder.h	/^  std::map<TinyVector<int,OHMMS_DIM>,int,Int3less> TwistMap;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
TwistMesh	EinsplineSetBuilder.h	/^  TinyVector<int,OHMMS_DIM> TwistMesh;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
TwistNum	EinsplineSet.h	/^  int TwistNum;$/;"	m	class:qmcplusplus::EinsplineSet
TwistNum	EinsplineSetBuilder.h	/^  int TwistNum;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
TwistPair	EinsplineSetBuilderCommon.cpp	/^bool EinsplineSetBuilder::TwistPair (PosType a, PosType b)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
TwistPair	Experimental/EinsplineSetBuilder.cpp	/^bool EinsplineSetBuilder::TwistPair (PosType a, PosType b)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
TwistSymmetry	EinsplineSetBuilder.h	/^  std::vector<int> TwistSymmetry;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
TwistVector	EinsplineSet.h	/^  PosType TwistVector, kVector;$/;"	m	class:qmcplusplus::EinsplineSet
TwistVector	Spline3D/twist_handler.hpp	/^      point_type TwistVector;$/;"	m	struct:qmcplusplus::twist_handler
TwistWeight	EinsplineSetBuilder.h	/^  std::vector<int> TwistWeight;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
Two-body Jastrow	Jastrow/kSpaceJastrowNotes.tex	/^\\maketitle$/;"	s
TwoBody	Fermion/BackflowBuilder.h	/^  bool TwoBody;$/;"	m	class:qmcplusplus::BackflowBuilder
TwoBodyCoefs	Jastrow/kSpaceJastrow.h	/^  std::vector<RealType>    TwoBodyCoefs;$/;"	m	class:qmcplusplus::kSpaceJastrow
TwoBodyGvecs	Jastrow/kSpaceJastrow.h	/^  std::vector<PosType> TwoBodyGvecs;$/;"	m	class:qmcplusplus::kSpaceJastrow
TwoBodyID	Jastrow/kSpaceJastrow.h	/^  std::string TwoBodyID;$/;"	m	class:qmcplusplus::kSpaceJastrow
TwoBodyJastrow	Experimental/TwoBodyJastrowFunction.Shared.h	/^  TwoBodyJastrow(ParticleSet& p, DistanceTableData* dtable): d_table(dtable)$/;"	f	class:qmcplusplus::TwoBodyJastrow
TwoBodyJastrow	Experimental/TwoBodyJastrowFunction.Shared.h	/^class TwoBodyJastrow<FT,true>: public OrbitalBase$/;"	c	namespace:qmcplusplus
TwoBodyJastrow	Experimental/TwoBodyJastrowFunction.h	/^  TwoBodyJastrow(ParticleSet& p, DistanceTableData* dtable): d_table(dtable)$/;"	f	class:qmcplusplus::TwoBodyJastrow
TwoBodyJastrow	Experimental/TwoBodyJastrowFunction.h	/^class TwoBodyJastrow: public OrbitalBase {};$/;"	c	namespace:qmcplusplus
TwoBodyJastrow	Experimental/TwoBodyJastrowFunction.h	/^class TwoBodyJastrow<FT,false>: public OrbitalBase$/;"	c	namespace:qmcplusplus
TwoBodyJastrowBuilder	Jastrow/Experimental/TwoBodyJastrowBuilder.cpp	/^TwoBodyJastrowBuilder::TwoBodyJastrowBuilder(ParticleSet& p, TrialWaveFunction& psi,$/;"	f	class:qmcplusplus::TwoBodyJastrowBuilder
TwoBodyJastrowBuilder	Jastrow/Experimental/TwoBodyJastrowBuilder.h	/^class TwoBodyJastrowBuilder: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
TwoBodyJastrowOrbital	Jastrow/TwoBodyJastrowOrbital.h	/^  TwoBodyJastrowOrbital(ParticleSet& p, int tid)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
TwoBodyJastrowOrbital	Jastrow/TwoBodyJastrowOrbital.h	/^class TwoBodyJastrowOrbital: public OrbitalBase$/;"	c	namespace:qmcplusplus
TwoBodyJastrowOrbitalBspline	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  TwoBodyJastrowOrbitalBspline(ParticleSet& pset, int tid) :$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
TwoBodyJastrowOrbitalBspline	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^class TwoBodyJastrowOrbitalBspline :$/;"	c	namespace:qmcplusplus
TwoBodyPhase	Jastrow/kSpaceJastrow.h	/^  std::vector<RealType> OneBodyPhase, TwoBodyPhase;$/;"	m	class:qmcplusplus::kSpaceJastrow
TwoBodySymmCoefs	Jastrow/kSpaceJastrow.h	/^  std::vector<kSpaceCoef<RealType   > > TwoBodySymmCoefs;$/;"	m	class:qmcplusplus::kSpaceJastrow
TwoBodySymmType	Jastrow/kSpaceJastrow.h	/^  SymmetryType OneBodySymmType, TwoBodySymmType;$/;"	m	class:qmcplusplus::kSpaceJastrow
TwoBodyVarMap	Jastrow/kSpaceJastrow.h	/^  std::vector<int> TwoBodyVarMap;$/;"	m	class:qmcplusplus::kSpaceJastrow
TwoBody_e2iGr_new	Jastrow/kSpaceJastrow.h	/^      TwoBody_e2iGr_new, TwoBody_e2iGr_old;$/;"	m	class:qmcplusplus::kSpaceJastrow
TwoBody_e2iGr_old	Jastrow/kSpaceJastrow.h	/^      TwoBody_e2iGr_new, TwoBody_e2iGr_old;$/;"	m	class:qmcplusplus::kSpaceJastrow
TwoBody_rhoG	Jastrow/kSpaceJastrow.h	/^  std::vector<ComplexType> OneBody_rhoG, TwoBody_rhoG;$/;"	m	class:qmcplusplus::kSpaceJastrow
Type	EinsplineSet.cpp	/^EinsplineSetExtended<StorageType>::Type()$/;"	f	class:qmcplusplus::EinsplineSetExtended
Type	EinsplineSet.cpp	/^EinsplineSetHybrid<double>::Type()$/;"	f	class:qmcplusplus::EinsplineSetHybrid
Type	EinsplineSet.cpp	/^EinsplineSetHybrid<std::complex<double> >::Type()$/;"	f	class:qmcplusplus::EinsplineSetHybrid
Type	EinsplineSet.h	/^  inline std::string Type()$/;"	f	class:qmcplusplus::EinsplineSet
Type_t	Spline3D/EinsplineSetTemp.hpp	/^      typedef typename bspline_engine_traits<EngT>::Type_t Type_t;$/;"	t	struct:qmcplusplus::bspline_engine
Type_t	Spline3D/EinsplineSetTemp.hpp	/^    typedef double Type_t;$/;"	t	struct:qmcplusplus::bspline_engine_traits
Type_t	Spline3D/EinsplineSetTemp.hpp	/^    typedef std::complex<double> Type_t;$/;"	t	struct:qmcplusplus::bspline_engine_traits
Type_t	Spline3D/EinsplineSetTemp.hpp	/^    typedef typename bspline_engine_traits<EngT>::Type_t Type_t;$/;"	t	struct:qmcplusplus::bspline_engine
U	Experimental/TwoBodyJastrowFunction.Shared.h	/^  ValueVectorType U,d2U,curLap,curVal;$/;"	m	class:qmcplusplus::TwoBodyJastrow
U	Experimental/TwoBodyJastrowFunction.h	/^  ValueVectorType U,d2U,curLap,curVal;$/;"	m	class:qmcplusplus::TwoBodyJastrow
U	IonOrbital.h	/^  ParticleAttrib<RealType> U,d2U;$/;"	m	struct:qmcplusplus::IonOrbital
U	Jastrow/LRTwoBodyJastrow.h	/^  Vector<RealType> U,d2U;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
U	Jastrow/OneBodyJastrowOrbital.h	/^  ParticleAttrib<RealType> U,d2U;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbital
U	Jastrow/OneBodySpinJastrowOrbital.h	/^  ParticleAttrib<RealType> U,d2U;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
U	Jastrow/ThreeBodyJastrowOrbital.h	/^  ValueVectorType U,d2U;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
U	Jastrow/ThreeBodyPade.h	/^  ValueVectorType U,d2U;$/;"	m	class:qmcplusplus::ThreeBodyPade
U	Jastrow/TwoBodyJastrowOrbital.h	/^  ParticleAttrib<RealType> U,d2U,curLap,curVal;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
U	Jastrow/eeI_JastrowOrbital.h	/^  ParticleAttrib<RealType> U,d2U,curLap_i, curLap_j, curVal;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
UBsplineClass_2d_d	legacy/EinsplineWrapper.cpp	/^UBsplineClass_2d_d::UBsplineClass_2d_d(TinyVector<double,2> start,$/;"	f	class:qmcplusplus::UBsplineClass_2d_d
UBsplineClass_2d_d	legacy/EinsplineWrapper.h	/^class UBsplineClass_2d_d : public BsplineClass_2d_d$/;"	c	namespace:qmcplusplus
UBsplineClass_2d_z	legacy/EinsplineWrapper.cpp	/^UBsplineClass_2d_z::UBsplineClass_2d_z(TinyVector<double,2> start,$/;"	f	class:qmcplusplus::UBsplineClass_2d_z
UBsplineClass_2d_z	legacy/EinsplineWrapper.h	/^class UBsplineClass_2d_z : public BsplineClass_2d_z$/;"	c	namespace:qmcplusplus
UIJ	Fermion/BackflowFunctionBase.h	/^  Matrix<PosType> UIJ;$/;"	m	class:qmcplusplus::BackflowFunctionBase
UIJ_temp	Fermion/BackflowFunctionBase.h	/^  Vector<PosType> UIJ_temp;$/;"	m	class:qmcplusplus::BackflowFunctionBase
UMFPACK_A	Fermion/ILUGMRESInterface.h	16;"	d
UMFPACK_CONTROL	Fermion/ILUGMRESInterface.h	15;"	d
UMFPACK_DROPTOL	Fermion/ILUGMRESInterface.h	17;"	d
UMFPACK_INFO	Fermion/ILUGMRESInterface.h	14;"	d
UMFPACK_SCALE	Fermion/ILUGMRESInterface.h	18;"	d
UMFPACK_SCALE_NONE	Fermion/ILUGMRESInterface.h	19;"	d
Uconst	Jastrow/LRBreakupUtilities.h	/^  real_type Uconst;$/;"	m	struct:qmcplusplus::ShortRangePartAdapter
Uk	Jastrow/LRBreakupUtilities.h	/^  inline T Uk(T kk)$/;"	f	struct:qmcplusplus::DerivRPABreakup
Uk	Jastrow/LRBreakupUtilities.h	/^  inline T Uk(T kk)$/;"	f	struct:qmcplusplus::EPRPABreakup
Uk	Jastrow/LRBreakupUtilities.h	/^  inline T Uk(T kk)$/;"	f	struct:qmcplusplus::RPABFeeBreakup
Uk	Jastrow/LRBreakupUtilities.h	/^  inline T Uk(T kk)$/;"	f	struct:qmcplusplus::RPABreakup
Uk	Jastrow/LRBreakupUtilities.h	/^  inline T Uk(T kk)$/;"	f	struct:qmcplusplus::YukawaBreakup
Uk	Jastrow/LRBreakupUtilities.h	/^  inline T Uk(T kk)$/;"	f	struct:qmcplusplus::derivEPRPABreakup
Uk	Jastrow/ThreeBodyBlockSparse.h	/^  Vector<RealType> Uk;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
Uk	Jastrow/ThreeBodyGeminal.h	/^  Vector<RealType> Uk;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
UniqueSplines	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  std::vector<CudaSpline<CudaReal>*> GPUSplines, UniqueSplines;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
UniqueSplines	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  std::vector<CudaSpline<CudaReal>*> GPUSplines, UniqueSplines;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
UnitCellType	AtomicOrbital.h	/^  typedef CrystalLattice<RealType,OHMMS_DIM>    UnitCellType;$/;"	t	class:qmcplusplus::AtomicOrbital
UnitCellType	EinsplineSet.h	/^  typedef CrystalLattice<ParticleSet::Scalar_t,OHMMS_DIM> UnitCellType;$/;"	t	class:qmcplusplus::EinsplineSet
UnitCellType	EinsplineSetBuilder.h	/^  typedef CrystalLattice<ParticleSet::Scalar_t,DIM> UnitCellType;$/;"	t	class:qmcplusplus::EinsplineSetBuilder
UnitCellType	Experimental/Bspline3DSetBase.h	/^  typedef CrystalLattice<RealType,DIM> UnitCellType;$/;"	t	struct:qmcplusplus::Bspline3DSetBase
UnitCellType	Experimental/EinsplineAdoptorPacked.h	/^  typedef CrystalLattice<ST,D> UnitCellType;$/;"	t	struct:qmcplusplus::SplineC2CAdoptorPacked
UnitCellType	Experimental/EinsplineAdoptorPacked.h	/^  typedef CrystalLattice<ST,D> UnitCellType;$/;"	t	struct:qmcplusplus::SplineC2RAdoptorPacked
UnitCellType	Experimental/EinsplineMixedAdoptor.h	/^  typedef CrystalLattice<ST,D>                        UnitCellType;$/;"	t	struct:qmcplusplus::SplineMixedAdoptor
UnitCellType	Experimental/EinsplineMixedAdoptor.h	/^  typedef CrystalLattice<ST,D>                        UnitCellType;$/;"	t	struct:qmcplusplus::SplineOpenAdoptor
UnitCellType	Experimental/SplineOpenAdoptor.h	/^  typedef CrystalLattice<ST,D>                        UnitCellType;$/;"	t	struct:qmcplusplus::SplineOpenAdoptor
UnitCellType	MuffinTin.h	/^  typedef CrystalLattice<RealType,OHMMS_DIM> UnitCellType;$/;"	t	class:qmcplusplus::MuffinTinClass
UnitLattice	Experimental/Bspline3DSetBase.h	/^  UnitCellType UnitLattice;$/;"	m	struct:qmcplusplus::Bspline3DSetBase
UnitLattice	Spline3D/SplineGridHandler.h	/^  unitcell_type UnitLattice;$/;"	m	struct:qmcplusplus::SplineGridHandler
UpdateInverse	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^void MultiDiracDeterminantBase::UpdateInverse()$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
UpdateJobList	Fermion/DiracDeterminantCUDA.h	/^  gpu::host_vector<updateJob> UpdateJobList;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
UpdateJobList_d	Fermion/DiracDeterminantCUDA.h	/^  gpu::device_vector<updateJob> UpdateJobList_d;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
UpdateList	Fermion/DiracDeterminantCUDA.h	/^  gpu::host_vector<CudaValueType*> UpdateList;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
UpdateListGPU	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal*> UpdateListGPU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
UpdateListGPU	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal*> UpdateListGPU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
UpdateListHost	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal*> UpdateListHost;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
UpdateListHost	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal*> UpdateListHost;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
UpdateList_d	Fermion/DiracDeterminantCUDA.h	/^  gpu::device_vector<CudaValueType*> UpdateList_d;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
UpdateMode	Fermion/BackflowTransformation.h	/^  int UpdateMode;$/;"	m	class:qmcplusplus::BackflowTransformation
UpdateMode	OrbitalBase.h	/^  int UpdateMode;$/;"	m	struct:qmcplusplus::OrbitalBase
UpdatePsiM2	Fermion/DiracDeterminantTruncation.cpp	/^void DiracDeterminantTruncation::UpdatePsiM2(ValueVector_t &vec,int ptcl)$/;"	f	class:qmcplusplus::DiracDeterminantTruncation
UpdateTimer	Fermion/DiracDeterminantBase.h	/^  NewTimer UpdateTimer, RatioTimer, InverseTimer, BufferTimer, SPOVTimer, SPOVGLTimer;$/;"	m	class:qmcplusplus::DiracDeterminantBase
UpdateTimer	Fermion/MultiDiracDeterminantBase.h	/^  NewTimer UpdateTimer, RatioTimer, InverseTimer, buildTableTimer, readMatTimer, evalWTimer, evalOrbTimer,evalOrb1Timer;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
UpdateTimer	Fermion/MultiDiracDeterminantWithBackflow.h	/^  NewTimer UpdateTimer, RatioTimer, InverseTimer, buildTableTimer, readMatTimer, evalWTimer, evalOrbTimer,evalOrb1Timer;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
UpdateTimer	Fermion/MultiSlaterDeterminant.h	/^  NewTimer RatioTimer,RatioGradTimer,RatioAllTimer,UpdateTimer,EvaluateTimer;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
UpdateTimer	Fermion/MultiSlaterDeterminantFast.h	/^  NewTimer RatioTimer,RatioGradTimer,RatioAllTimer,UpdateTimer,EvaluateTimer;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
Upper	Experimental/EinsplineMixedAdoptor.h	/^  TinyVector<ST,D> Upper;$/;"	m	struct:qmcplusplus::SplineMixedAdoptor
Upper	Experimental/EinsplineMixedAdoptor.h	/^  TinyVector<ST,D> Upper;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
Upper	Experimental/SplineOpenAdoptor.h	/^  TinyVector<ST,D> Upper;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
Upper	SplineMixedAdoptor.h	/^  TinyVector<ST,D> Upper;$/;"	m	struct:qmcplusplus::SplineMixedAdoptor
Upper	SplineMixedAdoptor.h	/^  TinyVector<ST,D> Upper;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
UpperBox	Experimental/TricubicBsplineSetBuilder.h	/^  PosType UpperBox;$/;"	m	class:qmcplusplus::TricubicBsplineSetBuilder
Uptcl	Jastrow/TwoBodyJastrowOrbital.h	/^  std::vector<RealType> Uptcl;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
UseBackflow	ElectronGas/ElectronGasOrbitalBuilder.h	/^  bool UseBackflow;$/;"	m	class:qmcplusplus::ElectronGasOrbitalBuilder
UseBackflow	Fermion/SlaterDetBuilder.h	/^  bool UseBackflow;$/;"	m	class:qmcplusplus::SlaterDetBuilder
UseFullGrid	Experimental/EinsplineMixedAdoptor.h	/^  bool UseFullGrid;$/;"	m	struct:qmcplusplus::SplineMixedAdoptor
UseFullGrid	Experimental/EinsplineMixedAdoptor.h	/^  bool UseFullGrid;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
UseFullGrid	Experimental/SplineOpenAdoptor.h	/^  bool UseFullGrid;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
UseFullGrid	SplineMixedAdoptor.h	/^  bool UseFullGrid;$/;"	m	struct:qmcplusplus::SplineMixedAdoptor
UseFullGrid	SplineMixedAdoptor.h	/^  bool UseFullGrid;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
UsePBC	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  bool UsePBC;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
UsePBC	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  bool UsePBC;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
UseRealOrbitals	EinsplineSetBuilder.h	/^  bool UseRealOrbitals;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
UseSpline	Jastrow/JastrowBasisBuilder.h	/^  bool UseSpline;$/;"	m	class:qmcplusplus::JastrowBasisBuilder
UseTwists	EinsplineSetBuilder.h	/^  std::vector<TinyVector<int,OHMMS_DIM> > UseTwists;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
V	Jastrow/ThreeBodyBlockSparse.h	/^  Matrix<RealType> V;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
V	Jastrow/ThreeBodyGeminal.h	/^  Matrix<RealType> V;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
VB	Experimental/QDwf.h	/^  double VB;$/;"	m	class:QDwf
VGLMatTimer	EinsplineSet.h	/^  NewTimer ValueTimer, VGLTimer, VGLMatTimer;$/;"	m	class:qmcplusplus::EinsplineSetExtended
VGLTimer	EinsplineSet.h	/^  NewTimer ValueTimer, VGLTimer, VGLMatTimer;$/;"	m	class:qmcplusplus::EinsplineSetExtended
VGL_TIMER	TrialWaveFunction.cpp	/^typedef enum { V_TIMER, VGL_TIMER, ACCEPT_TIMER, NL_TIMER,$/;"	e	enum:qmcplusplus::__anon33	file:
VGL_TIMER	TrialWaveFunction_CUDA.cpp	/^typedef enum { V_TIMER, VGL_TIMER, ACCEPT_TIMER, NL_TIMER,$/;"	e	enum:qmcplusplus::__anon34	file:
V_TIMER	TrialWaveFunction.cpp	/^typedef enum { V_TIMER, VGL_TIMER, ACCEPT_TIMER, NL_TIMER,$/;"	e	enum:qmcplusplus::__anon33	file:
V_TIMER	TrialWaveFunction_CUDA.cpp	/^typedef enum { V_TIMER, VGL_TIMER, ACCEPT_TIMER, NL_TIMER,$/;"	e	enum:qmcplusplus::__anon34	file:
ValueMatrix	Fermion/ci_node.h	/^  typedef Matrix<value_type>        ValueMatrix;$/;"	t	struct:qmcplusplus::ci_node
ValueMatrix_hp_t	Fermion/DiracDeterminantBase.h	/^  typedef OrbitalSetTraits<mValueType>::ValueMatrix_t ValueMatrix_hp_t;$/;"	t	class:qmcplusplus::DiracDeterminantBase
ValueMatrix_t	AGPDeterminant.h	/^  typedef BasisSetType::ValueMatrix_t ValueMatrix_t;$/;"	t	class:qmcplusplus::AGPDeterminant
ValueMatrix_t	BasisSetBase.h	/^  typedef typename OrbitalSetTraits<T>::ValueMatrix_t ValueMatrix_t;$/;"	t	struct:qmcplusplus::BasisSetBase
ValueMatrix_t	Experimental/CorrectingOrbitalBasisSet.h	/^  typedef typename BasisSetType::ValueMatrix_t ValueMatrix_t;$/;"	t	struct:qmcplusplus::CorrectingOrbitalBasisSet
ValueMatrix_t	Experimental/CuspCorr.h	/^  typedef OrbitalSetTraits<ValueType>::ValueMatrix_t ValueMatrix_t;$/;"	t	class:qmcplusplus::CuspCorr
ValueMatrix_t	Fermion/DiracDeterminantBase.h	/^  typedef SPOSetBase::ValueMatrix_t ValueMatrix_t;$/;"	t	class:qmcplusplus::DiracDeterminantBase
ValueMatrix_t	Fermion/DiracDeterminantCUDA.h	/^  typedef SPOSetBase::ValueMatrix_t ValueMatrix_t;$/;"	t	class:qmcplusplus::DiracDeterminantCUDA
ValueMatrix_t	Fermion/DiracDeterminantIterative.h	/^  typedef SPOSetBase::ValueMatrix_t ValueMatrix_t;$/;"	t	class:qmcplusplus::DiracDeterminantIterative
ValueMatrix_t	Fermion/DiracDeterminantTruncation.h	/^  typedef SPOSetBase::ValueMatrix_t ValueMatrix_t;$/;"	t	class:qmcplusplus::DiracDeterminantTruncation
ValueMatrix_t	Fermion/DiracDeterminantWithBackflow.h	/^  typedef SPOSetBase::ValueMatrix_t ValueMatrix_t;$/;"	t	class:qmcplusplus::DiracDeterminantWithBackflow
ValueMatrix_t	Fermion/ExcitationClass.h	/^  typedef SPOSetBase::ValueMatrix_t ValueMatrix_t;$/;"	t	class:qmcplusplus::ExcitationClass
ValueMatrix_t	Fermion/MultiDiracDeterminantBase.h	/^  typedef SPOSetBase::ValueMatrix_t ValueMatrix_t;$/;"	t	class:qmcplusplus::MultiDiracDeterminantBase
ValueMatrix_t	Fermion/MultiDiracDeterminantWithBackflow.h	/^  typedef SPOSetBase::ValueMatrix_t ValueMatrix_t;$/;"	t	class:qmcplusplus::MultiDiracDeterminantBase
ValueMatrix_t	LocalizedBasisSet.h	/^  typedef typename BasisSetType::ValueMatrix_t ValueMatrix_t;$/;"	t	struct:qmcplusplus::LocalizedBasisSet
ValueMatrix_t	OrbitalBase.h	/^  typedef OrbitalSetTraits<ValueType>::ValueMatrix_t      ValueMatrix_t;$/;"	t	struct:qmcplusplus::OrbitalBase
ValueMatrix_t	OrbitalSetTraits.h	/^  typedef Matrix<ValueType>     ValueMatrix_t;$/;"	t	struct:qmcplusplus::OrbitalSetTraits
ValueMatrix_t	SPOSetBase.h	/^  typedef OrbitalSetTraits<ValueType>::ValueMatrix_t ValueMatrix_t;$/;"	t	class:qmcplusplus::SPOSetBase
ValueMatrix_t	SparseLocalizedBasisSet.h	/^  typedef typename BasisSetType::ValueMatrix_t ValueMatrix_t;$/;"	t	struct:qmcplusplus::SparseLocalizedBasisSet
ValueMatrix_t	SphericalBasisSet.h	/^  typedef typename OrbitalSetTraits<value_type>::ValueMatrix_t ValueMatrix_t;$/;"	t	struct:qmcplusplus::SphericalBasisSet
ValueMatrix_t	SphericalOrbitalSet.h	/^  typedef typename OrbitalSetTraits<value_type>::ValueMatrix_t ValueMatrix_t;$/;"	t	struct:qmcplusplus::SphericalOrbitalSet
ValueMatrix_t	TrialWaveFunction.h	/^  typedef OrbitalBase::ValueMatrix_t   ValueMatrix_t;$/;"	t	class:qmcplusplus::TrialWaveFunction
ValueTimer	EinsplineSet.h	/^  NewTimer ValueTimer, VGLTimer, VGLMatTimer;$/;"	m	class:qmcplusplus::EinsplineSetExtended
ValueType	BasisSetBase.h	/^  typedef typename OrbitalSetTraits<T>::ValueType     ValueType;$/;"	t	struct:qmcplusplus::BasisSetBase
ValueType	DiffOrbitalBase.h	/^  typedef OrbitalBase::ValueType            ValueType;$/;"	t	struct:qmcplusplus::DiffOrbitalBase
ValueType	Experimental/CorrectingOrbitalBasisSet.h	/^  typedef typename BasisSetType::ValueType     ValueType;$/;"	t	struct:qmcplusplus::CorrectingOrbitalBasisSet
ValueType	Experimental/PlaneWaveOrbitalSet.h	/^  typedef PlaneWaveBasis::ValueType ValueType;$/;"	t	class:qmcplusplus::PlaneWaveOrbitalSet
ValueType	Fermion/ExcitationClass.h	/^  typedef double ValueType;$/;"	t	class:qmcplusplus::ExcitationClass
ValueType	IonOrbital.cpp	/^typedef IonOrbital::ValueType ValueType;$/;"	t	namespace:qmcplusplus	file:
ValueType	LCOrbitals.h	/^  typedef typename BS::ValueType ValueType;$/;"	t	class:qmcplusplus::LCOrbitals
ValueType	LocalizedBasisSet.h	/^  typedef typename BasisSetType::ValueType     ValueType;$/;"	t	struct:qmcplusplus::LocalizedBasisSet
ValueType	OrbitalBuilderBase.h	/^  typedef TrialWaveFunction::ValueType ValueType;$/;"	t	class:qmcplusplus::OrbitalBuilderBase
ValueType	OrbitalSetTraits.h	/^  typedef typename scalar_traits <T>::value_type ValueType;$/;"	t	struct:qmcplusplus::OrbitalSetTraits
ValueType	SPOSetScanner.h	/^    typedef QMCTraits::ValueType                       ValueType;$/;"	t	class:qmcplusplus::SPOSetScanner
ValueType	SparseLocalizedBasisSet.h	/^  typedef typename BasisSetType::ValueType     ValueType;$/;"	t	struct:qmcplusplus::SparseLocalizedBasisSet
ValueType	SphericalBasisSet.h	/^  typedef typename OrbitalSetTraits<value_type>::ValueType     ValueType;$/;"	t	struct:qmcplusplus::SphericalBasisSet
ValueType	SphericalOrbitalSet.h	/^  typedef typename OrbitalSetTraits<value_type>::ValueType     ValueType;$/;"	t	struct:qmcplusplus::SphericalOrbitalSet
ValueType	TrialWaveFunction.h	/^  typedef OrbitalBase::ValueType          ValueType;$/;"	t	class:qmcplusplus::TrialWaveFunction
ValueVector	Fermion/ci_node.h	/^  typedef Vector<value_type>        ValueVector;$/;"	t	struct:qmcplusplus::ci_node
ValueVectorType	DiffOrbitalBase.h	/^  typedef ParticleSet::ParticleLaplacian_t  ValueVectorType;$/;"	t	struct:qmcplusplus::DiffOrbitalBase
ValueVectorType	OrbitalBase.h	/^  typedef ParticleAttrib<ValueType> ValueVectorType;$/;"	t	struct:qmcplusplus::OrbitalBase
ValueVector_t	AGPDeterminant.h	/^  typedef BasisSetType::ValueVector_t ValueVector_t;$/;"	t	class:qmcplusplus::AGPDeterminant
ValueVector_t	BasisSetBase.h	/^  typedef typename OrbitalSetTraits<T>::ValueVector_t ValueVector_t;$/;"	t	struct:qmcplusplus::BasisSetBase
ValueVector_t	Experimental/CorrectingOrbitalBasisSet.h	/^  typedef typename BasisSetType::ValueVector_t ValueVector_t;$/;"	t	struct:qmcplusplus::CorrectingOrbitalBasisSet
ValueVector_t	Experimental/CuspCorr.h	/^  typedef OrbitalSetTraits<ValueType>::ValueVector_t ValueVector_t;$/;"	t	class:qmcplusplus::CuspCorr
ValueVector_t	Fermion/DiracDeterminantBase.h	/^  typedef SPOSetBase::ValueVector_t ValueVector_t;$/;"	t	class:qmcplusplus::DiracDeterminantBase
ValueVector_t	Fermion/DiracDeterminantCUDA.h	/^  typedef SPOSetBase::ValueVector_t ValueVector_t;$/;"	t	class:qmcplusplus::DiracDeterminantCUDA
ValueVector_t	Fermion/DiracDeterminantIterative.h	/^  typedef SPOSetBase::ValueVector_t ValueVector_t;$/;"	t	class:qmcplusplus::DiracDeterminantIterative
ValueVector_t	Fermion/DiracDeterminantTruncation.h	/^  typedef SPOSetBase::ValueVector_t ValueVector_t;$/;"	t	class:qmcplusplus::DiracDeterminantTruncation
ValueVector_t	Fermion/DiracDeterminantWithBackflow.h	/^  typedef SPOSetBase::ValueVector_t ValueVector_t;$/;"	t	class:qmcplusplus::DiracDeterminantWithBackflow
ValueVector_t	Fermion/ExcitationClass.h	/^  typedef SPOSetBase::ValueVector_t ValueVector_t;$/;"	t	class:qmcplusplus::ExcitationClass
ValueVector_t	Fermion/MultiDiracDeterminantBase.h	/^  typedef SPOSetBase::ValueVector_t ValueVector_t;$/;"	t	class:qmcplusplus::MultiDiracDeterminantBase
ValueVector_t	Fermion/MultiDiracDeterminantWithBackflow.h	/^  typedef SPOSetBase::ValueVector_t ValueVector_t;$/;"	t	class:qmcplusplus::MultiDiracDeterminantBase
ValueVector_t	Fermion/MultiSlaterDeterminant.h	/^  typedef OrbitalSetTraits<ValueType>::ValueVector_t ValueVector_t;$/;"	t	class:qmcplusplus::MultiSlaterDeterminant
ValueVector_t	Fermion/MultiSlaterDeterminantFast.h	/^  typedef OrbitalSetTraits<ValueType>::ValueVector_t ValueVector_t;$/;"	t	class:qmcplusplus::MultiSlaterDeterminantFast
ValueVector_t	Fermion/SlaterDetOpt.h	/^    typedef OrbitalSetTraits<ValueType>::ValueVector_t ValueVector_t;$/;"	t	class:qmcplusplus::SlaterDetOpt
ValueVector_t	LocalizedBasisSet.h	/^  typedef typename BasisSetType::ValueVector_t ValueVector_t;$/;"	t	struct:qmcplusplus::LocalizedBasisSet
ValueVector_t	OrbitalSetTraits.h	/^  typedef Vector<ValueType>     ValueVector_t;$/;"	t	struct:qmcplusplus::OrbitalSetTraits
ValueVector_t	SPOSetBase.h	/^  typedef OrbitalSetTraits<ValueType>::ValueVector_t ValueVector_t;$/;"	t	class:qmcplusplus::SPOSetBase
ValueVector_t	SPOSetScanner.h	/^    typedef OrbitalSetTraits<ValueType>::ValueVector_t ValueVector_t;$/;"	t	class:qmcplusplus::SPOSetScanner
ValueVector_t	SparseLocalizedBasisSet.h	/^  typedef typename BasisSetType::ValueVector_t ValueVector_t;$/;"	t	struct:qmcplusplus::SparseLocalizedBasisSet
ValueVector_t	SphericalBasisSet.h	/^  typedef typename OrbitalSetTraits<value_type>::ValueVector_t ValueVector_t;$/;"	t	struct:qmcplusplus::SphericalBasisSet
ValueVector_t	SphericalOrbitalSet.h	/^  typedef typename OrbitalSetTraits<value_type>::ValueVector_t ValueVector_t;$/;"	t	struct:qmcplusplus::SphericalOrbitalSet
ValueViewer_t	HarmonicOscillator/SHOSet.h	/^    typedef VectorViewer<value_type> ValueViewer_t;$/;"	t	struct:qmcplusplus::SHOSet
VarIndex	Fermion/DiracDeterminantOpt.h	/^  std::vector<TinyVector<int,2> > VarIndex;$/;"	m	class:qmcplusplus::DiracDeterminantOpt
VarOffset	Jastrow/DiffOneBodySpinJastrowOrbital.h	/^  int VarOffset;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
VarOffset	Jastrow/eeI_JastrowOrbital.h	/^  Array<std::pair<int,int>,3> VarOffset;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
Version	EinsplineSetBuilder.h	/^  TinyVector<int,3> Version;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
VisitorIndex	DiffOrbitalBase.h	/^        VisitorIndex = OrbitalBase::VisitorIndex,$/;"	e	enum:qmcplusplus::DiffOrbitalBase::__anon4
VisitorIndex	Fermion/BackflowFunctionBase.h	/^        VisitorIndex = DistanceTableData::VisitorIndex,$/;"	e	enum:qmcplusplus::BackflowFunctionBase::__anon11
VisitorIndex	OrbitalBase.h	/^        VisitorIndex = DistanceTableData::VisitorIndex,$/;"	e	enum:qmcplusplus::OrbitalBase::__anon17
WMConstraints	Jastrow/Experimental/WMConstraints.h	/^  WMConstraints(bool nospin=true):IgnoreSpin(nospin) {}$/;"	f	struct:qmcplusplus::WMConstraints
WMConstraints	Jastrow/Experimental/WMConstraints.h	/^struct WMConstraints: public OrbitalConstraintsBase$/;"	s	namespace:qmcplusplus
WMFunctor	Jastrow/DerivWMFunctor.h	/^  WMFunctor(real_type b, real_type rc=7.5, const std::string& bname="exponent"):$/;"	f	struct:qmcplusplus::DWMDBFunctor
WMFunctor	Jastrow/WMFunctor.h	/^  WMFunctor(real_type b, real_type rc=7.5, const std::string& bname="exponent"):$/;"	f	struct:qmcplusplus::WMFunctor
WMFunctor	Jastrow/WMFunctor.h	/^struct WMFunctor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
WMFunctorSet	Jastrow/WMFunctor.h	/^  WMFunctorSet(real_type rc=7.5):Rcut(rc)$/;"	f	struct:qmcplusplus::WMFunctorSet
WMFunctorSet	Jastrow/WMFunctor.h	/^struct WMFunctorSet: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
WMJastrowBuilder	Jastrow/WMJastrowBuilder.cpp	/^WMJastrowBuilder::WMJastrowBuilder(ParticleSet& target, TrialWaveFunction& psi,$/;"	f	class:qmcplusplus::WMJastrowBuilder
WMJastrowBuilder	Jastrow/WMJastrowBuilder.h	/^class WMJastrowBuilder: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
WalkerIndex	DiffOrbitalBase.h	/^        WalkerIndex  = OrbitalBase::WalkerIndex$/;"	e	enum:qmcplusplus::DiffOrbitalBase::__anon4
WalkerIndex	Fermion/BackflowFunctionBase.h	/^        WalkerIndex  = DistanceTableData::WalkerIndex$/;"	e	enum:qmcplusplus::BackflowFunctionBase::__anon11
WalkerIndex	OrbitalBase.h	/^        WalkerIndex  = DistanceTableData::WalkerIndex$/;"	e	enum:qmcplusplus::OrbitalBase::__anon17
Walker_t	EinsplineSet.h	/^  typedef typename EinsplineSetExtended<StorageType>::Walker_t     Walker_t;$/;"	t	class:qmcplusplus::EinsplineSetHybrid
Walker_t	Fermion/BackflowTransformation.h	/^  typedef MCWalkerConfiguration::Walker_t Walker_t;$/;"	t	class:qmcplusplus::BackflowTransformation
Walker_t	Fermion/DiracDeterminantCUDA.h	/^  typedef ParticleSet::Walker_t     Walker_t;$/;"	t	class:qmcplusplus::DiracDeterminantCUDA
Walker_t	Fermion/MultiSlaterDeterminant.h	/^  typedef ParticleSet::Walker_t                      Walker_t;$/;"	t	class:qmcplusplus::MultiSlaterDeterminant
Walker_t	Fermion/MultiSlaterDeterminantFast.h	/^  typedef ParticleSet::Walker_t                      Walker_t;$/;"	t	class:qmcplusplus::MultiSlaterDeterminantFast
Walker_t	Fermion/SlaterDetOpt.h	/^    typedef ParticleSet::Walker_t                      Walker_t;$/;"	t	class:qmcplusplus::SlaterDetOpt
Walker_t	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  typedef ParticleSet::Walker_t     Walker_t;$/;"	t	class:qmcplusplus::OneBodyJastrowOrbitalBspline
Walker_t	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  typedef ParticleSet::Walker_t     Walker_t;$/;"	t	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
Walker_t	OrbitalBase.h	/^  typedef ParticleSet::Walker_t     Walker_t;$/;"	t	struct:qmcplusplus::OrbitalBase
Walker_t	SPOSetBase.h	/^  typedef ParticleSet::Walker_t                      Walker_t;$/;"	t	class:qmcplusplus::SPOSetBase
Walker_t	TrialWaveFunction.h	/^  typedef ParticleSet::Walker_t        Walker_t;$/;"	t	class:qmcplusplus::TrialWaveFunction
WaveFunctionFactory	WaveFunctionFactory.cpp	/^WaveFunctionFactory::WaveFunctionFactory(ParticleSet* qp, PtclPoolType& pset, Communicate* c)$/;"	f	class:qmcplusplus::WaveFunctionFactory
WaveFunctionFactory	WaveFunctionFactory.h	/^struct WaveFunctionFactory: public MPIObjectBase$/;"	s	namespace:qmcplusplus
WorkSpace	AGPDeterminant.h	/^  ValueVector_t WorkSpace;$/;"	m	class:qmcplusplus::AGPDeterminant
WorkSpace	Experimental/DiracDeterminant.h	/^  Vector<ValueType> WorkSpace;$/;"	m	class:qmcplusplus::DiracDeterminant
WorkSpace	Fermion/DiracDeterminantBase.h	/^  Vector<ValueType> WorkSpace;$/;"	m	class:qmcplusplus::DiracDeterminantBase
WorkSpace	Fermion/MultiDiracDeterminantBase.h	/^  Vector<ValueType> WorkSpace;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
WorkSpace	Fermion/MultiDiracDeterminantWithBackflow.h	/^  Vector<ValueType> WorkSpace;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
WorkSpace_hp	Fermion/DiracDeterminantBase.h	/^  Vector<ParticleSet::ParticleValue_t> WorkSpace_hp;$/;"	m	class:qmcplusplus::DiracDeterminantBase
WorkingIndex	AGPDeterminant.h	/^  int WorkingIndex;$/;"	m	class:qmcplusplus::AGPDeterminant
WorkingIndex	Experimental/DiracDeterminant.h	/^  int WorkingIndex;$/;"	m	class:qmcplusplus::DiracDeterminant
WorkingIndex	Fermion/DiracDeterminantBase.h	/^  int WorkingIndex;$/;"	m	class:qmcplusplus::DiracDeterminantBase
WorkingIndex	Fermion/MultiDiracDeterminantBase.h	/^  int WorkingIndex;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
WorkingIndex	Fermion/MultiDiracDeterminantWithBackflow.h	/^  int WorkingIndex;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
WorkingPtcl	TrialWaveFunction.h	/^  int WorkingPtcl;$/;"	m	class:qmcplusplus::TrialWaveFunction
Write_Chiesa_Correction	Jastrow/eeI_JastrowOrbital.h	/^  bool Write_Chiesa_Correction;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
X	Experimental/QDwf.h	/^  std::vector<double> X;$/;"	m	class:QDwf
X2alpha	Experimental/CuspCorr.h	/^  void X2alpha(const ValueVector_t X)$/;"	f	class:qmcplusplus::CuspCorr
XMLRoot	EinsplineSetBuilder.h	/^  xmlNodePtr XMLRoot;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
XYZ	SphericalBasisSet.h	/^  CartesianHarmonics_t XYZ;$/;"	m	struct:qmcplusplus::SphericalBasisSet
Xk	Jastrow/LRBreakupUtilities.h	/^  inline T Xk(T k, T rc )$/;"	f	struct:qmcplusplus::DerivYukawaBreakup
Xk	Jastrow/LRBreakupUtilities.h	/^  inline T Xk(T k, T rc)$/;"	f	struct:qmcplusplus::DerivRPABreakup
Xk	Jastrow/LRBreakupUtilities.h	/^  inline T Xk(T k, T rc)$/;"	f	struct:qmcplusplus::EPRPABreakup
Xk	Jastrow/LRBreakupUtilities.h	/^  inline T Xk(T k, T rc)$/;"	f	struct:qmcplusplus::RPABFeeBreakup
Xk	Jastrow/LRBreakupUtilities.h	/^  inline T Xk(T k, T rc)$/;"	f	struct:qmcplusplus::RPABreakup
Xk	Jastrow/LRBreakupUtilities.h	/^  inline T Xk(T k, T rc)$/;"	f	struct:qmcplusplus::YukawaBreakup
Xk	Jastrow/LRBreakupUtilities.h	/^  inline T Xk(T k, T rc)$/;"	f	struct:qmcplusplus::derivEPRPABreakup
Xmat	Fermion/BackflowTransformation.h	/^  HessArray_t Xmat;$/;"	m	class:qmcplusplus::BackflowTransformation
Y	BasisSetBase.h	/^  ValueMatrix_t Y;$/;"	m	struct:qmcplusplus::BasisSetBase
Y	Experimental/PlaneWaveBasis.h	/^  Matrix<ValueType> Y;$/;"	m	class:qmcplusplus::PlaneWaveBasis
Y	Fermion/BFsplineFunctor.h	/^  real_type Y, dY, d2Y;$/;"	m	struct:qmcplusplus::BFsplineFunctor
Y	Jastrow/BsplineFunctor.h	/^  real_type Y, dY, d2Y;$/;"	m	struct:qmcplusplus::BsplineFunctor
Y	Jastrow/BsplineFunctor3D.h	/^  real_type Y, dY, d2Y;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
Y	Jastrow/CubicBsplineGroup.h	/^  value_type Y;$/;"	m	class:qmcplusplus::CubicBsplineGroup
Y	Jastrow/SplineFunctors.h	/^  real_type Y;$/;"	m	struct:qmcplusplus::CubicSplineSingle
Y	Jastrow/ThreeBodyBlockSparse.h	/^  Matrix<RealType> Y;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
Y	Jastrow/ThreeBodyGeminal.h	/^  Matrix<RealType> Y;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
Y	MolecularOrbitals/NGOBuilder.h	/^  real_type Y, dY, d2Y, d3Y;$/;"	m	struct:qmcplusplus::NGOrbital
Y0	Experimental/QDwf.h	/^  double Y0;\/\/var$/;"	m	class:QDwf
Ylm	AtomicOrbitals/HFAtomicSTOSet.h	/^  SphericalHarmonics_t Ylm;$/;"	m	struct:qmcplusplus::HFAtomicSTOSet
Ylm	AtomicOrbitals/HFAtomicSTOSet.h	/^  SphericalHarmonics_t& Ylm;$/;"	m	struct:qmcplusplus::ComboSTO
Ylm	SphericalBasisSet.h	/^  SphericalHarmonics_t Ylm;$/;"	m	struct:qmcplusplus::SphericalBasisSet
Ylm	SphericalOrbitalSet.h	/^  SphericalHarmonics_t Ylm;$/;"	m	struct:qmcplusplus::SphericalOrbitalSet
YlmIndex	EinsplineSet.h	/^  int lMax, PolyOrder, YlmIndex;$/;"	m	struct:qmcplusplus::AtomicPolyJob
YlmIndex	EinsplineSet.h	/^  int lMax, YlmIndex;$/;"	m	struct:qmcplusplus::AtomicSplineJob
YlmTimer	AtomicOrbital.h	/^  NewTimer YlmTimer, SplineTimer, SumTimer;$/;"	m	class:qmcplusplus::AtomicOrbital
YlmVec	AtomicOrbital.h	/^  std::vector<StorageType> YlmVec, dYlm_dthetaVec, dYlm_dphiVec, ulmVec, dulmVec, d2ulmVec;$/;"	m	class:qmcplusplus::AtomicOrbital
YlmVec	MuffinTin.h	/^  std::vector<std::complex<double> > YlmVec, dYlmVec;$/;"	m	class:qmcplusplus::MuffinTinClass
Ylm_BS	EinsplineSet.h	/^  int numlm, NumOrbitals, Ylm_BS;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
Ylm_GPU	EinsplineSet.h	/^  gpu::device_vector<CudaRealType> Ylm_GPU;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
Ylm_ptr_CPU	EinsplineSet.h	/^  gpu::host_vector<CudaRealType*> Ylm_ptr_CPU, dYlm_dtheta_ptr_CPU, dYlm_dphi_ptr_CPU;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
Ylm_ptr_GPU	EinsplineSet.h	/^  gpu::device_vector<CudaRealType*> Ylm_ptr_GPU, dYlm_dtheta_ptr_GPU, dYlm_dphi_ptr_GPU;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
Ymat	Fermion/BackflowTransformation.h	/^  GradMatrix_t Ymat;$/;"	m	class:qmcplusplus::BackflowTransformation
YukawaBreakup	Jastrow/LRBreakupUtilities.h	/^  inline YukawaBreakup() {}$/;"	f	struct:qmcplusplus::YukawaBreakup
YukawaBreakup	Jastrow/LRBreakupUtilities.h	/^struct YukawaBreakup$/;"	s	namespace:qmcplusplus
Z	AtomicOrbitals/HeSTOClementiRottie.h	/^  TinyVector<RealType,N> Z, ZZ;$/;"	m	struct:qmcplusplus::HePresetHF
Z	Experimental/CuspCorr.h	/^  RealType Rc_init,Rc,C,sg,Z,valAtZero,valAtRc,Rc_max;$/;"	m	class:qmcplusplus::CuspCorr
Z	Experimental/LCOrbitalSetWithCorrection.h	/^  std::vector<RealType> Z;$/;"	m	class:qmcplusplus::LCOrbitalSetWithCorrection
Z	PlaneWave/PWBasis.h	/^  Matrix<ComplexType> Z;$/;"	m	class:qmcplusplus::PWBasis
Z	TrialWaveFunction.h	/^  std::vector<OrbitalBase*> Z;$/;"	m	class:qmcplusplus::TrialWaveFunction
ZZ	AtomicOrbitals/HeSTOClementiRottie.h	/^  TinyVector<RealType,N> Z, ZZ;$/;"	m	struct:qmcplusplus::HePresetHF
Zeff	Jastrow/ModPadeFunctor.h	/^  real_type Zeff;$/;"	m	struct:qmcplusplus::ModPadeFunctor
Zv	PlaneWave/PWBasis.h	/^  Vector<ComplexType> Zv;$/;"	m	class:qmcplusplus::PWBasis
_CUSPCORR_	Experimental/CuspCorr.h	17;"	d
a	EinsplineSet.h	/^  int a;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
a	Experimental/QDwf.h	/^  std::vector<double> a;$/;"	m	class:QDwf
a0	MolecularOrbitals/NGOBuilder.cpp	/^  real_type a0,a1,a2,a3,rcut;$/;"	m	struct:qmcplusplus::PadeOrbital	file:
a1	MolecularOrbitals/NGOBuilder.cpp	/^  real_type a0,a1,a2,a3,rcut;$/;"	m	struct:qmcplusplus::PadeOrbital	file:
a2	MolecularOrbitals/NGOBuilder.cpp	/^  real_type a0,a1,a2,a3,rcut;$/;"	m	struct:qmcplusplus::PadeOrbital	file:
a3	MolecularOrbitals/NGOBuilder.cpp	/^  real_type a0,a1,a2,a3,rcut;$/;"	m	struct:qmcplusplus::PadeOrbital	file:
acceptMove	AGPDeterminant.cpp	/^void AGPDeterminant::acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::AGPDeterminant
acceptMove	ConstantOrbital.h	/^  virtual void acceptMove(ParticleSet& P, int iat) {}$/;"	f	class:qmcplusplus::ConstantOrbital
acceptMove	Experimental/DiracDeterminant.h	/^  void acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::DiracDeterminant
acceptMove	Experimental/SlaterDeterminant.h	/^  inline void acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::SlaterDeterminant
acceptMove	Experimental/TwoBodyJastrowFunction.Shared.h	/^  void acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::TwoBodyJastrow
acceptMove	Experimental/TwoBodyJastrowFunction.h	/^  void acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::TwoBodyJastrow
acceptMove	FDLRWfn.h	/^    void acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::FDLRWfn
acceptMove	Fermion/BackflowTransformation.h	/^  acceptMove(const ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::BackflowTransformation
acceptMove	Fermion/Backflow_eI.h	/^  acceptMove(int iat, int UpdateMode)$/;"	f	class:qmcplusplus::Backflow_eI
acceptMove	Fermion/Backflow_eI_spin.h	/^  acceptMove(int iat, int UpdateMode)$/;"	f	class:qmcplusplus::Backflow_eI_spin
acceptMove	Fermion/Backflow_ee.h	/^  acceptMove(int iat, int UpdateMode)$/;"	f	class:qmcplusplus::Backflow_ee
acceptMove	Fermion/Backflow_ee_kSpace.h	/^  acceptMove(int iat, int UpdateMode)$/;"	f	class:qmcplusplus::Backflow_ee_kSpace
acceptMove	Fermion/DiracDeterminantBase.cpp	/^void DiracDeterminantBase::acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::DiracDeterminantBase
acceptMove	Fermion/DiracDeterminantTruncation.cpp	/^void DiracDeterminantTruncation::acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::DiracDeterminantTruncation
acceptMove	Fermion/DiracDeterminantWithBackflow.cpp	/^void DiracDeterminantWithBackflow::acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
acceptMove	Fermion/MultiDiracDeterminantBase.cpp	/^void MultiDiracDeterminantBase::acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
acceptMove	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^void MultiDiracDeterminantBase::acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
acceptMove	Fermion/MultiSlaterDeterminant.cpp	/^void MultiSlaterDeterminant::acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::MultiSlaterDeterminant
acceptMove	Fermion/MultiSlaterDeterminantFast.cpp	/^void MultiSlaterDeterminantFast::acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
acceptMove	Fermion/MultiSlaterDeterminantWithBackflow.cpp	/^void MultiSlaterDeterminantWithBackflow::acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
acceptMove	Fermion/RNDiracDeterminantBase.cpp	/^void RNDiracDeterminantBase::acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::RNDiracDeterminantBase
acceptMove	Fermion/RNDiracDeterminantBaseAlternate.cpp	/^void RNDiracDeterminantBaseAlternate::acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
acceptMove	Fermion/SlaterDet.h	/^  inline void acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::SlaterDet
acceptMove	Fermion/SlaterDetOpt.cpp	/^void SlaterDetOpt::acceptMove(ParticleSet& P, int iat) {$/;"	f	class:qmcplusplus::SlaterDetOpt
acceptMove	Fermion/SlaterDetWithBackflow.h	/^  inline void acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
acceptMove	IonOrbital.cpp	/^IonOrbital::acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::IonOrbital
acceptMove	Jastrow/LRTwoBodyJastrow.cpp	/^void LRTwoBodyJastrow::acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
acceptMove	Jastrow/OneBodyJastrowOrbital.h	/^  void acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
acceptMove	Jastrow/OneBodySpinJastrowOrbital.h	/^  void acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
acceptMove	Jastrow/PolarizedJastrow.h	/^  void acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::PolarizedJastrow
acceptMove	Jastrow/RPAJastrow.cpp	/^void RPAJastrow::acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::RPAJastrow
acceptMove	Jastrow/ThreeBodyBlockSparse.cpp	/^void ThreeBodyBlockSparse::acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
acceptMove	Jastrow/ThreeBodyGeminal.cpp	/^void ThreeBodyGeminal::acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
acceptMove	Jastrow/ThreeBodyJastrowOrbital.h	/^  void acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
acceptMove	Jastrow/ThreeBodyPade.h	/^  void acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::ThreeBodyPade
acceptMove	Jastrow/TwoBodyJastrowOrbital.h	/^  void acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
acceptMove	Jastrow/eeI_JastrowOrbital.h	/^  void acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
acceptMove	Jastrow/kSpaceJastrow.cpp	/^kSpaceJastrow::acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::kSpaceJastrow
acceptMove	LCOrbitalSetOpt.h	/^    void acceptMove(ParticleSet& P, int iat) {}$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
acceptMove	ProductOrbital.cpp	/^void ProductOrbital::acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::ProductOrbital
acceptMove	TrialWaveFunction.cpp	/^void   TrialWaveFunction::acceptMove(ParticleSet& P,int iat)$/;"	f	class:qmcplusplus::TrialWaveFunction
activeBasis	Experimental/TricubicBsplineSetBuilder.h	/^  BsplineBasisType* activeBasis;$/;"	m	class:qmcplusplus::TricubicBsplineSetBuilder
activeOptm	Fermion/GaussianFunctor.h	/^  std::vector<bool> activeOptm;$/;"	m	class:qmcplusplus::GaussianFunctor
activeParticle	Fermion/BackflowTransformation.h	/^  int activeParticle;$/;"	m	class:qmcplusplus::BackflowTransformation
add	CompositeSPOSet.cpp	/^  void CompositeSPOSet::add(SPOSetBase* component)$/;"	f	class:qmcplusplus::CompositeSPOSet
add	Experimental/Bspline3DSetBase.cpp	/^void Bspline3DSetBase::add(int i, StorageType* curP)$/;"	f	class:qmcplusplus::Bspline3DSetBase
add	Experimental/Bspline3DSetBase.cpp	/^void Bspline3DSetBase::add(int i, const StorageType& data, StorageType* curP)$/;"	f	class:qmcplusplus::Bspline3DSetBase
add	Experimental/CorrectingOrbitalBasisSet.h	/^  void add(int icenter, COT* aos)$/;"	f	struct:qmcplusplus::CorrectingOrbitalBasisSet
add	Experimental/SingleParticleOrbitalSet.h	/^  int add(SPOrbital_t* afunction )$/;"	f	struct:qmcplusplus::SingleParticleOrbitalSet
add	Experimental/SlaterDeterminant.h	/^  void add(Determinant_t* det)$/;"	f	class:qmcplusplus::SlaterDeterminant
add	Experimental/TricubicBsplineSPOSet.h	/^  void add(int i, const PosType& c, StorageType* curP)$/;"	f	class:qmcplusplus::TricubicBsplineSPOSet
add	Experimental/TricubicBsplineSPOSet.h	/^  void add(int i, const PosType& c, const StorageType& data, StorageType* curP)$/;"	f	class:qmcplusplus::TricubicBsplineSPOSet
add	Experimental/TricubicBsplineSPOSet.h	/^  void add(int i,const PosType& c,  StorageType* curP)$/;"	f	class:qmcplusplus::TricubicBsplineSPOSet
add	Experimental/TricubicBsplineTwistSet.h	/^  void add(int i, const PosType& c, StorageType* curP)$/;"	f	class:qmcplusplus::TricubicBsplineTwistSet
add	Experimental/TricubicBsplineTwistSet.h	/^  void add(int i, const PosType& c, const StorageType& data, StorageType* curP)$/;"	f	class:qmcplusplus::TricubicBsplineTwistSet
add	Fermion/GaussianFunctor.h	/^  void add(real_type pos, real_type c, real_type exponent)$/;"	f	class:qmcplusplus::GaussianFunctor
add	Fermion/SlaterDet.cpp	/^void SlaterDet::add(Determinant_t* det, int ispin)$/;"	f	class:qmcplusplus::SlaterDet
add	Fermion/SlaterDet.cpp	/^void SlaterDet::add(SPOSetBase* sposet, const std::string& aname)$/;"	f	class:qmcplusplus::SlaterDet
add	Jastrow/PolyFunctor.h	/^  inline void add(real_type c, int i)$/;"	f	struct:qmcplusplus::PolyFunctor
add	LocalizedBasisSet.h	/^  void add(int icenter, COT* aos)$/;"	f	struct:qmcplusplus::LocalizedBasisSet
add	MixedSPOSet.h	/^  void add(NGOType* ngorb)$/;"	f	class:qmcplusplus::MixedSPOSet
add	SPOSetComboNoCopy.h	/^    inline void add(SPOSetBase* a)$/;"	f	struct:qmcplusplus::SPOSetComboNoCopy
add	SPOSetInfo.cpp	/^  void SPOSetInfo::add(SPOInfo& state)$/;"	f	class:qmcplusplus::SPOSetInfo
add	SPOSetInfo.cpp	/^  void SPOSetInfo::add(SPOInfo* state)$/;"	f	class:qmcplusplus::SPOSetInfo
add	SPOSetInfo.cpp	/^  void SPOSetInfo::add(SPOSetInfo& other)$/;"	f	class:qmcplusplus::SPOSetInfo
add	SPOSetInfo.cpp	/^  void SPOSetInfo::add(std::vector<SPOInfo*>& state_vector)$/;"	f	class:qmcplusplus::SPOSetInfo
add	SPOSetInfo.h	/^    inline void add(SPOI* state)$/;"	f	struct:qmcplusplus::SPOSetInfoSimple
add	SparseLocalizedBasisSet.h	/^  void add(int icenter, COT* aos)$/;"	f	struct:qmcplusplus::SparseLocalizedBasisSet
add	Spline3D/SplineBasisSet.h	/^  void add(int i, StorageType* curP)$/;"	f	class:qmcplusplus::SplineBasisSet
add	Spline3D/SplineBasisSet.h	/^  void add(int i, const StorageType& data, StorageType* curP)$/;"	f	class:qmcplusplus::SplineBasisSet
add2BasisGroup	Jastrow/Experimental/AnyConstraints.cpp	/^void AnyConstraints::add2BasisGroup(BasisGroupType* curBG, xmlNodePtr cur)$/;"	f	class:qmcplusplus::AnyConstraints
add2BasisGroup	Jastrow/WMJastrowBuilder.cpp	/^void WMJastrowBuilder::add2BasisGroup(BasisGroupType* curBG, xmlNodePtr cur)$/;"	f	class:qmcplusplus::WMJastrowBuilder
addBasisGroup	Jastrow/Experimental/WMConstraints.cpp	/^void WMConstraints::addBasisGroup(xmlNodePtr cur)$/;"	f	class:qmcplusplus::WMConstraints
addBasisSet	Experimental/STOMolecularOrbitals.cpp	/^STOMolecularOrbitals::addBasisSet(xmlNodePtr cur)$/;"	f	class:qmcplusplus::STOMolecularOrbitals
addBasisSet	MolecularOrbitals/GTOMolecularOrbitals.cpp	/^GTOMolecularOrbitals::addBasisSet(xmlNodePtr cur)$/;"	f	class:qmcplusplus::GTOMolecularOrbitals
addComponent	Jastrow/LinearCombinationFunctor.h	/^  void addComponent(ComponentType* func, real_type c,  std::string& id, bool fixit=false)$/;"	f	struct:LinearCombinationFunctor
addComponent	Jastrow/WMFunctor.h	/^  inline void addComponent(real_type c, real_type b, const std::string& aname)$/;"	f	struct:qmcplusplus::WMFunctorSet
addCore	MuffinTin.cpp	/^MuffinTinClass::addCore (int l, int m, Vector<double> &r, Vector<double> &g0,$/;"	f	class:qmcplusplus::MuffinTinClass
addExtra2ComboOrbital	Jastrow/Experimental/AnyConstraints.h	/^  void addExtra2ComboOrbital(ComboOrbital* jcombo) {}$/;"	f	struct:qmcplusplus::AnyConstraints
addExtra2ComboOrbital	Jastrow/Experimental/PadeConstraints.h	/^  void addExtra2ComboOrbital(ComboOrbital* jcombo) {}$/;"	f	struct:qmcplusplus::PadeConstraints
addExtra2ComboOrbital	Jastrow/Experimental/PadeConstraints.h	/^  void addExtra2ComboOrbital(ComboOrbital* jcombo) {}$/;"	f	struct:qmcplusplus::ScaledPadeConstraints
addExtra2ComboOrbital	Jastrow/PolyConstraints.h	/^  void addExtra2ComboOrbital(ComboOrbital* jcombo) {}$/;"	f	struct:qmcplusplus::PolyConstraints
addFDLRTerm	WaveFunctionFactory.cpp	/^bool WaveFunctionFactory::addFDLRTerm(xmlNodePtr cur)$/;"	f	class:qmcplusplus::WaveFunctionFactory
addFermionTerm	WaveFunctionFactory.cpp	/^bool WaveFunctionFactory::addFermionTerm(xmlNodePtr cur)$/;"	f	class:qmcplusplus::WaveFunctionFactory
addFunc	Fermion/Backflow_eI_spin.h	/^  void addFunc(int source_g, FT* afunc, int target_g)$/;"	f	class:qmcplusplus::Backflow_eI_spin
addFunc	Fermion/Backflow_ee.h	/^  void addFunc(int ia, int ib, FT* rf)$/;"	f	class:qmcplusplus::Backflow_ee
addFunc	Fermion/Backflow_ee_kSpace.h	/^  void addFunc(int ia, int ib)$/;"	f	class:qmcplusplus::Backflow_ee_kSpace
addFunc	Jastrow/DiffOneBodyJastrowOrbital.h	/^  void addFunc(int source_type, FT* afunc, int target_type=-1)$/;"	f	class:qmcplusplus::DiffOneBodyJastrowOrbital
addFunc	Jastrow/DiffOneBodySpinJastrowOrbital.h	/^  void addFunc(int source_g, FT* afunc, int target_g=-1)$/;"	f	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
addFunc	Jastrow/DiffTwoBodyJastrowOrbital.h	/^  void addFunc(int ia, int ib, FT* j)$/;"	f	class:qmcplusplus::DiffTwoBodyJastrowOrbital
addFunc	Jastrow/OneBodyJastrowOrbital.h	/^  void addFunc(int source_type, FT* afunc, int target_type=-1)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
addFunc	Jastrow/OneBodyJastrowOrbitalBspline.cpp	/^OneBodyJastrowOrbitalBspline::addFunc(int ig, FT* j, int jg=-1)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
addFunc	Jastrow/OneBodySpinJastrowOrbital.h	/^  void addFunc(int source_g, FT* afunc, int target_g=-1)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
addFunc	Jastrow/ThreeBodyJastrowOrbital.h	/^  void addFunc(int source_type, FT* afunc)$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
addFunc	Jastrow/ThreeBodyPade.h	/^  void addFunc(int source_type, FT* afunc)$/;"	f	class:qmcplusplus::ThreeBodyPade
addFunc	Jastrow/TwoBodyJastrowOrbital.h	/^  void addFunc(int ia, int ib, FT* j)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
addFunc	Jastrow/TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::addFunc(int ia, int ib, FT* j)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
addFunc	Jastrow/eeI_JastrowOrbital.h	/^  void addFunc(int iSpecies,$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
addGaussian	Experimental/Any2GridBuilder.cpp	/^void Any2GridBuilder::addGaussian(xmlNodePtr cur)$/;"	f	class:qmcplusplus::Any2GridBuilder
addGaussian	MolecularOrbitals/NGOBuilder.cpp	/^void NGOBuilder::addGaussian(xmlNodePtr cur)$/;"	f	class:qmcplusplus::NGOBuilder
addGradient	Fermion/DiracDeterminantBase.h	/^  addGradient(MCWalkerConfiguration &W, int iat,$/;"	f	class:qmcplusplus::DiracDeterminantBase
addGradient	Fermion/DiracDeterminantCUDA.cpp	/^DiracDeterminantCUDA::addGradient(MCWalkerConfiguration &W, int iat,$/;"	f	class:qmcplusplus::DiracDeterminantCUDA
addGradient	Fermion/SlaterDet.h	/^  void addGradient(MCWalkerConfiguration &W, int iat, std::vector<GradType> &grad)$/;"	f	class:qmcplusplus::SlaterDet
addGradient	Jastrow/OneBodyJastrowOrbitalBspline.cpp	/^void OneBodyJastrowOrbitalBspline::addGradient$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
addGradient	Jastrow/TwoBodyJastrowOrbitalBspline.cpp	/^void TwoBodyJastrowOrbitalBspline::addGradient(MCWalkerConfiguration &W, int iat,$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
addGradient	OrbitalBase.h	/^  addGradient(MCWalkerConfiguration &W, int iat,$/;"	f	struct:qmcplusplus::OrbitalBase
addGradient	TrialWaveFunction_CUDA.cpp	/^TrialWaveFunction::addGradient (MCWalkerConfiguration &W, int iat,$/;"	f	class:qmcplusplus::TrialWaveFunction
addGrid	Experimental/NumericalRGFBuilder.cpp	/^NumericalRGFBuilder::addGrid(xmlNodePtr cur)$/;"	f	class:qmcplusplus::NumericalRGFBuilder
addGrid	Jastrow/CBSOBuilder.cpp	/^CBSOBuilder::addGrid(xmlNodePtr cur)$/;"	f	class:qmcplusplus::CBSOBuilder
addGrid	MolecularOrbitals/BsplineAOBuilder.h	/^  bool addGrid(xmlNodePtr cur)$/;"	f	class:qmcplusplus::BsplineAOBuilder
addGrid	MolecularOrbitals/GTOBuilder.h	/^  bool addGrid(xmlNodePtr cur)$/;"	f	class:qmcplusplus::GTOBuilder
addGrid	MolecularOrbitals/NGOBuilder.cpp	/^bool NGOBuilder::addGrid(xmlNodePtr cur)$/;"	f	class:qmcplusplus::NGOBuilder
addGrid	MolecularOrbitals/STOBuilder.h	/^  bool addGrid(xmlNodePtr cur)$/;"	f	class:qmcplusplus::STOBuilder
addLog	Fermion/DiracDeterminantBase.h	/^  addLog (MCWalkerConfiguration &W, std::vector<RealType> &logPsi)$/;"	f	class:qmcplusplus::DiracDeterminantBase
addLog	Fermion/DiracDeterminantCUDA.cpp	/^DiracDeterminantCUDA::addLog (MCWalkerConfiguration &W, std::vector<RealType> &logPsi)$/;"	f	class:qmcplusplus::DiracDeterminantCUDA
addLog	Fermion/SlaterDet.h	/^  void addLog (MCWalkerConfiguration &W, std::vector<RealType> &logPsi)$/;"	f	class:qmcplusplus::SlaterDet
addLog	Jastrow/OneBodyJastrowOrbitalBspline.cpp	/^OneBodyJastrowOrbitalBspline::addLog (MCWalkerConfiguration &W,$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
addLog	Jastrow/TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::addLog (MCWalkerConfiguration &W,$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
addLog	OrbitalBase.h	/^  addLog (MCWalkerConfiguration &W,$/;"	f	struct:qmcplusplus::OrbitalBase
addNode	WaveFunctionFactory.cpp	/^bool WaveFunctionFactory::addNode(OrbitalBuilderBase* b, xmlNodePtr cur)$/;"	f	class:qmcplusplus::WaveFunctionFactory
addNumerical	MolecularOrbitals/NGOBuilder.cpp	/^void NGOBuilder::addNumerical(xmlNodePtr cur, const std::string& dsname)$/;"	f	class:qmcplusplus::NGOBuilder
addOneBody	Fermion/BackflowBuilder.cpp	/^void BackflowBuilder::addOneBody(xmlNodePtr cur)$/;"	f	class:qmcplusplus::BackflowBuilder
addOneBody	Jastrow/JastrowBuilder.cpp	/^bool JastrowBuilder::addOneBody(xmlNodePtr cur)$/;"	f	class:qmcplusplus::JastrowBuilder
addOneBody	Jastrow/WMJastrowBuilder.cpp	/^bool WMJastrowBuilder::addOneBody(xmlNodePtr cur)$/;"	f	class:qmcplusplus::WMJastrowBuilder
addOptimizables	Experimental/NoCuspFunctor.h	/^  void addOptimizables(OptimizableSetType& vlist)$/;"	f	struct:qmcplusplus::NoCuspFunctor
addOptimizables	Jastrow/DerivPadeFunctors.h	/^  void addOptimizables(OptimizableSetType& vlist)$/;"	f	struct:qmcplusplus::D2PadeDB2Functor
addOptimizables	Jastrow/DerivPadeFunctors.h	/^  void addOptimizables(OptimizableSetType& vlist)$/;"	f	struct:qmcplusplus::DPadeDBFunctor
addOptimizables	Jastrow/DerivWMFunctor.h	/^  void addOptimizables(OptimizableSetType& vlist)$/;"	f	struct:qmcplusplus::D2WMDB2Functor
addOptimizables	Jastrow/DerivWMFunctor.h	/^  void addOptimizables(OptimizableSetType& vlist)$/;"	f	struct:qmcplusplus::DWMDBFunctor
addOptimizables	Jastrow/Experimental/WMConstraints.cpp	/^void WMConstraints::addOptimizables(VarRegistry<RealType>& outVars)$/;"	f	class:qmcplusplus::WMConstraints
addOptimizables	Jastrow/PolyConstraints.cpp	/^void PolyConstraints::addOptimizables(OptimizableSetType& outVars)$/;"	f	class:qmcplusplus::PolyConstraints
addOptimizables	Jastrow/PolyFunctor.h	/^  void addOptimizables(OptimizableSetType& vlist)$/;"	f	struct:qmcplusplus::PolyFunctor
addOptimizables	Jastrow/RPAJastrowFunctor.h	/^  void addOptimizables(OptimizableSetType& vlist)$/;"	f	struct:qmcplusplus::RPAJastrowFunctor
addOptimizables	MolecularOrbitals/NGOBuilder.cpp	/^  void addOptimizables( VarRegistry<real_type>& vlist) {}$/;"	f	struct:qmcplusplus::PadeOrbital
addOrbital	DiffOrbitalBase.h	/^  inline void addOrbital(OrbitalBase* psi)$/;"	f	struct:qmcplusplus::DiffOrbitalBase
addOrbital	TrialWaveFunction.cpp	/^TrialWaveFunction::addOrbital(OrbitalBase* aterm, const std::string& aname, bool fermion)$/;"	f	class:qmcplusplus::TrialWaveFunction
addPade	Experimental/Any2GridBuilder.cpp	/^void Any2GridBuilder::addPade(xmlNodePtr cur)$/;"	f	class:qmcplusplus::Any2GridBuilder
addPade	MolecularOrbitals/NGOBuilder.cpp	/^void NGOBuilder::addPade(xmlNodePtr cur)$/;"	f	class:qmcplusplus::NGOBuilder
addParameter	OptimizableSPOSet.cpp	/^OptimizableSPOSet::addParameter ( std::string id, int iorb, int basis)$/;"	f	class:qmcplusplus::OptimizableSPOSet
addParams	TrialWaveFunction.h	/^  void addParams(opt_variables_type& var, RealType e, RealType v)$/;"	f	struct:qmcplusplus::CoefficientHolder
addRPA	Fermion/BackflowBuilder.cpp	/^void BackflowBuilder::addRPA(xmlNodePtr cur)$/;"	f	class:qmcplusplus::BackflowBuilder
addRadialOrbital	Experimental/Any2GridBuilder.cpp	/^Any2GridBuilder::addRadialOrbital(xmlNodePtr cur, const QuantumNumberType& nlms)$/;"	f	class:qmcplusplus::Any2GridBuilder
addRadialOrbital	Experimental/NumericalRGFBuilder.cpp	/^NumericalRGFBuilder::addRadialOrbital(xmlNodePtr cur,$/;"	f	class:qmcplusplus::NumericalRGFBuilder
addRadialOrbital	Jastrow/CBSOBuilder.cpp	/^CBSOBuilder::addRadialOrbital(xmlNodePtr cur, const QuantumNumberType& nlms)$/;"	f	class:qmcplusplus::CBSOBuilder
addRadialOrbital	MolecularOrbitals/BsplineAOBuilder.cpp	/^BsplineAOBuilder::addRadialOrbital(xmlNodePtr cur, const QuantumNumberType& nlms, bool useSphericalHarmonicsNormalization)$/;"	f	class:qmcplusplus::BsplineAOBuilder
addRadialOrbital	MolecularOrbitals/GTOBuilder.cpp	/^GTOBuilder::addRadialOrbital(xmlNodePtr cur, const QuantumNumberType& nlms)$/;"	f	class:qmcplusplus::GTOBuilder
addRadialOrbital	MolecularOrbitals/NGOBuilder.cpp	/^NGOBuilder::addRadialOrbital(xmlNodePtr cur, const QuantumNumberType& nlms)$/;"	f	class:qmcplusplus::NGOBuilder
addRadialOrbital	MolecularOrbitals/STOBuilder.cpp	/^STOBuilder::addRadialOrbital(xmlNodePtr cur, const QuantumNumberType& nlms)$/;"	f	class:qmcplusplus::STOBuilder
addRatio	Fermion/DiracDeterminantBase.h	/^  addRatio (MCWalkerConfiguration &W, int iat,$/;"	f	class:qmcplusplus::DiracDeterminantBase
addRatio	Fermion/DiracDeterminantCUDA.cpp	/^void DiracDeterminantCUDA::addRatio (MCWalkerConfiguration &W, int iat,$/;"	f	class:qmcplusplus::DiracDeterminantCUDA
addRatio	Fermion/SlaterDet.h	/^  addRatio (MCWalkerConfiguration &W, int iat$/;"	f	class:qmcplusplus::SlaterDet
addRatio	Jastrow/OneBodyJastrowOrbitalBspline.cpp	/^OneBodyJastrowOrbitalBspline::addRatio$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
addRatio	Jastrow/TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::addRatio$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
addRatio	OrbitalBase.h	/^  addRatio (MCWalkerConfiguration &W, int iat,$/;"	f	struct:qmcplusplus::OrbitalBase
addRatio	TrialWaveFunction_CUDA.cpp	/^TrialWaveFunction::addRatio (MCWalkerConfiguration &W, int iat,$/;"	f	class:qmcplusplus::TrialWaveFunction
addSPO	FermionBase.cpp	/^void FermionBase::addSPO(const std::string& aname, SPOSetBase* sposet)$/;"	f	class:qmcplusplus::FermionBase
addSibling	Jastrow/CubicBsplineGroup.h	/^  void addSibling(ThisType* a)$/;"	f	class:qmcplusplus::CubicBsplineGroup
addSingleBasisPerSpecies	Jastrow/Experimental/AnyConstraints.cpp	/^void AnyConstraints::addSingleBasisPerSpecies(xmlNodePtr cur)$/;"	f	class:qmcplusplus::AnyConstraints
addSingleBasisPerSpecies	Jastrow/PolyConstraints.cpp	/^void PolyConstraints::addSingleBasisPerSpecies(xmlNodePtr cur)$/;"	f	class:qmcplusplus::PolyConstraints
addSingleBasisPerSpecies	Jastrow/WMJastrowBuilder.cpp	/^void WMJastrowBuilder::addSingleBasisPerSpecies(xmlNodePtr cur)$/;"	f	class:qmcplusplus::WMJastrowBuilder
addSlater	Experimental/Any2GridBuilder.cpp	/^void Any2GridBuilder::addSlater(xmlNodePtr cur)$/;"	f	class:qmcplusplus::Any2GridBuilder
addSlater	MolecularOrbitals/NGOBuilder.cpp	/^void NGOBuilder::addSlater(xmlNodePtr cur)$/;"	f	class:qmcplusplus::NGOBuilder
addSlaterDeterminant	Experimental/NumericalOrbitalSetBuilder.cpp	/^NumericalOrbitalSetBuilder::addSlaterDeterminant(xmlNodePtr cur)$/;"	f	class:qmcplusplus::NumericalOrbitalSetBuilder
addThreeBody	Jastrow/JastrowBuilder.cpp	/^bool JastrowBuilder::addThreeBody(xmlNodePtr cur)$/;"	f	class:qmcplusplus::JastrowBuilder
addTwoBody	Fermion/BackflowBuilder.cpp	/^void BackflowBuilder::addTwoBody(xmlNodePtr cur)$/;"	f	class:qmcplusplus::BackflowBuilder
addTwoBody	Jastrow/JastrowBuilder.cpp	/^bool JastrowBuilder::addTwoBody(xmlNodePtr cur)$/;"	f	class:qmcplusplus::JastrowBuilder
addTwoBody	Jastrow/WMJastrowBuilder.cpp	/^bool WMJastrowBuilder::addTwoBody(xmlNodePtr cur)$/;"	f	class:qmcplusplus::WMJastrowBuilder
addTwoBodyPart	Jastrow/Experimental/WMConstraints.h	/^  inline void addTwoBodyPart(ParticleSet& target, ComboOrbital* jcombo)$/;"	f	struct:qmcplusplus::WMConstraints
addVector	Experimental/PlaneWaveOrbitalSet.h	/^  inline void addVector(std::vector<ValueType> coefs,int jorb)$/;"	f	class:qmcplusplus::PlaneWaveOrbitalSet
addVector	PlaneWave/PWOrbitalSet.cpp	/^void PWOrbitalSet::addVector(const std::vector<ComplexType>& coefs,int jorb)$/;"	f	class:qmcplusplus::PWOrbitalSet
addVector	PlaneWave/PWOrbitalSet.cpp	/^void PWOrbitalSet::addVector(const std::vector<RealType>& coefs,int jorb)$/;"	f	class:qmcplusplus::PWOrbitalSet
addVector	PlaneWave/PWRealOrbitalSet.cpp	/^void PWRealOrbitalSet::addVector(const std::vector<ComplexType>& coefs,int jorb)$/;"	f	class:qmcplusplus::PWRealOrbitalSet
addVector	PlaneWave/PWRealOrbitalSet.cpp	/^void PWRealOrbitalSet::addVector(const std::vector<RealType>& coefs,int jorb)$/;"	f	class:qmcplusplus::PWRealOrbitalSet
add_box	Experimental/EinsplineMixedAdoptor.h	/^  void add_box(UBspline* dense, PT& lower, PT& upper)$/;"	f	struct:qmcplusplus::SplineMixedAdoptor
add_box	Experimental/EinsplineMixedAdoptor.h	/^  void add_box(UBspline* dense, PT& lower, PT& upper)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
add_box	Experimental/SplineOpenAdoptor.h	/^  void add_box(UBspline* dense, PT& lower, PT& upper)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
add_box	SplineMixedAdoptor.h	/^  void add_box(SingleSplineType* dense, PT& lower, PT& upper)$/;"	f	struct:qmcplusplus::SplineMixedAdoptor
add_box	SplineMixedAdoptor.h	/^  void add_box(SingleSplineType* dense, PT& lower, PT& upper)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
add_child	Fermion/excitation_node.h	/^  inline void add_child(int i)$/;"	f	struct:qmcplusplus::excitation_node
add_derivatives	LCOrbitalSetOpt.h	/^    void add_derivatives(const int nl,$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
add_eeI	Jastrow/JastrowBuilder.cpp	/^bool JastrowBuilder::add_eeI (xmlNodePtr cur)$/;"	f	class:qmcplusplus::JastrowBuilder
add_grad_derivatives	LCOrbitalSetOpt.h	/^    void add_grad_derivatives(const int nl,$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
add_orbs_to_tf	Fermion/SlaterDetOpt.cpp	/^void SlaterDetOpt::add_orbs_to_tf(TrialWaveFunction & twf, const std::string & name) {$/;"	f	class:qmcplusplus::SlaterDetOpt
addkSpace	Jastrow/JastrowBuilder.cpp	/^bool JastrowBuilder::addkSpace(xmlNodePtr cur)$/;"	f	class:qmcplusplus::JastrowBuilder
addsignforM	MolecularOrbitals/AtomicBasisBuilder.h	/^  bool addsignforM;$/;"	m	struct:qmcplusplus::AtomicBasisBuilder
adoptor_type	Experimental/SplineOpenAdoptor.h	/^  typedef SplineOpenAdoptor<T,double,3> adoptor_type;$/;"	t	struct:qmcplusplus::SplineOpenAdoptorReader
adoptor_type	SplineAdoptorReaderP.h	/^  typedef SA adoptor_type;$/;"	t	struct:qmcplusplus::SplineAdoptorReader
adoptor_type	SplineMixedAdoptorReaderP.h	/^  typedef SA adoptor_type;$/;"	t	struct:qmcplusplus::SplineMixedAdoptorReader
adoptor_type	legacy/SplineAdoptorReader.h	/^  typedef SA adoptor_type;$/;"	t	struct:qmcplusplus::SplineAdoptorReader
adoptor_type	legacy/SplineMixedAdoptorReader.h	/^  typedef SA adoptor_type;$/;"	t	struct:qmcplusplus::SplineMixedAdoptorReader
agpDet	AGPDeterminantBuilder.h	/^  AGPDeterminant* agpDet;$/;"	m	class:qmcplusplus::AGPDeterminantBuilder
all_indices	SPOSetInputInfo.h	/^    indices_t    all_indices;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
all_indices_computed	SPOSetInputInfo.h	/^    bool all_indices_computed;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
allocate	AtomicOrbital.cpp	/^AtomicOrbital<double>::allocate()$/;"	f	class:qmcplusplus::AtomicOrbital
allocate	AtomicOrbital.cpp	/^AtomicOrbital<std::complex<double> >::allocate()$/;"	f	class:qmcplusplus::AtomicOrbital
allocate	EinsplineSet.h	/^  void allocate(GT& xyz_g, BCT& xyz_bc, int nv)$/;"	f	class:qmcplusplus::EinsplineSetExtended
alp	Fermion/GaussianFunctor.h	/^  std::vector<real_type> alp;$/;"	m	class:qmcplusplus::GaussianFunctor
alp_id	Fermion/GaussianFunctor.h	/^  std::vector<std::string> alp_id;$/;"	m	class:qmcplusplus::GaussianFunctor
alpha	Experimental/CuspCorr.h	/^  ValueVector_t alpha,coeff;$/;"	m	class:qmcplusplus::CuspCorr
alpha	Jastrow/ChebyshevFunctor.h	/^  std::vector<T> alpha;$/;"	m	struct:ChebyshevFunctor
alpha	Jastrow/PolarizedJastrow.h	/^  RealType alpha;$/;"	m	class:qmcplusplus::PolarizedJastrow
alternateCurRatio	Fermion/RNDiracDeterminantBase.h	/^  ValueType alternateCurRatio;$/;"	m	class:qmcplusplus::RNDiracDeterminantBase
alternateCurRatio	Fermion/RNDiracDeterminantBaseAlternate.h	/^  ValueType alternateCurRatio;$/;"	m	class:qmcplusplus::RNDiracDeterminantBaseAlternate
alternateEvalGrad	Fermion/RNDiracDeterminantBaseAlternate.cpp	/^RNDiracDeterminantBaseAlternate::alternateEvalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
alternateEvalGrad	Fermion/SlaterDet.h	/^  GradType alternateEvalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::SlaterDet
alternateEvalGrad	Fermion/SlaterDetWithBackflow.h	/^  GradType alternateEvalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
alternateEvalGrad	OrbitalBase.h	/^  virtual GradType alternateEvalGrad(ParticleSet& P, int iat)$/;"	f	struct:qmcplusplus::OrbitalBase
alternateEvalGrad	TrialWaveFunction.cpp	/^TrialWaveFunction::GradType TrialWaveFunction::alternateEvalGrad(ParticleSet& P,int iat)$/;"	f	class:qmcplusplus::TrialWaveFunction
alternateGrad	Fermion/RNDiracDeterminantBase.cpp	/^void RNDiracDeterminantBase::alternateGrad(ParticleSet::ParticleGradient_t& G)$/;"	f	class:qmcplusplus::RNDiracDeterminantBase
alternateGrad	Fermion/SlaterDet.h	/^  inline void alternateGrad(ParticleSet::ParticleGradient_t& G)$/;"	f	class:qmcplusplus::SlaterDet
alternateGrad	Fermion/SlaterDetWithBackflow.h	/^  inline void alternateGrad(ParticleSet::ParticleGradient_t& G)$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
alternateGrad	OrbitalBase.h	/^  virtual void alternateGrad(ParticleSet::ParticleGradient_t& G) {}$/;"	f	struct:qmcplusplus::OrbitalBase
alternateGrad	TrialWaveFunction.h	/^  inline void alternateGrad(ParticleSet::ParticleGradient_t& G)$/;"	f	class:qmcplusplus::TrialWaveFunction
alternateLogValue	Fermion/RNDiracDeterminantBase.h	/^  RealType alternatePhaseValue, alternateLogValue;$/;"	m	class:qmcplusplus::RNDiracDeterminantBase
alternateLogValue	Fermion/RNDiracDeterminantBaseAlternate.h	/^  ValueType alternateLogValue;$/;"	m	class:qmcplusplus::RNDiracDeterminantBaseAlternate
alternatePhaseValue	Fermion/RNDiracDeterminantBase.h	/^  RealType alternatePhaseValue, alternateLogValue;$/;"	m	class:qmcplusplus::RNDiracDeterminantBase
alternatePhaseValue	Fermion/RNDiracDeterminantBaseAlternate.h	/^  ValueType alternatePhaseValue;$/;"	m	class:qmcplusplus::RNDiracDeterminantBaseAlternate
alternateRatio	Fermion/DiracDeterminantBase.h	/^  virtual ValueType alternateRatio(ParticleSet& P)$/;"	f	class:qmcplusplus::DiracDeterminantBase
alternateRatio	Fermion/DiracDeterminantWithBackflow.h	/^  ValueType alternateRatio(ParticleSet& P)$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
alternateRatio	Fermion/RNDiracDeterminantBase.cpp	/^RNDiracDeterminantBase::ValueType RNDiracDeterminantBase::alternateRatio(ParticleSet& P)$/;"	f	class:qmcplusplus::RNDiracDeterminantBase
alternateRatio	Fermion/RNDiracDeterminantBaseAlternate.cpp	/^RNDiracDeterminantBaseAlternate::ValueType RNDiracDeterminantBaseAlternate::alternateRatio(ParticleSet& P)$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
alternateRatio	Fermion/SlaterDet.h	/^  inline ValueType alternateRatio(ParticleSet& P)$/;"	f	class:qmcplusplus::SlaterDet
alternateRatio	Fermion/SlaterDetWithBackflow.h	/^  inline ValueType alternateRatio(ParticleSet& P)$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
alternateRatio	OrbitalBase.h	/^  virtual ValueType alternateRatio(ParticleSet& P)$/;"	f	struct:qmcplusplus::OrbitalBase
alternateRatio	TrialWaveFunction.cpp	/^TrialWaveFunction::RealType TrialWaveFunction::alternateRatio(ParticleSet& P)$/;"	f	class:qmcplusplus::TrialWaveFunction
alternateRatioGrad	Fermion/RNDiracDeterminantBaseAlternate.cpp	/^RNDiracDeterminantBaseAlternate::alternateRatioGrad(ParticleSet& P, int iat, GradType& grad_iat)$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
alternateRatioGrad	Fermion/SlaterDet.h	/^  inline ValueType alternateRatioGrad(ParticleSet& P, int iat, GradType& grad_iat)$/;"	f	class:qmcplusplus::SlaterDet
alternateRatioGrad	Fermion/SlaterDetWithBackflow.h	/^  inline ValueType alternateRatioGrad(ParticleSet& P, int iat, GradType& grad_iat)$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
alternateRatioGrad	OrbitalBase.h	/^  virtual ValueType alternateRatioGrad(ParticleSet& P, int iat, GradType& grad_iat)$/;"	f	struct:qmcplusplus::OrbitalBase
alternateRatioGrad	TrialWaveFunction.cpp	/^TrialWaveFunction::RealType TrialWaveFunction::alternateRatioGrad(ParticleSet& P$/;"	f	class:qmcplusplus::TrialWaveFunction
aoBuilders	Jastrow/JastrowBasisBuilder.h	/^  std::map<std::string,BasisSetBuilder*> aoBuilders;$/;"	m	class:qmcplusplus::JastrowBasisBuilder
aoBuilders	MolecularOrbitals/MolecularBasisBuilder.h	/^  std::map<std::string,BasisSetBuilder*> aoBuilders;$/;"	m	class:qmcplusplus::MolecularBasisBuilder
apply	Jastrow/Experimental/WMConstraints.cpp	/^void WMConstraints::apply()$/;"	f	class:qmcplusplus::WMConstraints
applyCuspCondition	Jastrow/CompositeFunctor.h	/^  void applyCuspCondition()$/;"	f	struct:qmcplusplus::TruncatedPadeFunctor
assign_v	SplineC2XAdoptor.h	/^  inline void assign_v(const PointType& r, int bc_sign, VV& psi)$/;"	f	struct:qmcplusplus::SplineC2CPackedAdoptor
assign_v	SplineC2XAdoptor.h	/^  inline void assign_v(const PointType& r, int bc_sign, VV& psi)$/;"	f	struct:qmcplusplus::SplineC2RPackedAdoptor
assign_v	SplineR2RAdoptor.h	/^  inline void assign_v(const PointType& r, int bc_sign, VV& psi)$/;"	f	struct:qmcplusplus::SplineR2RAdoptor
assign_vgh	SplineC2XAdoptor.h	/^  void assign_vgh(const PointType& r, int bc_sign, VV& psi, GV& dpsi, GGV& grad_grad_psi)$/;"	f	struct:qmcplusplus::SplineC2CPackedAdoptor
assign_vgh	SplineC2XAdoptor.h	/^  void assign_vgh(const PointType& r, int bc_sign, VV& psi, GV& dpsi, GGV& grad_grad_psi)$/;"	f	struct:qmcplusplus::SplineC2RPackedAdoptor
assign_vgh	SplineR2RAdoptor.h	/^  void assign_vgh(const PointType& r, int bc_sign, VV& psi, GV& dpsi, GGV& grad_grad_psi)$/;"	f	struct:qmcplusplus::SplineR2RAdoptor
assign_vgl	SplineC2XAdoptor.h	/^  inline void assign_vgl(const PointType& r, int bc_sign, VV& psi, GV& dpsi, VV& d2psi)$/;"	f	struct:qmcplusplus::SplineC2CPackedAdoptor
assign_vgl	SplineC2XAdoptor.h	/^  inline void assign_vgl(const PointType& r, int bc_sign, VV& psi, GV& dpsi, VV& d2psi)$/;"	f	struct:qmcplusplus::SplineC2RPackedAdoptor
assign_vgl	SplineR2RAdoptor.h	/^  inline void assign_vgl(const PointType& r, int bc_sign, VV& psi, GV& dpsi, VV& d2psi)$/;"	f	struct:qmcplusplus::SplineR2RAdoptor
attribName	Jastrow/DerivWMFunctor.h	/^  std::string attribName;$/;"	m	struct:qmcplusplus::D2WMDB2Functor
attribName	Jastrow/DerivWMFunctor.h	/^  std::string attribName;$/;"	m	struct:qmcplusplus::DWMDBFunctor
attribName	Jastrow/WMFunctor.h	/^  std::string attribName;$/;"	m	struct:qmcplusplus::WMFunctor
b0	Jastrow/McMillanJ2Functor.h	/^  real_type b0,b1,b2,b3;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
b1	Jastrow/McMillanJ2Functor.h	/^  real_type b0,b1,b2,b3;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
b2	Jastrow/McMillanJ2Functor.h	/^  real_type b0,b1,b2,b3;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
b3	Jastrow/McMillanJ2Functor.h	/^  real_type b0,b1,b2,b3;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
bKnots	Experimental/Bspline3DSetBase.h	/^  GridType bKnots;$/;"	m	struct:qmcplusplus::Bspline3DSetBase
bKnots	Experimental/TricubicBsplineSPOSet.h	/^  GridType bKnots;$/;"	m	class:qmcplusplus::TricubicBsplineSPOSet
bKnots	Experimental/TricubicBsplineTwistSet.h	/^  GridType bKnots;$/;"	m	class:qmcplusplus::TricubicBsplineTwistSet
bKnots	Spline3D/SplineBasisSet.h	/^  GridType bKnots;$/;"	m	class:qmcplusplus::SplineBasisSet
backflow_tag	OrbitalBuilderBase.cpp	/^std::string OrbitalBuilderBase::backflow_tag="backflow";$/;"	m	class:qmcplusplus::OrbitalBuilderBase	file:
backflow_tag	OrbitalBuilderBase.h	/^  static std::string backflow_tag;$/;"	m	class:qmcplusplus::OrbitalBuilderBase
backup_DetSigns	Fermion/MultiDiracDeterminantBase.h	/^  std::vector<RealType> backup_DetSigns;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
backup_DetSigns	Fermion/MultiDiracDeterminantWithBackflow.h	/^  std::vector<double> backup_DetSigns;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
backup_detData	Fermion/MultiDiracDeterminantBase.h	/^  std::vector<int> backup_detData;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
backup_detData	Fermion/MultiDiracDeterminantWithBackflow.h	/^  std::vector<int> backup_detData;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
backup_reference	Fermion/MultiDiracDeterminantBase.h	/^  int backup_reference;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
backup_reference	Fermion/MultiDiracDeterminantWithBackflow.h	/^  int backup_reference;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
backup_uniquePairs	Fermion/MultiDiracDeterminantBase.h	/^  std::vector<std::pair<int,int> > backup_uniquePairs;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
backup_uniquePairs	Fermion/MultiDiracDeterminantWithBackflow.h	/^  std::vector<std::pair<int,int> > backup_uniquePairs;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
bandTag	PlaneWave/PWParameterSet.h	/^  std::string bandTag;$/;"	m	struct:qmcplusplus::PWParameterSet
basic_report	SPOSetBase.cpp	/^void SPOSetBase::basic_report(const std::string& pad)$/;"	f	class:qmcplusplus::SPOSetBase
basisBuilder	Jastrow/ThreeBodyGeminalBuilder.h	/^  BasisSetBuilder* basisBuilder;$/;"	m	class:qmcplusplus::ThreeBodyGeminalBuilder
basisLattice	Experimental/TricubicBsplineSetBuilder.h	/^  ParticleSet::ParticleLayout_t basisLattice;$/;"	m	class:qmcplusplus::TricubicBsplineSetBuilder
basisTag	PlaneWave/PWParameterSet.h	/^  std::string basisTag;$/;"	m	struct:qmcplusplus::PWParameterSet
basisType	MolecularOrbitals/AtomicBasisBuilder.h	/^  std::string basisType;$/;"	m	struct:qmcplusplus::AtomicBasisBuilder
basis_builders	BasisSetFactory.cpp	/^  std::map<std::string,BasisSetBuilder*> BasisSetFactory::basis_builders;$/;"	m	class:qmcplusplus::BasisSetFactory	file:
basis_builders	BasisSetFactory.h	/^  static std::map<std::string,BasisSetBuilder*> basis_builders;$/;"	m	class:qmcplusplus::BasisSetFactory
basis_states	HarmonicOscillator/SHOSetBuilder.h	/^    SPOSetInfoSimple<SHOState> basis_states;$/;"	m	struct:qmcplusplus::SHOSetBuilder
basis_tag	OrbitalBuilderBase.cpp	/^std::string OrbitalBuilderBase::basis_tag="basis";$/;"	m	class:qmcplusplus::OrbitalBuilderBase	file:
basis_tag	OrbitalBuilderBase.h	/^  static std::string basis_tag;$/;"	m	class:qmcplusplus::OrbitalBuilderBase
basisfunc_tag	OrbitalBuilderBase.cpp	/^std::string OrbitalBuilderBase::basisfunc_tag="phi";$/;"	m	class:qmcplusplus::OrbitalBuilderBase	file:
basisfunc_tag	OrbitalBuilderBase.h	/^  static std::string basisfunc_tag;$/;"	m	class:qmcplusplus::OrbitalBuilderBase
basisset_tag	OrbitalBuilderBase.cpp	/^std::string OrbitalBuilderBase::basisset_tag="basisset";$/;"	m	class:qmcplusplus::OrbitalBuilderBase	file:
basisset_tag	OrbitalBuilderBase.h	/^  static std::string basisset_tag;$/;"	m	class:qmcplusplus::OrbitalBuilderBase
bcastSortBands	einspline_helper.hpp	/^  inline bool EinsplineSetBuilder::bcastSortBands(int spin, int n, bool root)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
begin	Fermion/ExcitationClass.h	/^  TinyVector<int,2>  begin()$/;"	f	class:qmcplusplus::ExcitationClass
beta0	Experimental/CuspCorr.h	/^  RealType beta0,DX,eta0, ELorigAtRc;$/;"	m	class:qmcplusplus::CuspCorr
bfFuns	Fermion/BackflowTransformation.h	/^  std::vector<BackflowFunctionBase*> bfFuns;$/;"	m	class:qmcplusplus::BackflowTransformation
bigD_i	SplineMixedAdoptorReaderP.h	/^  Array<double,3> bigD_r, bigD_i;$/;"	m	struct:qmcplusplus::SplineMixedAdoptorReader
bigD_r	SplineMixedAdoptorReaderP.h	/^  Array<double,3> bigD_r, bigD_i;$/;"	m	struct:qmcplusplus::SplineMixedAdoptorReader
blend_func	MuffinTin.cpp	/^MuffinTinClass::blend_func (double r, double &b)$/;"	f	class:qmcplusplus::MuffinTinClass
blend_func	MuffinTin.cpp	/^MuffinTinClass::blend_func (double r, double &b, double &db,$/;"	f	class:qmcplusplus::MuffinTinClass
bspline	SplineAdoptorReaderP.h	/^  BsplineSet<adoptor_type>* bspline;$/;"	m	struct:qmcplusplus::SplineAdoptorReader
bspline	SplineMixedAdoptorReaderP.h	/^  BsplineSet<adoptor_type>* bspline;$/;"	m	struct:qmcplusplus::SplineMixedAdoptorReader
bspline_data_check	Experimental/TricubicBsplineSetBuilder.1.cpp	/^struct bspline_data_check$/;"	s	namespace:qmcplusplus	file:
bspline_data_check	Experimental/TricubicBsplineSetBuilder.1.cpp	/^struct bspline_data_check<T1,T1>$/;"	s	namespace:qmcplusplus	file:
bspline_engine	Spline3D/EinsplineSetTemp.hpp	/^    struct bspline_engine$/;"	s	namespace:qmcplusplus
bspline_engine	Spline3D/EinsplineSetTemp.hpp	/^    struct bspline_engine<EngT,IsGamma,IsOrtho,false>$/;"	s	namespace:qmcplusplus
bspline_engine	Spline3D/EinsplineSetTemp.hpp	/^    struct bspline_engine<EngT,IsGamma,IsOrtho,true>$/;"	s	namespace:qmcplusplus
bspline_engine	Spline3D/EinsplineSetTemp.hpp	/^    struct bspline_engine<EngT,true,true,true>$/;"	s	namespace:qmcplusplus
bspline_engine_traits	Spline3D/EinsplineSetTemp.hpp	/^  struct bspline_engine_traits$/;"	s	namespace:qmcplusplus
bspline_engine_traits	Spline3D/EinsplineSetTemp.hpp	/^  struct bspline_engine_traits<multi_UBspline_3d_d>$/;"	s	namespace:qmcplusplus
bspline_engine_traits	Spline3D/EinsplineSetTemp.hpp	/^  struct bspline_engine_traits<multi_UBspline_3d_z>$/;"	s	namespace:qmcplusplus
bspline_type	MultiGridBsplineSet.h	/^    typedef BsplineSet<SplineAdoptor> bspline_type;$/;"	t	struct:qmcplusplus::MultiGridBsplineSet
build	WaveFunctionFactory.cpp	/^bool WaveFunctionFactory::build(xmlNodePtr cur, bool buildtree)$/;"	f	class:qmcplusplus::WaveFunctionFactory
buildOptVariables	LCOrbitalSetOpt.h	/^    void buildOptVariables(std::vector<RealType>& input_params, const std::string & spo_name,$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
buildOrbital	Jastrow/RPAJastrow.cpp	/^void RPAJastrow::buildOrbital(const std::string& name, const std::string& UL$/;"	f	class:qmcplusplus::RPAJastrow
buildTableGradTimer	Fermion/MultiDiracDeterminantBase.h	/^  NewTimer readMatGradTimer,buildTableGradTimer,ExtraStuffTimer;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
buildTableGradTimer	Fermion/MultiDiracDeterminantWithBackflow.h	/^  NewTimer readMatGradTimer,buildTableGradTimer,ExtraStuffTimer;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
buildTableTimer	Fermion/MultiDiracDeterminantBase.h	/^  NewTimer UpdateTimer, RatioTimer, InverseTimer, buildTableTimer, readMatTimer, evalWTimer, evalOrbTimer,evalOrb1Timer;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
buildTableTimer	Fermion/MultiDiracDeterminantWithBackflow.h	/^  NewTimer UpdateTimer, RatioTimer, InverseTimer, buildTableTimer, readMatTimer, evalWTimer, evalOrbTimer,evalOrb1Timer;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
build_sposet_collection	BasisSetFactory.cpp	/^void BasisSetFactory::build_sposet_collection(xmlNodePtr cur)$/;"	f	class:qmcplusplus::BasisSetFactory
build_tree	Fermion/ci_node.h	/^  void build_tree(std::vector<configuration>& confg, configuration& baseC, std::vector<int>& map2det)$/;"	f	struct:qmcplusplus::ci_node
builder_index	SPOSetBase.h	/^  int builder_index;$/;"	m	class:qmcplusplus::SPOSetBase
builder_ref	Experimental/DetSetBuilderWithBasisSet.h	/^  BasisBuilderT& builder_ref;$/;"	m	struct:qmcplusplus::DetSetBuilderWithBasisSet
bvalues	HarmonicOscillator/SHOSet.h	/^    Array<RealType,2> bvalues;$/;"	m	struct:qmcplusplus::SHOSet
c	Jastrow/ThreeBodyPade.h	/^    ValueType c,d;$/;"	m	struct:qmcplusplus::ThreeBodyPade::Coeff
c0	Jastrow/GaussianFunctor.h	/^  real_type c0,c1,c2,c3,c4,c5,c6;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
c0	Jastrow/GaussianFunctor.h	/^  real_type c0,c1,c2,c3,c4;$/;"	m	struct:qmcplusplus::GaussianFunctor
c0	Jastrow/McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::ModMcMillanJ2Functor
c0	Jastrow/McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
c1	Jastrow/GaussianFunctor.h	/^  real_type c0,c1,c2,c3,c4,c5,c6;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
c1	Jastrow/GaussianFunctor.h	/^  real_type c0,c1,c2,c3,c4;$/;"	m	struct:qmcplusplus::GaussianFunctor
c1	Jastrow/McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::ModMcMillanJ2Functor
c1	Jastrow/McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
c1	Jastrow/McMillanJ2GFunctor.h	/^  real_type A, B, R0, c1, c2;$/;"	m	struct:qmcplusplus::McMillanJ2GFunctor
c2	Jastrow/GaussianFunctor.h	/^  real_type c0,c1,c2,c3,c4,c5,c6;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
c2	Jastrow/GaussianFunctor.h	/^  real_type c0,c1,c2,c3,c4;$/;"	m	struct:qmcplusplus::GaussianFunctor
c2	Jastrow/McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::ModMcMillanJ2Functor
c2	Jastrow/McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
c2	Jastrow/McMillanJ2GFunctor.h	/^  real_type A, B, R0, c1, c2;$/;"	m	struct:qmcplusplus::McMillanJ2GFunctor
c3	Jastrow/GaussianFunctor.h	/^  real_type c0,c1,c2,c3,c4,c5,c6;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
c3	Jastrow/GaussianFunctor.h	/^  real_type c0,c1,c2,c3,c4;$/;"	m	struct:qmcplusplus::GaussianFunctor
c3	Jastrow/McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::ModMcMillanJ2Functor
c3	Jastrow/McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
c4	Jastrow/GaussianFunctor.h	/^  real_type c0,c1,c2,c3,c4,c5,c6;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
c4	Jastrow/GaussianFunctor.h	/^  real_type c0,c1,c2,c3,c4;$/;"	m	struct:qmcplusplus::GaussianFunctor
c4	Jastrow/McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::ModMcMillanJ2Functor
c4	Jastrow/McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
c5	Jastrow/GaussianFunctor.h	/^  real_type c0,c1,c2,c3,c4,c5,c6;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
c5	Jastrow/McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::ModMcMillanJ2Functor
c5	Jastrow/McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
c6	Jastrow/GaussianFunctor.h	/^  real_type c0,c1,c2,c3,c4,c5,c6;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
cA	Jastrow/McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::ModMcMillanJ2Functor
cA	Jastrow/McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
cG	Jastrow/kSpaceJastrow.h	/^  T cG;$/;"	m	class:qmcplusplus::kSpaceCoef
calcDeterminantILUGMRES	Fermion/ILUGMRESInterface.c	/^void calcDeterminantILUGMRES(int *movedParticle, int *size, int *passedArrLength, double u[], int Arp[], int Ari[], double Arx[], int ArpNew[], int AriNew[], double ArxNew[], double *detRatio_ILU)$/;"	f
calcGradient	Fermion/DiracDeterminantBase.h	/^  calcGradient(MCWalkerConfiguration &W, int iat,$/;"	f	class:qmcplusplus::DiracDeterminantBase
calcGradient	Fermion/DiracDeterminantCUDA.cpp	/^DiracDeterminantCUDA::calcGradient(MCWalkerConfiguration &W, int iat,$/;"	f	class:qmcplusplus::DiracDeterminantCUDA
calcGradient	Fermion/SlaterDet.h	/^  void calcGradient(MCWalkerConfiguration &W, int iat, std::vector<GradType> &grad)$/;"	f	class:qmcplusplus::SlaterDet
calcGradient	Jastrow/OneBodyJastrowOrbitalBspline.cpp	/^void OneBodyJastrowOrbitalBspline::calcGradient$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
calcGradient	Jastrow/TwoBodyJastrowOrbitalBspline.cpp	/^void TwoBodyJastrowOrbitalBspline::calcGradient(MCWalkerConfiguration &W, int iat,$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
calcGradient	OrbitalBase.h	/^  calcGradient(MCWalkerConfiguration &W, int iat,$/;"	f	struct:qmcplusplus::OrbitalBase
calcGradient	TrialWaveFunction_CUDA.cpp	/^TrialWaveFunction::calcGradient (MCWalkerConfiguration &W, int iat,$/;"	f	class:qmcplusplus::TrialWaveFunction
calcRatio	Fermion/DiracDeterminantBase.h	/^  calcRatio (MCWalkerConfiguration &W, int iat,$/;"	f	class:qmcplusplus::DiracDeterminantBase
calcRatio	Fermion/DiracDeterminantCUDA.cpp	/^void DiracDeterminantCUDA::calcRatio (MCWalkerConfiguration &W, int iat,$/;"	f	class:qmcplusplus::DiracDeterminantCUDA
calcRatio	Fermion/SlaterDet.h	/^  calcRatio (MCWalkerConfiguration &W, int iat$/;"	f	class:qmcplusplus::SlaterDet
calcRatio	Jastrow/OneBodyJastrowOrbitalBspline.cpp	/^OneBodyJastrowOrbitalBspline::calcRatio$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
calcRatio	Jastrow/TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::calcRatio$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
calcRatio	OrbitalBase.h	/^  calcRatio (MCWalkerConfiguration &W, int iat,$/;"	f	struct:qmcplusplus::OrbitalBase
calcRatio	TrialWaveFunction_CUDA.cpp	/^TrialWaveFunction::calcRatio (MCWalkerConfiguration &W, int iat,$/;"	f	class:qmcplusplus::TrialWaveFunction
calculateExcitations	Fermion/ci_configuration2.h	/^  double calculateExcitations(const ci_configuration2& c, int &n, std::vector<int>& pos, std::vector<int>& ocp, std::vector<int>& uno) const$/;"	f	struct:qmcplusplus::ci_configuration2
calculateNumOfExcitations	Fermion/ci_configuration2.h	/^  int calculateNumOfExcitations(const ci_configuration2& c) const$/;"	f	struct:qmcplusplus::ci_configuration2
center	HarmonicOscillator/SHOSet.h	/^    PosType  center;$/;"	m	struct:qmcplusplus::SHOSet
center	HarmonicOscillator/SHOSetBuilder.h	/^    PosType  center;$/;"	m	struct:qmcplusplus::SHOSetBuilder
changed_bit	Fermion/ci_builder.h	/^  inline int changed_bit(std::bitset<CMAX>& x)$/;"	f	struct:qmcplusplus::ci_builder
checkInVariables	AFMSPOSet.cpp	/^AFMSPOSet::checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::AFMSPOSet
checkInVariables	AGPDeterminant.cpp	/^void AGPDeterminant::checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::AGPDeterminant
checkInVariables	BasisSetBase.h	/^  virtual void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::BasisSetBase
checkInVariables	ConstantOrbital.h	/^  virtual void checkInVariables(opt_variables_type &active) {}$/;"	f	class:qmcplusplus::ConstantOrbital
checkInVariables	Experimental/Bspline3DSetBase.cpp	/^void Bspline3DSetBase::checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::Bspline3DSetBase
checkInVariables	Experimental/DiracDeterminant.h	/^  inline void checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::DiracDeterminant
checkInVariables	Experimental/SlaterDeterminant.h	/^  inline void checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::SlaterDeterminant
checkInVariables	FDLRWfn.h	/^    void checkInVariables(opt_variables_type& active) {$/;"	f	class:qmcplusplus::FDLRWfn
checkInVariables	Fermion/BFsplineFunctor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::BFsplineFunctor
checkInVariables	Fermion/BackflowTransformation.h	/^  inline void checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::BackflowTransformation
checkInVariables	Fermion/Backflow_eI.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::Backflow_eI
checkInVariables	Fermion/Backflow_eI_spin.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::Backflow_eI_spin
checkInVariables	Fermion/Backflow_ee.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::Backflow_ee
checkInVariables	Fermion/Backflow_ee_kSpace.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::Backflow_ee_kSpace
checkInVariables	Fermion/DiracDeterminantAFM.cpp	/^DiracDeterminantAFM::checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::DiracDeterminantAFM
checkInVariables	Fermion/DiracDeterminantBase.h	/^  virtual inline void checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::DiracDeterminantBase
checkInVariables	Fermion/DiracDeterminantOpt.cpp	/^DiracDeterminantOpt::checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::DiracDeterminantOpt
checkInVariables	Fermion/GaussianFunctor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::GaussianFunctor
checkInVariables	Fermion/MultiDiracDeterminantBase.h	/^  inline void checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
checkInVariables	Fermion/MultiDiracDeterminantWithBackflow.h	/^  inline void checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
checkInVariables	Fermion/MultiSlaterDeterminant.cpp	/^void MultiSlaterDeterminant::checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::MultiSlaterDeterminant
checkInVariables	Fermion/MultiSlaterDeterminantFast.cpp	/^void MultiSlaterDeterminantFast::checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
checkInVariables	Fermion/MultiSlaterDeterminantWithBackflow.cpp	/^void MultiSlaterDeterminantWithBackflow::checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
checkInVariables	Fermion/SlaterDet.cpp	/^void SlaterDet::checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::SlaterDet
checkInVariables	Fermion/SlaterDetOpt.cpp	/^void SlaterDetOpt::checkInVariables(opt_variables_type& active) {}$/;"	f	class:qmcplusplus::SlaterDetOpt
checkInVariables	Fermion/SlaterDetWithBackflow.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
checkInVariables	IonOrbital.cpp	/^void IonOrbital::checkInVariables(opt_variables_type& active)        { }$/;"	f	class:qmcplusplus::IonOrbital
checkInVariables	Jastrow/BesselZeroFunctor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::BesselZero
checkInVariables	Jastrow/BsplineFunctor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::BsplineFunctor
checkInVariables	Jastrow/BsplineFunctor3D.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::BsplineFunctor3D
checkInVariables	Jastrow/CompositeFunctor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::CuspCorrectionFunctor
checkInVariables	Jastrow/GaussianFunctor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::GaussianFunctor
checkInVariables	Jastrow/GaussianFunctor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
checkInVariables	Jastrow/LRBreakupUtilities.h	/^  void checkInVariables(opt_variables_type& active) { }$/;"	f	struct:qmcplusplus::ShortRangePartAdapter
checkInVariables	Jastrow/LRTwoBodyJastrow.cpp	/^void LRTwoBodyJastrow::checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
checkInVariables	Jastrow/LinearCombinationFunctor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:LinearCombinationFunctor
checkInVariables	Jastrow/McMillanJ2Functor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::McMillanJ2Functor
checkInVariables	Jastrow/McMillanJ2Functor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::ModMcMillanJ2Functor
checkInVariables	Jastrow/McMillanJ2Functor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::comboMcMillanJ2Functor
checkInVariables	Jastrow/McMillanJ2GFunctor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::McMillanJ2GFunctor
checkInVariables	Jastrow/ModPadeFunctor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::ModPadeFunctor
checkInVariables	Jastrow/OneBodyJastrowOrbital.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
checkInVariables	Jastrow/OneBodyJastrowOrbitalBspline.cpp	/^OneBodyJastrowOrbitalBspline::checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
checkInVariables	Jastrow/OneBodySpinJastrowOrbital.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
checkInVariables	Jastrow/OpenGaussianSlaterFunctor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::OpenGaussianSlaterFunctor
checkInVariables	Jastrow/PadeFunctors.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
checkInVariables	Jastrow/PadeFunctors.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::PadeFunctor
checkInVariables	Jastrow/PadeFunctors.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
checkInVariables	Jastrow/PadeFunctors.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::ScaledPadeFunctor
checkInVariables	Jastrow/PolynomialFunctor3D.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
checkInVariables	Jastrow/RPAJastrow.cpp	/^void RPAJastrow::checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::RPAJastrow
checkInVariables	Jastrow/SplineFunctors.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::CubicSplineSingle
checkInVariables	Jastrow/ThreeBodyBlockSparse.cpp	/^void ThreeBodyBlockSparse::checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
checkInVariables	Jastrow/ThreeBodyGeminal.cpp	/^void ThreeBodyGeminal::checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
checkInVariables	Jastrow/ThreeBodyJastrowOrbital.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
checkInVariables	Jastrow/TwoBodyJastrowOrbital.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
checkInVariables	Jastrow/TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
checkInVariables	Jastrow/WMFunctor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::WMFunctor
checkInVariables	Jastrow/WMFunctor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::WMFunctorSet
checkInVariables	Jastrow/eeI_JastrowOrbital.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
checkInVariables	Jastrow/kSpaceJastrow.cpp	/^void kSpaceJastrow::checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::kSpaceJastrow
checkInVariables	LCOrbitalSetOpt.h	/^    void checkInVariables(opt_variables_type& active) {$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
checkInVariables	MolecularOrbitals/NGOBuilder.h	/^  void checkInVariables(opt_variables_type& active) {}$/;"	f	struct:qmcplusplus::NGOrbital
checkInVariables	OptimizableSPOSet.cpp	/^OptimizableSPOSet::checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::OptimizableSPOSet
checkInVariables	ProductOrbital.cpp	/^void ProductOrbital::checkInVariables(opt_variables_type& o)$/;"	f	class:qmcplusplus::ProductOrbital
checkInVariables	SPOSetBase.h	/^  virtual void checkInVariables(opt_variables_type& active) {}$/;"	f	class:qmcplusplus::SPOSetBase
checkInVariables	SparseLocalizedBasisSet.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::SparseLocalizedBasisSet
checkInVariables	SphericalBasisSet.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::SphericalBasisSet
checkInVariables	TrialWaveFunction.cpp	/^void TrialWaveFunction::checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::TrialWaveFunction
checkLambda	Jastrow/ThreeBodyBlockSparse.cpp	/^void ThreeBodyBlockSparse::checkLambda()$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
checkObject	SPOSetBase.cpp	/^void SPOSetBase::checkObject()$/;"	f	class:qmcplusplus::SPOSetBase
checkOutVariables	AFMSPOSet.cpp	/^AFMSPOSet::checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::AFMSPOSet
checkOutVariables	AGPDeterminant.cpp	/^void AGPDeterminant::checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::AGPDeterminant
checkOutVariables	BasisSetBase.h	/^  virtual void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::BasisSetBase
checkOutVariables	ConstantOrbital.h	/^  virtual void checkOutVariables(const opt_variables_type &active) {}$/;"	f	class:qmcplusplus::ConstantOrbital
checkOutVariables	DiffOrbitalBase.cpp	/^void AnalyticDiffOrbital::checkOutVariables(const opt_variables_type& optvars)$/;"	f	class:qmcplusplus::AnalyticDiffOrbital
checkOutVariables	DiffOrbitalBase.cpp	/^void NumericalDiffOrbital::checkOutVariables(const opt_variables_type& optvars)$/;"	f	class:qmcplusplus::NumericalDiffOrbital
checkOutVariables	Experimental/Bspline3DSetBase.cpp	/^void Bspline3DSetBase::checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::Bspline3DSetBase
checkOutVariables	Experimental/DiracDeterminant.h	/^  inline void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::DiracDeterminant
checkOutVariables	Experimental/SlaterDeterminant.h	/^  inline void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::SlaterDeterminant
checkOutVariables	FDLRWfn.h	/^    void checkOutVariables(const opt_variables_type& active) {$/;"	f	class:qmcplusplus::FDLRWfn
checkOutVariables	Fermion/BFsplineFunctor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::BFsplineFunctor
checkOutVariables	Fermion/BackflowTransformation.h	/^  inline void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::BackflowTransformation
checkOutVariables	Fermion/Backflow_eI.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::Backflow_eI
checkOutVariables	Fermion/Backflow_eI_spin.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::Backflow_eI_spin
checkOutVariables	Fermion/Backflow_ee.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::Backflow_ee
checkOutVariables	Fermion/Backflow_ee_kSpace.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::Backflow_ee_kSpace
checkOutVariables	Fermion/DiracDeterminantAFM.cpp	/^DiracDeterminantAFM::checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::DiracDeterminantAFM
checkOutVariables	Fermion/DiracDeterminantBase.h	/^  virtual inline void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::DiracDeterminantBase
checkOutVariables	Fermion/DiracDeterminantOpt.cpp	/^DiracDeterminantOpt::checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::DiracDeterminantOpt
checkOutVariables	Fermion/GaussianFunctor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::GaussianFunctor
checkOutVariables	Fermion/MultiDiracDeterminantBase.h	/^  inline void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
checkOutVariables	Fermion/MultiDiracDeterminantWithBackflow.h	/^  inline void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
checkOutVariables	Fermion/MultiSlaterDeterminant.cpp	/^void MultiSlaterDeterminant::checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::MultiSlaterDeterminant
checkOutVariables	Fermion/MultiSlaterDeterminantFast.cpp	/^void MultiSlaterDeterminantFast::checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
checkOutVariables	Fermion/MultiSlaterDeterminantWithBackflow.cpp	/^void MultiSlaterDeterminantWithBackflow::checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
checkOutVariables	Fermion/SlaterDet.cpp	/^void SlaterDet::checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::SlaterDet
checkOutVariables	Fermion/SlaterDetOpt.cpp	/^void SlaterDetOpt::checkOutVariables(const opt_variables_type& active) {}$/;"	f	class:qmcplusplus::SlaterDetOpt
checkOutVariables	Fermion/SlaterDetWithBackflow.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
checkOutVariables	IonOrbital.cpp	/^void IonOrbital::checkOutVariables(const opt_variables_type& active) { }$/;"	f	class:qmcplusplus::IonOrbital
checkOutVariables	Jastrow/BesselZeroFunctor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::BesselZero
checkOutVariables	Jastrow/BsplineFunctor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::BsplineFunctor
checkOutVariables	Jastrow/BsplineFunctor3D.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::BsplineFunctor3D
checkOutVariables	Jastrow/CompositeFunctor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::CuspCorrectionFunctor
checkOutVariables	Jastrow/DiffOneBodyJastrowOrbital.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::DiffOneBodyJastrowOrbital
checkOutVariables	Jastrow/DiffOneBodySpinJastrowOrbital.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
checkOutVariables	Jastrow/DiffTwoBodyJastrowOrbital.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::DiffTwoBodyJastrowOrbital
checkOutVariables	Jastrow/GaussianFunctor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::GaussianFunctor
checkOutVariables	Jastrow/GaussianFunctor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
checkOutVariables	Jastrow/LRBreakupUtilities.h	/^  void checkOutVariables(const opt_variables_type& active) { }$/;"	f	struct:qmcplusplus::ShortRangePartAdapter
checkOutVariables	Jastrow/LRTwoBodyJastrow.cpp	/^void LRTwoBodyJastrow::checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
checkOutVariables	Jastrow/LinearCombinationFunctor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:LinearCombinationFunctor
checkOutVariables	Jastrow/McMillanJ2Functor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::McMillanJ2Functor
checkOutVariables	Jastrow/McMillanJ2Functor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::ModMcMillanJ2Functor
checkOutVariables	Jastrow/McMillanJ2Functor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::comboMcMillanJ2Functor
checkOutVariables	Jastrow/McMillanJ2GFunctor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::McMillanJ2GFunctor
checkOutVariables	Jastrow/ModPadeFunctor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::ModPadeFunctor
checkOutVariables	Jastrow/OneBodyJastrowOrbital.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
checkOutVariables	Jastrow/OneBodySpinJastrowOrbital.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
checkOutVariables	Jastrow/OpenGaussianSlaterFunctor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::OpenGaussianSlaterFunctor
checkOutVariables	Jastrow/PadeFunctors.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
checkOutVariables	Jastrow/PadeFunctors.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::PadeFunctor
checkOutVariables	Jastrow/PadeFunctors.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
checkOutVariables	Jastrow/PadeFunctors.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::ScaledPadeFunctor
checkOutVariables	Jastrow/PolynomialFunctor3D.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
checkOutVariables	Jastrow/RPAJastrow.cpp	/^void RPAJastrow::checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::RPAJastrow
checkOutVariables	Jastrow/SplineFunctors.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::CubicSplineSingle
checkOutVariables	Jastrow/ThreeBodyBlockSparse.cpp	/^void ThreeBodyBlockSparse::checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
checkOutVariables	Jastrow/ThreeBodyGeminal.cpp	/^void ThreeBodyGeminal::checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
checkOutVariables	Jastrow/ThreeBodyJastrowOrbital.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
checkOutVariables	Jastrow/TwoBodyJastrowOrbital.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
checkOutVariables	Jastrow/WMFunctor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::WMFunctor
checkOutVariables	Jastrow/WMFunctor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::WMFunctorSet
checkOutVariables	Jastrow/eeI_JastrowOrbital.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
checkOutVariables	Jastrow/kSpaceJastrow.cpp	/^void kSpaceJastrow::checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::kSpaceJastrow
checkOutVariables	LCOrbitalSetOpt.h	/^    void checkOutVariables(const opt_variables_type& active) {$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
checkOutVariables	MolecularOrbitals/NGOBuilder.h	/^  void checkOutVariables(const opt_variables_type& active) {}$/;"	f	struct:qmcplusplus::NGOrbital
checkOutVariables	OptimizableSPOSet.cpp	/^OptimizableSPOSet::checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::OptimizableSPOSet
checkOutVariables	ProductOrbital.cpp	/^void ProductOrbital::checkOutVariables(const opt_variables_type& o)$/;"	f	class:qmcplusplus::ProductOrbital
checkOutVariables	SPOSetBase.h	/^  virtual void checkOutVariables(const opt_variables_type& active) {}$/;"	f	class:qmcplusplus::SPOSetBase
checkOutVariables	SparseLocalizedBasisSet.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::SparseLocalizedBasisSet
checkOutVariables	SphericalBasisSet.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::SphericalBasisSet
checkOutVariables	TrialWaveFunction.cpp	/^void TrialWaveFunction::checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::TrialWaveFunction
checkVersion	PlaneWave/PWParameterSet.cpp	/^void PWParameterSet::checkVersion(hid_t h)$/;"	f	class:qmcplusplus::PWParameterSet
check_coefs	Jastrow/CudaSpline.h	/^  void check_coefs()$/;"	f	struct:qmcplusplus::CudaSpline
check_complete	Jastrow/eeI_JastrowOrbital.h	/^  void check_complete()$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
check_index_sanity	LCOrbitalSetOpt.h	/^    void check_index_sanity() const {$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
check_input_dim	LCOrbitalSetOpt.h	/^    void check_input_dim(const std::string & name, const std::string & caller, const int n, const int s) const {$/;"	f	class:qmcplusplus::LCOrbitalSetOpt
check_twists	BsplineReaderBase.h	/^  inline void check_twists(SPE* bspline, const BandInfoGroup& bandgroup)$/;"	f	struct:qmcplusplus::BsplineReaderBase
check_twists	legacy/SplineAdoptorReader.h	/^  inline void check_twists(EinsplineSet* orbitalSet, SPE* bspline)$/;"	f	struct:qmcplusplus::BsplineReaderBase
children	Fermion/ci_node.h	/^  std::vector<ci_node*> children;$/;"	m	struct:qmcplusplus::ci_node
children	Fermion/excitation_node.h	/^  std::vector<int> children;$/;"	m	struct:qmcplusplus::excitation_node
ci_builder	Fermion/ci_builder.h	/^  inline explicit ci_builder(int vmax=1, int cmax=CMAX)$/;"	f	struct:qmcplusplus::ci_builder
ci_builder	Fermion/ci_builder.h	/^struct ci_builder$/;"	s	namespace:qmcplusplus
ci_configuration	Fermion/ci_configuration.h	/^  ci_configuration(): taken(false),nExct(0) {}$/;"	f	struct:qmcplusplus::ci_configuration
ci_configuration	Fermion/ci_configuration.h	/^  ci_configuration(const ci_configuration& c):occup(c.occup),taken(c.taken),nExct(c.nExct) {}$/;"	f	struct:qmcplusplus::ci_configuration
ci_configuration	Fermion/ci_configuration.h	/^  ci_configuration(std::vector<bool> &v, int n): occup(v),taken(false),nExct(n) {}$/;"	f	struct:qmcplusplus::ci_configuration
ci_configuration	Fermion/ci_configuration.h	/^struct ci_configuration$/;"	s	namespace:qmcplusplus
ci_configuration2	Fermion/ci_configuration2.h	/^  ci_configuration2() {}$/;"	f	struct:qmcplusplus::ci_configuration2
ci_configuration2	Fermion/ci_configuration2.h	/^  ci_configuration2(const ci_configuration2& c):occup(c.occup) {}$/;"	f	struct:qmcplusplus::ci_configuration2
ci_configuration2	Fermion/ci_configuration2.h	/^  ci_configuration2(std::vector<int> &v): occup(v) {}$/;"	f	struct:qmcplusplus::ci_configuration2
ci_configuration2	Fermion/ci_configuration2.h	/^struct ci_configuration2$/;"	s	namespace:qmcplusplus
ci_node	Fermion/ci_node.h	/^  inline ci_node(const ci_node& rhs)$/;"	f	struct:qmcplusplus::ci_node
ci_node	Fermion/ci_node.h	/^  inline ci_node(int m, int n):my_id(0),parent_id(0),from(0),to(0)$/;"	f	struct:qmcplusplus::ci_node
ci_node	Fermion/ci_node.h	/^  inline ci_node(int m, int n, int id, int parent, int r, int a, configuration c):my_id(id),parent_id(parent),from(r),to(a),myC(c)$/;"	f	struct:qmcplusplus::ci_node
ci_node	Fermion/ci_node.h	/^struct ci_node$/;"	s	namespace:qmcplusplus
className	SPOSetBase.h	/^  std::string className;$/;"	m	class:qmcplusplus::SPOSetBase
clear	MultiGridBsplineSetReader.h	/^  void clear()$/;"	f	struct:qmcplusplus::MultiGridBsplineSetReader
clear	SPOSetInfo.cpp	/^  void SPOSetInfo::clear()$/;"	f	class:qmcplusplus::SPOSetInfo
clear	SPOSetInfo.h	/^    inline void clear()$/;"	f	struct:qmcplusplus::SPOSetInfoSimple
clear	SplineAdoptorReaderP.h	/^  void clear()$/;"	f	struct:qmcplusplus::SplineAdoptorReader
clear	SplineMixedAdoptorReaderP.h	/^  void clear()$/;"	f	struct:qmcplusplus::SplineMixedAdoptorReader
clear_kpoints	ElectronGas/HEGGrid.h	/^  void clear_kpoints()$/;"	f	struct:qmcplusplus::HEGGrid
clear_states	BasisSetBase.h	/^  inline void clear_states(int index=0)$/;"	f	struct:qmcplusplus::BasisSetBuilder
clone	WaveFunctionFactory.cpp	/^WaveFunctionFactory::clone(ParticleSet* qp, int ip, const std::string& aname)$/;"	f	class:qmcplusplus::WaveFunctionFactory
clone2LCOrbitalSet	Experimental/LCOrbitalSetWithCorrection.cpp	/^LCOrbitalSet<BS,false>* LCOrbitalSetWithCorrection<BS,false>::clone2LCOrbitalSet()$/;"	f	class:qmcplusplus::LCOrbitalSetWithCorrection
clonePhi	Experimental/DiracDeterminant.h	/^  SPOSet*  clonePhi() const$/;"	f	class:qmcplusplus::DiracDeterminant
clonePhi	Fermion/MultiDiracDeterminantBase.cpp	/^SPOSetBasePtr  MultiDiracDeterminantBase::clonePhi() const$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
clonePhi	Fermion/MultiDiracDeterminantBase_help.cpp	/^SPOSetBasePtr  MultiDiracDeterminantBase::clonePhi() const$/;"	f	class:MultiDiracDeterminantBase
clonePhi	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^SPOSetBasePtr  MultiDiracDeterminantBase::clonePhi() const$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
cloneSPOs	FermionBase.cpp	/^void FermionBase::cloneSPOs(const spo_set_type& spos, ParticleSet& tqp)$/;"	f	class:qmcplusplus::FermionBase
clone_from	CompositeSPOSet.cpp	/^  void CompositeSPOSet::clone_from(const CompositeSPOSet& master)$/;"	f	class:qmcplusplus::CompositeSPOSet
closed	Fermion/excitation_node.h	/^  inline bool closed() const$/;"	f	struct:qmcplusplus::excitation_node
coarse_i	MultiGridBsplineSetReader.h	/^  Array<double,3> coarse_r, coarse_i;$/;"	m	struct:qmcplusplus::MultiGridBsplineSetReader
coarse_mesh	MultiGridBsplineSetReader.h	/^  TinyVector<int,3> coarse_mesh;$/;"	m	struct:qmcplusplus::MultiGridBsplineSetReader
coarse_mesh	SplineMixedAdoptorReaderP.h	/^  TinyVector<int,3> coarse_mesh;$/;"	m	struct:qmcplusplus::SplineMixedAdoptorReader
coarse_r	MultiGridBsplineSetReader.h	/^  Array<double,3> coarse_r, coarse_i;$/;"	m	struct:qmcplusplus::MultiGridBsplineSetReader
coarse_stride	MultiGridBsplineSetReader.h	/^  TinyVector<int,3> coarse_stride;$/;"	m	struct:qmcplusplus::MultiGridBsplineSetReader
coarse_stride	SplineMixedAdoptorReaderP.h	/^  TinyVector<int,3> coarse_stride;$/;"	m	struct:qmcplusplus::SplineMixedAdoptorReader
coeff	Experimental/CuspCorr.h	/^  ValueVector_t alpha,coeff;$/;"	m	class:qmcplusplus::CuspCorr
coefficientHistory	TrialWaveFunction.h	/^  CoefficientHolder coefficientHistory;$/;"	m	class:qmcplusplus::TrialWaveFunction
coefs	Jastrow/CudaSpline.h	/^  gpu::device_vector<T> coefs;$/;"	m	struct:qmcplusplus::CudaSpline
cols	Experimental/DiracDeterminant.h	/^  inline int cols() const$/;"	f	class:qmcplusplus::DiracDeterminant
cols	Fermion/DiracDeterminantBase.h	/^  inline IndexType cols() const$/;"	f	class:qmcplusplus::DiracDeterminantBase
cols	Fermion/MultiDiracDeterminantBase.h	/^  inline IndexType cols() const$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
cols	Fermion/MultiDiracDeterminantWithBackflow.h	/^  inline IndexType cols() const$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
comboMcMillanJ2Functor	Jastrow/McMillanJ2Functor.h	/^  comboMcMillanJ2Functor(real_type a=0.0, real_type b=0.0, real_type r0=0.0 , real_type rc=0.0):ID_RC("Rcutoff"),ID_R0("Rinner"),ID_A("A"),ID_B("B")$/;"	f	struct:qmcplusplus::comboMcMillanJ2Functor
comboMcMillanJ2Functor	Jastrow/McMillanJ2Functor.h	/^struct comboMcMillanJ2Functor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
complete	SPOSetInfo.cpp	/^  bool SPOSetInfo::complete() const$/;"	f	class:qmcplusplus::SPOSetInfo
component_gradients	CompositeSPOSet.h	/^    std::vector<GradVector_t*>  component_gradients;$/;"	m	class:qmcplusplus::CompositeSPOSet
component_laplacians	CompositeSPOSet.h	/^    std::vector<ValueVector_t*> component_laplacians;$/;"	m	class:qmcplusplus::CompositeSPOSet
component_offsets	CompositeSPOSet.h	/^    std::vector<int> component_offsets;$/;"	m	class:qmcplusplus::CompositeSPOSet
component_values	CompositeSPOSet.h	/^    std::vector<ValueVector_t*> component_values;$/;"	m	class:qmcplusplus::CompositeSPOSet
components	CompositeSPOSet.h	/^    std::vector<SPOSetBase*>    components;$/;"	m	class:qmcplusplus::CompositeSPOSet
computePhaseFactors	EinsplineSet.cpp	/^inline void EinsplineSetExtended<StorageType>::computePhaseFactors$/;"	f	class:qmcplusplus::EinsplineSetExtended
compute_phase	einspline_helper.hpp	/^    inline void compute_phase(const Array<std::complex<T>,3>& in, const TinyVector<T2,3>& twist, T& phase_r, T& phase_i)$/;"	f	namespace:qmcplusplus
confgList	Fermion/MultiDiracDeterminantBase.h	/^  std::vector<ci_configuration2> confgList;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
confgList	Fermion/MultiDiracDeterminantWithBackflow.h	/^  std::vector<ci_configuration2> confgList;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
container_type	Jastrow/CubicBsplineGroup.h	/^  typedef typename CubicBsplineGrid<T,GRIDTYPE,FIRSTDERIV_CONSTRAINTS>::container_type container_type;$/;"	t	class:qmcplusplus::CubicBsplineGroup
contiguous	SPOSetInfo.cpp	/^  bool SPOSetInfo::contiguous() const$/;"	f	class:qmcplusplus::SPOSetInfo
convertPos	Experimental/EinsplineMixedAdoptor.h	/^  inline void convertPos(const PointType& r, PointType& ru)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
convertPos	Experimental/EinsplineMixedAdoptor.h	/^  inline void convertPos(const PointType& r, PointType& ru, int& sign)$/;"	f	struct:qmcplusplus::SplineMixedAdoptor
convertPos	Experimental/SplineOpenAdoptor.h	/^  inline void convertPos(const PointType& r, PointType& ru)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
convertPos	SplineMixedAdoptor.h	/^  inline void convertPos(const PointType& r, PointType& ru)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
convertPos	SplineR2RAdoptor.h	/^  inline int convertPos(const PointType& r, PointType& ru)$/;"	f	struct:qmcplusplus::SplineR2RAdoptor
convertRatiosFromComplexToReal	TrialWaveFunction_CUDA.cpp	/^TrialWaveFunction::convertRatiosFromComplexToReal (std::vector<ValueType> &psi_ratios,$/;"	f	class:qmcplusplus::TrialWaveFunction
copy	Experimental/EinsplineSetBuilderReadBands_ESHDF2.cpp	/^void copy(EinsplineSet* in, SPE* out)$/;"	f	namespace:qmcplusplus
copy	SPOInfo.h	/^    inline SPOInfo* copy()$/;"	f	struct:qmcplusplus::SPOInfo
copyFrom	Fermion/BackflowTransformation.h	/^  void copyFrom(BackflowTransformation &tr)$/;"	f	class:qmcplusplus::BackflowTransformation
copyFrom	Jastrow/OneBodyJastrowOrbital.h	/^  void copyFrom(const OrbitalBase& old)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
copyFrom	Jastrow/OneBodySpinJastrowOrbital.h	/^  void copyFrom(const OrbitalBase& old)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
copyFrom	Jastrow/TwoBodyJastrowOrbital.h	/^  void copyFrom(const OrbitalBase& old)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
copyFrom	Jastrow/eeI_JastrowOrbital.h	/^  void copyFrom(const OrbitalBase& old)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
copyFrom	Jastrow/kSpaceJastrow.cpp	/^void kSpaceJastrow::copyFrom(const kSpaceJastrow& old)$/;"	f	class:qmcplusplus::kSpaceJastrow
copyFromBuffer	AGPDeterminant.cpp	/^void AGPDeterminant::copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::AGPDeterminant
copyFromBuffer	ConstantOrbital.h	/^  virtual void copyFromBuffer(ParticleSet& P, BufferType& buf) {}$/;"	f	class:qmcplusplus::ConstantOrbital
copyFromBuffer	Experimental/DiracDeterminant.h	/^  void copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::DiracDeterminant
copyFromBuffer	Experimental/SlaterDeterminant.h	/^  void copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::SlaterDeterminant
copyFromBuffer	Experimental/TwoBodyJastrowFunction.Shared.h	/^  void copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::TwoBodyJastrow
copyFromBuffer	Experimental/TwoBodyJastrowFunction.h	/^  inline void copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::TwoBodyJastrow
copyFromBuffer	FDLRWfn.h	/^    void copyFromBuffer(ParticleSet& P, BufferType& buf)$/;"	f	class:qmcplusplus::FDLRWfn
copyFromBuffer	Fermion/BackflowFunctionBase.h	/^  void copyFromBuffer(PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::BackflowFunctionBase
copyFromBuffer	Fermion/BackflowTransformation.h	/^  void copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::BackflowTransformation
copyFromBuffer	Fermion/DiracDeterminantBase.cpp	/^void DiracDeterminantBase::copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::DiracDeterminantBase
copyFromBuffer	Fermion/DiracDeterminantWithBackflow.cpp	/^void DiracDeterminantWithBackflow::copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
copyFromBuffer	Fermion/MultiDiracDeterminantBase.cpp	/^void MultiDiracDeterminantBase::copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
copyFromBuffer	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^void MultiDiracDeterminantBase::copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
copyFromBuffer	Fermion/MultiSlaterDeterminant.cpp	/^void MultiSlaterDeterminant::copyFromBuffer(ParticleSet& P, BufferType& buf)$/;"	f	class:qmcplusplus::MultiSlaterDeterminant
copyFromBuffer	Fermion/MultiSlaterDeterminantFast.cpp	/^void MultiSlaterDeterminantFast::copyFromBuffer(ParticleSet& P, BufferType& buf)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
copyFromBuffer	Fermion/MultiSlaterDeterminantWithBackflow.cpp	/^void MultiSlaterDeterminantWithBackflow::copyFromBuffer(ParticleSet& P, BufferType& buf)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
copyFromBuffer	Fermion/RNDiracDeterminantBase.cpp	/^void RNDiracDeterminantBase::copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::RNDiracDeterminantBase
copyFromBuffer	Fermion/RNDiracDeterminantBaseAlternate.cpp	/^void RNDiracDeterminantBaseAlternate::copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
copyFromBuffer	Fermion/SlaterDet.cpp	/^void SlaterDet::copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::SlaterDet
copyFromBuffer	Fermion/SlaterDetOpt.cpp	/^void SlaterDetOpt::copyFromBuffer(ParticleSet& P, BufferType& buf) {$/;"	f	class:qmcplusplus::SlaterDetOpt
copyFromBuffer	Fermion/SlaterDetWithBackflow.cpp	/^void SlaterDetWithBackflow::copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
copyFromBuffer	IonOrbital.cpp	/^IonOrbital::copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::IonOrbital
copyFromBuffer	Jastrow/LRTwoBodyJastrow.cpp	/^void LRTwoBodyJastrow::copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
copyFromBuffer	Jastrow/OneBodyJastrowOrbital.h	/^  void copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
copyFromBuffer	Jastrow/OneBodySpinJastrowOrbital.h	/^  void copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
copyFromBuffer	Jastrow/PolarizedJastrow.h	/^  void copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::PolarizedJastrow
copyFromBuffer	Jastrow/RPAJastrow.cpp	/^RPAJastrow::copyFromBuffer(ParticleSet& P, BufferType& buf)$/;"	f	class:qmcplusplus::RPAJastrow
copyFromBuffer	Jastrow/ThreeBodyBlockSparse.cpp	/^ThreeBodyBlockSparse::copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
copyFromBuffer	Jastrow/ThreeBodyGeminal.cpp	/^ThreeBodyGeminal::copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
copyFromBuffer	Jastrow/ThreeBodyJastrowOrbital.h	/^  void copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
copyFromBuffer	Jastrow/ThreeBodyPade.h	/^  void copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::ThreeBodyPade
copyFromBuffer	Jastrow/TwoBodyJastrowOrbital.h	/^  inline void copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
copyFromBuffer	Jastrow/eeI_JastrowOrbital.h	/^  inline void copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
copyFromBuffer	Jastrow/kSpaceJastrow.cpp	/^kSpaceJastrow::copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::kSpaceJastrow
copyFromBuffer	LCOrbitalSetOpt.h	/^    void copyFromBuffer(ParticleSet& P, BufferType& buf) {}$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
copyFromBuffer	ProductOrbital.cpp	/^void ProductOrbital::copyFromBuffer(ParticleSet& P, BufferType& buf)$/;"	f	class:qmcplusplus::ProductOrbital
copyFromBuffer	TrialWaveFunction.cpp	/^void TrialWaveFunction::copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::TrialWaveFunction
copyFromDerivativeBuffer	FDLRWfn.h	/^    void copyFromDerivativeBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::FDLRWfn
copyFromDerivativeBuffer	Fermion/DiracDeterminantBase.cpp	/^void DiracDeterminantBase::copyFromDerivativeBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::DiracDeterminantBase
copyFromDerivativeBuffer	Fermion/MultiDiracDeterminantBase.cpp	/^void MultiDiracDeterminantBase::copyFromDerivativeBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
copyFromDerivativeBuffer	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^void MultiDiracDeterminantBase::copyFromDerivativeBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
copyFromDerivativeBuffer	Fermion/SlaterDet.h	/^  virtual void  copyFromDerivativeBuffer(ParticleSet& P, BufferType& buf)$/;"	f	class:qmcplusplus::SlaterDet
copyFromDerivativeBuffer	OrbitalBase.h	/^  virtual void copyFromDerivativeBuffer(ParticleSet& P, PooledData<RealType>& buf) {};$/;"	f	struct:qmcplusplus::OrbitalBase
copyParamsFromMatrix	HarmonicOscillator/SHOSet.cpp	/^  void SHOSet::copyParamsFromMatrix($/;"	f	class:qmcplusplus::SHOSet
copyParamsFromMatrix	OptimizableSPOSet.cpp	/^OptimizableSPOSet::copyParamsFromMatrix (const opt_variables_type& active,$/;"	f	class:qmcplusplus::OptimizableSPOSet
copyParamsFromMatrix	SPOSetBase.cpp	/^void SPOSetBase::copyParamsFromMatrix (const opt_variables_type& active,$/;"	f	class:qmcplusplus::SPOSetBase
copySPOs	FermionBase.cpp	/^void FermionBase::copySPOs(spo_set_type& spos)$/;"	f	class:qmcplusplus::FermionBase
copySPOs	FermionBase.h	/^  inline void copySPOs(FermionBase& a)$/;"	f	struct:qmcplusplus::FermionBase
copyToDerivativeBuffer	Fermion/DiracDeterminantBase.cpp	/^void DiracDeterminantBase::copyToDerivativeBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::DiracDeterminantBase
copyToDerivativeBuffer	Fermion/MultiDiracDeterminantBase.cpp	/^void MultiDiracDeterminantBase::copyToDerivativeBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
copyToDerivativeBuffer	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^void MultiDiracDeterminantBase::copyToDerivativeBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
copy_recompute_vector	FDLRWfn.h	/^    void copy_recompute_vector(const opt_variables_type& vars_full, opt_variables_type& vars_part)$/;"	f	class:qmcplusplus::FDLRWfn
corrBasisSet	Experimental/LCOrbitalSetWithCorrection.h	/^  CorrectingOrbitalBasisSet<COT>* corrBasisSet;$/;"	m	class:qmcplusplus::LCOrbitalSetWithCorrection
corrCenter	Experimental/LCOrbitalSetWithCorrection.h	/^  std::vector<bool> corrCenter;$/;"	m	class:qmcplusplus::LCOrbitalSetWithCorrection
corr_tag	Jastrow/Experimental/OldJastrowBuilder.h	/^  std::string corr_tag;$/;"	m	struct:qmcplusplus::JastrowBuilder
costheta	AFMSPOSet.h	/^  RealType theta, costheta, sintheta, dcostheta, dsintheta;$/;"	m	class:qmcplusplus::AFMSPOSet
count	Fermion/ci_configuration.h	/^  int count() const$/;"	f	struct:qmcplusplus::ci_configuration
count_degeneracies	SPOSetInfo.cpp	/^  void SPOSetInfo::count_degeneracies()$/;"	f	class:qmcplusplus::SPOSetInfo
createAGP	AGPDeterminantBuilder.cpp	/^bool AGPDeterminantBuilder::createAGP(BasisBuilderT *abuilder, xmlNodePtr cur)$/;"	f	class:qmcplusplus::AGPDeterminantBuilder
createAOSet	MolecularOrbitals/AtomicBasisBuilder.h	/^AtomicBasisBuilder<RFB>::createAOSet(xmlNodePtr cur)$/;"	f	class:qmcplusplus::AtomicBasisBuilder
createBasisGroup	Jastrow/Experimental/AnyConstraints.cpp	/^AnyConstraints::createBasisGroup(xmlNodePtr cur, const std::string& elementType)$/;"	f	class:qmcplusplus::AnyConstraints
createBasisGroup	Jastrow/PolyConstraints.cpp	/^PolyConstraints::createBasisGroup(xmlNodePtr cur, const std::string& elementType, RealType rcut)$/;"	f	class:qmcplusplus::PolyConstraints
createBasisGroup	Jastrow/WMJastrowBuilder.cpp	/^WMJastrowBuilder::createBasisGroup(xmlNodePtr cur, const std::string& elementType)$/;"	f	class:qmcplusplus::WMJastrowBuilder
createBasisSet	BasisSetFactory.cpp	/^BasisSetBuilder* BasisSetFactory::createBasisSet(xmlNodePtr cur,xmlNodePtr  rootNode)$/;"	f	class:qmcplusplus::BasisSetFactory
createCorrelation	Jastrow/Experimental/WMConstraints.cpp	/^WMConstraints::createCorrelation(xmlNodePtr cur,BasisSetType* basis)$/;"	f	class:qmcplusplus::WMConstraints
createDefaultTwoBody	Jastrow/Experimental/WMConstraints.cpp	/^WMConstraints::createDefaultTwoBody(xmlNodePtr cur, const std::string& tname)$/;"	f	class:qmcplusplus::WMConstraints
createDetData	Fermion/MultiDiracDeterminantBase.cpp	/^void MultiDiracDeterminantBase::createDetData(ci_configuration2& ref, std::vector<int>& data,$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
createDetData	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^void MultiDiracDeterminantBase::createDetData(ci_configuration2& ref, std::vector<int>& data,$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
createGrid	ElectronGas/HEGGrid.h	/^  void createGrid(const PosType& twistAngle)$/;"	f	struct:qmcplusplus::HEGGrid
createGrid	ElectronGas/HEGGrid.h	/^  void createGrid(const std::vector<int>& states, T tol=1e-6)$/;"	f	struct:qmcplusplus::HEGGrid
createGrid	ElectronGas/HEGGrid.h	/^  void createGrid(const std::vector<int>& states,const PosType& twistAngle, T tol=1e-6)$/;"	f	struct:qmcplusplus::HEGGrid
createGrid	ElectronGas/HEGGrid.h	/^  void createGrid(int nc, int nkpts)$/;"	f	struct:qmcplusplus::HEGGrid
createGrid	ElectronGas/HEGGrid.h	/^  void createGrid(int nc, int nkpts, const PosType& twistAngle)$/;"	f	struct:qmcplusplus::HEGGrid
createInFunc	Jastrow/Experimental/NJAABuilder.cpp	/^NJAABuilder::createInFunc(const std::string& jastfunction, int speciesA, int speciesB)$/;"	f	class:qmcplusplus::NJAABuilder
createInFunc	Jastrow/Experimental/NJABBuilder.cpp	/^NJABBuilder::createInFunc(const std::string& jastfunction)$/;"	f	class:qmcplusplus::NJABBuilder
createJAA	Jastrow/JAABuilder.cpp	/^template <class FN> TwoBodyJastrowOrbital<FN>* JAABuilder::createJAA(xmlNodePtr cur, const std::string& jname)$/;"	f	class:qmcplusplus::JAABuilder
createJAB	Jastrow/JABBuilder.cpp	/^bool JABBuilder::createJAB(xmlNodePtr cur, const std::string& jname)$/;"	f	class:qmcplusplus::JABBuilder
createLCOSets	Experimental/LCOrbitalSetWithCorrection.cpp	/^void LCOrbitalSetWithCorrection<BS,false>::createLCOSets(int centr, LCOrbitalSet<BS,false>* Phi, LCOrbitalSet<BS,false>* Eta)$/;"	f	class:qmcplusplus::LCOrbitalSetWithCorrection
createLocalizedBasisSet	Jastrow/JastrowBasisBuilder.cpp	/^void JastrowBasisBuilder::createLocalizedBasisSet(xmlNodePtr cur)$/;"	f	class:qmcplusplus::JastrowBasisBuilder
createMSD	Fermion/SlaterDetBuilder.cpp	/^bool SlaterDetBuilder::createMSD(MultiSlaterDeterminant* multiSD, xmlNodePtr cur)$/;"	f	class:qmcplusplus::SlaterDetBuilder
createMSDFast	Fermion/SlaterDetBuilder.cpp	/^bool SlaterDetBuilder::createMSDFast(MultiSlaterDeterminantFast* multiSD, xmlNodePtr cur)$/;"	f	class:qmcplusplus::SlaterDetBuilder
createNGO	Fermion/GaussianFunctor.h	/^  void createNGO() {}$/;"	f	class:qmcplusplus::GaussianFunctor
createOneBody	Jastrow/Experimental/AnyConstraints.cpp	/^OrbitalBase* AnyConstraints::createOneBody(ParticleSet& source)$/;"	f	class:qmcplusplus::AnyConstraints
createOneBody	Jastrow/Experimental/OldJastrowBuilder.cpp	/^JastrowBuilder::createOneBody(xmlNodePtr cur, JneType* J1)$/;"	f	class:qmcplusplus::JastrowBuilder
createOneBody	Jastrow/Experimental/PadeConstraints.cpp	/^OrbitalBase* PadeConstraints::createOneBody(ParticleSet& source)$/;"	f	class:qmcplusplus::PadeConstraints
createOneBody	Jastrow/Experimental/PadeConstraints.cpp	/^ScaledPadeConstraints::createOneBody(ParticleSet& source)$/;"	f	class:qmcplusplus::ScaledPadeConstraints
createOneBody	Jastrow/Experimental/WMConstraints.cpp	/^OrbitalBase* WMConstraints::createOneBody(ParticleSet& target, ParticleSet& source)$/;"	f	class:qmcplusplus::WMConstraints
createOneBody	Jastrow/PolyConstraints.cpp	/^OrbitalBase* PolyConstraints::createOneBody(ParticleSet& source)$/;"	f	class:qmcplusplus::PolyConstraints
createOneBodyJastrow	Jastrow/BsplineJastrowBuilder.cpp	/^bool BsplineJastrowBuilder::createOneBodyJastrow(xmlNodePtr cur)$/;"	f	class:qmcplusplus::BsplineJastrowBuilder
createPW	PlaneWave/PWOrbitalBuilder.cpp	/^PWOrbitalBuilder::createPW(xmlNodePtr cur, int spinIndex)$/;"	f	class:qmcplusplus::PWOrbitalBuilder
createPWBasis	PlaneWave/PWOrbitalBuilder.cpp	/^bool PWOrbitalBuilder::createPWBasis(xmlNodePtr cur)$/;"	f	class:qmcplusplus::PWOrbitalBuilder
createSPOSet	BasisSetBuilder.cpp	/^  SPOSetBase* BasisSetBuilder::createSPOSet(xmlNodePtr cur)$/;"	f	class:qmcplusplus::BasisSetBuilder
createSPOSet	BasisSetBuilder.cpp	/^  SPOSetBase* BasisSetBuilder::createSPOSet(xmlNodePtr cur,SPOSetInputInfo& input_info)$/;"	f	class:qmcplusplus::BasisSetBuilder
createSPOSet	BasisSetFactory.cpp	/^SPOSetBase* BasisSetFactory::createSPOSet(xmlNodePtr cur)$/;"	f	class:qmcplusplus::BasisSetFactory
createSPOSet	CompositeSPOSet.cpp	/^  SPOSetBase* CompositeSPOSetBuilder::createSPOSet(xmlNodePtr cur,SPOSetInputInfo& input)$/;"	f	class:qmcplusplus::CompositeSPOSetBuilder
createSPOSet	EinsplineSetBuilder_createSPOs.cpp	/^SPOSetBase* EinsplineSetBuilder::createSPOSet(xmlNodePtr cur,SPOSetInputInfo& input_info)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
createSPOSet	Experimental/EinsplineSetBuilder.cpp	/^EinsplineSetBuilder::createSPOSet(xmlNodePtr cur)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
createSPOSet	Experimental/NumericalOrbitalSetBuilder.cpp	/^NumericalOrbitalSetBuilder::createSPOSet(xmlNodePtr cur, const std::string& ref, int norb)$/;"	f	class:qmcplusplus::NumericalOrbitalSetBuilder
createSPOSet	Experimental/SplineSetBuilder.cpp	/^SplineSetBuilder::createSPOSet(xmlNodePtr cur)$/;"	f	class:qmcplusplus::SplineSetBuilder
createSPOSet	Experimental/TricubicBsplineSetBuilder.cpp	/^TricubicBsplineSetBuilder::createSPOSet(xmlNodePtr cur)$/;"	f	class:qmcplusplus::TricubicBsplineSetBuilder
createSPOSet	HarmonicOscillator/SHOSetBuilder.cpp	/^  SPOSetBase* SHOSetBuilder::createSPOSet(xmlNodePtr cur,SPOSetInputInfo& input)$/;"	f	class:qmcplusplus::SHOSetBuilder
createSPOSetFromIndices	ElectronGas/ElectronGasComplexOrbitalBuilder.cpp	/^SPOSetBase* ElectronGasBasisBuilder::createSPOSetFromIndices(indices_t& indices)$/;"	f	class:qmcplusplus::ElectronGasBasisBuilder
createSPOSetFromXML	AFMSPOBuilder.cpp	/^AFMSPOBuilder::createSPOSetFromXML(xmlNodePtr cur)$/;"	f	class:qmcplusplus::AFMSPOBuilder
createSPOSetFromXML	CompositeSPOSet.cpp	/^  SPOSetBase* CompositeSPOSetBuilder::createSPOSetFromXML(xmlNodePtr cur)$/;"	f	class:qmcplusplus::CompositeSPOSetBuilder
createSPOSetFromXML	EinsplineSetBuilder_createSPOs.cpp	/^EinsplineSetBuilder::createSPOSetFromXML(xmlNodePtr cur)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
createSPOSetFromXML	ElectronGas/ElectronGasComplexOrbitalBuilder.cpp	/^SPOSetBase* ElectronGasBasisBuilder::createSPOSetFromXML(xmlNodePtr cur)$/;"	f	class:qmcplusplus::ElectronGasBasisBuilder
createSPOSetFromXML	ElectronGas/ElectronGasOrbitalBuilder.cpp	/^SPOSetBase* ElectronGasBasisBuilder::createSPOSetFromXML(xmlNodePtr cur)$/;"	f	class:qmcplusplus::ElectronGasBasisBuilder
createSPOSetFromXML	HarmonicOscillator/SHOSetBuilder.cpp	/^  SPOSetBase* SHOSetBuilder::createSPOSetFromXML(xmlNodePtr cur)$/;"	f	class:qmcplusplus::SHOSetBuilder
createSPOSetFromXML	Jastrow/JastrowBasisBuilder.h	/^  SPOSetBase* createSPOSetFromXML(xmlNodePtr cur)$/;"	f	class:qmcplusplus::JastrowBasisBuilder
createSPOSetFromXML	MolecularOrbitals/AtomicBasisBuilder.h	/^  SPOSetBase* createSPOSetFromXML(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::AtomicBasisBuilder
createSPOSetFromXML	MolecularOrbitals/MolecularBasisBuilder.h	/^  SPOSetBase* createSPOSetFromXML(xmlNodePtr cur)$/;"	f	class:qmcplusplus::MolecularBasisBuilder
createSPOSetFromXML	OptimizableSPOBuilder.cpp	/^OptimizableSPOBuilder::createSPOSetFromXML(xmlNodePtr cur)$/;"	f	class:qmcplusplus::OptimizableSPOBuilder
createTwoBody	Jastrow/Experimental/AnyConstraints.cpp	/^OrbitalBase* AnyConstraints::createTwoBody()$/;"	f	class:qmcplusplus::AnyConstraints
createTwoBody	Jastrow/Experimental/PadeConstraints.cpp	/^OrbitalBase* PadeConstraints::createTwoBody()$/;"	f	class:qmcplusplus::PadeConstraints
createTwoBody	Jastrow/Experimental/PadeConstraints.cpp	/^OrbitalBase* ScaledPadeConstraints::createTwoBody()$/;"	f	class:qmcplusplus::ScaledPadeConstraints
createTwoBody	Jastrow/Experimental/WMConstraints.cpp	/^OrbitalBase* WMConstraints::createTwoBody(ParticleSet& target)$/;"	f	class:qmcplusplus::WMConstraints
createTwoBody	Jastrow/PolyConstraints.cpp	/^OrbitalBase* PolyConstraints::createTwoBody()$/;"	f	class:qmcplusplus::PolyConstraints
createTwoBodyNoSpin	Jastrow/Experimental/OldJastrowBuilder.cpp	/^JastrowBuilder::createTwoBodyNoSpin(xmlNodePtr cur, JeeType* J2)$/;"	f	class:qmcplusplus::JastrowBuilder
createTwoBodySpin	Jastrow/Experimental/OldJastrowBuilder.cpp	/^JastrowBuilder::createTwoBodySpin(xmlNodePtr cur, JeeType* J2)$/;"	f	class:qmcplusplus::JastrowBuilder
create_kpoints	ElectronGas/HEGGrid.h	/^  void create_kpoints(int nc, const PosType& tw, T tol=1e-6)$/;"	f	struct:qmcplusplus::HEGGrid
create_multi_UBspline_3d_cuda	EinsplineSetCuda.cpp	/^inline void create_multi_UBspline_3d_cuda (multi_UBspline_3d_d *in,$/;"	f	namespace:qmcplusplus
create_multi_UBspline_3d_cuda	EinsplineSetCuda.cpp	/^inline void create_multi_UBspline_3d_cuda (multi_UBspline_3d_z *in,$/;"	f	namespace:qmcplusplus
create_multi_UBspline_3d_cuda	Experimental/EinsplineSetBuilder.cpp	/^inline void create_multi_UBspline_3d_cuda (multi_UBspline_3d_d *in,$/;"	f	namespace:qmcplusplus
create_multi_UBspline_3d_cuda	Experimental/EinsplineSetBuilder.cpp	/^inline void create_multi_UBspline_3d_cuda (multi_UBspline_3d_z *in,$/;"	f	namespace:qmcplusplus
create_multi_UBspline_3d_cuda	Experimental/EinsplineSetBuilderESHDF.cpp	/^inline void create_multi_UBspline_3d_cuda (multi_UBspline_3d_d *in,$/;"	f	namespace:qmcplusplus
create_multi_UBspline_3d_cuda	Experimental/EinsplineSetBuilderESHDF.cpp	/^inline void create_multi_UBspline_3d_cuda (multi_UBspline_3d_z *in,$/;"	f	namespace:qmcplusplus
create_optimizable_sd	Fermion/SlaterDetBuilder.cpp	/^SlaterDetOpt * SlaterDetBuilder::create_optimizable_sd(ParticleSet & targetPtcl,$/;"	f	class:qmcplusplus::SlaterDetBuilder
create_spline	Experimental/EinsplineMixedAdoptor.h	/^  void create_spline(TinyVector<int,D>& mesh, int n, bool samegrid)$/;"	f	struct:qmcplusplus::SplineMixedAdoptor
create_spline	Experimental/EinsplineMixedAdoptor.h	/^  void create_spline(TinyVector<int,D>& mesh, int n, bool samegrid)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
create_spline	Experimental/SplineOpenAdoptor.h	/^  void create_spline(TinyVector<int,D>& mesh, int n, bool samegrid)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
create_spline	SplineC2XAdoptor.h	/^  void create_spline(GT& xyz_g, BCT& xyz_bc)$/;"	f	struct:qmcplusplus::SplineC2CPackedAdoptor
create_spline	SplineC2XAdoptor.h	/^  void create_spline(GT& xyz_g, BCT& xyz_bc)$/;"	f	struct:qmcplusplus::SplineC2RPackedAdoptor
create_spline	SplineMixedAdoptor.h	/^  void create_spline(TinyVector<int,D>& mesh_0, TinyVector<int,D>& mesh_1$/;"	f	struct:qmcplusplus::SplineMixedAdoptor
create_spline	SplineMixedAdoptor.h	/^  void create_spline(TinyVector<int,D>& mesh_0, TinyVector<int,D>& mesh_1$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
create_spline	SplineR2RAdoptor.h	/^  void create_spline(GT& xyz_g, BCT& xyz_bc)$/;"	f	struct:qmcplusplus::SplineR2RAdoptor
create_spline	SplineR2RAdoptor.h	/^  void create_spline(TinyVector<int,D>& mesh, int n)$/;"	f	struct:qmcplusplus::SplineR2RAdoptor
create_spline_set	BsplineReaderBase.cpp	/^  SPOSetBase* BsplineReaderBase::create_spline_set(int spin, xmlNodePtr cur)$/;"	f	class:qmcplusplus::BsplineReaderBase
create_spline_set	BsplineReaderBase.cpp	/^  SPOSetBase* BsplineReaderBase::create_spline_set(int spin, xmlNodePtr cur, SPOSetInputInfo& input_info)$/;"	f	class:qmcplusplus::BsplineReaderBase
create_spline_set	Experimental/SplineOpenAdoptor.h	/^  SPOSetBase* create_spline_set(int spin, EinsplineSet* orbitalSet)$/;"	f	struct:qmcplusplus::SplineOpenAdoptorReader
create_spline_set	MultiGridBsplineSetReader.h	/^  SPOSetBase* create_spline_set(int spin, const BandInfoGroup& bandgroup)$/;"	f	struct:qmcplusplus::MultiGridBsplineSetReader
create_spline_set	SplineAdoptorReaderP.h	/^  SPOSetBase* create_spline_set(int spin, const BandInfoGroup& bandgroup)$/;"	f	struct:qmcplusplus::SplineAdoptorReader
create_spline_set	SplineMixedAdoptorReaderP.h	/^  SPOSetBase* create_spline_set(int spin, const BandInfoGroup& bandgroup)$/;"	f	struct:qmcplusplus::SplineMixedAdoptorReader
create_spline_set	legacy/SplineAdoptorReader.h	/^  SPOSetBase* create_spline_set(int spin, EinsplineSet* orbitalSet)$/;"	f	struct:qmcplusplus::SplineAdoptorReader
create_spline_set	legacy/SplineMixedAdoptorReader.h	/^  SPOSetBase* create_spline_set(int spin, EinsplineSet* orbitalSet)$/;"	f	struct:qmcplusplus::SplineMixedAdoptorReader
cudaSign	EinsplineSet.h	/^  gpu::device_vector<CudaRealType> cudaSign, NLcudaSign;$/;"	m	class:qmcplusplus::EinsplineSetExtended
cudaTypeTraits	AtomicOrbitalCuda.h	/^template<> struct cudaTypeTraits<double>$/;"	s
cudaTypeTraits	AtomicOrbitalCuda.h	/^template<> struct cudaTypeTraits<float>$/;"	s
cudapos	EinsplineSet.h	/^  gpu::device_vector<CudaPosType> cudapos, NLcudapos;$/;"	m	class:qmcplusplus::EinsplineSetExtended
cumRatio	AGPDeterminant.h	/^  RealType cumRatio;$/;"	m	class:qmcplusplus::AGPDeterminant
cumRatio	Experimental/DiracDeterminant.h	/^  ValueType curRatio,cumRatio;$/;"	m	class:qmcplusplus::DiracDeterminant
cumRatio	Fermion/DiracDeterminantBase.h	/^  ValueType curRatio,cumRatio;$/;"	m	class:qmcplusplus::DiracDeterminantBase
cumRatio	Fermion/MultiDiracDeterminantBase.h	/^  ValueType curRatio,cumRatio;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
cumRatio	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueType curRatio,cumRatio;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
curCenter	Experimental/CuspCorr.h	/^  int nElms,curOrb,curCenter;$/;"	m	class:qmcplusplus::CuspCorr
curGrad	Experimental/TwoBodyJastrowFunction.Shared.h	/^  GradVectorType dU,curGrad;$/;"	m	class:qmcplusplus::TwoBodyJastrow
curGrad	Experimental/TwoBodyJastrowFunction.h	/^  GradVectorType dU,curGrad;$/;"	m	class:qmcplusplus::TwoBodyJastrow
curGrad	IonOrbital.h	/^  PosType curGrad;$/;"	m	struct:qmcplusplus::IonOrbital
curGrad	Jastrow/LRTwoBodyJastrow.h	/^  PosType curGrad;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
curGrad	Jastrow/OneBodyJastrowOrbital.h	/^  PosType curGrad;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbital
curGrad	Jastrow/OneBodySpinJastrowOrbital.h	/^  PosType curGrad;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
curGrad	Jastrow/ThreeBodyBlockSparse.h	/^  Vector<PosType> curGrad, tGrad;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
curGrad	Jastrow/ThreeBodyGeminal.h	/^  Vector<PosType> curGrad, tGrad;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
curGrad	Jastrow/ThreeBodyJastrowOrbital.h	/^  PosType curGrad;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
curGrad	Jastrow/ThreeBodyPade.h	/^  GradType curGrad;$/;"	m	class:qmcplusplus::ThreeBodyPade
curGrad	Jastrow/TwoBodyJastrowOrbital.h	/^  ParticleAttrib<PosType> dU,curGrad;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
curGrad0	Jastrow/TwoBodyJastrowOrbital.h	/^  ParticleAttrib<PosType> curGrad0;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
curGrad0	Jastrow/eeI_JastrowOrbital.h	/^  ParticleAttrib<PosType> curGrad0;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
curGrad_i	Jastrow/eeI_JastrowOrbital.h	/^  ParticleAttrib<PosType> dU,curGrad_i, curGrad_j;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
curGrad_j	Jastrow/eeI_JastrowOrbital.h	/^  ParticleAttrib<PosType> dU,curGrad_i, curGrad_j;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
curH5Fname	Experimental/TricubicBsplineSetBuilder.h	/^  std::string curH5Fname;$/;"	m	class:qmcplusplus::TricubicBsplineSetBuilder
curLap	Experimental/TwoBodyJastrowFunction.Shared.h	/^  ValueVectorType U,d2U,curLap,curVal;$/;"	m	class:qmcplusplus::TwoBodyJastrow
curLap	Experimental/TwoBodyJastrowFunction.h	/^  ValueVectorType U,d2U,curLap,curVal;$/;"	m	class:qmcplusplus::TwoBodyJastrow
curLap	IonOrbital.h	/^  RealType curVal, curLap;$/;"	m	struct:qmcplusplus::IonOrbital
curLap	Jastrow/LRTwoBodyJastrow.h	/^  RealType curVal, curLap;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
curLap	Jastrow/OneBodyJastrowOrbital.h	/^  RealType curVal, curLap;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbital
curLap	Jastrow/OneBodySpinJastrowOrbital.h	/^  RealType curLap;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
curLap	Jastrow/ThreeBodyBlockSparse.h	/^  Vector<RealType> curLap, tLap;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
curLap	Jastrow/ThreeBodyGeminal.h	/^  Vector<RealType> curLap, tLap;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
curLap	Jastrow/ThreeBodyJastrowOrbital.h	/^  RealType curVal, curLap;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
curLap	Jastrow/ThreeBodyPade.h	/^  ValueType curVal, curLap;$/;"	m	class:qmcplusplus::ThreeBodyPade
curLap	Jastrow/TwoBodyJastrowOrbital.h	/^  ParticleAttrib<RealType> U,d2U,curLap,curVal;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
curLap_i	Jastrow/eeI_JastrowOrbital.h	/^  ParticleAttrib<RealType> U,d2U,curLap_i, curLap_j, curVal;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
curLap_j	Jastrow/eeI_JastrowOrbital.h	/^  ParticleAttrib<RealType> U,d2U,curLap_i, curLap_j, curVal;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
curOrb	Experimental/CuspCorr.h	/^  int nElms,curOrb,curCenter;$/;"	m	class:qmcplusplus::CuspCorr
curRatio	AGPDeterminant.h	/^  RealType curRatio;$/;"	m	class:qmcplusplus::AGPDeterminant
curRatio	Experimental/DiracDeterminant.h	/^  ValueType curRatio,cumRatio;$/;"	m	class:qmcplusplus::DiracDeterminant
curRatio	Fermion/DiracDeterminantBase.h	/^  ValueType curRatio,cumRatio;$/;"	m	class:qmcplusplus::DiracDeterminantBase
curRatio	Fermion/MultiDiracDeterminantBase.h	/^  ValueType curRatio,cumRatio;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
curRatio	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueType curRatio,cumRatio;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
curRatio	Fermion/MultiSlaterDeterminant.h	/^  ValueType curRatio;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
curRatio	Fermion/MultiSlaterDeterminantFast.h	/^  ValueType curRatio;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
curV	Jastrow/ThreeBodyBlockSparse.h	/^  Vector<RealType> curV;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
curV	Jastrow/ThreeBodyGeminal.h	/^  Vector<RealType> curV;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
curVal	Experimental/TwoBodyJastrowFunction.Shared.h	/^  ValueVectorType U,d2U,curLap,curVal;$/;"	m	class:qmcplusplus::TwoBodyJastrow
curVal	Experimental/TwoBodyJastrowFunction.h	/^  ValueVectorType U,d2U,curLap,curVal;$/;"	m	class:qmcplusplus::TwoBodyJastrow
curVal	IonOrbital.h	/^  RealType curVal, curLap;$/;"	m	struct:qmcplusplus::IonOrbital
curVal	Jastrow/LRTwoBodyJastrow.h	/^  RealType curVal, curLap;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
curVal	Jastrow/OneBodyJastrowOrbital.h	/^  RealType curVal, curLap;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbital
curVal	Jastrow/OneBodySpinJastrowOrbital.h	/^  RealType curVal;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
curVal	Jastrow/ThreeBodyBlockSparse.h	/^  Vector<RealType> curVal;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
curVal	Jastrow/ThreeBodyGeminal.h	/^  Vector<RealType> curVal;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
curVal	Jastrow/ThreeBodyJastrowOrbital.h	/^  RealType curVal, curLap;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
curVal	Jastrow/ThreeBodyPade.h	/^  ValueType curVal, curLap;$/;"	m	class:qmcplusplus::ThreeBodyPade
curVal	Jastrow/TwoBodyJastrowOrbital.h	/^  ParticleAttrib<RealType> U,d2U,curLap,curVal;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
curVal	Jastrow/eeI_JastrowOrbital.h	/^  ParticleAttrib<RealType> U,d2U,curLap_i, curLap_j, curVal;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
cuspCorr	MolecularOrbitals/MolecularBasisBuilder.h	/^  bool cuspCorr;$/;"	m	class:qmcplusplus::MolecularBasisBuilder
cuspInfo	MolecularOrbitals/MolecularBasisBuilder.h	/^  std::string cuspInfo;$/;"	m	class:qmcplusplus::MolecularBasisBuilder
cuspInfoFile	Experimental/LCOrbitalSetWithCorrection.h	/^  std::string cuspInfoFile;$/;"	m	class:qmcplusplus::LCOrbitalSetWithCorrection
cutOff	Fermion/BackflowBuilder.h	/^  RealType cutOff;$/;"	m	class:qmcplusplus::BackflowBuilder
cutOff	Fermion/BackflowTransformation.h	/^  RealType cutOff;$/;"	m	class:qmcplusplus::BackflowTransformation
cutoff	Fermion/DiracDeterminantIterative.h	/^  double cutoff;$/;"	m	class:qmcplusplus::DiracDeterminantIterative
cutoff	Fermion/DiracDeterminantTruncation.h	/^  double cutoff;$/;"	m	class:qmcplusplus::DiracDeterminantTruncation
cutoff_radius	Jastrow/eeI_JastrowOrbital.h	/^  OrbitalBase::RealType cutoff_radius;$/;"	m	struct:qmcplusplus::IonData
d	Jastrow/ThreeBodyPade.h	/^    ValueType c,d;$/;"	m	struct:qmcplusplus::ThreeBodyPade::Coeff
d0_values	HarmonicOscillator/SHOSet.h	/^    Array<RealType,2> d0_values;$/;"	m	struct:qmcplusplus::SHOSet
d1_values	HarmonicOscillator/SHOSet.h	/^    Array<RealType,2> d1_values;$/;"	m	struct:qmcplusplus::SHOSet
d2A	Fermion/BFsplineFunctor.h	/^  const TinyVector<real_type,16> A, dA, d2A, d3A;$/;"	m	struct:qmcplusplus::BFsplineFunctor
d2A	Jastrow/BsplineFunctor.cpp	/^const double BsplineFunctor<double>::d2A[16] =$/;"	m	class:qmcplusplus::BsplineFunctor	file:
d2A	Jastrow/BsplineFunctor.h	/^  const TinyVector<real_type,16> A, dA, d2A, d3A;$/;"	m	struct:qmcplusplus::BsplineFunctor
d2A	Jastrow/BsplineFunctor3D.h	/^  const TinyVector<real_type,16> A, dA, d2A, d3A;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
d2C	Jastrow/PolyFunctor.h	/^  std::vector<T> d2C;$/;"	m	struct:qmcplusplus::PolyFunctor
d2CosFac	Jastrow/CompositeFunctor.h	/^  real_type d2CosFac;$/;"	m	struct:qmcplusplus::CuspCorrectionFunctor
d2CosFac	Jastrow/CompositeFunctor.h	/^  real_type d2CosFac;$/;"	m	struct:qmcplusplus::DCuspCorrectionDEFunctor
d2LogPsi	OrbitalBase.h	/^  ValueVectorType d2LogPsi;$/;"	m	struct:qmcplusplus::OrbitalBase
d2Phi	BasisSetBase.h	/^  ValueVector_t d2Phi;$/;"	m	struct:qmcplusplus::BasisSetBase
d2RadialVec	MuffinTin.h	/^  Vector<std::complex<double> > RadialVec, dRadialVec, d2RadialVec;$/;"	m	class:qmcplusplus::MuffinTinClass
d2TT	Jastrow/ChebyshevFunctor.h	/^  std::vector<T> TT, dTT, d2TT;$/;"	m	struct:ChebyshevFunctor
d2U	Experimental/TwoBodyJastrowFunction.Shared.h	/^  ValueVectorType U,d2U,curLap,curVal;$/;"	m	class:qmcplusplus::TwoBodyJastrow
d2U	Experimental/TwoBodyJastrowFunction.h	/^  ValueVectorType U,d2U,curLap,curVal;$/;"	m	class:qmcplusplus::TwoBodyJastrow
d2U	IonOrbital.h	/^  ParticleAttrib<RealType> U,d2U;$/;"	m	struct:qmcplusplus::IonOrbital
d2U	Jastrow/LRTwoBodyJastrow.h	/^  Vector<RealType> U,d2U;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
d2U	Jastrow/OneBodyJastrowOrbital.h	/^  ParticleAttrib<RealType> U,d2U;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbital
d2U	Jastrow/OneBodySpinJastrowOrbital.h	/^  ParticleAttrib<RealType> U,d2U;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
d2U	Jastrow/ThreeBodyJastrowOrbital.h	/^  ValueVectorType U,d2U;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
d2U	Jastrow/ThreeBodyPade.h	/^  ValueVectorType U,d2U;$/;"	m	class:qmcplusplus::ThreeBodyPade
d2U	Jastrow/TwoBodyJastrowOrbital.h	/^  ParticleAttrib<RealType> U,d2U,curLap,curVal;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
d2U	Jastrow/eeI_JastrowOrbital.h	/^  ParticleAttrib<RealType> U,d2U,curLap_i, curLap_j, curVal;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
d2Uk	Jastrow/ThreeBodyBlockSparse.h	/^  Matrix<RealType> d2Uk;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
d2Uk	Jastrow/ThreeBodyGeminal.h	/^  Matrix<RealType> d2Uk;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
d2Y	AGPDeterminant.h	/^  ValueMatrix_t d2Y;$/;"	m	class:qmcplusplus::AGPDeterminant
d2Y	BasisSetBase.h	/^  ValueMatrix_t d2Y;$/;"	m	struct:qmcplusplus::BasisSetBase
d2Y	Experimental/PlaneWaveBasis.h	/^  Matrix<ValueType> d2Y;$/;"	m	class:qmcplusplus::PlaneWaveBasis
d2Y	Fermion/BFsplineFunctor.h	/^  real_type Y, dY, d2Y;$/;"	m	struct:qmcplusplus::BFsplineFunctor
d2Y	Jastrow/BsplineFunctor.h	/^  real_type Y, dY, d2Y;$/;"	m	struct:qmcplusplus::BsplineFunctor
d2Y	Jastrow/BsplineFunctor3D.h	/^  real_type Y, dY, d2Y;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
d2Y	Jastrow/CubicBsplineGroup.h	/^  value_type d2Y;$/;"	m	class:qmcplusplus::CubicBsplineGroup
d2Y	Jastrow/SplineFunctors.h	/^  real_type d2Y;$/;"	m	struct:qmcplusplus::CubicSplineSingle
d2Y	Jastrow/ThreeBodyBlockSparse.h	/^  Matrix<RealType> d2Y;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
d2Y	Jastrow/ThreeBodyGeminal.h	/^  Matrix<RealType> d2Y;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
d2Y	MolecularOrbitals/NGOBuilder.h	/^  real_type Y, dY, d2Y, d3Y;$/;"	m	struct:qmcplusplus::NGOrbital
d2_values	HarmonicOscillator/SHOSet.h	/^    Array<RealType,2> d2_values;$/;"	m	struct:qmcplusplus::SHOSet
d2phi2	Jastrow/ThreeBodyJastrowOrbital.h	/^  Matrix<RealType> d2phi2;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
d2pr	Experimental/CuspCorr.h	/^  inline RealType d2pr(RealType r)$/;"	f	class:qmcplusplus::CuspCorr
d2psiD	AGPDeterminant.h	/^  ValueMatrix_t d2psiU, d2psiD;$/;"	m	class:qmcplusplus::AGPDeterminant
d2psiDv	AGPDeterminant.h	/^  ValueVector_t d2psiUv, d2psiDv;$/;"	m	class:qmcplusplus::AGPDeterminant
d2psiM	Experimental/DiracDeterminant.h	/^  Laplacian_t   d2psiM, d2psiM_temp;$/;"	m	class:qmcplusplus::DiracDeterminant
d2psiM	Fermion/DiracDeterminantBase.h	/^  ValueMatrix_t d2psiM, d2psiM_temp;$/;"	m	class:qmcplusplus::DiracDeterminantBase
d2psiM	Fermion/MultiDiracDeterminantBase.h	/^  ValueMatrix_t d2psiM,d2psiM_temp;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
d2psiM	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueMatrix_t d2psiM,d2psiM_temp;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
d2psiM	Fermion/SPOSetProxy.h	/^  ValueMatrix_t d2psiM;$/;"	m	struct:qmcplusplus::SPOSetProxy
d2psiM	Fermion/SPOSetProxyForMSD.h	/^  ValueMatrix_t d2psiM;$/;"	m	struct:qmcplusplus::SPOSetProxyForMSD
d2psiM	Fermion/ci_node.h	/^  ValueMatrix d2psiM;$/;"	m	struct:qmcplusplus::ci_node
d2psiM_temp	Experimental/DiracDeterminant.h	/^  Laplacian_t   d2psiM, d2psiM_temp;$/;"	m	class:qmcplusplus::DiracDeterminant
d2psiM_temp	Fermion/DiracDeterminantBase.h	/^  ValueMatrix_t d2psiM, d2psiM_temp;$/;"	m	class:qmcplusplus::DiracDeterminantBase
d2psiM_temp	Fermion/MultiDiracDeterminantBase.h	/^  ValueMatrix_t d2psiM,d2psiM_temp;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
d2psiM_temp	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueMatrix_t d2psiM,d2psiM_temp;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
d2psiM_v	Experimental/DiracDeterminant.h	/^  Vector<Laplacian_t>   d2psiM_v;$/;"	m	class:qmcplusplus::DiracDeterminant
d2psiU	AGPDeterminant.h	/^  ValueMatrix_t d2psiU, d2psiD;$/;"	m	class:qmcplusplus::AGPDeterminant
d2psiUv	AGPDeterminant.h	/^  ValueVector_t d2psiUv, d2psiDv;$/;"	m	class:qmcplusplus::AGPDeterminant
d2psiV	Experimental/DiracDeterminant.h	/^  Vector<ValueType> d2psiV;$/;"	m	class:qmcplusplus::DiracDeterminant
d2psiV	Fermion/DiracDeterminantBase.h	/^  ValueVector_t d2psiV;$/;"	m	class:qmcplusplus::DiracDeterminantBase
d2psiV	Fermion/MultiDiracDeterminantBase.h	/^  ValueVector_t d2psiV;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
d2psiV	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueVector_t d2psiV;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
d2psiV	Fermion/SPOSetProxy.h	/^  ValueVector_t d2psiV;$/;"	m	struct:qmcplusplus::SPOSetProxy
d2psiV	Fermion/SPOSetProxyForMSD.h	/^  ValueVector_t d2psiV;$/;"	m	struct:qmcplusplus::SPOSetProxyForMSD
d2psiV	Fermion/ci_node.h	/^  ValueVector d2psiV;$/;"	m	struct:qmcplusplus::ci_node
d2ulmVec	AtomicOrbital.h	/^  std::vector<StorageType> YlmVec, dYlm_dthetaVec, dYlm_dphiVec, ulmVec, dulmVec, d2ulmVec;$/;"	m	class:qmcplusplus::AtomicOrbital
d2y	Experimental/PlaneWaveBasis.h	/^  inline const ValueType* __restrict__ d2y(int i)$/;"	f	class:qmcplusplus::PlaneWaveBasis
d3A	Fermion/BFsplineFunctor.h	/^  const TinyVector<real_type,16> A, dA, d2A, d3A;$/;"	m	struct:qmcplusplus::BFsplineFunctor
d3A	Jastrow/BsplineFunctor.cpp	/^const double BsplineFunctor<double>::d3A[16] =$/;"	m	class:qmcplusplus::BsplineFunctor	file:
d3A	Jastrow/BsplineFunctor.h	/^  const TinyVector<real_type,16> A, dA, d2A, d3A;$/;"	m	struct:qmcplusplus::BsplineFunctor
d3A	Jastrow/BsplineFunctor3D.h	/^  const TinyVector<real_type,16> A, dA, d2A, d3A;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
d3Y	MolecularOrbitals/NGOBuilder.h	/^  real_type Y, dY, d2Y, d3Y;$/;"	m	struct:qmcplusplus::NGOrbital
dA	Fermion/BFsplineFunctor.h	/^  const TinyVector<real_type,16> A, dA, d2A, d3A;$/;"	m	struct:qmcplusplus::BFsplineFunctor
dA	Jastrow/BsplineFunctor.cpp	/^const double BsplineFunctor<double>::dA[16] =$/;"	m	class:qmcplusplus::BsplineFunctor	file:
dA	Jastrow/BsplineFunctor.h	/^  const TinyVector<real_type,16> A, dA, d2A, d3A;$/;"	m	struct:qmcplusplus::BsplineFunctor
dA	Jastrow/BsplineFunctor3D.h	/^  const TinyVector<real_type,16> A, dA, d2A, d3A;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
dC	Jastrow/PolyFunctor.h	/^  std::vector<T> dC;$/;"	m	struct:qmcplusplus::PolyFunctor
dCosFac	Jastrow/CompositeFunctor.h	/^  real_type dCosFac;$/;"	m	struct:qmcplusplus::CuspCorrectionFunctor
dCosFac	Jastrow/CompositeFunctor.h	/^  real_type dCosFac;$/;"	m	struct:qmcplusplus::DCuspCorrectionDEFunctor
dFa	Fermion/DiracDeterminantWithBackflow.h	/^  GradMatrix_t dFa;$/;"	m	class:qmcplusplus::DiracDeterminantWithBackflow
dFa	Fermion/MultiDiracDeterminantWithBackflow.h	/^  GradMatrix_t dFa;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
dGa_dn	Fermion/MultiSlaterDeterminantFast.h	/^  Array<GradType,OHMMS_DIM> dGa_up, dGa_dn;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
dGa_dn	Fermion/MultiSlaterDeterminantWithBackflow.h	/^  Array<GradType,3> dGa_up, dGa_dn;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
dGa_up	Fermion/MultiSlaterDeterminantFast.h	/^  Array<GradType,OHMMS_DIM> dGa_up, dGa_dn;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
dGa_up	Fermion/MultiSlaterDeterminantWithBackflow.h	/^  Array<GradType,3> dGa_up, dGa_dn;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
dLa_dn	Fermion/MultiSlaterDeterminantFast.h	/^  Matrix<RealType> dpsia_dn, dLa_dn;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
dLa_dn	Fermion/MultiSlaterDeterminantWithBackflow.h	/^  Matrix<RealType> dpsia_dn, dLa_dn;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
dLa_up	Fermion/MultiSlaterDeterminantFast.h	/^  Matrix<RealType> dpsia_up, dLa_up;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
dLa_up	Fermion/MultiSlaterDeterminantWithBackflow.h	/^  Matrix<RealType> dpsia_up, dLa_up;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
dLogPsi	Jastrow/DiffOneBodyJastrowOrbital.h	/^  Vector<RealType> dLogPsi;$/;"	m	class:qmcplusplus::DiffOneBodyJastrowOrbital
dLogPsi	Jastrow/DiffOneBodySpinJastrowOrbital.h	/^  Vector<RealType> dLogPsi;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
dLogPsi	Jastrow/DiffTwoBodyJastrowOrbital.h	/^  Vector<RealType> dLogPsi;$/;"	m	class:qmcplusplus::DiffTwoBodyJastrowOrbital
dLogPsi	Jastrow/eeI_JastrowOrbital.h	/^  Vector<RealType> dLogPsi;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
dLogPsi	OrbitalBase.h	/^  GradVectorType dLogPsi;$/;"	m	struct:qmcplusplus::OrbitalBase
dPhi	BasisSetBase.h	/^  GradVector_t  dPhi;$/;"	m	struct:qmcplusplus::BasisSetBase
dPsi	OrbitalBase.h	/^  DiffOrbitalBasePtr dPsi;$/;"	m	struct:qmcplusplus::OrbitalBase
dRadialVec	MuffinTin.h	/^  Vector<std::complex<double> > RadialVec, dRadialVec, d2RadialVec;$/;"	m	class:qmcplusplus::MuffinTinClass
dTT	Jastrow/ChebyshevFunctor.h	/^  std::vector<T> TT, dTT, d2TT;$/;"	m	struct:ChebyshevFunctor
dU	Experimental/TwoBodyJastrowFunction.Shared.h	/^  GradVectorType dU,curGrad;$/;"	m	class:qmcplusplus::TwoBodyJastrow
dU	Experimental/TwoBodyJastrowFunction.h	/^  GradVectorType dU,curGrad;$/;"	m	class:qmcplusplus::TwoBodyJastrow
dU	IonOrbital.h	/^  ParticleAttrib<PosType> dU;$/;"	m	struct:qmcplusplus::IonOrbital
dU	Jastrow/LRTwoBodyJastrow.h	/^  Vector<PosType> dU;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
dU	Jastrow/OneBodyJastrowOrbital.h	/^  ParticleAttrib<PosType> dU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbital
dU	Jastrow/OneBodySpinJastrowOrbital.h	/^  ParticleAttrib<PosType> dU;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
dU	Jastrow/ThreeBodyJastrowOrbital.h	/^  GradVectorType dU;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
dU	Jastrow/ThreeBodyPade.h	/^  GradVectorType dU;$/;"	m	class:qmcplusplus::ThreeBodyPade
dU	Jastrow/TwoBodyJastrowOrbital.h	/^  ParticleAttrib<PosType> dU,curGrad;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
dU	Jastrow/eeI_JastrowOrbital.h	/^  ParticleAttrib<PosType> dU,curGrad_i, curGrad_j;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
dUk	Jastrow/ThreeBodyBlockSparse.h	/^  Matrix<PosType> dUk;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
dUk	Jastrow/ThreeBodyGeminal.h	/^  Matrix<PosType> dUk;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
dY	AGPDeterminant.h	/^  GradMatrix_t dY;$/;"	m	class:qmcplusplus::AGPDeterminant
dY	BasisSetBase.h	/^  GradMatrix_t dY;$/;"	m	struct:qmcplusplus::BasisSetBase
dY	Experimental/PlaneWaveBasis.h	/^  Matrix<TinyVector<ValueType,3> > dY;$/;"	m	class:qmcplusplus::PlaneWaveBasis
dY	Fermion/BFsplineFunctor.h	/^  real_type Y, dY, d2Y;$/;"	m	struct:qmcplusplus::BFsplineFunctor
dY	Jastrow/BsplineFunctor.h	/^  real_type Y, dY, d2Y;$/;"	m	struct:qmcplusplus::BsplineFunctor
dY	Jastrow/BsplineFunctor3D.h	/^  real_type Y, dY, d2Y;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
dY	Jastrow/CubicBsplineGroup.h	/^  value_type dY;$/;"	m	class:qmcplusplus::CubicBsplineGroup
dY	Jastrow/SplineFunctors.h	/^  real_type dY;$/;"	m	struct:qmcplusplus::CubicSplineSingle
dY	Jastrow/ThreeBodyBlockSparse.h	/^  Matrix<PosType>  dY;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
dY	Jastrow/ThreeBodyGeminal.h	/^  Matrix<PosType>  dY;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
dY	MolecularOrbitals/NGOBuilder.h	/^  real_type Y, dY, d2Y, d3Y;$/;"	m	struct:qmcplusplus::NGOrbital
dYlmVec	MuffinTin.h	/^  std::vector<std::complex<double> > YlmVec, dYlmVec;$/;"	m	class:qmcplusplus::MuffinTinClass
dYlm_dphiVec	AtomicOrbital.h	/^  std::vector<StorageType> YlmVec, dYlm_dthetaVec, dYlm_dphiVec, ulmVec, dulmVec, d2ulmVec;$/;"	m	class:qmcplusplus::AtomicOrbital
dYlm_dphi_ptr_CPU	EinsplineSet.h	/^  gpu::host_vector<CudaRealType*> Ylm_ptr_CPU, dYlm_dtheta_ptr_CPU, dYlm_dphi_ptr_CPU;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
dYlm_dphi_ptr_GPU	EinsplineSet.h	/^  gpu::device_vector<CudaRealType*> Ylm_ptr_GPU, dYlm_dtheta_ptr_GPU, dYlm_dphi_ptr_GPU;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
dYlm_dthetaVec	AtomicOrbital.h	/^  std::vector<StorageType> YlmVec, dYlm_dthetaVec, dYlm_dphiVec, ulmVec, dulmVec, d2ulmVec;$/;"	m	class:qmcplusplus::AtomicOrbital
dYlm_dtheta_ptr_CPU	EinsplineSet.h	/^  gpu::host_vector<CudaRealType*> Ylm_ptr_CPU, dYlm_dtheta_ptr_CPU, dYlm_dphi_ptr_CPU;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
dYlm_dtheta_ptr_GPU	EinsplineSet.h	/^  gpu::device_vector<CudaRealType*> Ylm_ptr_GPU, dYlm_dtheta_ptr_GPU, dYlm_dphi_ptr_GPU;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
d_gradsFD	Jastrow/PolynomialFunctor3D.h	/^  std::vector<TinyVector<real_type,3> > d_gradsFD;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
d_hessFD	Jastrow/PolynomialFunctor3D.h	/^  std::vector<Tensor<real_type,3> > d_hessFD;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
d_orbitals	Experimental/Spline3DBuilder.h	/^  Spline3DSet *d_orbitals;$/;"	m	class:qmcplusplus::Spline3DBuilder
d_table	AtomicOrbitals/HFAtomicSTOSet.h	/^  const DistanceTableData* d_table;$/;"	m	struct:qmcplusplus::HFAtomicSTOSet
d_table	AtomicOrbitals/HFAtomicSTOSetBuilder.h	/^  DistanceTableData* d_table;$/;"	m	class:qmcplusplus::HFAtomicSTOSetBuilder
d_table	AtomicOrbitals/HeSTOClementiRottie.h	/^  DistanceTableData* d_table;$/;"	m	struct:qmcplusplus::HePresetHF
d_table	Experimental/GTOMolecularOrbitals.h	/^  DistanceTableData* d_table;$/;"	m	class:qmcplusplus::GTOMolecularOrbitals
d_table	Experimental/STOMolecularOrbitals.h	/^  DistanceTableData* d_table;$/;"	m	class:qmcplusplus::STOMolecularOrbitals
d_table	Experimental/TwoBodyJastrowFunction.Shared.h	/^  const DistanceTableData* d_table;$/;"	m	class:qmcplusplus::TwoBodyJastrow
d_table	Experimental/TwoBodyJastrowFunction.h	/^  const DistanceTableData* d_table;$/;"	m	class:qmcplusplus::TwoBodyJastrow
d_table	Fermion/DiracDeterminantTruncation.h	/^  const DistanceTableData* d_table;$/;"	m	class:qmcplusplus::DiracDeterminantTruncation
d_table	IonOrbital.h	/^  DistanceTableData* d_table;$/;"	m	struct:qmcplusplus::IonOrbital
d_table	Jastrow/JAABuilder.h	/^  DistanceTableData* d_table;$/;"	m	struct:qmcplusplus::JAABuilder
d_table	Jastrow/ThreeBodyGeminal.h	/^  const DistanceTableData* d_table;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
d_table	Jastrow/ThreeBodyPade.h	/^  const DistanceTableData* d_table;$/;"	m	class:qmcplusplus::ThreeBodyPade
d_valsFD	Jastrow/PolynomialFunctor3D.h	/^  std::vector<real_type> Parameters, d_valsFD;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
d_vars	FDLRWfn.h	/^    opt_variables_type d_vars;$/;"	m	class:qmcplusplus::FDLRWfn
d_vars_driver	FDLRWfn.h	/^    opt_variables_type d_vars_driver;$/;"	m	class:qmcplusplus::FDLRWfn
dataKnot	Experimental/TricubicBsplineSetBuilder.h	/^  Bspline3DSetBase::GridType dataKnot;$/;"	m	class:qmcplusplus::TricubicBsplineSetBuilder
dcostheta	AFMSPOSet.h	/^  RealType theta, costheta, sintheta, dcostheta, dsintheta;$/;"	m	class:qmcplusplus::AFMSPOSet
debugRatios	Fermion/ci_node.h	/^  void debugRatios(const ValueMatrix& psi$/;"	f	struct:qmcplusplus::ci_node
debugRatios	Fermion/ci_node.h	/^  void debugRatios(const ValueMatrix& psi, ValueVector& dets$/;"	f	struct:qmcplusplus::ci_node
debugRatiosByColPromotion	Fermion/ci_node.h	/^  void debugRatiosByColPromotion(const ValueMatrix& psi0$/;"	f	struct:qmcplusplus::ci_node
debugRatiosByColPromotion	Fermion/ci_node.h	/^  void debugRatiosByColPromotion(const ValueMatrix& psi0, const ValueMatrix& psic, ValueVector& dets)$/;"	f	struct:qmcplusplus::ci_node
deg	ElectronGas/HEGGrid.h	/^  std::vector<int>     deg;$/;"	m	struct:qmcplusplus::HEGGrid
degeneracy	SPOInfo.h	/^    int degeneracy;$/;"	m	struct:qmcplusplus::SPOInfo
delV	Jastrow/ThreeBodyBlockSparse.h	/^  Vector<RealType> delV;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
delV	Jastrow/ThreeBodyGeminal.h	/^  Vector<RealType> delV;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
delta_G	TrialWaveFunction.h	/^  ParticleSet::ParticleGradient_t delta_G;$/;"	m	class:qmcplusplus::TrialWaveFunction
delta_L	TrialWaveFunction.h	/^  ParticleSet::ParticleLaplacian_t delta_L;$/;"	m	class:qmcplusplus::TrialWaveFunction
delta_eikr	Jastrow/LRTwoBodyJastrow.h	/^  Vector<ComplexType> delta_eikr;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
delta_eikr_i	Jastrow/LRTwoBodyJastrow.h	/^  Vector<RealType> delta_eikr_i;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
delta_eikr_r	Jastrow/LRTwoBodyJastrow.h	/^  Vector<RealType> delta_eikr_r;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
dense_i	MultiGridBsplineSetReader.h	/^  Array<double,3> dense_r, dense_i;$/;"	m	struct:qmcplusplus::MultiGridBsplineSetReader
dense_r	MultiGridBsplineSetReader.h	/^  Array<double,3> dense_r, dense_i;$/;"	m	struct:qmcplusplus::MultiGridBsplineSetReader
derivEPRPABreakup	Jastrow/LRBreakupUtilities.h	/^  inline derivEPRPABreakup() {}$/;"	f	struct:qmcplusplus::derivEPRPABreakup
derivEPRPABreakup	Jastrow/LRBreakupUtilities.h	/^struct derivEPRPABreakup$/;"	s	namespace:qmcplusplus
derivScale	OptimizableSPOSet.h	/^  RealType derivScale;$/;"	m	class:qmcplusplus::OptimizableSPOSet
derivUk	Jastrow/LRBreakupUtilities.h	/^  inline T derivUk(T kk)$/;"	f	struct:qmcplusplus::DerivRPABreakup
derivUk	Jastrow/LRBreakupUtilities.h	/^  inline T derivUk(T kk)$/;"	f	struct:qmcplusplus::EPRPABreakup
derivUk	Jastrow/LRBreakupUtilities.h	/^  inline T derivUk(T kk)$/;"	f	struct:qmcplusplus::RPABFeeBreakup
derivUk	Jastrow/LRBreakupUtilities.h	/^  inline T derivUk(T kk)$/;"	f	struct:qmcplusplus::RPABreakup
derivUk	Jastrow/LRBreakupUtilities.h	/^  inline T derivUk(T kk)$/;"	f	struct:qmcplusplus::YukawaBreakup
derivUk	Jastrow/LRBreakupUtilities.h	/^  inline T derivUk(T kk)$/;"	f	struct:qmcplusplus::derivEPRPABreakup
derivs	Fermion/BackflowFunctionBase.h	/^  std::vector<TinyVector<RealType,3> > derivs;$/;"	m	class:qmcplusplus::BackflowFunctionBase
derivsDone	OrbitalBase.h	/^  bool derivsDone;$/;"	m	struct:qmcplusplus::OrbitalBase
destList	Fermion/DiracDeterminantCUDA.h	/^  std::vector<CudaValueType*> srcList, destList, AList, AinvList, newRowList,$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
destList_d	Fermion/DiracDeterminantCUDA.h	/^  gpu::device_vector<CudaValueType*> srcList_d, destList_d, AList_d, AinvList_d, newRowList_d, $/;"	m	class:qmcplusplus::DiracDeterminantCUDA
detData	Fermion/MultiDiracDeterminantBase.h	/^  std::vector<int> detData;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
detData	Fermion/MultiDiracDeterminantWithBackflow.h	/^  std::vector<int> detData;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
detValues	Fermion/MultiDiracDeterminantBase.h	/^  ValueVector_t detValues, new_detValues;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
detValues	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueVector_t detValues, new_detValues;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
detValues_dn	Fermion/MultiSlaterDeterminant.h	/^  ValueVector_t detValues_dn;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
detValues_up	Fermion/MultiSlaterDeterminant.h	/^  ValueVector_t detValues_up;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
det_tag	OrbitalBuilderBase.cpp	/^std::string OrbitalBuilderBase::det_tag="determinant";$/;"	m	class:qmcplusplus::OrbitalBuilderBase	file:
det_tag	OrbitalBuilderBase.h	/^  static std::string det_tag;$/;"	m	class:qmcplusplus::OrbitalBuilderBase
determine_order	SPOSetInfo.cpp	/^  void SPOSetInfo::determine_order(RealType tol)$/;"	f	class:qmcplusplus::SPOSetInfo
detsRatios	Fermion/MultiSlaterDeterminant.h	/^  ValueVector_t detsRatios;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
dets_dn	Fermion/MultiSlaterDeterminant.h	/^  std::vector<DiracDeterminantPtr> dets_dn;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
dets_up	Fermion/MultiSlaterDeterminant.h	/^  std::vector<DiracDeterminantPtr> dets_up;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
detset_tag	OrbitalBuilderBase.cpp	/^std::string OrbitalBuilderBase::detset_tag="determinantset";$/;"	m	class:qmcplusplus::OrbitalBuilderBase	file:
detset_tag	OrbitalBuilderBase.h	/^  static std::string detset_tag;$/;"	m	class:qmcplusplus::OrbitalBuilderBase
df	AtomicOrbitals/HFAtomicSTOSet.h	/^  inline T df(T r)$/;"	f	struct:qmcplusplus::ComboSTO
df	Experimental/NoCuspFunctor.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::NoCuspFunctor
df	Fermion/BFsplineFunctor.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::BFsplineFunctor
df	Fermion/GaussianFunctor.h	/^  real_type df(real_type r)$/;"	f	class:qmcplusplus::GaussianFunctor
df	Jastrow/BesselZeroFunctor.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::BesselZero
df	Jastrow/BsplineFunctor.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::BsplineFunctor
df	Jastrow/BsplineFunctor3D.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::BsplineFunctor3D
df	Jastrow/CompositeFunctor.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::AnyTimesRnFunctor
df	Jastrow/CompositeFunctor.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::CuspCorrectionFunctor
df	Jastrow/CompositeFunctor.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::DCuspCorrectionDEFunctor
df	Jastrow/CompositeFunctor.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::TruncatedPadeFunctor
df	Jastrow/DerivPadeFunctors.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::D2PadeDB2Functor
df	Jastrow/DerivPadeFunctors.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::DPadeDBFunctor
df	Jastrow/DerivWMFunctor.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::D2WMDB2Functor
df	Jastrow/DerivWMFunctor.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::DWMDBFunctor
df	Jastrow/GaussianFunctor.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::GaussianFunctor
df	Jastrow/GaussianFunctor.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
df	Jastrow/LRBreakupUtilities.h	/^  inline T df(T r)$/;"	f	struct:qmcplusplus::DerivRPABreakup
df	Jastrow/LRBreakupUtilities.h	/^  inline T df(T r)$/;"	f	struct:qmcplusplus::DerivYukawaBreakup
df	Jastrow/LRBreakupUtilities.h	/^  inline T df(T r)$/;"	f	struct:qmcplusplus::EPRPABreakup
df	Jastrow/LRBreakupUtilities.h	/^  inline T df(T r)$/;"	f	struct:qmcplusplus::RPABFeeBreakup
df	Jastrow/LRBreakupUtilities.h	/^  inline T df(T r)$/;"	f	struct:qmcplusplus::RPABreakup
df	Jastrow/LRBreakupUtilities.h	/^  inline T df(T r)$/;"	f	struct:qmcplusplus::YukawaBreakup
df	Jastrow/LRBreakupUtilities.h	/^  inline T df(T r)$/;"	f	struct:qmcplusplus::derivEPRPABreakup
df	Jastrow/LRBreakupUtilities.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::ShortRangePartAdapter
df	Jastrow/LinearCombinationFunctor.h	/^  inline real_type df(real_type r)$/;"	f	struct:LinearCombinationFunctor
df	Jastrow/McMillanJ2Functor.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::McMillanJ2Functor
df	Jastrow/McMillanJ2Functor.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::ModMcMillanJ2Functor
df	Jastrow/McMillanJ2Functor.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::comboMcMillanJ2Functor
df	Jastrow/McMillanJ2GFunctor.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::McMillanJ2GFunctor
df	Jastrow/ModPadeFunctor.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::ModPadeFunctor
df	Jastrow/NumericalJastrowFunctor.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::NumericalJastrow
df	Jastrow/OpenGaussianSlaterFunctor.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::OpenGaussianSlaterFunctor
df	Jastrow/PadeFunctors.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::PadeFunctor
df	Jastrow/PadeFunctors.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
df	Jastrow/PadeFunctors.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
df	Jastrow/PadeFunctors.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::ScaledPadeFunctor
df	Jastrow/PolyFunctor.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::PolyFunctor
df	Jastrow/PolynomialFunctor3D.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
df	Jastrow/RPAJastrowFunctor.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::RPAJastrowFunctor
df	Jastrow/SplineFunctors.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::CubicSplineSingle
df	Jastrow/SplineFunctors.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::CubicSplineBasisSet
df	Jastrow/WMFunctor.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::WMFunctor
df	Jastrow/WMFunctor.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::WMFunctorSet
df	MolecularOrbitals/NGOBuilder.cpp	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::PadeOrbital
df	MolecularOrbitals/NGOBuilder.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::NGOrbital
dg_m	DiffOrbitalBase.h	/^  GradVectorType gradLogPsi, dg_p, dg_m;$/;"	m	struct:qmcplusplus::NumericalDiffOrbital
dg_p	DiffOrbitalBase.h	/^  GradVectorType gradLogPsi, dg_p, dg_m;$/;"	m	struct:qmcplusplus::NumericalDiffOrbital
dgrad_Vec	Jastrow/PolynomialFunctor3D.h	/^  std::vector<TinyVector<real_type,3> > dgrad_Vec;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
dgrad_dC	Fermion/DiracDeterminantAFM.h	/^  GradMatrix_t  BasisGrad, dgrad_dC, G_gamma;$/;"	m	class:qmcplusplus::DiracDeterminantAFM
dgrad_dC	Fermion/DiracDeterminantOpt.h	/^  GradMatrix_t  BasisGrad, dgrad_dC, G_gamma;$/;"	m	class:qmcplusplus::DiracDeterminantOpt
dgrad_dalpha	Jastrow/eeI_JastrowOrbital.h	/^  std::vector<std::vector<PosType> >             dgrad_dalpha;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
dgrad_dgamma	Jastrow/PolynomialFunctor3D.h	/^  Array<TinyVector<real_type,3>,3> dgrad_dgamma;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
dgradlogpsi_fdlr_d	FDLRWfn.h	/^    std::vector<RealType> dgradlogpsi_fdlr_d;$/;"	m	class:qmcplusplus::FDLRWfn
dgradlogpsi_fdlr_x	FDLRWfn.h	/^    std::vector<RealType> dgradlogpsi_fdlr_x;$/;"	m	class:qmcplusplus::FDLRWfn
dgradlogpsi_xmd	FDLRWfn.h	/^    std::vector<RealType> dgradlogpsi_xmd;$/;"	m	class:qmcplusplus::FDLRWfn
dgradlogpsi_xpd	FDLRWfn.h	/^    std::vector<RealType> dgradlogpsi_xpd;$/;"	m	class:qmcplusplus::FDLRWfn
dhess_Vec	Jastrow/PolynomialFunctor3D.h	/^  std::vector<Tensor<real_type,3> > dhess_Vec;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
dhess_dalpha	Jastrow/eeI_JastrowOrbital.h	/^  std::vector<std::vector<Tensor<RealType,3> > > dhess_dalpha;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
dhess_dgamma	Jastrow/PolynomialFunctor3D.h	/^  Array<Tensor<real_type,3>,3> dhess_dgamma;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
dhpsioverpsi_fdlr_d	FDLRWfn.h	/^    std::vector<RealType> dhpsioverpsi_fdlr_d;$/;"	m	class:qmcplusplus::FDLRWfn
dhpsioverpsi_fdlr_x	FDLRWfn.h	/^    std::vector<RealType> dhpsioverpsi_fdlr_x;$/;"	m	class:qmcplusplus::FDLRWfn
dhpsioverpsi_xmd	FDLRWfn.h	/^    std::vector<RealType> dhpsioverpsi_xmd;$/;"	m	class:qmcplusplus::FDLRWfn
dhpsioverpsi_xpd	FDLRWfn.h	/^    std::vector<RealType> dhpsioverpsi_xpd;$/;"	m	class:qmcplusplus::FDLRWfn
diffVal	Jastrow/ThreeBodyBlockSparse.h	/^  RealType diffVal;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
diffVal	Jastrow/ThreeBodyGeminal.h	/^  RealType diffVal;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
disp	MuffinTin.cpp	/^MuffinTinClass::disp(TinyVector<double,3> r)$/;"	f	class:qmcplusplus::MuffinTinClass
dist	AtomicOrbitalCuda.h	/^  T dist;$/;"	m	class:HybridData
dist	EinsplineSet.h	/^  T dist, SplineDelta;$/;"	m	struct:qmcplusplus::AtomicPolyJob
dist	EinsplineSet.h	/^  T dist, SplineDelta;$/;"	m	struct:qmcplusplus::AtomicSplineJob
dl_m	DiffOrbitalBase.h	/^  ValueVectorType lapLogPsi, dl_p, dl_m;$/;"	m	struct:qmcplusplus::NumericalDiffOrbital
dl_p	DiffOrbitalBase.h	/^  ValueVectorType lapLogPsi, dl_p, dl_m;$/;"	m	struct:qmcplusplus::NumericalDiffOrbital
dlapl_dC	Fermion/DiracDeterminantAFM.h	/^  ValueMatrix_t dlapl_dC;$/;"	m	class:qmcplusplus::DiracDeterminantAFM
dlapl_dC	Fermion/DiracDeterminantOpt.h	/^  ValueMatrix_t dlapl_dC;$/;"	m	class:qmcplusplus::DiracDeterminantOpt
dlogdet_dC	Fermion/DiracDeterminantAFM.h	/^  ValueMatrix_t dlogdet_dC;$/;"	m	class:qmcplusplus::DiracDeterminantAFM
dlogdet_dC	Fermion/DiracDeterminantOpt.h	/^  ValueMatrix_t dlogdet_dC;$/;"	m	class:qmcplusplus::DiracDeterminantOpt
dlogpsi_fdlr_d	FDLRWfn.h	/^    std::vector<RealType> dlogpsi_fdlr_d;$/;"	m	class:qmcplusplus::FDLRWfn
dlogpsi_fdlr_x	FDLRWfn.h	/^    std::vector<RealType> dlogpsi_fdlr_x;$/;"	m	class:qmcplusplus::FDLRWfn
dlogpsi_xmd	FDLRWfn.h	/^    std::vector<RealType> dlogpsi_xmd;$/;"	m	class:qmcplusplus::FDLRWfn
dlogpsi_xpd	FDLRWfn.h	/^    std::vector<RealType> dlogpsi_xpd;$/;"	m	class:qmcplusplus::FDLRWfn
dotProducts	Fermion/ExcitationClass.h	/^  ValueMatrix_t dotProducts; \/\/ orbitals_to_replace.size() x unoccupied_orbitals_to_use.size()$/;"	m	class:qmcplusplus::ExcitationClass
dotProducts	Fermion/MultiDiracDeterminantBase.h	/^  ValueMatrix_t dotProducts;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
dotProducts	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueMatrix_t dotProducts;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
dotProducts_grad	Fermion/ExcitationClass.h	/^  GradMatrix_t dotProducts_grad; \/\/ orbitals_to_replace.size() x unoccupied_orbitals_to_use.size()$/;"	m	class:qmcplusplus::ExcitationClass
downdetspinindex	Experimental/PlaneWaveOrbitalBuilder.h	/^  int updetspinindex, downdetspinindex;$/;"	m	class:qmcplusplus::PlaneWaveOrbitalBuilder
dphi2	Jastrow/ThreeBodyJastrowOrbital.h	/^  Matrix<PosType> dphi2;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
dpr	Experimental/CuspCorr.h	/^  inline RealType dpr(RealType r)$/;"	f	class:qmcplusplus::CuspCorr
dpsiD	AGPDeterminant.h	/^  GradMatrix_t dpsiU, dpsiD;$/;"	m	class:qmcplusplus::AGPDeterminant
dpsiDv	AGPDeterminant.h	/^  GradVector_t  dpsiUv, dpsiDv;$/;"	m	class:qmcplusplus::AGPDeterminant
dpsiM	Experimental/DiracDeterminant.h	/^  Gradient_t    dpsiM, dpsiM_temp;$/;"	m	class:qmcplusplus::DiracDeterminant
dpsiM	Fermion/DiracDeterminantBase.h	/^  GradMatrix_t  dpsiM, dpsiM_temp;$/;"	m	class:qmcplusplus::DiracDeterminantBase
dpsiM	Fermion/MultiDiracDeterminantBase.h	/^  GradMatrix_t  dpsiM,dpsiM_temp;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
dpsiM	Fermion/MultiDiracDeterminantWithBackflow.h	/^  GradMatrix_t  dpsiM,dpsiM_temp;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
dpsiM	Fermion/SPOSetProxy.h	/^  GradMatrix_t dpsiM;$/;"	m	struct:qmcplusplus::SPOSetProxy
dpsiM	Fermion/SPOSetProxyForMSD.h	/^  GradMatrix_t dpsiM;$/;"	m	struct:qmcplusplus::SPOSetProxyForMSD
dpsiM	Fermion/ci_node.h	/^  GradMatrix dpsiM;$/;"	m	struct:qmcplusplus::ci_node
dpsiM_temp	Experimental/DiracDeterminant.h	/^  Gradient_t    dpsiM, dpsiM_temp;$/;"	m	class:qmcplusplus::DiracDeterminant
dpsiM_temp	Fermion/DiracDeterminantBase.h	/^  GradMatrix_t  dpsiM, dpsiM_temp;$/;"	m	class:qmcplusplus::DiracDeterminantBase
dpsiM_temp	Fermion/MultiDiracDeterminantBase.h	/^  GradMatrix_t  dpsiM,dpsiM_temp;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
dpsiM_temp	Fermion/MultiDiracDeterminantWithBackflow.h	/^  GradMatrix_t  dpsiM,dpsiM_temp;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
dpsiM_v	Experimental/DiracDeterminant.h	/^  Vector<Gradient_t>    dpsiM_v;$/;"	m	class:qmcplusplus::DiracDeterminant
dpsiMinv	Fermion/MultiDiracDeterminantBase.h	/^  ValueMatrix_t dpsiMinv;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
dpsiMinv	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueMatrix_t dpsiMinv;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
dpsiU	AGPDeterminant.h	/^  GradMatrix_t dpsiU, dpsiD;$/;"	m	class:qmcplusplus::AGPDeterminant
dpsiUv	AGPDeterminant.h	/^  GradVector_t  dpsiUv, dpsiDv;$/;"	m	class:qmcplusplus::AGPDeterminant
dpsiV	Experimental/DiracDeterminant.h	/^  Vector<GradType> dpsiV;$/;"	m	class:qmcplusplus::DiracDeterminant
dpsiV	Fermion/DiracDeterminantBase.h	/^  GradVector_t dpsiV;$/;"	m	class:qmcplusplus::DiracDeterminantBase
dpsiV	Fermion/MultiDiracDeterminantBase.h	/^  GradVector_t dpsiV;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
dpsiV	Fermion/MultiDiracDeterminantWithBackflow.h	/^  GradVector_t dpsiV;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
dpsiV	Fermion/SPOSetProxy.h	/^  GradVector_t dpsiV;$/;"	m	struct:qmcplusplus::SPOSetProxy
dpsiV	Fermion/SPOSetProxyForMSD.h	/^  GradVector_t dpsiV;$/;"	m	struct:qmcplusplus::SPOSetProxyForMSD
dpsiV	Fermion/ci_node.h	/^  GradVector dpsiV;$/;"	m	struct:qmcplusplus::ci_node
dpsia_dn	Fermion/MultiSlaterDeterminantFast.h	/^  Matrix<RealType> dpsia_dn, dLa_dn;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
dpsia_dn	Fermion/MultiSlaterDeterminantWithBackflow.h	/^  Matrix<RealType> dpsia_dn, dLa_dn;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
dpsia_up	Fermion/MultiSlaterDeterminantFast.h	/^  Matrix<RealType> dpsia_up, dLa_up;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
dpsia_up	Fermion/MultiSlaterDeterminantWithBackflow.h	/^  Matrix<RealType> dpsia_up, dLa_up;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
drMin	MuffinTin.h	/^  double drMin;$/;"	m	class:qmcplusplus::MuffinTinClass
dsintheta	AFMSPOSet.h	/^  RealType theta, costheta, sintheta, dcostheta, dsintheta;$/;"	m	class:qmcplusplus::AFMSPOSet
dtable_tag	OrbitalBuilderBase.cpp	/^std::string OrbitalBuilderBase::dtable_tag="distancetable";$/;"	m	class:qmcplusplus::OrbitalBuilderBase	file:
dtable_tag	OrbitalBuilderBase.h	/^  static std::string dtable_tag;$/;"	m	class:qmcplusplus::OrbitalBuilderBase
du_dalpha	Jastrow/eeI_JastrowOrbital.h	/^  std::vector<std::vector<RealType> >               du_dalpha;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
dulmVec	AtomicOrbital.h	/^  std::vector<StorageType> YlmVec, dYlm_dthetaVec, dYlm_dphiVec, ulmVec, dulmVec, d2ulmVec;$/;"	m	class:qmcplusplus::AtomicOrbital
dummy	Fermion/determinant_update.h	/^  void *A, *Ainv, *newRow, *AinvDelta, *AinvColk, *gradLapl, *newGradLapl, *dummy;$/;"	m	struct:updateJob
dummyEval	SphericalBasisSet.h	/^  dummyEval(RealType r, PosType  dr, ValueVector_t& psi, GradVector_t& dpsi, HessVector_t& grad_grad_Phi, GGGVector_t& grad_grad_grad_Phi)$/;"	f	struct:qmcplusplus::SphericalBasisSet
dummyEvalLi	Fermion/DiracDeterminantWithBackflow.cpp	/^void DiracDeterminantWithBackflow::dummyEvalLi(ValueType& L1, ValueType& L2, ValueType& L3)$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
dumpFromBuffer	AGPDeterminant.h	/^  inline void dumpFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::AGPDeterminant
dumpFromBuffer	Experimental/DiracDeterminant.h	/^  inline void dumpFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::DiracDeterminant
dumpFromBuffer	Experimental/SlaterDeterminant.h	/^  void dumpFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::SlaterDeterminant
dumpFromBuffer	Fermion/DiracDeterminantBase.cpp	/^void DiracDeterminantBase::dumpFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::DiracDeterminantBase
dumpFromBuffer	Fermion/MultiDiracDeterminantBase.h	/^  void dumpFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
dumpFromBuffer	Fermion/MultiDiracDeterminantBase_help.cpp	/^void MultiDiracDeterminantBase::dumpFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:MultiDiracDeterminantBase
dumpFromBuffer	Fermion/MultiDiracDeterminantWithBackflow.h	/^  void dumpFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
dumpFromBuffer	Fermion/SlaterDet.cpp	/^void SlaterDet::dumpFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::SlaterDet
dumpFromBuffer	Fermion/SlaterDetWithBackflow.cpp	/^void SlaterDetWithBackflow::dumpFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
dumpFromBuffer	OrbitalBase.h	/^  virtual void dumpFromBuffer(ParticleSet& P, BufferType& buf) {}$/;"	f	struct:qmcplusplus::OrbitalBase
dumpFromBuffer	TrialWaveFunction.cpp	/^void TrialWaveFunction::dumpFromBuffer(ParticleSet& P, BufferType& buf)$/;"	f	class:qmcplusplus::TrialWaveFunction
dumpToBuffer	AGPDeterminant.h	/^  inline void dumpToBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::AGPDeterminant
dumpToBuffer	Experimental/DiracDeterminant.h	/^  inline void dumpToBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::DiracDeterminant
dumpToBuffer	Experimental/SlaterDeterminant.h	/^  void dumpToBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::SlaterDeterminant
dumpToBuffer	Fermion/DiracDeterminantBase.cpp	/^void DiracDeterminantBase::dumpToBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::DiracDeterminantBase
dumpToBuffer	Fermion/MultiDiracDeterminantBase.h	/^  void dumpToBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
dumpToBuffer	Fermion/MultiDiracDeterminantBase_help.cpp	/^void MultiDiracDeterminantBase::dumpToBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:MultiDiracDeterminantBase
dumpToBuffer	Fermion/MultiDiracDeterminantWithBackflow.h	/^  void dumpToBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
dumpToBuffer	Fermion/SlaterDet.cpp	/^void SlaterDet::dumpToBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::SlaterDet
dumpToBuffer	Fermion/SlaterDetWithBackflow.cpp	/^void SlaterDetWithBackflow::dumpToBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
dumpToBuffer	OrbitalBase.h	/^  virtual void dumpToBuffer(ParticleSet& P, BufferType& buf) {}$/;"	f	struct:qmcplusplus::OrbitalBase
dumpToBuffer	TrialWaveFunction.cpp	/^void TrialWaveFunction::dumpToBuffer(ParticleSet& P, BufferType& buf)$/;"	f	class:qmcplusplus::TrialWaveFunction
dval_Vec	Jastrow/PolynomialFunctor3D.h	/^  std::vector<real_type> GammaVec, dval_Vec;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
dval_dgamma	Jastrow/PolynomialFunctor3D.h	/^  Array<real_type,3> dval_dgamma;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
dy	Experimental/PlaneWaveBasis.h	/^  inline const TinyVector<ValueType,3>* __restrict__ dy(int i)$/;"	f	class:qmcplusplus::PlaneWaveBasis
eGroups	Jastrow/eeI_JastrowOrbital.h	/^  int eGroups, iGroups;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
eListType	Jastrow/eeI_JastrowOrbital.h	/^  typedef std::vector<int> eListType;$/;"	t	struct:qmcplusplus::IonData
eRef	Jastrow/eeI_JastrowOrbital.h	/^  ParticleSet *eRef, *IRef;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
eSpecies1	Jastrow/BsplineFunctor3D.h	/^  std::string iSpecies, eSpecies1, eSpecies2;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
eSpecies1	Jastrow/PolynomialFunctor3D.h	/^  std::string iSpecies, eSpecies1, eSpecies2;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
eSpecies2	Jastrow/BsplineFunctor3D.h	/^  std::string iSpecies, eSpecies1, eSpecies2;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
eSpecies2	Jastrow/PolynomialFunctor3D.h	/^  std::string iSpecies, eSpecies1, eSpecies2;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
ecut	Experimental/PlaneWaveBasis.h	/^  RealType ecut;$/;"	m	class:qmcplusplus::PlaneWaveBasis
ecut	PlaneWave/PWBasis.h	/^  RealType ecut;$/;"	m	class:qmcplusplus::PWBasis
ecut	SPOSetInputInfo.h	/^    RealType ecut;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
eeI_JastrowBuilder	Jastrow/eeI_JastrowBuilder.h	/^  eeI_JastrowBuilder(ParticleSet& target, TrialWaveFunction& psi,$/;"	f	struct:qmcplusplus::eeI_JastrowBuilder
eeI_JastrowBuilder	Jastrow/eeI_JastrowBuilder.h	/^struct eeI_JastrowBuilder: public OrbitalBuilderBase$/;"	s	namespace:qmcplusplus
eeI_JastrowOrbital	Jastrow/eeI_JastrowOrbital.h	/^  eeI_JastrowOrbital(ParticleSet& ions, ParticleSet& elecs, bool is_master)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
eeI_JastrowOrbital	Jastrow/eeI_JastrowOrbital.h	/^class eeI_JastrowOrbital: public OrbitalBase$/;"	c	namespace:qmcplusplus
ee_table	Jastrow/ThreeBodyPade.h	/^  const DistanceTableData* ee_table;$/;"	m	class:qmcplusplus::ThreeBodyPade
egGrid	ElectronGas/ElectronGasComplexOrbitalBuilder.h	/^  HEGGrid<RealType,OHMMS_DIM> egGrid;$/;"	m	class:qmcplusplus::ElectronGasBasisBuilder
egGrid	ElectronGas/ElectronGasOrbitalBuilder.h	/^  HEGGrid<RealType,OHMMS_DIM> egGrid;$/;"	m	class:qmcplusplus::ElectronGasBasisBuilder
eigTag	PlaneWave/PWParameterSet.h	/^  std::string eigTag;$/;"	m	struct:qmcplusplus::PWParameterSet
eigenstatesGroup	EinsplineSetBuilder.h	/^  std::string parameterGroup, ionsGroup, eigenstatesGroup;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
eigvecTag	PlaneWave/PWParameterSet.h	/^  std::string eigvecTag;$/;"	m	struct:qmcplusplus::PWParameterSet
eikr	EinsplineSet.h	/^  Vector<std::complex<double> > eikr;$/;"	m	class:qmcplusplus::EinsplineSetExtended
eikr	Experimental/EinsplineAdoptorPacked.h	/^  std::vector<value_type> eikr;$/;"	m	struct:qmcplusplus::SplineC2CAdoptorPacked
eikr	Jastrow/LRTwoBodyJastrow.h	/^  Matrix<ComplexType> eikr;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
eikr_i	Jastrow/LRTwoBodyJastrow.h	/^  Matrix<RealType> eikr_i;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
eikr_new	Jastrow/LRTwoBodyJastrow.h	/^  Vector<ComplexType> eikr_new;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
eikr_new_i	Jastrow/LRTwoBodyJastrow.h	/^  Vector<RealType> eikr_new_i;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
eikr_new_r	Jastrow/LRTwoBodyJastrow.h	/^  Vector<RealType> eikr_new_r;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
eikr_r	Jastrow/LRTwoBodyJastrow.h	/^  Matrix<RealType> eikr_r;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
einspline	legacy/einspline.hpp	/^namespace qmcplusplus { namespace einspline {$/;"	n	namespace:qmcplusplus
einspline_traits	EinsplineAdoptor.h	/^struct einspline_traits { };$/;"	s	namespace:qmcplusplus
einspline_traits	EinsplineAdoptor.h	/^struct einspline_traits<double,3>$/;"	s	namespace:qmcplusplus
einspline_traits	EinsplineAdoptor.h	/^struct einspline_traits<float,3>$/;"	s	namespace:qmcplusplus
einspline_traits	EinsplineAdoptor.h	/^struct einspline_traits<std::complex<double>,3>$/;"	s	namespace:qmcplusplus
einspline_traits	EinsplineAdoptor.h	/^struct einspline_traits<std::complex<float>,3>$/;"	s	namespace:qmcplusplus
elec	OrbitalBase.h	/^  int elec;$/;"	m	struct:qmcplusplus::NLjob
elecs_inside	Jastrow/eeI_JastrowOrbital.h	/^  eListType elecs_inside;$/;"	m	struct:qmcplusplus::IonData
elementType	Fermion/BFsplineFunctor.h	/^  std::string elementType, pairType;$/;"	m	struct:qmcplusplus::BFsplineFunctor
elementType	Jastrow/BsplineFunctor.h	/^  std::string elementType, pairType;$/;"	m	struct:qmcplusplus::BsplineFunctor
elementType	MolecularOrbitals/AtomicBasisBuilder.h	/^  std::string elementType;$/;"	m	struct:qmcplusplus::AtomicBasisBuilder
energies	SPOSetInputInfo.h	/^    energies_t energies;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
energies	TrialWaveFunction.h	/^  std::vector<RealType> energies;$/;"	m	struct:qmcplusplus::CoefficientHolder
energies_present	SPOSetInfo.h	/^    bool energies_present;$/;"	m	class:qmcplusplus::SPOSetInfo
energies_t	BasisSetBase.h	/^  typedef std::vector<RealType> energies_t;$/;"	t	struct:qmcplusplus::BasisSetBuilder
energies_t	SPOSetInputInfo.h	/^    typedef std::vector<RealType> energies_t;$/;"	t	struct:qmcplusplus::SPOSetInputInfo
energy	HarmonicOscillator/SHOSetBuilder.h	/^    RealType energy;$/;"	m	struct:qmcplusplus::SHOSetBuilder
energy	SPOInfo.h	/^    RealType energy;$/;"	m	struct:qmcplusplus::SPOInfo
energy_and_index_ordered	SPOInfo.h	/^    enum orderings{index_ordered=0,energy_ordered,energy_and_index_ordered,unordered,no_order};$/;"	e	enum:qmcplusplus::spoinfo::orderings
energy_max	SPOSetInputInfo.h	/^    RealType energy_max;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
energy_min	SPOSetInputInfo.h	/^    RealType energy_min;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
energy_ordered	SPOInfo.h	/^    enum orderings{index_ordered=0,energy_ordered,energy_and_index_ordered,unordered,no_order};$/;"	e	enum:qmcplusplus::spoinfo::orderings
energy_ordered	SPOSetInfo.cpp	/^  bool SPOSetInfo::energy_ordered() const$/;"	f	class:qmcplusplus::SPOSetInfo
energy_sort	SPOSetInfo.cpp	/^  void SPOSetInfo::energy_sort(RealType tol)$/;"	f	class:qmcplusplus::SPOSetInfo
energy_sort	SPOSetInfo.h	/^    void energy_sort(RealType tol=1e-6,bool assign_indices=false)$/;"	f	struct:qmcplusplus::SPOSetInfoSimple
energy_tol	SPOInfo.h	/^      RealType energy_tol;$/;"	m	struct:qmcplusplus::spoinfo::EnergyOrder
energy_tol	SPOSetInfo.h	/^    RealType energy_tol;$/;"	m	class:qmcplusplus::SPOSetInfo
energy_tolerance	SPOSetInfo.cpp	/^  RealType SPOSetInfo::energy_tolerance() const$/;"	f	class:qmcplusplus::SPOSetInfo
ensure_vector_is_big_enough	SPOSetBase.h	/^  template <class T> static void ensure_vector_is_big_enough(T & v, const size_t n) {$/;"	f	class:qmcplusplus::SPOSetBase
eta0	Experimental/CuspCorr.h	/^  RealType beta0,DX,eta0, ELorigAtRc;$/;"	m	class:qmcplusplus::CuspCorr
evalGrad	FDLRWfn.h	/^    GradType evalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::FDLRWfn
evalGrad	Fermion/DiracDeterminantBase.cpp	/^DiracDeterminantBase::evalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::DiracDeterminantBase
evalGrad	Fermion/DiracDeterminantWithBackflow.cpp	/^DiracDeterminantWithBackflow::evalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
evalGrad	Fermion/MultiDiracDeterminantBase.h	/^  GradType evalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
evalGrad	Fermion/MultiDiracDeterminantWithBackflow.h	/^  GradType evalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
evalGrad	Fermion/MultiSlaterDeterminant.cpp	/^OrbitalBase::GradType MultiSlaterDeterminant::evalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::MultiSlaterDeterminant
evalGrad	Fermion/MultiSlaterDeterminantFast.cpp	/^OrbitalBase::GradType MultiSlaterDeterminantFast::evalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
evalGrad	Fermion/MultiSlaterDeterminantWithBackflow.cpp	/^OrbitalBase::GradType MultiSlaterDeterminantWithBackflow::evalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
evalGrad	Fermion/RNDiracDeterminantBase.cpp	/^RNDiracDeterminantBase::evalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::RNDiracDeterminantBase
evalGrad	Fermion/RNDiracDeterminantBaseAlternate.cpp	/^RNDiracDeterminantBaseAlternate::evalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
evalGrad	Fermion/SlaterDet.h	/^  GradType evalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::SlaterDet
evalGrad	Fermion/SlaterDetOpt.cpp	/^OrbitalBase::GradType SlaterDetOpt::evalGrad(ParticleSet& P, int iat) {$/;"	f	class:qmcplusplus::SlaterDetOpt
evalGrad	Fermion/SlaterDetWithBackflow.h	/^  GradType evalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
evalGrad	IonOrbital.cpp	/^IonOrbital::evalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::IonOrbital
evalGrad	Jastrow/LRTwoBodyJastrow.cpp	/^LRTwoBodyJastrow::evalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
evalGrad	Jastrow/OneBodyJastrowOrbital.h	/^  inline GradType evalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
evalGrad	Jastrow/OneBodySpinJastrowOrbital.h	/^  inline GradType evalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
evalGrad	Jastrow/RPAJastrow.cpp	/^RPAJastrow::evalGrad(ParticleSet &P, int iat)$/;"	f	class:qmcplusplus::RPAJastrow
evalGrad	Jastrow/TwoBodyJastrowOrbital.h	/^  GradType evalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
evalGrad	Jastrow/eeI_JastrowOrbital.h	/^  GradType evalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
evalGrad	Jastrow/kSpaceJastrow.cpp	/^kSpaceJastrow::GradType kSpaceJastrow::evalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::kSpaceJastrow
evalGrad	LCOrbitalSetOpt.h	/^    OrbitalBase::GradType evalGrad(ParticleSet& P, int iat) {$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
evalGrad	OrbitalBase.h	/^  virtual GradType evalGrad(ParticleSet& P, int iat)$/;"	f	struct:qmcplusplus::OrbitalBase
evalGrad	TrialWaveFunction.cpp	/^TrialWaveFunction::GradType TrialWaveFunction::evalGrad(ParticleSet& P,int iat)$/;"	f	class:qmcplusplus::TrialWaveFunction
evalGradSource	Fermion/DiracDeterminantBase.cpp	/^DiracDeterminantBase::evalGradSource$/;"	f	class:qmcplusplus::DiracDeterminantBase
evalGradSource	Fermion/DiracDeterminantBase.cpp	/^DiracDeterminantBase::evalGradSource(ParticleSet& P, ParticleSet& source,$/;"	f	class:qmcplusplus::DiracDeterminantBase
evalGradSource	Fermion/DiracDeterminantWithBackflow.cpp	/^DiracDeterminantWithBackflow::evalGradSource$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
evalGradSource	Fermion/DiracDeterminantWithBackflow.cpp	/^DiracDeterminantWithBackflow::evalGradSource(ParticleSet& P, ParticleSet& source,$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
evalGradSource	Fermion/MultiDiracDeterminantBase_help.cpp	/^MultiDiracDeterminantBase::evalGradSource$/;"	f	class:MultiDiracDeterminantBase
evalGradSource	Fermion/MultiDiracDeterminantBase_help.cpp	/^MultiDiracDeterminantBase::evalGradSource(ParticleSet& P, ParticleSet& source,$/;"	f	class:MultiDiracDeterminantBase
evalGradSource	Fermion/RNDiracDeterminantBase.cpp	/^RNDiracDeterminantBase::evalGradSource$/;"	f	class:qmcplusplus::RNDiracDeterminantBase
evalGradSource	Fermion/RNDiracDeterminantBase.cpp	/^RNDiracDeterminantBase::evalGradSource(ParticleSet& P, ParticleSet& source,$/;"	f	class:qmcplusplus::RNDiracDeterminantBase
evalGradSource	Fermion/RNDiracDeterminantBaseAlternate.cpp	/^RNDiracDeterminantBaseAlternate::evalGradSource$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
evalGradSource	Fermion/RNDiracDeterminantBaseAlternate.cpp	/^RNDiracDeterminantBaseAlternate::evalGradSource(ParticleSet& P, ParticleSet& source,$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
evalGradSource	Fermion/SlaterDet.h	/^  GradType evalGradSource (ParticleSet& P, ParticleSet& src, int iat,$/;"	f	class:qmcplusplus::SlaterDet
evalGradSource	Fermion/SlaterDet.h	/^  GradType evalGradSource(ParticleSet& P, ParticleSet &src, int iat)$/;"	f	class:qmcplusplus::SlaterDet
evalGradSource	Fermion/SlaterDetWithBackflow.h	/^  GradType evalGradSource (ParticleSet& P, ParticleSet& src, int iat,$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
evalGradSource	Fermion/SlaterDetWithBackflow.h	/^  GradType evalGradSource(ParticleSet& P, ParticleSet &src, int iat)$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
evalGradSource	Jastrow/OneBodyJastrowOrbital.h	/^  evalGradSource(ParticleSet& P, ParticleSet& source, int isrc,$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
evalGradSource	Jastrow/OneBodyJastrowOrbital.h	/^  inline GradType evalGradSource(ParticleSet& P,$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
evalGradSource	Jastrow/OneBodySpinJastrowOrbital.h	/^  evalGradSource(ParticleSet& P, ParticleSet& source, int isrc$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
evalGradSource	Jastrow/OneBodySpinJastrowOrbital.h	/^  inline GradType evalGradSource(ParticleSet& P, ParticleSet& source, int isrc)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
evalGradSource	Jastrow/eeI_JastrowOrbital.h	/^  evalGradSource(ParticleSet& P, ParticleSet& source, int isrc,$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
evalGradSource	Jastrow/eeI_JastrowOrbital.h	/^  inline GradType evalGradSource(ParticleSet& P,$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
evalGradSource	OrbitalBase.h	/^  virtual GradType evalGradSource$/;"	f	struct:qmcplusplus::OrbitalBase
evalGradSource	OrbitalBase.h	/^  virtual GradType evalGradSource(ParticleSet& P,$/;"	f	struct:qmcplusplus::OrbitalBase
evalGradSource	TrialWaveFunction.cpp	/^TrialWaveFunction::GradType TrialWaveFunction::evalGradSource(ParticleSet& P$/;"	f	class:qmcplusplus::TrialWaveFunction
evalGradSourceFD	Jastrow/eeI_JastrowOrbital.h	/^  evalGradSourceFD(ParticleSet& P, ParticleSet& source, int isrc,$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
evalGradSourceFD	Jastrow/eeI_JastrowOrbital.h	/^  inline GradType evalGradSourceFD(ParticleSet& P,$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
evalGradSourcep	Fermion/DiracDeterminantBase.cpp	/^DiracDeterminantBase::evalGradSourcep$/;"	f	class:qmcplusplus::DiracDeterminantBase
evalGradSourcep	Fermion/DiracDeterminantWithBackflow.cpp	/^DiracDeterminantWithBackflow::evalGradSourcep$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
evalGradSourcep	Fermion/MultiDiracDeterminantBase_help.cpp	/^MultiDiracDeterminantBase::evalGradSourcep$/;"	f	class:MultiDiracDeterminantBase
evalGradSourcep	Fermion/RNDiracDeterminantBase.cpp	/^RNDiracDeterminantBase::evalGradSourcep$/;"	f	class:qmcplusplus::RNDiracDeterminantBase
evalGradSourcep	Fermion/RNDiracDeterminantBaseAlternate.cpp	/^RNDiracDeterminantBaseAlternate::evalGradSourcep$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
evalOrb1Timer	Fermion/MultiDiracDeterminantBase.h	/^  NewTimer UpdateTimer, RatioTimer, InverseTimer, buildTableTimer, readMatTimer, evalWTimer, evalOrbTimer,evalOrb1Timer;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
evalOrb1Timer	Fermion/MultiDiracDeterminantWithBackflow.h	/^  NewTimer UpdateTimer, RatioTimer, InverseTimer, buildTableTimer, readMatTimer, evalWTimer, evalOrbTimer,evalOrb1Timer;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
evalOrbTimer	Fermion/MultiDiracDeterminantBase.h	/^  NewTimer UpdateTimer, RatioTimer, InverseTimer, buildTableTimer, readMatTimer, evalWTimer, evalOrbTimer,evalOrb1Timer;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
evalOrbTimer	Fermion/MultiDiracDeterminantWithBackflow.h	/^  NewTimer UpdateTimer, RatioTimer, InverseTimer, buildTableTimer, readMatTimer, evalWTimer, evalOrbTimer,evalOrb1Timer;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
evalOrbTimer	Fermion/MultiSlaterDeterminant.h	/^  NewTimer Ratio1Timer,Ratio1GradTimer,Ratio1AllTimer,AccRejTimer,evalOrbTimer;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
evalWTimer	Fermion/MultiDiracDeterminantBase.h	/^  NewTimer UpdateTimer, RatioTimer, InverseTimer, buildTableTimer, readMatTimer, evalWTimer, evalOrbTimer,evalOrb1Timer;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
evalWTimer	Fermion/MultiDiracDeterminantWithBackflow.h	/^  NewTimer UpdateTimer, RatioTimer, InverseTimer, buildTableTimer, readMatTimer, evalWTimer, evalOrbTimer,evalOrb1Timer;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
evalX	Experimental/CuspCorr.h	/^  void evalX(ValueVector_t &X)$/;"	f	class:qmcplusplus::CuspCorr
evalYlm	MuffinTin.cpp	/^MuffinTinClass::evalYlm (TinyVector<double,3> rhat)$/;"	f	class:qmcplusplus::MuffinTinClass
eval_multi_multi_UBspline_3d_cuda	EinsplineSetCuda.cpp	/^eval_multi_multi_UBspline_3d_cuda (multi_UBspline_3d_c_cuda *spline,$/;"	f	namespace:qmcplusplus
eval_multi_multi_UBspline_3d_cuda	EinsplineSetCuda.cpp	/^eval_multi_multi_UBspline_3d_cuda (multi_UBspline_3d_d_cuda *spline,$/;"	f	namespace:qmcplusplus
eval_multi_multi_UBspline_3d_cuda	EinsplineSetCuda.cpp	/^eval_multi_multi_UBspline_3d_cuda (multi_UBspline_3d_s_cuda *spline,$/;"	f	namespace:qmcplusplus
eval_multi_multi_UBspline_3d_cuda	EinsplineSetCuda.cpp	/^eval_multi_multi_UBspline_3d_cuda (multi_UBspline_3d_z_cuda *spline,$/;"	f	namespace:qmcplusplus
eval_multi_multi_UBspline_3d_vgl_cuda	EinsplineSetCuda.cpp	/^inline void eval_multi_multi_UBspline_3d_vgl_cuda$/;"	f	namespace:qmcplusplus
evaluate	AFMSPOSet.cpp	/^AFMSPOSet::evaluate(const ParticleSet& P, const PosType& r,$/;"	f	class:qmcplusplus::AFMSPOSet
evaluate	AFMSPOSet.cpp	/^AFMSPOSet::evaluate(const ParticleSet& P, int iat, ValueVector_t& psi)$/;"	f	class:qmcplusplus::AFMSPOSet
evaluate	AFMSPOSet.cpp	/^AFMSPOSet::evaluate(const ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::AFMSPOSet
evaluate	AGPDeterminant.cpp	/^AGPDeterminant::evaluate(ParticleSet& P, ParticleSet::ParticleGradient_t& G, ParticleSet::ParticleLaplacian_t& L)$/;"	f	class:qmcplusplus::AGPDeterminant
evaluate	AtomicOrbital.h	/^AtomicOrbital<StorageType>::evaluate (PosType r, ComplexValueVector_t &vals)$/;"	f	class:qmcplusplus::AtomicOrbital
evaluate	AtomicOrbital.h	/^AtomicOrbital<StorageType>::evaluate (PosType r, ComplexValueVector_t &vals,$/;"	f	class:qmcplusplus::AtomicOrbital
evaluate	AtomicOrbital.h	/^AtomicOrbital<StorageType>::evaluate (PosType r, RealValueVector_t &vals)$/;"	f	class:qmcplusplus::AtomicOrbital
evaluate	AtomicOrbital.h	/^AtomicOrbital<StorageType>::evaluate (PosType r,$/;"	f	class:qmcplusplus::AtomicOrbital
evaluate	AtomicOrbitals/HFAtomicSTOSet.h	/^  evaluate(const ParticleSet& P, int first, int last,$/;"	f	struct:qmcplusplus::HFAtomicSTOSet
evaluate	AtomicOrbitals/HFAtomicSTOSet.h	/^  inline T evaluate()$/;"	f	struct:qmcplusplus::ComboSTO
evaluate	AtomicOrbitals/HFAtomicSTOSet.h	/^  inline T evaluate(T r, T rinv, T& drnl, T& d2rnl)$/;"	f	struct:qmcplusplus::ComboSTO
evaluate	AtomicOrbitals/HFAtomicSTOSet.h	/^  inline void evaluate(const ParticleSet& P, int iat, VV& phi)$/;"	f	struct:qmcplusplus::HFAtomicSTOSet
evaluate	AtomicOrbitals/HFAtomicSTOSet.h	/^  inline void evaluate(const ParticleSet& P, int iat, VV& phi, GV& dphi, VV& d2phi )$/;"	f	struct:qmcplusplus::HFAtomicSTOSet
evaluate	AtomicOrbitals/HeSTOClementiRottie.h	/^  evaluate(const ParticleSet& P, int first, int last,$/;"	f	struct:qmcplusplus::HePresetHF
evaluate	AtomicOrbitals/HeSTOClementiRottie.h	/^  evaluate(const ParticleSet& P, int iat, VV& phi)$/;"	f	struct:qmcplusplus::HePresetHF
evaluate	AtomicOrbitals/HeSTOClementiRottie.h	/^  evaluate(const ParticleSet& P, int iat, VV& phi, GV& dphi, VV& d2phi )$/;"	f	struct:qmcplusplus::HePresetHF
evaluate	AtomicOrbitals/HeSTOClementiRottie.h	/^  evaluate(const WalkerSetRef& W, int first, int last,$/;"	f	struct:qmcplusplus::HePresetHF
evaluate	CompositeSPOSet.cpp	/^  void CompositeSPOSet::evaluate( const ParticleSet& P, PosType &r, ValueVector_t &psi)$/;"	f	class:qmcplusplus::CompositeSPOSet
evaluate	CompositeSPOSet.cpp	/^  void CompositeSPOSet::evaluate($/;"	f	class:qmcplusplus::CompositeSPOSet
evaluate	CompositeSPOSet.cpp	/^  void CompositeSPOSet::evaluate(const ParticleSet& P, int iat, ValueVector_t& psi)$/;"	f	class:qmcplusplus::CompositeSPOSet
evaluate	CompositeSPOSet.cpp	/^  void CompositeSPOSet::evaluate(const ParticleSet& P, int iat, ValueVector_t& psi, $/;"	f	class:qmcplusplus::CompositeSPOSet
evaluate	ConstantOrbital.h	/^  evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::ConstantOrbital
evaluate	DistributedSPOSet.cpp	/^DistributedSPOSet::evaluate(const ParticleSet& P, int iat, ValueVector_t& psi)$/;"	f	class:qmcplusplus::DistributedSPOSet
evaluate	DistributedSPOSet.cpp	/^DistributedSPOSet::evaluate(const ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::DistributedSPOSet
evaluate	DummyBasisSet.h	/^  inline void evaluate(ParticleSet& P) { }$/;"	f	struct:qmcplusplus::DummyBasisSet
evaluate	EinsplineAdoptor.h	/^  inline void evaluate(const ParticleSet& P, int iat, ValueVector_t& psi)$/;"	f	struct:qmcplusplus::BsplineSet
evaluate	EinsplineAdoptor.h	/^  inline void evaluate(const ParticleSet& P, int iat,$/;"	f	struct:qmcplusplus::BsplineSet
evaluate	EinsplineSet.cpp	/^EinsplineSetExtended<StorageType>::evaluate$/;"	f	class:qmcplusplus::EinsplineSetExtended
evaluate	EinsplineSet.cpp	/^EinsplineSetExtended<double>::evaluate$/;"	f	class:qmcplusplus::EinsplineSetExtended
evaluate	EinsplineSetCuda.cpp	/^EinsplineSetExtended<double>::evaluate$/;"	f	class:qmcplusplus::EinsplineSetExtended
evaluate	EinsplineSetCuda.cpp	/^EinsplineSetExtended<std::complex<double> >::evaluate$/;"	f	class:qmcplusplus::EinsplineSetExtended
evaluate	EinsplineSetCuda.cpp	/^EinsplineSetHybrid<double>::evaluate (std::vector<PosType> &pos, gpu::device_vector<CudaComplexType*> &phi)$/;"	f	class:qmcplusplus::EinsplineSetHybrid
evaluate	EinsplineSetCuda.cpp	/^EinsplineSetHybrid<double>::evaluate (std::vector<Walker_t*> &walkers, int iat,$/;"	f	class:qmcplusplus::EinsplineSetHybrid
evaluate	EinsplineSetCuda.cpp	/^EinsplineSetHybrid<double>::evaluate (std::vector<Walker_t*> &walkers, std::vector<PosType> &newpos,$/;"	f	class:qmcplusplus::EinsplineSetHybrid
evaluate	EinsplineSetCuda.cpp	/^EinsplineSetHybrid<double>::evaluate$/;"	f	class:qmcplusplus::EinsplineSetHybrid
evaluate	EinsplineSetCuda.cpp	/^EinsplineSetHybrid<std::complex<double> >::evaluate (std::vector<Walker_t*> &walkers, int iat,$/;"	f	class:qmcplusplus::EinsplineSetHybrid
evaluate	EinsplineSetCuda.cpp	/^EinsplineSetHybrid<std::complex<double> >::evaluate (std::vector<Walker_t*> &walkers, std::vector<PosType> &newpos,$/;"	f	class:qmcplusplus::EinsplineSetHybrid
evaluate	EinsplineSetCuda.cpp	/^EinsplineSetHybrid<std::complex<double> >::evaluate$/;"	f	class:qmcplusplus::EinsplineSetHybrid
evaluate	ElectronGas/ElectronGasComplexOrbitalBuilder.h	/^  evaluate(const ParticleSet& P, int iat, ValueVector_t& psi)$/;"	f	struct:qmcplusplus::EGOSet
evaluate	ElectronGas/ElectronGasComplexOrbitalBuilder.h	/^  evaluate(const ParticleSet& P, int iat,$/;"	f	struct:qmcplusplus::EGOSet
evaluate	ElectronGas/ElectronGasComplexOrbitalBuilder.h	/^  void evaluate(const ParticleSet& P, int iat, ValueVector_t& psi, GradVector_t& dpsi$/;"	f	struct:qmcplusplus::EGOSet
evaluate	ElectronGas/ElectronGasOrbitalBuilder.h	/^  inline void evaluate(const ParticleSet& P, int iat, ValueVector_t& psi, GradVector_t& dpsi, HessVector_t& grad_grad_psi)$/;"	f	struct:qmcplusplus::RealEGOSet
evaluate	ElectronGas/ElectronGasOrbitalBuilder.h	/^  inline void evaluate(const ParticleSet& P, int iat, ValueVector_t& psi, GradVector_t& dpsi, ValueVector_t& d2psi)$/;"	f	struct:qmcplusplus::RealEGOSet
evaluate	ElectronGas/ElectronGasOrbitalBuilder.h	/^  void evaluate(const ParticleSet& P, int iat, ValueVector_t& psi)$/;"	f	struct:qmcplusplus::RealEGOSet
evaluate	Experimental/Bspline3DSet.cpp	/^Bspline3DSet_Gen::evaluate(const ParticleSet& e, int iat,$/;"	f	class:qmcplusplus::Bspline3DSet_Gen
evaluate	Experimental/Bspline3DSet.cpp	/^Bspline3DSet_Ortho::evaluate(const ParticleSet& e, int iat,$/;"	f	class:qmcplusplus::Bspline3DSet_Ortho
evaluate	Experimental/Bspline3DSet.cpp	/^Bspline3DSet_Twist::evaluate(const ParticleSet& e, int iat,$/;"	f	class:qmcplusplus::Bspline3DSet_Twist
evaluate	Experimental/Bspline3DSet.cpp	/^void Bspline3DSet_Gen::evaluate(const ParticleSet& e, int iat, ValueVector_t& vals)$/;"	f	class:qmcplusplus::Bspline3DSet_Gen
evaluate	Experimental/Bspline3DSet.cpp	/^void Bspline3DSet_Gen_Trunc::evaluate(const ParticleSet& e, int iat, ValueVector_t& vals)$/;"	f	class:qmcplusplus::Bspline3DSet_Gen_Trunc
evaluate	Experimental/Bspline3DSet.cpp	/^void Bspline3DSet_Gen_Trunc::evaluate(const ParticleSet& e, int iat,$/;"	f	class:qmcplusplus::Bspline3DSet_Gen_Trunc
evaluate	Experimental/Bspline3DSet.cpp	/^void Bspline3DSet_Ortho::evaluate(const ParticleSet& e, int iat, ValueVector_t& vals)$/;"	f	class:qmcplusplus::Bspline3DSet_Ortho
evaluate	Experimental/Bspline3DSet.cpp	/^void Bspline3DSet_Ortho_Trunc::evaluate(const ParticleSet& e, int iat, ValueVector_t& vals)$/;"	f	class:qmcplusplus::Bspline3DSet_Ortho_Trunc
evaluate	Experimental/Bspline3DSet.cpp	/^void Bspline3DSet_Ortho_Trunc::evaluate(const ParticleSet& e, int iat,$/;"	f	class:qmcplusplus::Bspline3DSet_Ortho_Trunc
evaluate	Experimental/Bspline3DSet.cpp	/^void Bspline3DSet_Twist::evaluate(const ParticleSet& e, int iat, ValueVector_t& vals)$/;"	f	class:qmcplusplus::Bspline3DSet_Twist
evaluate	Experimental/Bspline3DSet.h	/^  void evaluate(const ParticleSet& P, int iat,$/;"	f	struct:qmcplusplus::Bspline3DSet_Gen
evaluate	Experimental/Bspline3DSet.h	/^  void evaluate(const ParticleSet& P, int iat,$/;"	f	struct:qmcplusplus::Bspline3DSet_Gen_Trunc
evaluate	Experimental/Bspline3DSet.h	/^  void evaluate(const ParticleSet& P, int iat,$/;"	f	struct:qmcplusplus::Bspline3DSet_Ortho
evaluate	Experimental/Bspline3DSet.h	/^  void evaluate(const ParticleSet& P, int iat,$/;"	f	struct:qmcplusplus::Bspline3DSet_Ortho_Trunc
evaluate	Experimental/Bspline3DSet.h	/^  void evaluate(const ParticleSet& P, int iat,$/;"	f	struct:qmcplusplus::Bspline3DSet_Twist
evaluate	Experimental/Bspline3DSetTemp.h	/^  inline void evaluate(const ParticleSet& e, int first, int last,$/;"	f	class:qmcplusplus::Bspline3DSet
evaluate	Experimental/Bspline3DSetTemp.h	/^  inline void evaluate(const ParticleSet& e, int iat, ValueVector_t& vals)$/;"	f	class:qmcplusplus::Bspline3DSet
evaluate	Experimental/Bspline3DSetTemp.h	/^  inline void evaluate(const ParticleSet& e, int iat,$/;"	f	class:qmcplusplus::Bspline3DSet
evaluate	Experimental/Bspline3DSetTrunc.cpp	/^void Bspline3DSet_MLW::evaluate(const ParticleSet& e, int first, int last,$/;"	f	class:qmcplusplus::Bspline3DSet_MLW
evaluate	Experimental/Bspline3DSetTrunc.cpp	/^void Bspline3DSet_MLW::evaluate(const ParticleSet& e, int iat, ValueVector_t& vals)$/;"	f	class:qmcplusplus::Bspline3DSet_MLW
evaluate	Experimental/Bspline3DSetTrunc.cpp	/^void Bspline3DSet_MLW::evaluate(const ParticleSet& e, int iat,$/;"	f	class:qmcplusplus::Bspline3DSet_MLW
evaluate	Experimental/Bspline3DSetTrunc.h	/^  void evaluate(const ParticleSet& P, int iat,$/;"	f	struct:qmcplusplus::Bspline3DSet_MLW
evaluate	Experimental/CuspCorr.h	/^  void evaluate(SPOSetBasePtr Psi,TinyVector<RealType,3> r, ValueVector_t& val, GradVector_t  &grad, ValueVector_t &lapl)$/;"	f	class:qmcplusplus::CuspCorr
evaluate	Experimental/DiracDeterminant.h	/^  evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::DiracDeterminant
evaluate	Experimental/LCOrbitalSetWithCorrection.h	/^  evaluate(const ParticleSet& P, int iat, ValueVector_t& psi)$/;"	f	class:qmcplusplus::LCOrbitalSetWithCorrection
evaluate	Experimental/LCOrbitalSetWithCorrection.h	/^  evaluate(const ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::LCOrbitalSetWithCorrection
evaluate	Experimental/LCOrbitalSetWithCorrection.h	/^  void evaluate(const ParticleSet& P, int first, int last,$/;"	f	class:qmcplusplus::LCOrbitalSetWithCorrection
evaluate	Experimental/NoCuspFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::NoCuspFunctor
evaluate	Experimental/NoCuspFunctor.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::NoCuspFunctor
evaluate	Experimental/PlaneWaveBasis.h	/^  evaluate(const ParticleSet& P, int first, int last)$/;"	f	class:qmcplusplus::PlaneWaveBasis
evaluate	Experimental/PlaneWaveOrbitalSet.h	/^  evaluate(const ParticleSet& P, int first, int last,$/;"	f	class:qmcplusplus::PlaneWaveOrbitalSet
evaluate	Experimental/PlaneWaveOrbitalSet.h	/^  evaluate(const ParticleSet& P, int iat, VV& psi)$/;"	f	class:qmcplusplus::PlaneWaveOrbitalSet
evaluate	Experimental/PlaneWaveOrbitalSet.h	/^  evaluate(const ParticleSet& P, int iat, VV& psi, GV& dpsi, VV& d2psi)$/;"	f	class:qmcplusplus::PlaneWaveOrbitalSet
evaluate	Experimental/PlaneWaveOrbitalSet.h	/^  evaluate(const ParticleSet& P, int iat, int jorb)$/;"	f	class:qmcplusplus::PlaneWaveOrbitalSet
evaluate	Experimental/QDwf.h	/^  inline double evaluate(const posvec_t& r,$/;"	f	class:QDwf
evaluate	Experimental/SingleParticleOrbitalSet.h	/^  evaluate(const ParticleSet& P, int iat, ValueVector_t& psi)$/;"	f	struct:qmcplusplus::SingleParticleOrbitalSet
evaluate	Experimental/SingleParticleOrbitalSet.h	/^  evaluate(const ParticleSet& P, int iat,$/;"	f	struct:qmcplusplus::SingleParticleOrbitalSet
evaluate	Experimental/SingleParticleOrbitalSet.h	/^  void evaluate(const ParticleSet& P, int first, int last,$/;"	f	struct:qmcplusplus::SingleParticleOrbitalSet
evaluate	Experimental/SlaterDeterminant.h	/^  evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::SlaterDeterminant
evaluate	Experimental/TricubicBsplineSPOSet.h	/^  evaluate(const PosType& r, PV& vals, GV& grads, PV& laps)$/;"	f	class:qmcplusplus::TricubicBsplineSPOSet
evaluate	Experimental/TricubicBsplineSPOSet.h	/^  evaluate(const PosType& r, int i, PM& vals, GM& grads, PM& laps)$/;"	f	class:qmcplusplus::TricubicBsplineSPOSet
evaluate	Experimental/TricubicBsplineSPOSet.h	/^  inline void evaluate(const PosType& r, PV& vals)$/;"	f	class:qmcplusplus::TricubicBsplineSPOSet
evaluate	Experimental/TricubicBsplineTwistSet.h	/^  evaluate(const PosType& r, PV& vals, GV& grads, PV& laps)$/;"	f	class:qmcplusplus::TricubicBsplineTwistSet
evaluate	Experimental/TricubicBsplineTwistSet.h	/^  evaluate(const PosType& r, int i, PM& vals, GM& grads, PM& laps)$/;"	f	class:qmcplusplus::TricubicBsplineTwistSet
evaluate	Experimental/TricubicBsplineTwistSet.h	/^  inline void evaluate(const PosType& r, PV& vals)$/;"	f	class:qmcplusplus::TricubicBsplineTwistSet
evaluate	Experimental/TwoBodyJastrowFunction.Shared.h	/^  inline ValueType evaluate(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::TwoBodyJastrow
evaluate	Experimental/TwoBodyJastrowFunction.Shared.h	/^  inline ValueType evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::TwoBodyJastrow
evaluate	Experimental/TwoBodyJastrowFunction.Shared.h	/^  inline void evaluate(WalkerSetRef& W,$/;"	f	class:qmcplusplus::TwoBodyJastrow
evaluate	Experimental/TwoBodyJastrowFunction.h	/^  ValueType evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::TwoBodyJastrow
evaluate	Experimental/TwoBodyJastrowFunction.h	/^  inline ValueType evaluate(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::TwoBodyJastrow
evaluate	Experimental/TwoBodyJastrowFunction.h	/^  void evaluate(WalkerSetRef& W,$/;"	f	class:qmcplusplus::TwoBodyJastrow
evaluate	FDLRWfn.h	/^    ValueType evaluate(ParticleSet& P, ParticleSet::ParticleGradient_t& G, ParticleSet::ParticleLaplacian_t& L) {$/;"	f	class:qmcplusplus::FDLRWfn
evaluate	Fermion/BFsplineFunctor.h	/^  evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::BFsplineFunctor
evaluate	Fermion/BFsplineFunctor.h	/^  evaluate(real_type r, real_type& dudr, real_type& d2udr2, real_type &d3udr3)$/;"	f	struct:qmcplusplus::BFsplineFunctor
evaluate	Fermion/BFsplineFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::BFsplineFunctor
evaluate	Fermion/BFsplineFunctor.h	/^  inline real_type evaluate(real_type r, real_type rinv)$/;"	f	struct:qmcplusplus::BFsplineFunctor
evaluate	Fermion/BackflowTransformation.h	/^  evaluate(const ParticleSet& P)$/;"	f	class:qmcplusplus::BackflowTransformation
evaluate	Fermion/BackflowTransformation.h	/^  evaluate(const ParticleSet& P, ParticleSet& Pnew)$/;"	f	class:qmcplusplus::BackflowTransformation
evaluate	Fermion/Backflow_eI.h	/^  evaluate(const ParticleSet& P, ParticleSet& QP)$/;"	f	class:qmcplusplus::Backflow_eI
evaluate	Fermion/Backflow_eI.h	/^  evaluate(const ParticleSet& P, ParticleSet& QP, GradMatrix_t& Bmat_full, HessMatrix_t& Amat)$/;"	f	class:qmcplusplus::Backflow_eI
evaluate	Fermion/Backflow_eI.h	/^  evaluate(const ParticleSet& P, ParticleSet& QP, GradVector_t& Bmat, HessMatrix_t& Amat)$/;"	f	class:qmcplusplus::Backflow_eI
evaluate	Fermion/Backflow_eI_spin.h	/^  evaluate(const ParticleSet& P, ParticleSet& QP)$/;"	f	class:qmcplusplus::Backflow_eI_spin
evaluate	Fermion/Backflow_eI_spin.h	/^  evaluate(const ParticleSet& P, ParticleSet& QP, GradMatrix_t& Bmat_full, HessMatrix_t& Amat)$/;"	f	class:qmcplusplus::Backflow_eI_spin
evaluate	Fermion/Backflow_eI_spin.h	/^  evaluate(const ParticleSet& P, ParticleSet& QP, GradVector_t& Bmat, HessMatrix_t& Amat)$/;"	f	class:qmcplusplus::Backflow_eI_spin
evaluate	Fermion/Backflow_ee.h	/^  evaluate(const ParticleSet& P, ParticleSet& QP)$/;"	f	class:qmcplusplus::Backflow_ee
evaluate	Fermion/Backflow_ee.h	/^  evaluate(const ParticleSet& P, ParticleSet& QP, GradMatrix_t& Bmat_full, HessMatrix_t& Amat)$/;"	f	class:qmcplusplus::Backflow_ee
evaluate	Fermion/Backflow_ee.h	/^  evaluate(const ParticleSet& P, ParticleSet& QP, GradVector_t& Bmat, HessMatrix_t& Amat)$/;"	f	class:qmcplusplus::Backflow_ee
evaluate	Fermion/Backflow_ee_kSpace.h	/^  evaluate(const ParticleSet& P, ParticleSet& QP)$/;"	f	class:qmcplusplus::Backflow_ee_kSpace
evaluate	Fermion/Backflow_ee_kSpace.h	/^  evaluate(const ParticleSet& P, ParticleSet& QP, GradMatrix_t& Bmat_full, HessMatrix_t& Amat)$/;"	f	class:qmcplusplus::Backflow_ee_kSpace
evaluate	Fermion/Backflow_ee_kSpace.h	/^  evaluate(const ParticleSet& P, ParticleSet& QP, GradVector_t& Bmat, HessMatrix_t& Amat)$/;"	f	class:qmcplusplus::Backflow_ee_kSpace
evaluate	Fermion/DiracDeterminantBase.cpp	/^DiracDeterminantBase::evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::DiracDeterminantBase
evaluate	Fermion/DiracDeterminantWithBackflow.cpp	/^DiracDeterminantWithBackflow::evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
evaluate	Fermion/GaussianFunctor.h	/^  inline real_type evaluate(const double r)$/;"	f	class:qmcplusplus::GaussianFunctor
evaluate	Fermion/GaussianFunctor.h	/^  inline real_type evaluate(const double r, real_type& du, real_type& d2u)$/;"	f	class:qmcplusplus::GaussianFunctor
evaluate	Fermion/MultiDiracDeterminantBase.h	/^  ValueType evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
evaluate	Fermion/MultiDiracDeterminantBase_help.cpp	/^MultiDiracDeterminantBase::evaluate(ParticleSet& P,$/;"	f	class:MultiDiracDeterminantBase
evaluate	Fermion/MultiDiracDeterminantBase_help.h	/^  inline T evaluate(Matrix<T>& dots, std::vector<int>::iterator it, int n)$/;"	f	struct:qmcplusplus::MyDeterminant
evaluate	Fermion/MultiDiracDeterminantBase_help.h	/^  inline T evaluate(T a11, T a12, T a13, T a14, T a15, T a16,$/;"	f	struct:qmcplusplus::MyDeterminant
evaluate	Fermion/MultiDiracDeterminantBase_help.h	/^  inline T evaluate(T a11, T a12, T a13, T a14, T a15,$/;"	f	struct:qmcplusplus::MyDeterminant
evaluate	Fermion/MultiDiracDeterminantBase_help.h	/^  inline T evaluate(T a11, T a12, T a13, T a14,$/;"	f	struct:qmcplusplus::MyDeterminant
evaluate	Fermion/MultiDiracDeterminantBase_help.h	/^  inline T evaluate(T a11, T a12, T a13,$/;"	f	struct:qmcplusplus::MyDeterminant
evaluate	Fermion/MultiDiracDeterminantBase_help.h	/^  inline T evaluate(T a11, T a12,$/;"	f	struct:qmcplusplus::MyDeterminant
evaluate	Fermion/MultiDiracDeterminantWithBackflow.h	/^  RealType evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
evaluate	Fermion/MultiSlaterDeterminant.cpp	/^OrbitalBase::ValueType MultiSlaterDeterminant::evaluate(ParticleSet& P$/;"	f	class:qmcplusplus::MultiSlaterDeterminant
evaluate	Fermion/MultiSlaterDeterminantFast.cpp	/^OrbitalBase::ValueType MultiSlaterDeterminantFast::evaluate(ParticleSet& P$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
evaluate	Fermion/MultiSlaterDeterminantWithBackflow.cpp	/^OrbitalBase::ValueType MultiSlaterDeterminantWithBackflow::evaluate(ParticleSet& P$/;"	f	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
evaluate	Fermion/SPOSetProxy.cpp	/^void SPOSetProxy::evaluate(const ParticleSet& P, int first, int last$/;"	f	class:qmcplusplus::SPOSetProxy
evaluate	Fermion/SPOSetProxy.cpp	/^void SPOSetProxy::evaluate(const ParticleSet& P, int iat$/;"	f	class:qmcplusplus::SPOSetProxy
evaluate	Fermion/SPOSetProxy.cpp	/^void SPOSetProxy::evaluate(const ParticleSet& P, int iat, ValueVector_t& psi)$/;"	f	class:qmcplusplus::SPOSetProxy
evaluate	Fermion/SPOSetProxy.h	/^  evaluate(const ParticleSet& P, int iat,$/;"	f	struct:qmcplusplus::SPOSetProxy
evaluate	Fermion/SPOSetProxyForMSD.cpp	/^void SPOSetProxyForMSD::evaluate(const ParticleSet& P, int first, int last$/;"	f	class:qmcplusplus::SPOSetProxyForMSD
evaluate	Fermion/SPOSetProxyForMSD.cpp	/^void SPOSetProxyForMSD::evaluate(const ParticleSet& P, int iat$/;"	f	class:qmcplusplus::SPOSetProxyForMSD
evaluate	Fermion/SPOSetProxyForMSD.cpp	/^void SPOSetProxyForMSD::evaluate(const ParticleSet& P, int iat, ValueVector_t& psi)$/;"	f	class:qmcplusplus::SPOSetProxyForMSD
evaluate	Fermion/SPOSetProxyForMSD.h	/^  evaluate(const ParticleSet& P, int iat,$/;"	f	struct:qmcplusplus::SPOSetProxyForMSD
evaluate	Fermion/SlaterDet.cpp	/^SlaterDet::ValueType SlaterDet::evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::SlaterDet
evaluate	Fermion/SlaterDetOpt.cpp	/^OrbitalBase::ValueType SlaterDetOpt::evaluate(ParticleSet& P, ParticleSet::ParticleGradient_t& G, ParticleSet::ParticleLaplacian_t& L) {$/;"	f	class:qmcplusplus::SlaterDetOpt
evaluate	Fermion/SlaterDetWithBackflow.cpp	/^SlaterDetWithBackflow::evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
evaluate	HarmonicOscillator/SHOSet.cpp	/^  void SHOSet::evaluate($/;"	f	class:qmcplusplus::SHOSet
evaluate	HarmonicOscillator/SHOSet.cpp	/^  void SHOSet::evaluate(const ParticleSet& P, int iat, ValueVector_t& psi)$/;"	f	class:qmcplusplus::SHOSet
evaluate	HarmonicOscillator/SHOSet.cpp	/^  void SHOSet::evaluate(const ParticleSet& P, int iat, ValueVector_t& psi, $/;"	f	class:qmcplusplus::SHOSet
evaluate	IonOrbital.cpp	/^IonOrbital::evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::IonOrbital
evaluate	Jastrow/BesselZeroFunctor.h	/^  evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::BesselZero
evaluate	Jastrow/BesselZeroFunctor.h	/^  evaluate(real_type r, real_type& dudr, real_type& d2udr2, real_type &d3udr3)$/;"	f	struct:qmcplusplus::BesselZero
evaluate	Jastrow/BesselZeroFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::BesselZero
evaluate	Jastrow/BesselZeroFunctor.h	/^  inline real_type evaluate(real_type r, real_type rinv)$/;"	f	struct:qmcplusplus::BesselZero
evaluate	Jastrow/BsplineFunctor.h	/^  evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::BsplineFunctor
evaluate	Jastrow/BsplineFunctor.h	/^  evaluate(real_type r, real_type& dudr, real_type& d2udr2, real_type &d3udr3)$/;"	f	struct:qmcplusplus::BsplineFunctor
evaluate	Jastrow/BsplineFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::BsplineFunctor
evaluate	Jastrow/BsplineFunctor.h	/^  inline real_type evaluate(real_type r, real_type rinv)$/;"	f	struct:qmcplusplus::BsplineFunctor
evaluate	Jastrow/BsplineFunctor3D.h	/^  inline real_type evaluate(real_type r, real_type rinv)$/;"	f	struct:qmcplusplus::BsplineFunctor3D
evaluate	Jastrow/BsplineFunctor3D.h	/^  inline real_type evaluate(real_type r_12, real_type r_1I, real_type r_2I,$/;"	f	struct:qmcplusplus::BsplineFunctor3D
evaluate	Jastrow/BsplineFunctor3D.h	/^  inline real_type evaluate(real_type r_12,$/;"	f	struct:qmcplusplus::BsplineFunctor3D
evaluate	Jastrow/ChebyshevFunctor.h	/^  inline T evaluate(T r, T& dudr, T& d2udr2)$/;"	f	struct:ChebyshevFunctor
evaluate	Jastrow/CompositeFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::CuspCorrectionFunctor
evaluate	Jastrow/CompositeFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::DCuspCorrectionDEFunctor
evaluate	Jastrow/CompositeFunctor.h	/^  inline real_type evaluate(real_type r, real_type& du, real_type& d2u)$/;"	f	struct:qmcplusplus::CuspCorrectionFunctor
evaluate	Jastrow/CompositeFunctor.h	/^  inline real_type evaluate(real_type r, real_type& du, real_type& d2u)$/;"	f	struct:qmcplusplus::DCuspCorrectionDEFunctor
evaluate	Jastrow/CubicBsplineGroup.h	/^  inline value_type evaluate(point_type x, point_type xinv)$/;"	f	class:qmcplusplus::CubicBsplineGroup
evaluate	Jastrow/DerivPadeFunctors.h	/^  evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::D2PadeDB2Functor
evaluate	Jastrow/DerivPadeFunctors.h	/^  evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::DPadeDBFunctor
evaluate	Jastrow/DerivPadeFunctors.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::D2PadeDB2Functor
evaluate	Jastrow/DerivPadeFunctors.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::DPadeDBFunctor
evaluate	Jastrow/GaussianFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::GaussianFunctor
evaluate	Jastrow/GaussianFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
evaluate	Jastrow/GaussianFunctor.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::GaussianFunctor
evaluate	Jastrow/GaussianFunctor.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
evaluate	Jastrow/GaussianFunctor.h	/^  inline real_type evaluate(real_type r, real_type& dudr,$/;"	f	struct:qmcplusplus::GaussianFunctor
evaluate	Jastrow/GaussianFunctor.h	/^  inline real_type evaluate(real_type r, real_type& dudr,$/;"	f	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
evaluate	Jastrow/LRBreakupUtilities.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::ShortRangePartAdapter
evaluate	Jastrow/LRTwoBodyJastrow.h	/^  inline ValueType evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
evaluate	Jastrow/McMillanJ2Functor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::McMillanJ2Functor
evaluate	Jastrow/McMillanJ2Functor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::ModMcMillanJ2Functor
evaluate	Jastrow/McMillanJ2Functor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::comboMcMillanJ2Functor
evaluate	Jastrow/McMillanJ2Functor.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::McMillanJ2Functor
evaluate	Jastrow/McMillanJ2Functor.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::ModMcMillanJ2Functor
evaluate	Jastrow/McMillanJ2Functor.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::comboMcMillanJ2Functor
evaluate	Jastrow/McMillanJ2GFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::McMillanJ2GFunctor
evaluate	Jastrow/McMillanJ2GFunctor.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::McMillanJ2GFunctor
evaluate	Jastrow/ModPadeFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::ModPadeFunctor
evaluate	Jastrow/ModPadeFunctor.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::ModPadeFunctor
evaluate	Jastrow/ModPadeFunctor.h	/^  inline real_type evaluate(real_type r, real_type& dudr,$/;"	f	struct:qmcplusplus::ModPadeFunctor
evaluate	Jastrow/NumericalJastrowFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::NumericalJastrow
evaluate	Jastrow/NumericalJastrowFunctor.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::NumericalJastrow
evaluate	Jastrow/OneBodyJastrowOrbital.h	/^  ValueType evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
evaluate	Jastrow/OneBodySpinJastrowOrbital.h	/^  ValueType evaluate(ParticleSet& P$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
evaluate	Jastrow/OpenGaussianSlaterFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::OpenGaussianSlaterFunctor
evaluate	Jastrow/OpenGaussianSlaterFunctor.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::OpenGaussianSlaterFunctor
evaluate	Jastrow/OpenGaussianSlaterFunctor.h	/^  inline real_type evaluate(real_type r, real_type& dudr,$/;"	f	struct:qmcplusplus::OpenGaussianSlaterFunctor
evaluate	Jastrow/PadeFunctors.h	/^  evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::PadeFunctor
evaluate	Jastrow/PadeFunctors.h	/^  evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::ScaledPadeFunctor
evaluate	Jastrow/PadeFunctors.h	/^  evaluate(real_type r, real_type& dudr, real_type& d2udr2, real_type d3udr3)$/;"	f	struct:qmcplusplus::ScaledPadeFunctor
evaluate	Jastrow/PadeFunctors.h	/^  evaluate(real_type r, real_type& dudr, real_type& d2udr2, real_type& d3udr3)$/;"	f	struct:qmcplusplus::PadeFunctor
evaluate	Jastrow/PadeFunctors.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
evaluate	Jastrow/PadeFunctors.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::PadeFunctor
evaluate	Jastrow/PadeFunctors.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
evaluate	Jastrow/PadeFunctors.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::ScaledPadeFunctor
evaluate	Jastrow/PadeFunctors.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
evaluate	Jastrow/PadeFunctors.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
evaluate	Jastrow/PadeFunctors.h	/^  inline real_type evaluate(real_type r, real_type& dudr,$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
evaluate	Jastrow/PadeFunctors.h	/^  inline real_type evaluate(real_type r, real_type& dudr,$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
evaluate	Jastrow/PolarizedJastrow.h	/^  ValueType evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::PolarizedJastrow
evaluate	Jastrow/PolarizedJastrow.h	/^  ValueType evaluate(ParticleSet& P,PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::PolarizedJastrow
evaluate	Jastrow/PolarizedJastrow.h	/^  void evaluate(WalkerSetRef& W,$/;"	f	class:qmcplusplus::PolarizedJastrow
evaluate	Jastrow/PolyFunctor.h	/^  evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::PolyFunctor
evaluate	Jastrow/PolyFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::PolyFunctor
evaluate	Jastrow/PolynomialFunctor3D.h	/^  inline real_type evaluate(real_type r, real_type rinv)$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
evaluate	Jastrow/PolynomialFunctor3D.h	/^  inline real_type evaluate(real_type r_12, real_type r_1I, real_type r_2I,$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
evaluate	Jastrow/PolynomialFunctor3D.h	/^  inline real_type evaluate(real_type r_12,$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
evaluate	Jastrow/RPAJastrow.h	/^  ValueType evaluate(ParticleSet& P,$/;"	f	struct:qmcplusplus::RPAJastrow
evaluate	Jastrow/RPAJastrowFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::RPAJastrowFunctor
evaluate	Jastrow/RPAJastrowFunctor.h	/^  inline real_type evaluate(real_type r, T& dudr, T& d2udr2)$/;"	f	struct:qmcplusplus::RPAJastrowFunctor
evaluate	Jastrow/SplineFunctors.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::CubicSplineBasisSet
evaluate	Jastrow/SplineFunctors.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::CubicSplineSingle
evaluate	Jastrow/SplineFunctors.h	/^  inline real_type evaluate(real_type r, real_type rinv)$/;"	f	struct:qmcplusplus::CubicSplineSingle
evaluate	Jastrow/SplineFunctors.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::CubicSplineBasisSet
evaluate	Jastrow/SplineFunctors.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::CubicSplineSingle
evaluate	Jastrow/SplineFunctors.h	/^  inline real_type evaluate(real_type r, real_type& dudr,$/;"	f	struct:qmcplusplus::CubicSplineSingle
evaluate	Jastrow/ThreeBodyBlockSparse.h	/^  ValueType evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
evaluate	Jastrow/ThreeBodyGeminal.h	/^  ValueType evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::ThreeBodyGeminal
evaluate	Jastrow/ThreeBodyJastrowOrbital.h	/^  ValueType evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
evaluate	Jastrow/ThreeBodyJastrowOrbital.h	/^  inline ValueType evaluate(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
evaluate	Jastrow/ThreeBodyPade.h	/^  ValueType evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::ThreeBodyPade
evaluate	Jastrow/ThreeBodyPade.h	/^  inline ValueType evaluate(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::ThreeBodyPade
evaluate	Jastrow/TwoBodyJastrowOrbital.h	/^  ValueType evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
evaluate	Jastrow/WMFunctor.h	/^  evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::WMFunctor
evaluate	Jastrow/WMFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::WMFunctor
evaluate	Jastrow/WMFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::WMFunctorSet
evaluate	Jastrow/WMFunctor.h	/^  inline real_type evaluate(real_type r, real_type& dv, real_type& d2v)$/;"	f	struct:qmcplusplus::WMFunctorSet
evaluate	Jastrow/eeI_JastrowOrbital.h	/^  ValueType evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
evaluate	Jastrow/kSpaceJastrow.h	/^  inline ValueType evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::kSpaceJastrow
evaluate	LCOrbitalSet.h	/^  evaluate(const ParticleSet& P, int iat, ValueVector_t& psi)$/;"	f	class:qmcplusplus::LCOrbitalSet
evaluate	LCOrbitalSet.h	/^  evaluate(const ParticleSet& P, int iat, ValueVector_t& psi, GradVector_t& dpsi, ValueVector_t& d2psi)$/;"	f	class:qmcplusplus::LCOrbitalSet
evaluate	LCOrbitalSet.h	/^  evaluate(const ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::LCOrbitalSet
evaluate	LCOrbitalSetOpt.h	/^    ValueType evaluate(ParticleSet& P, ParticleSet::ParticleGradient_t& G, ParticleSet::ParticleLaplacian_t& L) {$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
evaluate	LCOrbitalSetOpt.h	/^    inline void evaluate(const ParticleSet& P, int iat, ValueVector_t& psi) {$/;"	f	class:qmcplusplus::LCOrbitalSetOpt
evaluate	LCOrbitalSetOpt.h	/^    inline void evaluate(const ParticleSet& P, int iat, ValueVector_t& psi, GradVector_t& dpsi, HessVector_t& grad_grad_psi) {$/;"	f	class:qmcplusplus::LCOrbitalSetOpt
evaluate	LCOrbitalSetOpt.h	/^    inline void evaluate(const ParticleSet& P, int iat, ValueVector_t& psi, GradVector_t& dpsi, ValueVector_t& d2psi) {$/;"	f	class:qmcplusplus::LCOrbitalSetOpt
evaluate	LCOrbitals.h	/^  evaluate(const ParticleSet& P, int first, int last,$/;"	f	class:qmcplusplus::LCOrbitals
evaluate	LCOrbitals.h	/^  evaluate(const ParticleSet& P, int iat, VV& psi)$/;"	f	class:qmcplusplus::LCOrbitals
evaluate	LCOrbitals.h	/^  evaluate(const ParticleSet& P, int iat, VV& psi, GV& dpsi, VV& d2psi)$/;"	f	class:qmcplusplus::LCOrbitals
evaluate	LCOrbitals.h	/^  evaluate(const ParticleSet& P, int iat, int jorb)$/;"	f	class:qmcplusplus::LCOrbitals
evaluate	MixedSPOSet.h	/^  evaluate(const ParticleSet& P, int first, int last,$/;"	f	class:qmcplusplus::MixedSPOSet
evaluate	MixedSPOSet.h	/^  evaluate(const ParticleSet& P, int iat, VV& psi)$/;"	f	class:qmcplusplus::MixedSPOSet
evaluate	MixedSPOSet.h	/^  evaluate(const ParticleSet& P, int iat, VV& psi, GV& dpsi, VV& d2psi)$/;"	f	class:qmcplusplus::MixedSPOSet
evaluate	MixedSPOSet.h	/^  evaluate(const ParticleSet& P, int iat, int jorb)$/;"	f	class:qmcplusplus::MixedSPOSet
evaluate	MixedSPOSet.h	/^  evaluate(const WalkerSetRef& W, int first, int last,$/;"	f	class:qmcplusplus::MixedSPOSet
evaluate	MolecularOrbitals/NGOBuilder.h	/^  inline real_type evaluate(real_type r, real_type rinv)$/;"	f	struct:qmcplusplus::NGOrbital
evaluate	MuffinTin.cpp	/^MuffinTinClass::evaluate (TinyVector<double,3> r,$/;"	f	class:qmcplusplus::MuffinTinClass
evaluate	MultiGridBsplineSet.h	/^    inline void evaluate(const ParticleSet& P, int iat, ValueVector_t& psi)$/;"	f	struct:qmcplusplus::MultiGridBsplineSet
evaluate	MultiGridBsplineSet.h	/^    inline void evaluate(const ParticleSet& P, int iat,$/;"	f	struct:qmcplusplus::MultiGridBsplineSet
evaluate	OptimizableSPOSet.cpp	/^OptimizableSPOSet::evaluate(const ParticleSet& P, const PosType& r,$/;"	f	class:qmcplusplus::OptimizableSPOSet
evaluate	OptimizableSPOSet.cpp	/^OptimizableSPOSet::evaluate(const ParticleSet& P, int iat, ValueVector_t& psi)$/;"	f	class:qmcplusplus::OptimizableSPOSet
evaluate	OptimizableSPOSet.cpp	/^OptimizableSPOSet::evaluate(const ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::OptimizableSPOSet
evaluate	PlaneWave/PWBasis.h	/^  evaluate(const PosType& pos)$/;"	f	class:qmcplusplus::PWBasis
evaluate	PlaneWave/PWOrbitalSet.cpp	/^PWOrbitalSet::evaluate(const ParticleSet& P, int iat, ValueVector_t& psi)$/;"	f	class:qmcplusplus::PWOrbitalSet
evaluate	PlaneWave/PWOrbitalSet.cpp	/^PWOrbitalSet::evaluate(const ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::PWOrbitalSet
evaluate	PlaneWave/PWOrbitalSet.h	/^  inline ValueType evaluate(int ib, const PosType& pos)$/;"	f	class:qmcplusplus::PWOrbitalSet
evaluate	PlaneWave/PWOrbitalSet.h	/^ void evaluate(const ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::PWOrbitalSet
evaluate	PlaneWave/PWRealOrbitalSet.cpp	/^PWRealOrbitalSet::evaluate(const ParticleSet& P, int iat, ValueVector_t& psi)$/;"	f	class:qmcplusplus::PWRealOrbitalSet
evaluate	PlaneWave/PWRealOrbitalSet.cpp	/^PWRealOrbitalSet::evaluate(const ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::PWRealOrbitalSet
evaluate	PlaneWave/PWRealOrbitalSet.h	/^  inline ValueType evaluate(int ib, const PosType& pos)$/;"	f	class:qmcplusplus::PWRealOrbitalSet
evaluate	PlaneWave/PWRealOrbitalSet.h	/^  void evaluate(const ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::PWRealOrbitalSet
evaluate	ProductOrbital.h	/^  evaluate(ParticleSet& P,$/;"	f	struct:qmcplusplus::ProductOrbital
evaluate	SPOSetBase.cpp	/^void SPOSetBase::evaluate (std::vector<PosType> &pos, gpu::device_vector<CudaComplexType*> &phi)$/;"	f	class:qmcplusplus::SPOSetBase
evaluate	SPOSetBase.cpp	/^void SPOSetBase::evaluate (std::vector<PosType> &pos, gpu::device_vector<CudaRealType*> &phi)$/;"	f	class:qmcplusplus::SPOSetBase
evaluate	SPOSetBase.cpp	/^void SPOSetBase::evaluate (std::vector<Walker_t*> &walkers, int iat,$/;"	f	class:qmcplusplus::SPOSetBase
evaluate	SPOSetBase.cpp	/^void SPOSetBase::evaluate (std::vector<Walker_t*> &walkers, std::vector<PosType> &new_pos,$/;"	f	class:qmcplusplus::SPOSetBase
evaluate	SPOSetBase.cpp	/^void SPOSetBase::evaluate (std::vector<Walker_t*> &walkers,$/;"	f	class:qmcplusplus::SPOSetBase
evaluate	SPOSetBase.cpp	/^void SPOSetBase::evaluate(const ParticleSet& P, const PosType& r, std::vector<RealType> &psi)$/;"	f	class:qmcplusplus::SPOSetBase
evaluate	SPOSetBase.cpp	/^void SPOSetBase::evaluate(const ParticleSet& P, int first, int last,$/;"	f	class:qmcplusplus::SPOSetBase
evaluate	SPOSetBase.h	/^  evaluate (const ParticleSet& P, PosType &r, ValueVector_t &psi)$/;"	f	class:qmcplusplus::SPOSetBase
evaluate	SPOSetComboNoCopy.h	/^    inline void evaluate(const ParticleSet& P, int iat, ValueVector_t& psi)$/;"	f	struct:qmcplusplus::SPOSetComboNoCopy
evaluate	SPOSetComboNoCopy.h	/^    inline void evaluate(const ParticleSet& P, int iat,$/;"	f	struct:qmcplusplus::SPOSetComboNoCopy
evaluate	SphericalBasisSet.h	/^  evaluate(RealType r, RealType rinv, const PosType& dr, int offset, ValueVector_t& psi)$/;"	f	struct:qmcplusplus::SphericalBasisSet
evaluate	SphericalBasisSet.h	/^  evaluate(RealType r, RealType rinv, const PosType& dr, int offset, ValueVector_t& y,$/;"	f	struct:qmcplusplus::SphericalBasisSet
evaluate	SphericalOrbitalSet.h	/^  evaluate(int source, int first, int nptcl, int offset, VM& y, GM& dy, VM& d2y)$/;"	f	struct:qmcplusplus::SphericalOrbitalSet
evaluate	SphericalOrbitalSet.h	/^  evaluate(int source, int iat,  int offset, VM& y)$/;"	f	struct:qmcplusplus::SphericalOrbitalSet
evaluate	SphericalOrbitalSet.h	/^  evaluate(int source, int iat,  int offset, VM& y, GM& dy, VM& d2y)$/;"	f	struct:qmcplusplus::SphericalOrbitalSet
evaluate	Spline3D/EinsplineSetTemp.hpp	/^        inline void evaluate(const TinyVector<ValT,DIM>& r, ValT* restrict psi)$/;"	f	struct:qmcplusplus::bspline_engine
evaluate	Spline3D/EinsplineSetTemp.hpp	/^      inline void evaluate(const TinyVector<ValT,3>& r, ValT* restrict psi)$/;"	f	struct:qmcplusplus::bspline_engine
evaluate	Spline3D/EinsplineSetTemp.hpp	/^      inline void evaluate(const TinyVector<ValT,DIM>& r $/;"	f	struct:qmcplusplus::bspline_engine
evaluate	Spline3D/EinsplineSetTemp.hpp	/^      inline void evaluate(const TinyVector<ValT,DIM>& r$/;"	f	struct:qmcplusplus::bspline_engine
evaluate	Spline3D/EinsplineSetTemp.hpp	/^      inline void evaluate(const TinyVector<ValT,DIM>& r, ValT* restrict psi)$/;"	f	struct:qmcplusplus::bspline_engine
evaluate	Spline3D/EinsplineSetTemp.hpp	/^      inline void evaluate(const TinyVector<ValT,DIM>& r, std::complex<ValT>* restrict psi)$/;"	f	struct:qmcplusplus::bspline_engine
evaluate	TrialWaveFunction.cpp	/^TrialWaveFunction::ValueType TrialWaveFunction::evaluate(ParticleSet& P)$/;"	f	class:qmcplusplus::TrialWaveFunction
evaluate	legacy/EinsplineOrb.h	/^  void evaluate (const PosType& u, T &psi) {}$/;"	f	class:qmcplusplus::EinsplineOrb
evaluate	legacy/EinsplineOrb.h	/^  void evaluate (const PosType& u, T &psi, TinyVector<T,D> &grad, Tensor<T,D> &hess) {}$/;"	f	class:qmcplusplus::EinsplineOrb
evaluate	legacy/EinsplineSetLocal.cpp	/^void EinsplineSetLocal::evaluate (const ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::EinsplineSetLocal
evaluate	legacy/EinsplineSetLocal.h	/^  void evaluate(const ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::EinsplineSetLocal
evaluate	legacy/EinsplineWrapper.cpp	/^NUBsplineClass_2d_d::evaluate (TinyVector<double,2> r, double &val,$/;"	f	class:qmcplusplus::NUBsplineClass_2d_d
evaluate	legacy/EinsplineWrapper.cpp	/^NUBsplineClass_2d_d::evaluate (TinyVector<double,2> r,$/;"	f	class:qmcplusplus::NUBsplineClass_2d_d
evaluate	legacy/EinsplineWrapper.cpp	/^NUBsplineClass_2d_z::evaluate (TinyVector<double,2> r, std::complex<double> &val,$/;"	f	class:qmcplusplus::NUBsplineClass_2d_z
evaluate	legacy/EinsplineWrapper.cpp	/^UBsplineClass_2d_d::evaluate (TinyVector<double,2> r, double &val,$/;"	f	class:qmcplusplus::UBsplineClass_2d_d
evaluate	legacy/EinsplineWrapper.cpp	/^UBsplineClass_2d_d::evaluate (TinyVector<double,2> r,$/;"	f	class:qmcplusplus::UBsplineClass_2d_d
evaluate	legacy/EinsplineWrapper.cpp	/^UBsplineClass_2d_z::evaluate (TinyVector<double,2> r, std::complex<double> &val,$/;"	f	class:qmcplusplus::UBsplineClass_2d_z
evaluate	legacy/EinsplineWrapper.cpp	/^UBsplineClass_2d_z::evaluate (TinyVector<double,2> r,$/;"	f	class:qmcplusplus::UBsplineClass_2d_z
evaluateAll	Experimental/PlaneWaveBasis.h	/^  evaluateAll(const ParticleSet& P, int first, int last)$/;"	f	class:qmcplusplus::PlaneWaveBasis
evaluateAll	Fermion/BFsplineFunctor.h	/^  inline void evaluateAll(real_type r, real_type rinv)$/;"	f	struct:qmcplusplus::BFsplineFunctor
evaluateAll	Fermion/DiracDeterminantT.h	/^  void evaluateAll(ParticleSet& P)$/;"	f	class:qmcplusplus::DiracDeterminantT
evaluateAll	Jastrow/BesselZeroFunctor.h	/^  inline void evaluateAll(real_type r, real_type rinv)$/;"	f	struct:qmcplusplus::BesselZero
evaluateAll	Jastrow/BsplineFunctor.h	/^  inline void evaluateAll(real_type r, real_type rinv)$/;"	f	struct:qmcplusplus::BsplineFunctor
evaluateAll	Jastrow/CubicBsplineGroup.h	/^  inline value_type evaluateAll(point_type x, point_type xin)$/;"	f	class:qmcplusplus::CubicBsplineGroup
evaluateAll	Jastrow/SplineFunctors.h	/^  inline real_type evaluateAll(real_type r, real_type rinv)$/;"	f	struct:qmcplusplus::CubicSplineSingle
evaluateAll	MolecularOrbitals/NGOBuilder.h	/^  inline value_type evaluateAll(real_type r, real_type rinv)$/;"	f	struct:qmcplusplus::NGOrbital
evaluateAll	PlaneWave/PWBasis.h	/^  evaluateAll(const ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::PWBasis
evaluateAllForPtclMove	Experimental/CorrectingOrbitalBasisSet.h	/^  evaluateAllForPtclMove(const ParticleSet& P, int iat)$/;"	f	struct:qmcplusplus::CorrectingOrbitalBasisSet
evaluateAllForPtclMove	Fermion/MultiDiracDeterminantBase.h	/^  evaluateAllForPtclMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
evaluateAllForPtclMove	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^void MultiDiracDeterminantBase::evaluateAllForPtclMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
evaluateAllForPtclMove	Fermion/SPOSetProxyForMSD.cpp	/^void SPOSetProxyForMSD::evaluateAllForPtclMove(const ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::SPOSetProxyForMSD
evaluateAllForPtclMove	LocalizedBasisSet.h	/^  evaluateAllForPtclMove(const ParticleSet& P, int iat)$/;"	f	struct:qmcplusplus::LocalizedBasisSet
evaluateAllForPtclMove	SparseLocalizedBasisSet.h	/^  evaluateAllForPtclMove(const ParticleSet& P, int iat)$/;"	f	struct:qmcplusplus::SparseLocalizedBasisSet
evaluateAllForPtclMove	SphericalBasisSet.h	/^  evaluateAllForPtclMove(int source, int iat,  int offset, ValueVector_t& y,$/;"	f	struct:qmcplusplus::SphericalBasisSet
evaluateAllForPtclMove	SphericalBasisSet.h	/^  evaluateAllForPtclMove(int source, int iat, int offset, ValueVector_t& psi, GradVector_t& dpsi, HessVector_t& grad_grad_Phi)$/;"	f	struct:qmcplusplus::SphericalBasisSet
evaluateAllForPtclMove	Spline3D/SplineBasisSet.h	/^  void evaluateAllForPtclMove(const ParticleSet& e, int iat)$/;"	f	class:qmcplusplus::SplineBasisSet
evaluateBasis	HarmonicOscillator/SHOSet.cpp	/^  void SHOSet::evaluateBasis($/;"	f	class:qmcplusplus::SHOSet
evaluateBasis	OptimizableSPOSet.cpp	/^OptimizableSPOSet::evaluateBasis (const ParticleSet &P, int first, int last,$/;"	f	class:qmcplusplus::OptimizableSPOSet
evaluateBasis	SPOSetBase.cpp	/^void SPOSetBase::evaluateBasis (const ParticleSet &P, int first, int last,$/;"	f	class:qmcplusplus::SPOSetBase
evaluateBasis	SphericalOrbitalSet.h	/^  evaluateBasis(int c, int iat, int offset, VV& psi, GV& dpsi, VV& d2psi)$/;"	f	struct:qmcplusplus::SphericalOrbitalSet
evaluateBmatOnly	Fermion/BackflowTransformation.h	/^  evaluateBmatOnly(const ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::BackflowTransformation
evaluateBmatOnly	Fermion/Backflow_eI.h	/^  evaluateBmatOnly(const ParticleSet& P,GradMatrix_t& Bmat_full)$/;"	f	class:qmcplusplus::Backflow_eI
evaluateBmatOnly	Fermion/Backflow_eI_spin.h	/^  evaluateBmatOnly(const ParticleSet& P,GradMatrix_t& Bmat_full)$/;"	f	class:qmcplusplus::Backflow_eI_spin
evaluateBmatOnly	Fermion/Backflow_ee.h	/^  evaluateBmatOnly(const ParticleSet& P,GradMatrix_t& Bmat_full)$/;"	f	class:qmcplusplus::Backflow_ee
evaluateBmatOnly	Fermion/Backflow_ee_kSpace.h	/^  evaluateBmatOnly(const ParticleSet& P,GradMatrix_t& Bmat_full)$/;"	f	class:qmcplusplus::Backflow_ee_kSpace
evaluateCore	MuffinTin.cpp	/^MuffinTinClass::evaluateCore (TinyVector<double,3> r,$/;"	f	class:qmcplusplus::MuffinTinClass
evaluateDeltaLog	TrialWaveFunction.cpp	/^TrialWaveFunction::RealType TrialWaveFunction::evaluateDeltaLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::TrialWaveFunction
evaluateDeltaLog	TrialWaveFunction.cpp	/^TrialWaveFunction::RealType TrialWaveFunction::evaluateDeltaLog(ParticleSet& P, bool recomputeall)$/;"	f	class:qmcplusplus::TrialWaveFunction
evaluateDeltaLog	TrialWaveFunction.cpp	/^TrialWaveFunction::evaluateDeltaLog(ParticleSet& P$/;"	f	class:qmcplusplus::TrialWaveFunction
evaluateDeltaLog	TrialWaveFunction_CUDA.cpp	/^TrialWaveFunction::evaluateDeltaLog (MCWalkerConfiguration &W,$/;"	f	class:qmcplusplus::TrialWaveFunction
evaluateDeltaLog	TrialWaveFunction_CUDA.cpp	/^TrialWaveFunction::evaluateDeltaLog(MCWalkerConfiguration &W,$/;"	f	class:qmcplusplus::TrialWaveFunction
evaluateDerivRatios	DiffOrbitalBase.cpp	/^void DiffOrbitalBase::evaluateDerivRatios(ParticleSet& VP, const opt_variables_type& optvars,$/;"	f	class:qmcplusplus::DiffOrbitalBase
evaluateDerivRatios	FDLRWfn.h	/^    void evaluateDerivRatios(VirtualParticleSet& VP, const opt_variables_type& optvars,$/;"	f	class:qmcplusplus::FDLRWfn
evaluateDerivRatios	Jastrow/OneBodyJastrowOrbital.h	/^  inline void evaluateDerivRatios(VirtualParticleSet& VP, const opt_variables_type& optvars,$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
evaluateDerivRatios	OrbitalBase.cpp	/^void OrbitalBase::evaluateDerivRatios(VirtualParticleSet& VP, const opt_variables_type& optvars,$/;"	f	class:qmcplusplus::OrbitalBase
evaluateDerivRatios	TrialWaveFunction.cpp	/^void TrialWaveFunction::evaluateDerivRatios(VirtualParticleSet& VP, const opt_variables_type& optvars,$/;"	f	class:qmcplusplus::TrialWaveFunction
evaluateDerivatives	AFMSPOSet.cpp	/^AFMSPOSet::evaluateDerivatives$/;"	f	class:qmcplusplus::AFMSPOSet
evaluateDerivatives	DiffOrbitalBase.cpp	/^void AnalyticDiffOrbital::evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::AnalyticDiffOrbital
evaluateDerivatives	DiffOrbitalBase.cpp	/^void NumericalDiffOrbital::evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::NumericalDiffOrbital
evaluateDerivatives	FDLRWfn.h	/^    void evaluateDerivatives(ParticleSet& P, const opt_variables_type& optvars,$/;"	f	class:qmcplusplus::FDLRWfn
evaluateDerivatives	Fermion/BFsplineFunctor.h	/^  evaluateDerivatives(real_type r, std::vector<TinyVector<real_type,3> >& derivs)$/;"	f	struct:qmcplusplus::BFsplineFunctor
evaluateDerivatives	Fermion/BackflowTransformation.h	/^  evaluateDerivatives(const ParticleSet& P)$/;"	f	class:qmcplusplus::BackflowTransformation
evaluateDerivatives	Fermion/DiracDeterminantAFM.cpp	/^DiracDeterminantAFM::evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::DiracDeterminantAFM
evaluateDerivatives	Fermion/DiracDeterminantBase.cpp	/^DiracDeterminantBase::evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::DiracDeterminantBase
evaluateDerivatives	Fermion/DiracDeterminantBase.h	/^  virtual void evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::DiracDeterminantBase
evaluateDerivatives	Fermion/DiracDeterminantOpt.cpp	/^DiracDeterminantOpt::evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::DiracDeterminantOpt
evaluateDerivatives	Fermion/DiracDeterminantWithBackflow.cpp	/^DiracDeterminantWithBackflow::evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
evaluateDerivatives	Fermion/DiracDeterminantWithBackflow.cpp	/^void DiracDeterminantWithBackflow::evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
evaluateDerivatives	Fermion/GaussianFunctor.h	/^  inline bool evaluateDerivatives (real_type r, std::vector<qmcplusplus::TinyVector<real_type,3> >& derivs)$/;"	f	class:qmcplusplus::GaussianFunctor
evaluateDerivatives	Fermion/MultiSlaterDeterminant.cpp	/^void MultiSlaterDeterminant::evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::MultiSlaterDeterminant
evaluateDerivatives	Fermion/MultiSlaterDeterminantFast.cpp	/^void MultiSlaterDeterminantFast::evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
evaluateDerivatives	Fermion/MultiSlaterDeterminantWithBackflow.cpp	/^void MultiSlaterDeterminantWithBackflow::evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
evaluateDerivatives	Fermion/SlaterDet.h	/^  void evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::SlaterDet
evaluateDerivatives	Fermion/SlaterDetOpt.cpp	/^void SlaterDetOpt::evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::SlaterDetOpt
evaluateDerivatives	Fermion/SlaterDetWithBackflow.cpp	/^void SlaterDetWithBackflow::evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
evaluateDerivatives	Jastrow/BesselZeroFunctor.h	/^  evaluateDerivatives (real_type r, std::vector<TinyVector<real_type,3> >& derivs)$/;"	f	struct:qmcplusplus::BesselZero
evaluateDerivatives	Jastrow/BsplineFunctor.h	/^  evaluateDerivatives(real_type r, std::vector<TinyVector<real_type,3> >& derivs)$/;"	f	struct:qmcplusplus::BsplineFunctor
evaluateDerivatives	Jastrow/BsplineFunctor.h	/^  inline bool evaluateDerivatives(real_type r, std::vector<real_type>& derivs)$/;"	f	struct:qmcplusplus::BsplineFunctor
evaluateDerivatives	Jastrow/BsplineFunctor3D.h	/^  evaluateDerivatives (real_type r_12, real_type r_1I, real_type r_2I,$/;"	f	struct:qmcplusplus::BsplineFunctor3D
evaluateDerivatives	Jastrow/BsplineFunctor3D.h	/^  evaluateDerivatives(real_type r, std::vector<TinyVector<real_type,3> >& derivs)$/;"	f	struct:qmcplusplus::BsplineFunctor3D
evaluateDerivatives	Jastrow/DiffOneBodyJastrowOrbital.h	/^  void evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::DiffOneBodyJastrowOrbital
evaluateDerivatives	Jastrow/DiffOneBodySpinJastrowOrbital.h	/^  void evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
evaluateDerivatives	Jastrow/DiffTwoBodyJastrowOrbital.h	/^  void evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::DiffTwoBodyJastrowOrbital
evaluateDerivatives	Jastrow/GaussianFunctor.h	/^  evaluateDerivatives(real_type r, std::vector<TinyVector<real_type,3> >& derivs)$/;"	f	struct:qmcplusplus::GaussianFunctor
evaluateDerivatives	Jastrow/OneBodyJastrowOrbitalBspline.cpp	/^OneBodyJastrowOrbitalBspline::evaluateDerivatives$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
evaluateDerivatives	Jastrow/OpenGaussianSlaterFunctor.h	/^  evaluateDerivatives(real_type r, std::vector<TinyVector<real_type,3> >& derivs)$/;"	f	struct:qmcplusplus::OpenGaussianSlaterFunctor
evaluateDerivatives	Jastrow/PadeFunctors.h	/^  inline bool evaluateDerivatives (real_type r, std::vector<TinyVector<real_type,3> >& derivs)$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
evaluateDerivatives	Jastrow/PadeFunctors.h	/^  inline bool evaluateDerivatives (real_type r, std::vector<TinyVector<real_type,3> >& derivs)$/;"	f	struct:qmcplusplus::PadeFunctor
evaluateDerivatives	Jastrow/PadeFunctors.h	/^  inline bool evaluateDerivatives (real_type r, std::vector<TinyVector<real_type,3> >& derivs)$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
evaluateDerivatives	Jastrow/PadeFunctors.h	/^  inline bool evaluateDerivatives (real_type r, std::vector<real_type>& derivs)$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
evaluateDerivatives	Jastrow/PadeFunctors.h	/^  inline bool evaluateDerivatives (real_type r, std::vector<real_type>& derivs)$/;"	f	struct:qmcplusplus::PadeFunctor
evaluateDerivatives	Jastrow/PadeFunctors.h	/^  inline bool evaluateDerivatives (real_type r, std::vector<real_type>& derivs)$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
evaluateDerivatives	Jastrow/PolynomialFunctor3D.h	/^  evaluateDerivatives (real_type r_12, real_type r_1I, real_type r_2I,$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
evaluateDerivatives	Jastrow/TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::evaluateDerivatives$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
evaluateDerivatives	Jastrow/WMFunctor.h	/^  evaluateDerivatives(real_type r, std::vector<TinyVector<real_type,3> >& derivs)$/;"	f	struct:qmcplusplus::WMFunctorSet
evaluateDerivatives	Jastrow/eeI_JastrowOrbital.h	/^  void evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
evaluateDerivatives	Jastrow/kSpaceJastrow.cpp	/^void kSpaceJastrow::evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::kSpaceJastrow
evaluateDerivatives	LCOrbitalSetOpt.h	/^    void evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
evaluateDerivatives	OptimizableSPOSet.cpp	/^OptimizableSPOSet::evaluateDerivatives$/;"	f	class:qmcplusplus::OptimizableSPOSet
evaluateDerivatives	OrbitalBase.cpp	/^void OrbitalBase::evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::OrbitalBase
evaluateDerivatives	OrbitalBase.h	/^  evaluateDerivatives (MCWalkerConfiguration &W,$/;"	f	struct:qmcplusplus::OrbitalBase
evaluateDerivatives	SPOSetBase.h	/^  virtual void evaluateDerivatives$/;"	f	class:qmcplusplus::SPOSetBase
evaluateDerivatives	TrialWaveFunction.cpp	/^void TrialWaveFunction::evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::TrialWaveFunction
evaluateDerivatives	TrialWaveFunction_CUDA.cpp	/^TrialWaveFunction::evaluateDerivatives (MCWalkerConfiguration &W,$/;"	f	class:qmcplusplus::TrialWaveFunction
evaluateDerivativesFD	Jastrow/PolynomialFunctor3D.h	/^  evaluateDerivativesFD (real_type r_12, real_type r_1I, real_type r_2I,$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
evaluateDetsAndGradsForPtclMove	Fermion/MultiDiracDeterminantBase.h	/^  evaluateDetsAndGradsForPtclMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
evaluateDetsAndGradsForPtclMove	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^void  MultiDiracDeterminantBase::evaluateDetsAndGradsForPtclMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
evaluateDetsForPtclMove	Fermion/MultiDiracDeterminantBase.h	/^  evaluateDetsForPtclMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
evaluateDetsForPtclMove	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^void MultiDiracDeterminantBase::evaluateDetsForPtclMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
evaluateFD	MuffinTin.cpp	/^MuffinTinClass::evaluateFD (TinyVector<double,3> r,$/;"	f	class:qmcplusplus::MuffinTinClass
evaluateForDeriv	AFMSPOSet.cpp	/^void AFMSPOSet::evaluateForDeriv (const ParticleSet& P, int first, int last,$/;"	f	class:qmcplusplus::AFMSPOSet
evaluateForDeriv	HarmonicOscillator/SHOSet.cpp	/^  void SHOSet::evaluateForDeriv($/;"	f	class:qmcplusplus::SHOSet
evaluateForDeriv	SPOSetBase.cpp	/^void SPOSetBase::evaluateForDeriv (const ParticleSet &P, int first, int last,$/;"	f	class:qmcplusplus::SPOSetBase
evaluateForPtclMove	Experimental/CorrectingOrbitalBasisSet.h	/^  evaluateForPtclMove(const ParticleSet& P, int iat)$/;"	f	struct:qmcplusplus::CorrectingOrbitalBasisSet
evaluateForPtclMove	Fermion/SPOSetProxyForMSD.cpp	/^void SPOSetProxyForMSD::evaluateForPtclMove(const ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::SPOSetProxyForMSD
evaluateForPtclMove	LocalizedBasisSet.h	/^  evaluateForPtclMove(const ParticleSet& P, int iat)$/;"	f	struct:qmcplusplus::LocalizedBasisSet
evaluateForPtclMove	SparseLocalizedBasisSet.h	/^  evaluateForPtclMove(const ParticleSet& P, int iat)$/;"	f	struct:qmcplusplus::SparseLocalizedBasisSet
evaluateForPtclMove	SphericalBasisSet.h	/^  evaluateForPtclMove(int source, int iat,  int offset, ValueVector_t& y)$/;"	f	struct:qmcplusplus::SphericalBasisSet
evaluateForPtclMove	Spline3D/SplineBasisSet.h	/^  void evaluateForPtclMove(const ParticleSet& e, int iat)$/;"	f	class:qmcplusplus::SplineBasisSet
evaluateForPtclMoveWithHessian	Experimental/CorrectingOrbitalBasisSet.h	/^  evaluateForPtclMoveWithHessian(const ParticleSet& P, int iat)$/;"	f	struct:qmcplusplus::CorrectingOrbitalBasisSet
evaluateForPtclMoveWithHessian	LocalizedBasisSet.h	/^  evaluateForPtclMoveWithHessian(const ParticleSet& P, int iat)$/;"	f	struct:qmcplusplus::LocalizedBasisSet
evaluateForPtclMoveWithHessian	SparseLocalizedBasisSet.h	/^  evaluateForPtclMoveWithHessian(const ParticleSet& P, int iat)$/;"	f	struct:qmcplusplus::SparseLocalizedBasisSet
evaluateForWalkerMove	Experimental/CorrectingOrbitalBasisSet.h	/^  evaluateForWalkerMove(const ParticleSet& P)$/;"	f	struct:qmcplusplus::CorrectingOrbitalBasisSet
evaluateForWalkerMove	Experimental/CorrectingOrbitalBasisSet.h	/^  evaluateForWalkerMove(const ParticleSet& P, int iat)$/;"	f	struct:qmcplusplus::CorrectingOrbitalBasisSet
evaluateForWalkerMove	Fermion/MultiDiracDeterminantBase.cpp	/^void MultiDiracDeterminantBase::evaluateForWalkerMove(ParticleSet& P, bool fromScratch)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
evaluateForWalkerMove	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^void MultiDiracDeterminantBase::evaluateForWalkerMove(ParticleSet& P, bool fromScratch)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
evaluateForWalkerMove	Fermion/SPOSetProxyForMSD.cpp	/^void SPOSetProxyForMSD::evaluateForWalkerMove(const ParticleSet& P, int first, int last)$/;"	f	class:qmcplusplus::SPOSetProxyForMSD
evaluateForWalkerMove	LocalizedBasisSet.h	/^  evaluateForWalkerMove(const ParticleSet& P)$/;"	f	struct:qmcplusplus::LocalizedBasisSet
evaluateForWalkerMove	LocalizedBasisSet.h	/^  evaluateForWalkerMove(const ParticleSet& P, int iat)$/;"	f	struct:qmcplusplus::LocalizedBasisSet
evaluateForWalkerMove	SparseLocalizedBasisSet.h	/^  evaluateForWalkerMove(const ParticleSet& P)$/;"	f	struct:qmcplusplus::SparseLocalizedBasisSet
evaluateForWalkerMove	SparseLocalizedBasisSet.h	/^  evaluateForWalkerMove(const ParticleSet& P, int iat)$/;"	f	struct:qmcplusplus::SparseLocalizedBasisSet
evaluateForWalkerMove	SphericalBasisSet.h	/^  evaluateForWalkerMove(int c, int iat, int offset, Matrix<ValueType>& temp)$/;"	f	struct:qmcplusplus::SphericalBasisSet
evaluateForWalkerMove	SphericalBasisSet.h	/^  evaluateForWalkerMove(int c, int iat, int offset, ValueVector_t& psi, GradVector_t& dpsi, HessVector_t& grad_grad_Phi)$/;"	f	struct:qmcplusplus::SphericalBasisSet
evaluateForWalkerMove	SphericalBasisSet.h	/^  evaluateForWalkerMove(int c, int iat, int offset, ValueVector_t& psi, GradVector_t& dpsi, HessVector_t& grad_grad_Phi, GGGVector_t& grad_grad_grad_Phi)$/;"	f	struct:qmcplusplus::SphericalBasisSet
evaluateForWalkerMove	SphericalBasisSet.h	/^  evaluateForWalkerMove(int c, int iat, int offset, ValueVector_t& psi, GradVector_t& dpsi, ValueVector_t& d2psi)$/;"	f	struct:qmcplusplus::SphericalBasisSet
evaluateForWalkerMove	SphericalBasisSet.h	/^  evaluateForWalkerMove(int source, int first, int nptcl, int offset, ValueMatrix_t& y, GradMatrix_t& dy, ValueMatrix_t& d2y)$/;"	f	struct:qmcplusplus::SphericalBasisSet
evaluateForWalkerMove	Spline3D/SplineBasisSet.h	/^  void evaluateForWalkerMove(const ParticleSet& e)$/;"	f	class:qmcplusplus::SplineBasisSet
evaluateForWalkerMove	Spline3D/SplineBasisSet.h	/^  void evaluateForWalkerMove(const ParticleSet& e, int iat)$/;"	f	class:qmcplusplus::SplineBasisSet
evaluateForWalkerMoveWithBF	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^void MultiDiracDeterminantBase::evaluateForWalkerMoveWithBF(ParticleSet& P, bool fromScratch)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
evaluateForWalkerMoveWithHessian	Fermion/SPOSetProxyForMSD.cpp	/^void SPOSetProxyForMSD::evaluateForWalkerMoveWithHessian(const ParticleSet& P, int first, int last)$/;"	f	class:qmcplusplus::SPOSetProxyForMSD
evaluateForWalkerMoveWithThirdDeriv	Fermion/SPOSetProxyForMSD.cpp	/^void SPOSetProxyForMSD::evaluateForWalkerMoveWithThirdDeriv(const ParticleSet& P, int first, int last)$/;"	f	class:qmcplusplus::SPOSetProxyForMSD
evaluateGradDerivatives	Fermion/SlaterDetOpt.cpp	/^void SlaterDetOpt::evaluateGradDerivatives(const ParticleSet::ParticleGradient_t& G_in,$/;"	f	class:qmcplusplus::SlaterDetOpt
evaluateGradDerivatives	LCOrbitalSetOpt.h	/^    void evaluateGradDerivatives(const ParticleSet::ParticleGradient_t& G_in,$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
evaluateGradDerivatives	OrbitalBase.h	/^  virtual void evaluateGradDerivatives(const ParticleSet::ParticleGradient_t& G_in,$/;"	f	struct:qmcplusplus::OrbitalBase
evaluateGradDerivatives	TrialWaveFunction.cpp	/^void TrialWaveFunction::evaluateGradDerivatives(const ParticleSet::ParticleGradient_t& G_in,$/;"	f	class:qmcplusplus::TrialWaveFunction
evaluateGradSource	EinsplineSet.cpp	/^EinsplineSetExtended<StorageType>::evaluateGradSource$/;"	f	class:qmcplusplus::EinsplineSetExtended
evaluateGradSource	EinsplineSet.cpp	/^EinsplineSetExtended<double>::evaluateGradSource$/;"	f	class:qmcplusplus::EinsplineSetExtended
evaluateGradSource	HarmonicOscillator/SHOSet.cpp	/^  void SHOSet::evaluateGradSource($/;"	f	class:qmcplusplus::SHOSet
evaluateGradSource	SPOSetBase.cpp	/^void SPOSetBase::evaluateGradSource (const ParticleSet &P$/;"	f	class:qmcplusplus::SPOSetBase
evaluateGradSource	SPOSetBase.cpp	/^void SPOSetBase::evaluateGradSource (const ParticleSet &P, int first, int last,$/;"	f	class:qmcplusplus::SPOSetBase
evaluateGrads	Fermion/MultiDiracDeterminantBase.h	/^  evaluateGrads(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
evaluateGrads	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^void  MultiDiracDeterminantBase::evaluateGrads(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
evaluateHessian	Fermion/DiracDeterminantBase.cpp	/^void DiracDeterminantBase::evaluateHessian(ParticleSet& P, HessVector_t& grad_grad_psi)$/;"	f	class:qmcplusplus::DiracDeterminantBase
evaluateHessian	Fermion/SlaterDet.cpp	/^void SlaterDet::evaluateHessian(ParticleSet & P, HessVector_t& grad_grad_psi)$/;"	f	class:qmcplusplus::SlaterDet
evaluateHessian	Jastrow/OneBodyJastrowOrbital.h	/^  void evaluateHessian(ParticleSet& P, HessVector_t& grad_grad_psi)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
evaluateHessian	Jastrow/TwoBodyJastrowOrbital.h	/^  void evaluateHessian(ParticleSet& P, HessVector_t& grad_grad_psi)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
evaluateHessian	OrbitalBase.h	/^  virtual void evaluateHessian(ParticleSet& P, HessVector_t& grad_grad_psi_all)$/;"	f	struct:qmcplusplus::OrbitalBase
evaluateHessian	TrialWaveFunction.cpp	/^void TrialWaveFunction::evaluateHessian(ParticleSet & P, HessVector_t& grad_grad_psi)$/;"	f	class:qmcplusplus::TrialWaveFunction
evaluateLog	AGPDeterminant.cpp	/^AGPDeterminant::ValueType AGPDeterminant::evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::AGPDeterminant
evaluateLog	AGPDeterminant.cpp	/^AGPDeterminant::evaluateLog(ParticleSet& P, ParticleSet::ParticleGradient_t& G, ParticleSet::ParticleLaplacian_t& L)$/;"	f	class:qmcplusplus::AGPDeterminant
evaluateLog	ConstantOrbital.h	/^  evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::ConstantOrbital
evaluateLog	ConstantOrbital.h	/^  virtual RealType evaluateLog(ParticleSet& P,BufferType& buf)$/;"	f	class:qmcplusplus::ConstantOrbital
evaluateLog	Experimental/DiracDeterminant.h	/^  RealType evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::DiracDeterminant
evaluateLog	Experimental/DiracDeterminant.h	/^  evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::DiracDeterminant
evaluateLog	Experimental/SlaterDeterminant.h	/^  RealType evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::SlaterDeterminant
evaluateLog	Experimental/SlaterDeterminant.h	/^  evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::SlaterDeterminant
evaluateLog	Experimental/TwoBodyJastrowFunction.Shared.h	/^  inline ValueType evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::TwoBodyJastrow
evaluateLog	Experimental/TwoBodyJastrowFunction.h	/^  ValueType evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::TwoBodyJastrow
evaluateLog	FDLRWfn.h	/^    RealType evaluateLog(ParticleSet& P, BufferType& buf) {$/;"	f	class:qmcplusplus::FDLRWfn
evaluateLog	FDLRWfn.h	/^    RealType evaluateLog(ParticleSet& P, ParticleSet::ParticleGradient_t& G, ParticleSet::ParticleLaplacian_t& L)$/;"	f	class:qmcplusplus::FDLRWfn
evaluateLog	Fermion/DiracDeterminantBase.cpp	/^DiracDeterminantBase::evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::DiracDeterminantBase
evaluateLog	Fermion/DiracDeterminantBase.cpp	/^DiracDeterminantBase::evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::DiracDeterminantBase
evaluateLog	Fermion/DiracDeterminantIterative.cpp	/^DiracDeterminantIterative::evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::DiracDeterminantIterative
evaluateLog	Fermion/DiracDeterminantIterative.cpp	/^DiracDeterminantIterative::evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::DiracDeterminantIterative
evaluateLog	Fermion/DiracDeterminantTruncation.cpp	/^DiracDeterminantTruncation::evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::DiracDeterminantTruncation
evaluateLog	Fermion/DiracDeterminantTruncation.cpp	/^DiracDeterminantTruncation::evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::DiracDeterminantTruncation
evaluateLog	Fermion/DiracDeterminantWithBackflow.cpp	/^DiracDeterminantWithBackflow::evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
evaluateLog	Fermion/DiracDeterminantWithBackflow.cpp	/^DiracDeterminantWithBackflow::evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
evaluateLog	Fermion/MultiDiracDeterminantBase.cpp	/^MultiDiracDeterminantBase::evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
evaluateLog	Fermion/MultiDiracDeterminantBase.h	/^  RealType evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
evaluateLog	Fermion/MultiDiracDeterminantBase_help.cpp	/^MultiDiracDeterminantBase::evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:MultiDiracDeterminantBase
evaluateLog	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^MultiDiracDeterminantBase::evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
evaluateLog	Fermion/MultiDiracDeterminantWithBackflow.h	/^  RealType evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
evaluateLog	Fermion/MultiSlaterDeterminant.cpp	/^OrbitalBase::RealType MultiSlaterDeterminant::evaluateLog(ParticleSet& P$/;"	f	class:qmcplusplus::MultiSlaterDeterminant
evaluateLog	Fermion/MultiSlaterDeterminant.cpp	/^OrbitalBase::RealType MultiSlaterDeterminant::evaluateLog(ParticleSet& P,BufferType& buf)$/;"	f	class:qmcplusplus::MultiSlaterDeterminant
evaluateLog	Fermion/MultiSlaterDeterminantFast.cpp	/^OrbitalBase::RealType MultiSlaterDeterminantFast::evaluateLog(ParticleSet& P$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
evaluateLog	Fermion/MultiSlaterDeterminantFast.cpp	/^OrbitalBase::RealType MultiSlaterDeterminantFast::evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
evaluateLog	Fermion/MultiSlaterDeterminantFast.cpp	/^OrbitalBase::RealType MultiSlaterDeterminantFast::evaluateLog(ParticleSet& P,BufferType& buf)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
evaluateLog	Fermion/MultiSlaterDeterminantWithBackflow.cpp	/^OrbitalBase::RealType MultiSlaterDeterminantWithBackflow::evaluateLog(ParticleSet& P$/;"	f	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
evaluateLog	Fermion/MultiSlaterDeterminantWithBackflow.cpp	/^OrbitalBase::RealType MultiSlaterDeterminantWithBackflow::evaluateLog(ParticleSet& P,BufferType& buf)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
evaluateLog	Fermion/RNDiracDeterminantBase.cpp	/^RNDiracDeterminantBase::evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::RNDiracDeterminantBase
evaluateLog	Fermion/RNDiracDeterminantBase.cpp	/^RNDiracDeterminantBase::evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::RNDiracDeterminantBase
evaluateLog	Fermion/RNDiracDeterminantBaseAlternate.cpp	/^RNDiracDeterminantBaseAlternate::evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
evaluateLog	Fermion/RNDiracDeterminantBaseAlternate.cpp	/^RNDiracDeterminantBaseAlternate::evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
evaluateLog	Fermion/SlaterDet.cpp	/^SlaterDet::RealType SlaterDet::evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::SlaterDet
evaluateLog	Fermion/SlaterDetOpt.cpp	/^OrbitalBase::RealType SlaterDetOpt::evaluateLog(ParticleSet& P, ParticleSet::ParticleGradient_t& G, ParticleSet::ParticleLaplacian_t& L) {$/;"	f	class:qmcplusplus::SlaterDetOpt
evaluateLog	Fermion/SlaterDetOpt.cpp	/^OrbitalBase::RealType SlaterDetOpt::evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::SlaterDetOpt
evaluateLog	Fermion/SlaterDetOpt.cpp	/^OrbitalBase::RealType SlaterDetOpt::evaluateLog(ParticleSet& P,BufferType& buf) {$/;"	f	class:qmcplusplus::SlaterDetOpt
evaluateLog	Fermion/SlaterDetWithBackflow.cpp	/^SlaterDetWithBackflow::evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
evaluateLog	Fermion/SlaterDetWithBackflow.cpp	/^SlaterDetWithBackflow::evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
evaluateLog	IonOrbital.cpp	/^IonOrbital::evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::IonOrbital
evaluateLog	IonOrbital.cpp	/^IonOrbital::evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::IonOrbital
evaluateLog	Jastrow/LRTwoBodyJastrow.cpp	/^LRTwoBodyJastrow::evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
evaluateLog	Jastrow/LRTwoBodyJastrow.cpp	/^LRTwoBodyJastrow::evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
evaluateLog	Jastrow/OneBodyJastrowOrbital.h	/^  RealType evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
evaluateLog	Jastrow/OneBodyJastrowOrbital.h	/^  inline RealType evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
evaluateLog	Jastrow/OneBodySpinJastrowOrbital.h	/^  RealType evaluateLog(ParticleSet& P$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
evaluateLog	Jastrow/OneBodySpinJastrowOrbital.h	/^  inline RealType evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
evaluateLog	Jastrow/PolarizedJastrow.h	/^  ValueType evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::PolarizedJastrow
evaluateLog	Jastrow/RPAJastrow.cpp	/^RPAJastrow::evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::RPAJastrow
evaluateLog	Jastrow/RPAJastrow.cpp	/^RPAJastrow::evaluateLog(ParticleSet& P,BufferType& buf)$/;"	f	class:qmcplusplus::RPAJastrow
evaluateLog	Jastrow/ThreeBodyBlockSparse.cpp	/^ThreeBodyBlockSparse::evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
evaluateLog	Jastrow/ThreeBodyBlockSparse.cpp	/^ThreeBodyBlockSparse::evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
evaluateLog	Jastrow/ThreeBodyGeminal.cpp	/^ThreeBodyGeminal::evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
evaluateLog	Jastrow/ThreeBodyGeminal.cpp	/^ThreeBodyGeminal::evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::ThreeBodyGeminal
evaluateLog	Jastrow/ThreeBodyJastrowOrbital.h	/^  ValueType evaluateLog(ParticleSet& P, ParticleSet::ParticleGradient_t& G, ParticleSet::ParticleLaplacian_t& L)$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
evaluateLog	Jastrow/ThreeBodyPade.h	/^  ValueType evaluateLog(ParticleSet& P, ParticleSet::ParticleGradient_t& G, ParticleSet::ParticleLaplacian_t& L)$/;"	f	class:qmcplusplus::ThreeBodyPade
evaluateLog	Jastrow/TwoBodyJastrowOrbital.h	/^  RealType evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
evaluateLog	Jastrow/TwoBodyJastrowOrbital.h	/^  inline RealType evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
evaluateLog	Jastrow/eeI_JastrowOrbital.h	/^  RealType evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
evaluateLog	Jastrow/eeI_JastrowOrbital.h	/^  inline RealType evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
evaluateLog	Jastrow/kSpaceJastrow.cpp	/^kSpaceJastrow::evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::kSpaceJastrow
evaluateLog	Jastrow/kSpaceJastrow.cpp	/^kSpaceJastrow::evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::kSpaceJastrow
evaluateLog	LCOrbitalSetOpt.h	/^    RealType evaluateLog(ParticleSet& P, BufferType& buf) {$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
evaluateLog	LCOrbitalSetOpt.h	/^    RealType evaluateLog(ParticleSet& P, ParticleSet::ParticleGradient_t& G, ParticleSet::ParticleLaplacian_t& L) {$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
evaluateLog	LCOrbitalSetOpt.h	/^    RealType evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
evaluateLog	OrbitalBase.h	/^  evaluateLog(ParticleSet& P,$/;"	f	struct:qmcplusplus::OrbitalBase
evaluateLog	ProductOrbital.cpp	/^ProductOrbital::RealType ProductOrbital::evaluateLog(ParticleSet& P$/;"	f	class:qmcplusplus::ProductOrbital
evaluateLog	ProductOrbital.cpp	/^ProductOrbital::RealType ProductOrbital::evaluateLog(ParticleSet& P,BufferType& buf)$/;"	f	class:qmcplusplus::ProductOrbital
evaluateLog	TrialWaveFunction.cpp	/^TrialWaveFunction::evaluateLog(ParticleSet& P)$/;"	f	class:qmcplusplus::TrialWaveFunction
evaluateLog	TrialWaveFunction.cpp	/^TrialWaveFunction::evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::TrialWaveFunction
evaluateLog	TrialWaveFunction_CUDA.cpp	/^TrialWaveFunction::evaluateLog (MCWalkerConfiguration &W,$/;"	f	class:qmcplusplus::TrialWaveFunction
evaluateLogAndPhase	OrbitalSetTraits.h	/^evaluateLogAndPhase(const std::complex<T>& psi, T& phase)$/;"	f	namespace:qmcplusplus
evaluateLogAndPhase	OrbitalSetTraits.h	/^inline T evaluateLogAndPhase(const T psi, T& phase)$/;"	f	namespace:qmcplusplus
evaluateLogAndStore	AGPDeterminant.cpp	/^AGPDeterminant::evaluateLogAndStore(ParticleSet& P)$/;"	f	class:qmcplusplus::AGPDeterminant
evaluateLogAndStore	IonOrbital.cpp	/^IonOrbital::evaluateLogAndStore(ParticleSet& P,$/;"	f	class:qmcplusplus::IonOrbital
evaluateLogAndStore	Jastrow/OneBodyJastrowOrbital.h	/^  void evaluateLogAndStore(ParticleSet& P,$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
evaluateLogAndStore	Jastrow/OneBodySpinJastrowOrbital.h	/^  void evaluateLogAndStore(ParticleSet& P,$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
evaluateLogAndStore	Jastrow/ThreeBodyBlockSparse.cpp	/^ThreeBodyBlockSparse::evaluateLogAndStore(ParticleSet& P)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
evaluateLogAndStore	Jastrow/ThreeBodyGeminal.cpp	/^ThreeBodyGeminal::evaluateLogAndStore(ParticleSet& P)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
evaluateLogAndStore	Jastrow/TwoBodyJastrowOrbital.h	/^  inline void evaluateLogAndStore(ParticleSet& P,$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
evaluateLogAndStore	Jastrow/eeI_JastrowOrbital.h	/^  inline void evaluateLogAndStore(ParticleSet& P,$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
evaluateLogFDLR	FDLRWfn.h	/^    RealType evaluateLogFDLR(ParticleSet& P, ParticleSet::ParticleGradient_t& G, ParticleSet::ParticleLaplacian_t& L,$/;"	f	class:qmcplusplus::FDLRWfn
evaluateLogForDerivativeBuffer	Fermion/DiracDeterminantBase.cpp	/^DiracDeterminantBase::RealType DiracDeterminantBase::evaluateLogForDerivativeBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::DiracDeterminantBase
evaluateLogForDerivativeBuffer	Fermion/DiracDeterminantWithBackflow.cpp	/^DiracDeterminantWithBackflow::RealType DiracDeterminantWithBackflow::evaluateLogForDerivativeBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
evaluateLogFromDerivativeBuffer	Fermion/DiracDeterminantBase.cpp	/^DiracDeterminantBase::RealType DiracDeterminantBase::evaluateLogFromDerivativeBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::DiracDeterminantBase
evaluateLogFromDerivativeBuffer	Fermion/DiracDeterminantWithBackflow.cpp	/^DiracDeterminantWithBackflow::RealType DiracDeterminantWithBackflow::evaluateLogFromDerivativeBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
evaluateLogOnly	TrialWaveFunction.cpp	/^TrialWaveFunction::evaluateLogOnly(ParticleSet& P)$/;"	f	class:qmcplusplus::TrialWaveFunction
evaluateOptimizableLog	TrialWaveFunction_CUDA.cpp	/^TrialWaveFunction::evaluateOptimizableLog (MCWalkerConfiguration &W,$/;"	f	class:qmcplusplus::TrialWaveFunction
evaluatePbyP	Fermion/BackflowTransformation.h	/^  evaluatePbyP(const ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::BackflowTransformation
evaluatePbyP	Fermion/Backflow_eI.h	/^  evaluatePbyP(const ParticleSet& P, ParticleSet::ParticlePos_t& newQP$/;"	f	class:qmcplusplus::Backflow_eI
evaluatePbyP	Fermion/Backflow_eI.h	/^  evaluatePbyP(const ParticleSet& P, int iat$/;"	f	class:qmcplusplus::Backflow_eI
evaluatePbyP	Fermion/Backflow_eI.h	/^  evaluatePbyP(const ParticleSet& P, int iat, ParticleSet::ParticlePos_t& newQP$/;"	f	class:qmcplusplus::Backflow_eI
evaluatePbyP	Fermion/Backflow_eI.h	/^  evaluatePbyP(const ParticleSet& P, int iat, ParticleSet::ParticlePos_t& newQP)$/;"	f	class:qmcplusplus::Backflow_eI
evaluatePbyP	Fermion/Backflow_eI_spin.h	/^  evaluatePbyP(const ParticleSet& P, ParticleSet::ParticlePos_t& newQP$/;"	f	class:qmcplusplus::Backflow_eI_spin
evaluatePbyP	Fermion/Backflow_eI_spin.h	/^  evaluatePbyP(const ParticleSet& P, int iat$/;"	f	class:qmcplusplus::Backflow_eI_spin
evaluatePbyP	Fermion/Backflow_eI_spin.h	/^  evaluatePbyP(const ParticleSet& P, int iat, ParticleSet::ParticlePos_t& newQP$/;"	f	class:qmcplusplus::Backflow_eI_spin
evaluatePbyP	Fermion/Backflow_eI_spin.h	/^  evaluatePbyP(const ParticleSet& P, int iat, ParticleSet::ParticlePos_t& newQP)$/;"	f	class:qmcplusplus::Backflow_eI_spin
evaluatePbyP	Fermion/Backflow_ee.h	/^  evaluatePbyP(const ParticleSet& P, ParticleSet::ParticlePos_t& newQP$/;"	f	class:qmcplusplus::Backflow_ee
evaluatePbyP	Fermion/Backflow_ee.h	/^  evaluatePbyP(const ParticleSet& P, int iat, ParticleSet::ParticlePos_t& newQP$/;"	f	class:qmcplusplus::Backflow_ee
evaluatePbyP	Fermion/Backflow_ee.h	/^  evaluatePbyP(const ParticleSet& P, int iat, ParticleSet::ParticlePos_t& newQP)$/;"	f	class:qmcplusplus::Backflow_ee
evaluatePbyP	Fermion/Backflow_ee_kSpace.h	/^  evaluatePbyP(const ParticleSet& P, ParticleSet::ParticlePos_t& newQP$/;"	f	class:qmcplusplus::Backflow_ee_kSpace
evaluatePbyP	Fermion/Backflow_ee_kSpace.h	/^  evaluatePbyP(const ParticleSet& P, int iat, ParticleSet::ParticlePos_t& newQP$/;"	f	class:qmcplusplus::Backflow_ee_kSpace
evaluatePbyP	Fermion/Backflow_ee_kSpace.h	/^  evaluatePbyP(const ParticleSet& P, int iat, ParticleSet::ParticlePos_t& newQP)$/;"	f	class:qmcplusplus::Backflow_ee_kSpace
evaluatePbyPAll	Fermion/BackflowTransformation.h	/^  evaluatePbyPAll(const ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::BackflowTransformation
evaluatePbyPWithGrad	Fermion/BackflowTransformation.h	/^  evaluatePbyPWithGrad(const ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::BackflowTransformation
evaluatePhase	OrbitalSetTraits.h	/^inline double evaluatePhase(const double psi)$/;"	f	namespace:qmcplusplus
evaluatePhase	OrbitalSetTraits.h	/^inline double evaluatePhase(const std::complex<double>& psi)$/;"	f	namespace:qmcplusplus
evaluatePhase	OrbitalSetTraits.h	/^template<typename T> inline T evaluatePhase(T sign_v)$/;"	f	namespace:qmcplusplus
evaluatePhase	OrbitalSetTraits.h	/^template<typename T> inline T evaluatePhase(const std::complex<T>& psi)$/;"	f	namespace:qmcplusplus
evaluateRatios	Fermion/DiracDeterminantBase.cpp	/^void DiracDeterminantBase::evaluateRatios(VirtualParticleSet& VP, std::vector<ValueType>& ratios)$/;"	f	class:qmcplusplus::DiracDeterminantBase
evaluateRatios	Fermion/SlaterDet.h	/^  inline void evaluateRatios(VirtualParticleSet& VP, std::vector<ValueType>& ratios)$/;"	f	class:qmcplusplus::SlaterDet
evaluateRatios	Jastrow/OneBodyJastrowOrbital.h	/^  inline void evaluateRatios(VirtualParticleSet& VP, std::vector<ValueType>& ratios)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
evaluateRatios	Jastrow/OneBodySpinJastrowOrbital.h	/^  inline void evaluateRatios(VirtualParticleSet& VP, std::vector<ValueType>& ratios)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
evaluateRatios	Jastrow/TwoBodyJastrowOrbital.h	/^  inline void evaluateRatios(VirtualParticleSet& VP, std::vector<ValueType>& ratios)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
evaluateRatios	Jastrow/eeI_JastrowOrbital.h	/^  inline void evaluateRatios(VirtualParticleSet& VP, std::vector<ValueType>& ratios)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
evaluateRatios	OrbitalBase.cpp	/^void OrbitalBase::evaluateRatios(VirtualParticleSet& P, std::vector<ValueType>& ratios)$/;"	f	class:qmcplusplus::OrbitalBase
evaluateRatios	TrialWaveFunction.cpp	/^void TrialWaveFunction::evaluateRatios(VirtualParticleSet& VP, std::vector<RealType>& ratios)$/;"	f	class:qmcplusplus::TrialWaveFunction
evaluateSingle	Fermion/DiracDeterminantT.h	/^  void evaluateSingle(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::DiracDeterminantT
evaluateSingleAll	Fermion/DiracDeterminantT.h	/^  void evaluateSingleAll(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::DiracDeterminantT
evaluateThirdDeriv	Experimental/LCOrbitalSetWithCorrection.h	/^  void evaluateThirdDeriv(const ParticleSet& P, int first, int last$/;"	f	class:qmcplusplus::LCOrbitalSetWithCorrection
evaluateThirdDeriv	HarmonicOscillator/SHOSet.cpp	/^  void SHOSet::evaluateThirdDeriv($/;"	f	class:qmcplusplus::SHOSet
evaluateThirdDeriv	LCOrbitalSet.h	/^  void evaluateThirdDeriv(const ParticleSet& P, int first, int last$/;"	f	class:qmcplusplus::LCOrbitalSet
evaluateThirdDeriv	LCOrbitalSetOpt.h	/^    void evaluateThirdDeriv(const ParticleSet& P, int first, int last, GGGMatrix_t& grad_grad_grad_logdet) {$/;"	f	class:qmcplusplus::LCOrbitalSetOpt
evaluateThirdDeriv	SPOSetBase.cpp	/^void SPOSetBase::evaluateThirdDeriv(const ParticleSet& P, int first, int last,$/;"	f	class:qmcplusplus::SPOSetBase
evaluateThirdDerivOnly	Experimental/CorrectingOrbitalBasisSet.h	/^  evaluateThirdDerivOnly(const ParticleSet& P, int iat)$/;"	f	struct:qmcplusplus::CorrectingOrbitalBasisSet
evaluateThirdDerivOnly	LocalizedBasisSet.h	/^  evaluateThirdDerivOnly(const ParticleSet& P, int iat)$/;"	f	struct:qmcplusplus::LocalizedBasisSet
evaluateThirdDerivOnly	SparseLocalizedBasisSet.h	/^  void evaluateThirdDerivOnly(const ParticleSet& P, int iat)$/;"	f	struct:qmcplusplus::SparseLocalizedBasisSet
evaluateThirdDerivOnly	SphericalBasisSet.h	/^  evaluateThirdDerivOnly(int c, int iat, int offset, GGGVector_t& grad_grad_grad_Phi)$/;"	f	struct:qmcplusplus::SphericalBasisSet
evaluateValues	EinsplineAdoptor.h	/^  inline void evaluateValues(const ParticleSet& P, ValueMatrix_t& psiM)$/;"	f	struct:qmcplusplus::BsplineSet
evaluateValues	LCOrbitalSet.h	/^  void evaluateValues(const ParticleSet& P, ValueMatrix_t& psiM)$/;"	f	class:qmcplusplus::LCOrbitalSet
evaluateValues	LCOrbitalSetOpt.h	/^    void evaluateValues(const ParticleSet& P, ValueMatrix_t& psiM) {$/;"	f	class:qmcplusplus::LCOrbitalSetOpt
evaluateValues	LocalizedBasisSet.h	/^  evaluateValues(const ParticleSet& P,ValueMatrix_t& phiM)$/;"	f	struct:qmcplusplus::LocalizedBasisSet
evaluateValues	SPOSetBase.cpp	/^void SPOSetBase::evaluateValues(const ParticleSet& P, ValueMatrix_t& psiM)$/;"	f	class:qmcplusplus::SPOSetBase
evaluateValues	SphericalBasisSet.h	/^  void evaluateValues(const DistanceTableData* dt, int c, int offset, ValueMatrix_t& phiM)$/;"	f	struct:qmcplusplus::SphericalBasisSet
evaluateWithDerivatives	Fermion/Backflow_eI.h	/^  evaluateWithDerivatives(const ParticleSet& P, ParticleSet& QP, GradMatrix_t& Bmat_full, HessMatrix_t& Amat, GradMatrix_t& Cmat, GradMatrix_t& Ymat, HessArray_t& Xmat)$/;"	f	class:qmcplusplus::Backflow_eI
evaluateWithDerivatives	Fermion/Backflow_eI_spin.h	/^  evaluateWithDerivatives(const ParticleSet& P, ParticleSet& QP, GradMatrix_t& Bmat_full, HessMatrix_t& Amat, GradMatrix_t& Cmat, GradMatrix_t& Ymat, HessArray_t& Xmat)$/;"	f	class:qmcplusplus::Backflow_eI_spin
evaluateWithDerivatives	Fermion/Backflow_ee.h	/^  evaluateWithDerivatives(const ParticleSet& P, ParticleSet& QP, GradMatrix_t& Bmat_full, HessMatrix_t& Amat, GradMatrix_t& Cmat, GradMatrix_t& Ymat, HessArray_t& Xmat)$/;"	f	class:qmcplusplus::Backflow_ee
evaluateWithDerivatives	Fermion/Backflow_ee_kSpace.h	/^  evaluateWithDerivatives(const ParticleSet& P, ParticleSet& QP, GradMatrix_t& Bmat_full, HessMatrix_t& Amat, GradMatrix_t& Cmat, GradMatrix_t& Ymat, HessArray_t& Xmat)$/;"	f	class:qmcplusplus::Backflow_ee_kSpace
evaluateWithHessian	Experimental/CorrectingOrbitalBasisSet.h	/^  evaluateWithHessian(const ParticleSet& P, int iat)$/;"	f	struct:qmcplusplus::CorrectingOrbitalBasisSet
evaluateWithHessian	LocalizedBasisSet.h	/^  evaluateWithHessian(const ParticleSet& P, int iat)$/;"	f	struct:qmcplusplus::LocalizedBasisSet
evaluateWithHessian	SparseLocalizedBasisSet.h	/^  evaluateWithHessian(const ParticleSet& P, int iat)$/;"	f	struct:qmcplusplus::SparseLocalizedBasisSet
evaluateWithThirdDeriv	Experimental/CorrectingOrbitalBasisSet.h	/^  evaluateWithThirdDeriv(const ParticleSet& P, int iat)$/;"	f	struct:qmcplusplus::CorrectingOrbitalBasisSet
evaluateWithThirdDeriv	LocalizedBasisSet.h	/^  evaluateWithThirdDeriv(const ParticleSet& P, int iat)$/;"	f	struct:qmcplusplus::LocalizedBasisSet
evaluateWithThirdDeriv	MolecularOrbitals/NGOBuilder.h	/^  inline value_type evaluateWithThirdDeriv(real_type r, real_type rinv)$/;"	f	struct:qmcplusplus::NGOrbital
evaluateWithThirdDeriv	SparseLocalizedBasisSet.h	/^  void evaluateWithThirdDeriv(const ParticleSet& P, int iat)$/;"	f	struct:qmcplusplus::SparseLocalizedBasisSet
evaluate_check	HarmonicOscillator/SHOSet.cpp	/^  void SHOSet::evaluate_check(PosType r, ValueViewer_t& psi, $/;"	f	class:qmcplusplus::SHOSet
evaluate_d0	HarmonicOscillator/SHOSet.cpp	/^  void SHOSet::evaluate_d0(const PosType& xpos, ValueViewer_t& psi)$/;"	f	class:qmcplusplus::SHOSet
evaluate_d1	HarmonicOscillator/SHOSet.cpp	/^  void SHOSet::evaluate_d1(const PosType& xpos, ValueViewer_t& psi, GradViewer_t& dpsi)$/;"	f	class:qmcplusplus::SHOSet
evaluate_d2	HarmonicOscillator/SHOSet.cpp	/^  void SHOSet::evaluate_d2(const PosType& xpos, ValueViewer_t& psi, ValueViewer_t& d2psi)$/;"	f	class:qmcplusplus::SHOSet
evaluate_hermite	HarmonicOscillator/SHOSet.cpp	/^  void SHOSet::evaluate_hermite(const PosType& xpos)$/;"	f	class:qmcplusplus::SHOSet
evaluate_matrices_from_scratch	Fermion/SlaterDetOpt.cpp	/^OrbitalBase::RealType SlaterDetOpt::evaluate_matrices_from_scratch(ParticleSet& P, const bool all) {$/;"	f	class:qmcplusplus::SlaterDetOpt
evaluate_notranspose	AFMSPOSet.cpp	/^AFMSPOSet::evaluate_notranspose$/;"	f	class:qmcplusplus::AFMSPOSet
evaluate_notranspose	AFMSPOSet.h	/^  void evaluate_notranspose(const ParticleSet& P, int first, int last$/;"	f	class:qmcplusplus::AFMSPOSet
evaluate_notranspose	CompositeSPOSet.cpp	/^  void CompositeSPOSet::evaluate_notranspose($/;"	f	class:qmcplusplus::CompositeSPOSet
evaluate_notranspose	DistributedSPOSet.cpp	/^void DistributedSPOSet::evaluate_notranspose(const ParticleSet& P, int first, int last,$/;"	f	class:qmcplusplus::DistributedSPOSet
evaluate_notranspose	DistributedSPOSet.h	/^  void evaluate_notranspose(const ParticleSet& P, int first, int last$/;"	f	struct:qmcplusplus::DistributedSPOSet
evaluate_notranspose	EinsplineAdoptor.h	/^  virtual void evaluate_notranspose(const ParticleSet& P, int first, int last$/;"	f	struct:qmcplusplus::BsplineSet
evaluate_notranspose	EinsplineAdoptor.h	/^  void evaluate_notranspose(const ParticleSet& P, int first, int last$/;"	f	struct:qmcplusplus::BsplineSet
evaluate_notranspose	EinsplineSet.cpp	/^EinsplineSetExtended<StorageType>::evaluate_notranspose$/;"	f	class:qmcplusplus::EinsplineSetExtended
evaluate_notranspose	EinsplineSet.cpp	/^EinsplineSetExtended<StorageType>::evaluate_notranspose(const ParticleSet& P, int first, int last,$/;"	f	class:qmcplusplus::EinsplineSetExtended
evaluate_notranspose	EinsplineSet.cpp	/^EinsplineSetExtended<double>::evaluate_notranspose(const ParticleSet& P$/;"	f	class:qmcplusplus::EinsplineSetExtended
evaluate_notranspose	EinsplineSet.cpp	/^EinsplineSetExtended<double>::evaluate_notranspose(const ParticleSet& P, int first, int last,$/;"	f	class:qmcplusplus::EinsplineSetExtended
evaluate_notranspose	ElectronGas/ElectronGasComplexOrbitalBuilder.h	/^  void evaluate_notranspose(const ParticleSet& P, int first, int last$/;"	f	struct:qmcplusplus::EGOSet
evaluate_notranspose	ElectronGas/ElectronGasComplexOrbitalBuilder.h	/^  void evaluate_notranspose(const ParticleSet& P, int first, int last,$/;"	f	struct:qmcplusplus::EGOSet
evaluate_notranspose	ElectronGas/ElectronGasOrbitalBuilder.h	/^  void evaluate_notranspose(const ParticleSet& P, int first, int last$/;"	f	struct:qmcplusplus::RealEGOSet
evaluate_notranspose	ElectronGas/ElectronGasOrbitalBuilder.h	/^  void evaluate_notranspose(const ParticleSet& P, int first, int last,$/;"	f	struct:qmcplusplus::RealEGOSet
evaluate_notranspose	Experimental/Bspline3DSet.cpp	/^Bspline3DSet_Gen::evaluate_notranspose(const ParticleSet& e, int first, int last,$/;"	f	class:qmcplusplus::Bspline3DSet_Gen
evaluate_notranspose	Experimental/Bspline3DSet.cpp	/^Bspline3DSet_Ortho::evaluate_notranspose(const ParticleSet& e, int first, int last,$/;"	f	class:qmcplusplus::Bspline3DSet_Ortho
evaluate_notranspose	Experimental/Bspline3DSet.cpp	/^Bspline3DSet_Twist::evaluate_notranspose(const ParticleSet& e, int first, int last,$/;"	f	class:qmcplusplus::Bspline3DSet_Twist
evaluate_notranspose	Experimental/Bspline3DSet.cpp	/^void Bspline3DSet_Gen_Trunc::evaluate_notranspose(const ParticleSet& e, int first, int last,$/;"	f	class:qmcplusplus::Bspline3DSet_Gen_Trunc
evaluate_notranspose	Experimental/Bspline3DSet.cpp	/^void Bspline3DSet_Ortho_Trunc::evaluate_notranspose(const ParticleSet& e, int first, int last,$/;"	f	class:qmcplusplus::Bspline3DSet_Ortho_Trunc
evaluate_notranspose	Experimental/Bspline3DSet.h	/^  void evaluate_notranspose(const ParticleSet& P, int first, int last$/;"	f	struct:qmcplusplus::Bspline3DSet_Gen
evaluate_notranspose	Experimental/Bspline3DSet.h	/^  void evaluate_notranspose(const ParticleSet& P, int first, int last$/;"	f	struct:qmcplusplus::Bspline3DSet_Gen_Trunc
evaluate_notranspose	Experimental/Bspline3DSet.h	/^  void evaluate_notranspose(const ParticleSet& P, int first, int last$/;"	f	struct:qmcplusplus::Bspline3DSet_Ortho
evaluate_notranspose	Experimental/Bspline3DSet.h	/^  void evaluate_notranspose(const ParticleSet& P, int first, int last$/;"	f	struct:qmcplusplus::Bspline3DSet_Ortho_Trunc
evaluate_notranspose	Experimental/Bspline3DSet.h	/^  void evaluate_notranspose(const ParticleSet& P, int first, int last$/;"	f	struct:qmcplusplus::Bspline3DSet_Twist
evaluate_notranspose	Experimental/Bspline3DSetTemp.h	/^  inline void evaluate_notranspose(const ParticleSet& e, int first, int last,$/;"	f	class:qmcplusplus::Bspline3DSet
evaluate_notranspose	Experimental/Bspline3DSetTemp.h	/^  void evaluate_notranspose(const ParticleSet& P, int first, int last$/;"	f	class:qmcplusplus::Bspline3DSet
evaluate_notranspose	Experimental/Bspline3DSetTrunc.cpp	/^void Bspline3DSet_MLW::evaluate_notranspose(const ParticleSet& e, int first, int last,$/;"	f	class:qmcplusplus::Bspline3DSet_MLW
evaluate_notranspose	Experimental/Bspline3DSetTrunc.h	/^  void evaluate_notranspose(const ParticleSet& P, int first, int last$/;"	f	struct:qmcplusplus::Bspline3DSet_MLW
evaluate_notranspose	Experimental/LCOrbitalSetWithCorrection.h	/^  void evaluate_notranspose(const ParticleSet& P, int first, int last$/;"	f	class:qmcplusplus::LCOrbitalSetWithCorrection
evaluate_notranspose	Experimental/LCOrbitalSetWithCorrection.h	/^  void evaluate_notranspose(const ParticleSet& P, int first, int last,$/;"	f	class:qmcplusplus::LCOrbitalSetWithCorrection
evaluate_notranspose	Fermion/SPOSetProxy.cpp	/^void SPOSetProxy::evaluate_notranspose(const ParticleSet& P, int first, int last$/;"	f	class:qmcplusplus::SPOSetProxy
evaluate_notranspose	Fermion/SPOSetProxyForMSD.cpp	/^void SPOSetProxyForMSD::evaluate_notranspose(const ParticleSet& P, int first, int last$/;"	f	class:qmcplusplus::SPOSetProxyForMSD
evaluate_notranspose	HarmonicOscillator/SHOSet.cpp	/^  void SHOSet::evaluate_notranspose($/;"	f	class:qmcplusplus::SHOSet
evaluate_notranspose	LCOrbitalSet.h	/^  void evaluate_notranspose(const ParticleSet& P, int first, int last$/;"	f	class:qmcplusplus::LCOrbitalSet
evaluate_notranspose	LCOrbitalSet.h	/^  void evaluate_notranspose(const ParticleSet& P, int first, int last,$/;"	f	class:qmcplusplus::LCOrbitalSet
evaluate_notranspose	LCOrbitalSetOpt.h	/^    void evaluate_notranspose(const ParticleSet& P, int first, int last, ValueMatrix_t& logdet, GradMatrix_t& dlogdet, HessMatrix_t& grad_grad_logdet) {$/;"	f	class:qmcplusplus::LCOrbitalSetOpt
evaluate_notranspose	LCOrbitalSetOpt.h	/^    void evaluate_notranspose(const ParticleSet& P, int first, int last, ValueMatrix_t& logdet, GradMatrix_t& dlogdet, ValueMatrix_t& d2logdet) {$/;"	f	class:qmcplusplus::LCOrbitalSetOpt
evaluate_notranspose	LCOrbitalSetOpt.h	/^    void evaluate_notranspose(const ParticleSet& P, int first, int last,$/;"	f	class:qmcplusplus::LCOrbitalSetOpt
evaluate_notranspose	MultiGridBsplineSet.h	/^    virtual void evaluate_notranspose(const ParticleSet& P, int first, int last$/;"	f	struct:qmcplusplus::MultiGridBsplineSet
evaluate_notranspose	MultiGridBsplineSet.h	/^    void evaluate_notranspose(const ParticleSet& P, int first, int last$/;"	f	struct:qmcplusplus::MultiGridBsplineSet
evaluate_notranspose	OptimizableSPOSet.cpp	/^OptimizableSPOSet::evaluate_notranspose$/;"	f	class:qmcplusplus::OptimizableSPOSet
evaluate_notranspose	OptimizableSPOSet.h	/^  void evaluate_notranspose(const ParticleSet& P, int first, int last$/;"	f	class:qmcplusplus::OptimizableSPOSet
evaluate_notranspose	PlaneWave/PWOrbitalSet.cpp	/^PWOrbitalSet::evaluate_notranspose(const ParticleSet& P, int first, int last,$/;"	f	class:qmcplusplus::PWOrbitalSet
evaluate_notranspose	PlaneWave/PWRealOrbitalSet.cpp	/^PWRealOrbitalSet::evaluate_notranspose(const ParticleSet& P, int first, int last,$/;"	f	class:qmcplusplus::PWRealOrbitalSet
evaluate_notranspose	PlaneWave/PWRealOrbitalSet.h	/^  void evaluate_notranspose(const ParticleSet& P, int first, int last$/;"	f	class:qmcplusplus::PWRealOrbitalSet
evaluate_notranspose	SPOSetBase.cpp	/^void SPOSetBase::evaluate_notranspose(const ParticleSet& P, int first, int last$/;"	f	class:qmcplusplus::SPOSetBase
evaluate_notranspose	SPOSetBase.cpp	/^void SPOSetBase::evaluate_notranspose(const ParticleSet& P, int first, int last,$/;"	f	class:qmcplusplus::SPOSetBase
evaluate_notranspose	SPOSetComboNoCopy.h	/^    inline  void evaluate_notranspose(const ParticleSet& P, int first, int last$/;"	f	struct:qmcplusplus::SPOSetComboNoCopy
evaluate_notranspose	SPOSetComboNoCopy.h	/^    void evaluate_notranspose(const ParticleSet& P, int first, int last$/;"	f	struct:qmcplusplus::SPOSetComboNoCopy
evaluate_notranspose	legacy/EinsplineSetLocal.cpp	/^EinsplineSetLocal::evaluate_notranspose (const ParticleSet& P, int first, int last,$/;"	f	class:qmcplusplus::EinsplineSetLocal
evaluate_notranspose	legacy/EinsplineSetLocal.cpp	/^void EinsplineSetLocal::evaluate_notranspose(const ParticleSet& P, int first, int last,$/;"	f	class:qmcplusplus::EinsplineSetLocal
evaluate_notranspose_general	LCOrbitalSetOpt.h	/^    void evaluate_notranspose_general(const ParticleSet& P,$/;"	f	class:qmcplusplus::LCOrbitalSetOpt
evaluate_notranspose_general	SPOSetBase.h	/^  virtual void evaluate_notranspose_general(const ParticleSet& P,$/;"	f	class:qmcplusplus::SPOSetBase
evaluate_notranspose_iterators	SPOSetBase.h	/^  template<class IntIter> void evaluate_notranspose_iterators(const ParticleSet& P,$/;"	f	class:qmcplusplus::SPOSetBase
evaluate_notranspose_ranges	LCOrbitalSetOpt.h	/^    void evaluate_notranspose_ranges(const ParticleSet& P,$/;"	f	class:qmcplusplus::LCOrbitalSetOpt
evaluate_p	ElectronGas/ElectronGasComplexOrbitalBuilder.h	/^  void evaluate_p(const PosType& r, ValueType* restrict psi, GradType* restrict dpsi$/;"	f	struct:qmcplusplus::EGOSet
evaluate_p	ElectronGas/ElectronGasOrbitalBuilder.h	/^  inline void evaluate_p(const PosType& r, ValueType* restrict psi, GradType* restrict dpsi, HessType* restrict hess)$/;"	f	struct:qmcplusplus::RealEGOSet
evaluate_p	ElectronGas/ElectronGasOrbitalBuilder.h	/^  inline void evaluate_p(const PosType& r, ValueType* restrict psi, GradType* restrict dpsi, ValueType* restrict d2psi)$/;"	f	struct:qmcplusplus::RealEGOSet
evaluate_v	Experimental/EinsplineAdoptorPacked.h	/^  inline void evaluate_v(const PointType& r, VV& psi)$/;"	f	struct:qmcplusplus::SplineC2CAdoptorPacked
evaluate_v	Experimental/EinsplineAdoptorPacked.h	/^  inline void evaluate_v(const PointType& r, VV& psi)$/;"	f	struct:qmcplusplus::SplineC2RAdoptorPacked
evaluate_v	Experimental/EinsplineMixedAdoptor.h	/^  inline void evaluate_v(const PointType& r, VV& psi)$/;"	f	struct:qmcplusplus::SplineMixedAdoptor
evaluate_v	Experimental/EinsplineMixedAdoptor.h	/^  inline void evaluate_v(const PointType& r, VV& psi)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
evaluate_v	Experimental/SplineOpenAdoptor.h	/^  inline void evaluate_v(const PointType& r, VV& psi)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
evaluate_v	HarmonicOscillator/SHOSet.cpp	/^  void SHOSet::evaluate_v(PosType r, ValueViewer_t& psi)$/;"	f	class:qmcplusplus::SHOSet
evaluate_v	SplineC2XAdoptor.h	/^  inline void evaluate_v(const PointType& r, VV& psi)$/;"	f	struct:qmcplusplus::SplineC2CPackedAdoptor
evaluate_v	SplineC2XAdoptor.h	/^  inline void evaluate_v(const PointType& r, VV& psi)$/;"	f	struct:qmcplusplus::SplineC2RPackedAdoptor
evaluate_v	SplineMixedAdoptor.h	/^  inline void evaluate_v(const PointType& r, VV& psi)$/;"	f	struct:qmcplusplus::SplineMixedAdoptor
evaluate_v	SplineMixedAdoptor.h	/^  inline void evaluate_v(const PointType& r, VV& psi)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
evaluate_v	SplineR2RAdoptor.h	/^  inline void evaluate_v(const PointType& r, VV& psi)$/;"	f	struct:qmcplusplus::SplineR2RAdoptor
evaluate_vgh	Experimental/EinsplineAdoptorPacked.h	/^  void evaluate_vgh(const PointType& r, VV& psi, GV& dpsi, GGV& grad_grad_psi)$/;"	f	struct:qmcplusplus::SplineC2CAdoptorPacked
evaluate_vgh	Experimental/EinsplineAdoptorPacked.h	/^  void evaluate_vgh(const PointType& r, VV& psi, GV& dpsi, GGV& grad_grad_psi)$/;"	f	struct:qmcplusplus::SplineC2RAdoptorPacked
evaluate_vgh	Experimental/EinsplineMixedAdoptor.h	/^  void evaluate_vgh(const PointType& r, VV& psi, GV& dpsi, GGV& grad_grad_psi)$/;"	f	struct:qmcplusplus::SplineMixedAdoptor
evaluate_vgh	Experimental/EinsplineMixedAdoptor.h	/^  void evaluate_vgh(const PointType& r, VV& psi, GV& dpsi, GGV& grad_grad_psi)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
evaluate_vgh	Experimental/SplineOpenAdoptor.h	/^  void evaluate_vgh(const PointType& r, VV& psi, GV& dpsi, GGV& grad_grad_psi)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
evaluate_vgh	SplineC2XAdoptor.h	/^  void evaluate_vgh(const PointType& r, VV& psi, GV& dpsi, GGV& grad_grad_psi)$/;"	f	struct:qmcplusplus::SplineC2CPackedAdoptor
evaluate_vgh	SplineC2XAdoptor.h	/^  void evaluate_vgh(const PointType& r, VV& psi, GV& dpsi, GGV& grad_grad_psi)$/;"	f	struct:qmcplusplus::SplineC2RPackedAdoptor
evaluate_vgh	SplineMixedAdoptor.h	/^  void evaluate_vgh(const PointType& r, VV& psi, GV& dpsi, GGV& grad_grad_psi)$/;"	f	struct:qmcplusplus::SplineMixedAdoptor
evaluate_vgh	SplineMixedAdoptor.h	/^  void evaluate_vgh(const PointType& r, VV& psi, GV& dpsi, GGV& grad_grad_psi)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
evaluate_vgh	SplineR2RAdoptor.h	/^  void evaluate_vgh(const PointType& r, VV& psi, GV& dpsi, GGV& grad_grad_psi)$/;"	f	struct:qmcplusplus::SplineR2RAdoptor
evaluate_vgl	Experimental/EinsplineAdoptorPacked.h	/^  inline void evaluate_vgl(const PointType& r, VV& psi, GV& dpsi, VV& d2psi)$/;"	f	struct:qmcplusplus::SplineC2CAdoptorPacked
evaluate_vgl	Experimental/EinsplineAdoptorPacked.h	/^  inline void evaluate_vgl(const PointType& r, VV& psi, GV& dpsi, VV& d2psi)$/;"	f	struct:qmcplusplus::SplineC2RAdoptorPacked
evaluate_vgl	Experimental/EinsplineMixedAdoptor.h	/^  inline void evaluate_vgl(const PointType& r, VV& psi, GV& dpsi, VV& d2psi)$/;"	f	struct:qmcplusplus::SplineMixedAdoptor
evaluate_vgl	Experimental/EinsplineMixedAdoptor.h	/^  inline void evaluate_vgl(const PointType& r, VV& psi, GV& dpsi, VV& d2psi)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
evaluate_vgl	Experimental/SplineOpenAdoptor.h	/^  inline void evaluate_vgl(const PointType& r, VV& psi, GV& dpsi, VV& d2psi)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
evaluate_vgl	HarmonicOscillator/SHOSet.cpp	/^  void SHOSet::evaluate_vgl(PosType r, ValueViewer_t& psi, $/;"	f	class:qmcplusplus::SHOSet
evaluate_vgl	Spline3D/EinsplineSetTemp.hpp	/^      inline void evaluate_vgl(const TinyVector<ValT,DIM>& r$/;"	f	struct:qmcplusplus::bspline_engine
evaluate_vgl	SplineC2XAdoptor.h	/^  inline void evaluate_vgl(const PointType& r, VV& psi, GV& dpsi, VV& d2psi)$/;"	f	struct:qmcplusplus::SplineC2CPackedAdoptor
evaluate_vgl	SplineC2XAdoptor.h	/^  inline void evaluate_vgl(const PointType& r, VV& psi, GV& dpsi, VV& d2psi)$/;"	f	struct:qmcplusplus::SplineC2RPackedAdoptor
evaluate_vgl	SplineMixedAdoptor.h	/^  inline void evaluate_vgl(const PointType& r, VV& psi, GV& dpsi, VV& d2psi)$/;"	f	struct:qmcplusplus::SplineMixedAdoptor
evaluate_vgl	SplineMixedAdoptor.h	/^  inline void evaluate_vgl(const PointType& r, VV& psi, GV& dpsi, VV& d2psi)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
evaluate_vgl	SplineR2RAdoptor.h	/^  inline void evaluate_vgl(const PointType& r, VV& psi, GV& dpsi, VV& d2psi)$/;"	f	struct:qmcplusplus::SplineR2RAdoptor
excitation_node	Fermion/excitation_node.h	/^  inline explicit excitation_node(unsigned long vid=0u, unsigned long cid=0u)$/;"	f	struct:qmcplusplus::excitation_node
excitation_node	Fermion/excitation_node.h	/^struct excitation_node$/;"	s	namespace:qmcplusplus
excited	Fermion/ci_builder.h	/^  std::vector<iset_type*> excited;$/;"	m	struct:qmcplusplus::ci_builder
excited	Fermion/excitation_node.h	/^  unsigned long excited;$/;"	m	struct:qmcplusplus::excitation_node
execute	Experimental/CuspCorr.cpp	/^RealType execute(int curOrb_, int curCenter_, RealType Zion, LCOrbitalSet<BS,false>* Phi, LCOrbitalSet<BS,false>* Eta, Vector<RealType>& xgrid, Vector<RealType>& rad_orb, std::string thisFile, RealType cutoff, RealType* data)$/;"	f
executeWithRCLoop	Experimental/CuspCorr.cpp	/^void executeWithRCLoop(int curOrb_, int curCenter_, RealType Zion, LCOrbitalSet<BS,false>* Phi, LCOrbitalSet<BS,false>* Eta, Vector<RealType>& xgrid, Vector<RealType>& rad_orb, std::string file, RealType cutoff, RealType* data)$/;"	f
expandYlm	Experimental/STOMolecularOrbitals.cpp	/^STOMolecularOrbitals::expandYlm(const std::string& rnl, const QuantumNumberType& nlms,$/;"	f	class:qmcplusplus::STOMolecularOrbitals
expandYlm	MolecularOrbitals/AtomicBasisBuilder.h	/^int AtomicBasisBuilder<RFB>::expandYlm(const std::string& rnl, const QuantumNumberType& nlms, int num,$/;"	f	class:qmcplusplus::AtomicBasisBuilder
expandYlm	MolecularOrbitals/GTOMolecularOrbitals.cpp	/^GTOMolecularOrbitals::expandYlm(const std::string& rnl, const QuantumNumberType& nlms,$/;"	f	class:qmcplusplus::GTOMolecularOrbitals
expandlm	MolecularOrbitals/AtomicBasisBuilder.h	/^  int expandlm;$/;"	m	struct:qmcplusplus::AtomicBasisBuilder
expo	Fermion/GaussianFunctor.h	/^  std::vector<real_type> expo;$/;"	m	class:qmcplusplus::GaussianFunctor
expo_id	Fermion/GaussianFunctor.h	/^  std::vector<std::string> expo_id;$/;"	m	class:qmcplusplus::GaussianFunctor
exponentiate_matrix	LCOrbitalSetOpt.h	/^    void exponentiate_matrix(const int n, RealType * const mat) {$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
export_MultiSpline	MultiGridBsplineSetReader.h	/^  void export_MultiSpline(multi_UBspline_3d_d** target)$/;"	f	struct:qmcplusplus::MultiGridBsplineSetReader
export_MultiSpline	MultiGridBsplineSetReader.h	/^  void export_MultiSpline(multi_UBspline_3d_z** target)$/;"	f	struct:qmcplusplus::MultiGridBsplineSetReader
export_MultiSpline	SplineAdoptorReaderP.h	/^  void export_MultiSpline(multi_UBspline_3d_d** target)$/;"	f	struct:qmcplusplus::SplineAdoptorReader
export_MultiSpline	SplineAdoptorReaderP.h	/^  void export_MultiSpline(multi_UBspline_3d_z** target)$/;"	f	struct:qmcplusplus::SplineAdoptorReader
export_MultiSpline	SplineMixedAdoptorReaderP.h	/^  void export_MultiSpline(multi_UBspline_3d_d** target)$/;"	f	struct:qmcplusplus::SplineMixedAdoptorReader
export_MultiSpline	SplineMixedAdoptorReaderP.h	/^  void export_MultiSpline(multi_UBspline_3d_z** target)$/;"	f	struct:qmcplusplus::SplineMixedAdoptorReader
extractHighYLM	Experimental/LCOrbitalSetWithCorrection.cpp	/^BS* LCOrbitalSetWithCorrection<BS,false>::extractHighYLM( std::vector<bool> &rmv)$/;"	f	class:qmcplusplus::LCOrbitalSetWithCorrection
extract_x_and_d_vars	FDLRWfn.h	/^    void extract_x_and_d_vars(const opt_variables_type& active)$/;"	f	class:qmcplusplus::FDLRWfn
extract_xpd_and_xmd_vars	FDLRWfn.h	/^    void extract_xpd_and_xmd_vars(const opt_variables_type& active, opt_variables_type& xpd_vars, opt_variables_type& xmd_vars)$/;"	f	class:qmcplusplus::FDLRWfn
f	AtomicOrbitals/HFAtomicSTOSet.h	/^  inline T f(T r)$/;"	f	struct:qmcplusplus::ComboSTO
f	ElectronGas/ElectronGasOrbitalBuilder.h	/^  inline ValueType f(const PosType& pos,int i)$/;"	f	struct:qmcplusplus::RealEGOSet
f	Experimental/NoCuspFunctor.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::NoCuspFunctor
f	Fermion/BFsplineFunctor.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::BFsplineFunctor
f	Fermion/GaussianFunctor.h	/^  real_type f(real_type r)$/;"	f	class:qmcplusplus::GaussianFunctor
f	Jastrow/BesselZeroFunctor.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::BesselZero
f	Jastrow/BsplineFunctor.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::BsplineFunctor
f	Jastrow/BsplineFunctor3D.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::BsplineFunctor3D
f	Jastrow/CompositeFunctor.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::AnyTimesRnFunctor
f	Jastrow/CompositeFunctor.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::CuspCorrectionFunctor
f	Jastrow/CompositeFunctor.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::DCuspCorrectionDEFunctor
f	Jastrow/CompositeFunctor.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::TruncatedPadeFunctor
f	Jastrow/DerivPadeFunctors.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::D2PadeDB2Functor
f	Jastrow/DerivPadeFunctors.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::DPadeDBFunctor
f	Jastrow/DerivWMFunctor.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::D2WMDB2Functor
f	Jastrow/DerivWMFunctor.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::DWMDBFunctor
f	Jastrow/GaussianFunctor.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::GaussianFunctor
f	Jastrow/GaussianFunctor.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
f	Jastrow/LRBreakupUtilities.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::ShortRangePartAdapter
f	Jastrow/LinearCombinationFunctor.h	/^  inline real_type f(real_type r)$/;"	f	struct:LinearCombinationFunctor
f	Jastrow/McMillanJ2Functor.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::McMillanJ2Functor
f	Jastrow/McMillanJ2Functor.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::ModMcMillanJ2Functor
f	Jastrow/McMillanJ2Functor.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::comboMcMillanJ2Functor
f	Jastrow/McMillanJ2GFunctor.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::McMillanJ2GFunctor
f	Jastrow/ModPadeFunctor.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::ModPadeFunctor
f	Jastrow/NumericalJastrowFunctor.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::NumericalJastrow
f	Jastrow/OpenGaussianSlaterFunctor.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::OpenGaussianSlaterFunctor
f	Jastrow/PadeFunctors.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::PadeFunctor
f	Jastrow/PadeFunctors.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
f	Jastrow/PadeFunctors.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
f	Jastrow/PadeFunctors.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::ScaledPadeFunctor
f	Jastrow/PolyFunctor.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::PolyFunctor
f	Jastrow/PolynomialFunctor3D.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
f	Jastrow/RPAJastrowFunctor.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::RPAJastrowFunctor
f	Jastrow/SplineFunctors.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::CubicSplineSingle
f	Jastrow/SplineFunctors.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::CubicSplineBasisSet
f	Jastrow/WMFunctor.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::WMFunctor
f	Jastrow/WMFunctor.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::WMFunctorSet
f	MolecularOrbitals/NGOBuilder.cpp	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::PadeOrbital
f	MolecularOrbitals/NGOBuilder.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::NGOrbital
fac1	Experimental/QDwf.h	/^  double fac1,fac2;$/;"	m	class:QDwf
fac2	Experimental/QDwf.h	/^  double fac1,fac2;$/;"	m	class:QDwf
fdlrwfn_tag	OrbitalBuilderBase.cpp	/^std::string OrbitalBuilderBase::fdlrwfn_tag="fdlrwfn";$/;"	m	class:qmcplusplus::OrbitalBuilderBase	file:
fdlrwfn_tag	OrbitalBuilderBase.h	/^  static std::string fdlrwfn_tag;$/;"	m	class:qmcplusplus::OrbitalBuilderBase
fft_spline	MultiGridBsplineSetReader.h	/^  void fft_spline(Vector<std::complex<double> >& cG, int ti, int iorb)$/;"	f	struct:qmcplusplus::MultiGridBsplineSetReader
fft_spline	SplineAdoptorReaderP.h	/^  inline void fft_spline(Vector<std::complex<double> >& cG, int ti, int iorb)$/;"	f	struct:qmcplusplus::SplineAdoptorReader
fft_spline	SplineMixedAdoptorReaderP.h	/^  void fft_spline(Vector<std::complex<double> >& cG, int ti, int iorb)$/;"	f	struct:qmcplusplus::SplineMixedAdoptorReader
fileName	Jastrow/BsplineFunctor.h	/^  std::string fileName;$/;"	m	struct:qmcplusplus::BsplineFunctor
fillRadFunWithPhi	Experimental/CuspCorr.cpp	/^void fillRadFunWithPhi(int curOrb_, int curCenter_, RealType Zion, LCOrbitalSet<BS,false>* Phi, LCOrbitalSet<BS,false>* Eta, Vector<RealType>& xgrid, Vector<RealType>& rad_orb)$/;"	f
fillRadFunWithPhiBar	Experimental/CuspCorr.cpp	/^void fillRadFunWithPhiBar(int curOrb_, int curCenter_, RealType Zion, LCOrbitalSet<BS,false>* Phi, LCOrbitalSet<BS,false>* Eta, Vector<RealType>& xgrid, Vector<RealType>& rad_orb, RealType* data)$/;"	f
finalizeOptimization	Jastrow/TwoBodyJastrowOrbital.h	/^  finalizeOptimization()$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
finalizeOptimization	Jastrow/eeI_JastrowOrbital.h	/^  finalizeOptimization()$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
finalizeOptimization	OrbitalBase.h	/^  virtual void finalizeOptimization() { }$/;"	f	struct:qmcplusplus::OrbitalBase
find_energy_extrema	SPOSetInputInfo.cpp	/^  void SPOSetInputInfo::find_energy_extrema()$/;"	f	class:qmcplusplus::SPOSetInputInfo
find_index_extrema	SPOSetInputInfo.cpp	/^  void SPOSetInputInfo::find_index_extrema()$/;"	f	class:qmcplusplus::SPOSetInputInfo
find_parent	Fermion/ci_builder.h	/^  int find_parent(NODETYPE& anode,std::vector<NODETYPE>& p)$/;"	f	struct:qmcplusplus::ci_builder
finish	SPOSetInfo.cpp	/^  void SPOSetInfo::finish(orderings ord,RealType tol)$/;"	f	class:qmcplusplus::SPOSetInfo
finish	SPOSetInfo.h	/^    inline void finish(std::vector<SPOI*>& state_vector,orderings ord=spoinfo::no_order,RealType  tol=1e-6)$/;"	f	class:qmcplusplus::SPOSetInfo
finish	SPOSetInfo.h	/^    inline void finish(std::vector<int>& subset,std::vector<SPOI*>& state_vector,orderings ord=spoinfo::no_order,RealType  tol=1e-6)$/;"	f	class:qmcplusplus::SPOSetInfo
first	Fermion/Backflow_ee.h	/^  bool first;$/;"	m	class:qmcplusplus::Backflow_ee
first	Fermion/Backflow_ee_kSpace.h	/^  bool first;$/;"	m	class:qmcplusplus::Backflow_ee_kSpace
firstIndex	Jastrow/kSpaceJastrow.h	/^  int firstIndex, lastIndex;$/;"	m	class:qmcplusplus::kSpaceCoef
first_addFunc	Jastrow/TwoBodyJastrowOrbital.h	/^  bool first_addFunc;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
first_spo	EinsplineAdoptor.h	/^  int first_spo;$/;"	m	struct:qmcplusplus::SplineAdoptorBase
fix_phase_c2r	einspline_helper.hpp	/^    inline void fix_phase_c2r(const Array<std::complex<T>,3>& in, Array<T1,3>& out$/;"	f	namespace:qmcplusplus
fix_phase_rotate	einspline_helper.hpp	/^    inline void fix_phase_rotate(const Array<std::complex<T>,3>& e2pi$/;"	f	namespace:qmcplusplus
fix_phase_rotate	einspline_helper.hpp	/^    inline void fix_phase_rotate(const Array<std::complex<T>,3>& e2pi, Array<std::complex<T>,3>& in, Array<T,3>& out)$/;"	f	namespace:qmcplusplus
fix_phase_rotate_c2c	einspline_helper.hpp	/^    inline void fix_phase_rotate_c2c(const Array<std::complex<T>,3>& in$/;"	f	namespace:qmcplusplus
fix_phase_rotate_c2c	einspline_helper.hpp	/^  inline void fix_phase_rotate_c2c(const Array<std::complex<T>,3>& in$/;"	f	namespace:qmcplusplus
fix_phase_rotate_c2r	einspline_helper.hpp	/^    inline void fix_phase_rotate_c2r(Array<std::complex<T>,3>& in$/;"	f	namespace:qmcplusplus
found	FermionBase.h	/^  inline bool found(const std::string& aname)$/;"	f	struct:qmcplusplus::FermionBase
freeGPUmem	Jastrow/TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::freeGPUmem()$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
freeGPUmem	OrbitalBase.h	/^  virtual void freeGPUmem()$/;"	f	struct:qmcplusplus::OrbitalBase
freeGPUmem	TrialWaveFunction_CUDA.cpp	/^TrialWaveFunction::freeGPUmem()$/;"	f	class:qmcplusplus::TrialWaveFunction
from	Fermion/ci_node.h	/^  int from;$/;"	m	struct:qmcplusplus::ci_node
from	Fermion/excitation_node.h	/^  int from;$/;"	m	struct:qmcplusplus::excitation_node
full_ratio	TrialWaveFunction.cpp	/^TrialWaveFunction::ValueType TrialWaveFunction::full_ratio(ParticleSet& P,int iat)$/;"	f	class:qmcplusplus::TrialWaveFunction
funcOpt	AGPDeterminantBuilder.h	/^  std::string funcOpt;$/;"	m	class:qmcplusplus::AGPDeterminantBuilder
funcOpt	Jastrow/JastrowBuilder.h	/^  std::string funcOpt;$/;"	m	class:qmcplusplus::JastrowBuilder
functor_type	MolecularOrbitals/NGOBuilder.h	/^  typedef OneDimCubicSpline<real_type> functor_type;$/;"	t	struct:qmcplusplus::NGOrbital
functor_type	MolecularOrbitals/NGOBuilder.h	/^  typedef OneDimQuinticSpline<real_type> functor_type;$/;"	t	struct:qmcplusplus::NGOrbital
funcz	Experimental/QDwf.h	/^  int funcz(double z)$/;"	f	class:QDwf
g	ElectronGas/HEGGrid.h	/^  int g;$/;"	m	struct:qmcplusplus::kpdata
gTransform	Experimental/EinsplineMixedAdoptor.h	/^  GridConvert<ST> gTransform;$/;"	m	struct:qmcplusplus::SplineMixedAdoptor
gTransform	Experimental/EinsplineMixedAdoptor.h	/^  GridConvert<ST> gTransform;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
gTransform	Experimental/SplineOpenAdoptor.h	/^  GridConvert<ST> gTransform;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
gTransform	MultiGridBsplineSet.h	/^    std::vector<GridConvert<DataType> > gTransform;$/;"	m	struct:qmcplusplus::MultiGridBsplineSet
gTransform	SplineMixedAdoptor.h	/^  GridConvert<ST> gTransform;$/;"	m	struct:qmcplusplus::SplineMixedAdoptor
gTransform	SplineMixedAdoptor.h	/^  GridConvert<ST> gTransform;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
gamma	Jastrow/PolynomialFunctor3D.h	/^  Array<real_type,3> gamma;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
get	Experimental/PlaneWaveOrbitalSet.h	/^  bool get(std::ostream& ) const$/;"	f	class:qmcplusplus::PlaneWaveOrbitalSet
get	LCOrbitals.h	/^  bool get(std::ostream& ) const$/;"	f	class:qmcplusplus::LCOrbitals
getAlternatePhaseDiff	Fermion/DiracDeterminantBase.h	/^  virtual RealType getAlternatePhaseDiff()$/;"	f	class:qmcplusplus::DiracDeterminantBase
getAlternatePhaseDiff	Fermion/DiracDeterminantBase.h	/^  virtual RealType getAlternatePhaseDiff(int iat)$/;"	f	class:qmcplusplus::DiracDeterminantBase
getAlternatePhaseDiff	Fermion/MultiDiracDeterminantBase.h	/^  virtual RealType getAlternatePhaseDiff()$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
getAlternatePhaseDiff	Fermion/MultiDiracDeterminantBase.h	/^  virtual RealType getAlternatePhaseDiff(int iat)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
getAlternatePhaseDiff	Fermion/MultiDiracDeterminantWithBackflow.h	/^  virtual RealType getAlternatePhaseDiff()$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
getAlternatePhaseDiff	Fermion/MultiDiracDeterminantWithBackflow.h	/^  virtual RealType getAlternatePhaseDiff(int iat)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
getAlternatePhaseDiff	Fermion/RNDiracDeterminantBase.h	/^  RealType getAlternatePhaseDiff()$/;"	f	class:qmcplusplus::RNDiracDeterminantBase
getAlternatePhaseDiff	Fermion/RNDiracDeterminantBase.h	/^  RealType getAlternatePhaseDiff(int iat)$/;"	f	class:qmcplusplus::RNDiracDeterminantBase
getAlternatePhaseDiff	Fermion/RNDiracDeterminantBaseAlternate.h	/^  RealType getAlternatePhaseDiff()$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
getAlternatePhaseDiff	Fermion/RNDiracDeterminantBaseAlternate.h	/^  RealType getAlternatePhaseDiff(int iat)$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
getAlternatePhaseDiff	Fermion/SlaterDet.h	/^  RealType getAlternatePhaseDiff()$/;"	f	class:qmcplusplus::SlaterDet
getAlternatePhaseDiff	Fermion/SlaterDet.h	/^  RealType getAlternatePhaseDiff(int iat)$/;"	f	class:qmcplusplus::SlaterDet
getAlternatePhaseDiff	OrbitalBase.h	/^  virtual RealType getAlternatePhaseDiff()$/;"	f	struct:qmcplusplus::OrbitalBase
getAlternatePhaseDiff	OrbitalBase.h	/^  virtual RealType getAlternatePhaseDiff(int iat)$/;"	f	struct:qmcplusplus::OrbitalBase
getAlternatePhaseDiff	TrialWaveFunction.h	/^  inline RealType getAlternatePhaseDiff()$/;"	f	class:qmcplusplus::TrialWaveFunction
getAlternatePhaseDiff	TrialWaveFunction.h	/^  inline RealType getAlternatePhaseDiff(int iat)$/;"	f	class:qmcplusplus::TrialWaveFunction
getAvgCoefficients	TrialWaveFunction.h	/^  opt_variables_type getAvgCoefficients(int lastN)$/;"	f	struct:qmcplusplus::CoefficientHolder
getBFTrans	Fermion/BackflowBuilder.h	/^  BackflowTransformation* getBFTrans()$/;"	f	class:qmcplusplus::BackflowBuilder
getBandName	PlaneWave/PWParameterSet.cpp	/^std::string PWParameterSet::getBandName(int ib)$/;"	f	class:qmcplusplus::PWParameterSet
getBandName	PlaneWave/PWParameterSet.cpp	/^std::string PWParameterSet::getBandName(int ib, int ispin)$/;"	f	class:qmcplusplus::PWParameterSet
getBasis	AtomicOrbitals/HFAtomicSTOSetBuilder.cpp	/^HFAtomicSTOSetBuilder::getBasis(xmlNodePtr cur)$/;"	f	class:qmcplusplus::HFAtomicSTOSetBuilder
getBasisSetSize	BasisSetBase.h	/^  inline IndexType getBasisSetSize() const$/;"	f	struct:qmcplusplus::BasisSetBase
getBasisSetSize	Experimental/LCOrbitalSetWithCorrection.h	/^  inline int getBasisSetSize() const$/;"	f	class:qmcplusplus::LCOrbitalSetWithCorrection
getBasisSetSize	LCOrbitalSet.h	/^  inline int getBasisSetSize() const$/;"	f	class:qmcplusplus::LCOrbitalSet
getBasisSetSize	PlaneWave/PWBasis.h	/^  inline IndexType getBasisSetSize() const$/;"	f	class:qmcplusplus::PWBasis
getBasisSetSize	SPOSetBase.h	/^  inline int getBasisSetSize() const$/;"	f	class:qmcplusplus::SPOSetBase
getBasisSetSize	SphericalBasisSet.h	/^  inline int getBasisSetSize() const$/;"	f	struct:qmcplusplus::SphericalBasisSet
getBasisSetSize	SphericalOrbitalSet.h	/^  inline int getBasisSetSize() const$/;"	f	struct:qmcplusplus::SphericalOrbitalSet
getBestCoefficients	TrialWaveFunction.h	/^  opt_variables_type getBestCoefficients(RealType we, RealType wv, bool print=0)$/;"	f	struct:qmcplusplus::CoefficientHolder
getCellLength	ElectronGas/HEGGrid.h	/^  inline T getCellLength(int nptcl, T rs_in) const$/;"	f	struct:qmcplusplus::HEGGrid
getCenterAndOrigin	Experimental/TricubicBsplineSetBuilder.1.cpp	/^void TricubicBsplineSetBuilder::getCenterAndOrigin(const char* hroot, const std::vector<int>& occSet, int norb)$/;"	f	class:qmcplusplus::TricubicBsplineSetBuilder
getCenterName	PlaneWave/PWParameterSet.cpp	/^std::string PWParameterSet::getCenterName(const std::string& hg,int ib)$/;"	f	class:qmcplusplus::PWParameterSet
getELcurr	Experimental/CuspCorr.h	/^  void getELcurr()$/;"	f	class:qmcplusplus::CuspCorr
getELideal	Experimental/CuspCorr.h	/^  void getELideal(RealType el)$/;"	f	class:qmcplusplus::CuspCorr
getELorig	Experimental/CuspCorr.h	/^  RealType getELorig()$/;"	f	class:qmcplusplus::CuspCorr
getEcut	PlaneWave/PWParameterSet.cpp	/^double PWParameterSet::getEcut(double ecut)$/;"	f	class:qmcplusplus::PWParameterSet
getEigVectorName	PlaneWave/PWParameterSet.cpp	/^std::string PWParameterSet::getEigVectorName(const std::string& hg, int ib, int ispin)$/;"	f	class:qmcplusplus::PWParameterSet
getEigVectorName	PlaneWave/PWParameterSet.cpp	/^std::string PWParameterSet::getEigVectorName(int ib, int ispin)$/;"	f	class:qmcplusplus::PWParameterSet
getEigVectorType	PlaneWave/PWParameterSet.cpp	/^bool PWParameterSet::getEigVectorType(hid_t h)$/;"	f	class:qmcplusplus::PWParameterSet
getFermionWF	TrialWaveFunction.h	/^  FermionBase* getFermionWF()$/;"	f	class:qmcplusplus::TrialWaveFunction
getFirstSPO	BandInfo.h	/^  inline int getFirstSPO() const { return FirstSPO;}$/;"	f	struct:qmcplusplus::BandInfoGroup
getFullGrid	Experimental/Spline3DBuilder.h	/^  Grid3D* getFullGrid()$/;"	f	class:qmcplusplus::Spline3DBuilder
getGradient	TrialWaveFunction_CUDA.cpp	/^TrialWaveFunction::getGradient (MCWalkerConfiguration &W, int iat,$/;"	f	class:qmcplusplus::TrialWaveFunction
getH5	PlaneWave/PWOrbitalBuilder.cpp	/^hid_t PWOrbitalBuilder::getH5(xmlNodePtr cur, const char* aname)$/;"	f	class:qmcplusplus::PWOrbitalBuilder
getLastSPO	BandInfo.h	/^  inline int getLastSPO() const { return NumSPOs+FirstSPO;}$/;"	f	struct:qmcplusplus::BandInfoGroup
getLogPsi	TrialWaveFunction.h	/^  inline RealType getLogPsi() const$/;"	f	class:qmcplusplus::TrialWaveFunction
getLogs	TrialWaveFunction.cpp	/^void TrialWaveFunction::getLogs(std::vector<RealType>& lvals)$/;"	f	class:qmcplusplus::TrialWaveFunction
getNC	ElectronGas/HEGGrid.h	/^  inline int getNC(int nup) const$/;"	f	struct:qmcplusplus::HEGGrid
getNumDistinctOrbitals	BandInfo.h	/^  inline int getNumDistinctOrbitals() const { return myBands.size();}$/;"	f	struct:qmcplusplus::BandInfoGroup
getNumParameters	Jastrow/BsplineFunctor3D.h	/^  inline int getNumParameters()$/;"	f	struct:qmcplusplus::BsplineFunctor3D
getNumParameters	Jastrow/PolynomialFunctor3D.h	/^  inline int getNumParameters()$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
getNumSPOs	BandInfo.h	/^  inline int getNumSPOs() const { return NumSPOs;}$/;"	f	struct:qmcplusplus::BandInfoGroup
getNumberOfKpoints	ElectronGas/HEGGrid.h	/^  inline int getNumberOfKpoints(int nsh) const$/;"	f	struct:qmcplusplus::HEGGrid
getOrbital	AtomicOrbitals/HFAtomicSTOSetBuilder.cpp	/^HFAtomicSTOSetBuilder::getOrbital(xmlNodePtr cur)$/;"	f	class:qmcplusplus::HFAtomicSTOSetBuilder
getOrbital	Jastrow/singleRPAJastrowBuilder.cpp	/^OrbitalBase* singleRPAJastrowBuilder::getOrbital()$/;"	f	class:qmcplusplus::singleRPAJastrowBuilder
getOrbitalSetSize	SPOSetBase.h	/^  inline int getOrbitalSetSize() const$/;"	f	class:qmcplusplus::SPOSetBase
getOrbitals	TrialWaveFunction.h	/^  std::vector<OrbitalBase*>& getOrbitals()$/;"	f	class:qmcplusplus::TrialWaveFunction
getOriginName	PlaneWave/PWParameterSet.cpp	/^std::string PWParameterSet::getOriginName(const std::string& hg,int ib)$/;"	f	class:qmcplusplus::PWParameterSet
getParam	OrbitalConstraintsBase.cpp	/^void OrbitalConstraintsBase::getParam(xmlNodePtr cur)$/;"	f	class:qmcplusplus::OrbitalConstraintsBase
getPhase	TrialWaveFunction.h	/^  inline RealType getPhase() const$/;"	f	class:qmcplusplus::TrialWaveFunction
getPhaseDiff	TrialWaveFunction.h	/^  inline RealType getPhaseDiff() const$/;"	f	class:qmcplusplus::TrialWaveFunction
getPhases	TrialWaveFunction.cpp	/^void TrialWaveFunction::getPhases(std::vector<RealType>& pvals)$/;"	f	class:qmcplusplus::TrialWaveFunction
getPhi	Fermion/DiracDeterminantBase.h	/^  SPOSetBasePtr getPhi()$/;"	f	class:qmcplusplus::DiracDeterminantBase
getPhi	Fermion/MultiDiracDeterminantBase.h	/^  SPOSetBasePtr getPhi()$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
getPhi	Fermion/MultiDiracDeterminantWithBackflow.h	/^  SPOSetBasePtr getPhi()$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
getPhi	Fermion/SlaterDet.h	/^  SPOSetBasePtr getPhi(int i=0)$/;"	f	class:qmcplusplus::SlaterDet
getPhi	Fermion/SlaterDetWithBackflow.h	/^  SPOSetBasePtr getPhi(int i=0)$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
getRatioByColSubstitution	Fermion/excitation_node.h	/^  inline void getRatioByColSubstitution(std::vector<T>& u_c$/;"	f	struct:qmcplusplus::excitation_node
getRatioByColSubstitution	Fermion/excitation_node.h	/^  void getRatioByColSubstitution(std::vector<T>& u_c , std::vector<excitation_node>& ci$/;"	f	struct:qmcplusplus::excitation_node
getRatioByRowSubstitution	Fermion/excitation_node.h	/^  inline void getRatioByRowSubstitution(std::vector<T>& u_c$/;"	f	struct:qmcplusplus::excitation_node
getRatioByRowSubstitution	Fermion/excitation_node.h	/^  void getRatioByRowSubstitution(std::vector<T>& u_c , std::vector<excitation_node>& ci$/;"	f	struct:qmcplusplus::excitation_node
getRatios	Fermion/ci_node.h	/^  void getRatios(const ValueMatrix& inv0, const ValueMatrix& psi, ValueVector& ratios, bool replace_row=false)$/;"	f	struct:qmcplusplus::ci_node
getRatios	Fermion/ci_node.h	/^  void getRatios(const ValueMatrix& inv0, const ValueMatrix& psi, const GradMatrix& dpsi, const ValueMatrix& d2psi, ValueVector& ratios, GradMatrix& grads, ValueMatrix& lapls, bool replace_row=false)$/;"	f	struct:qmcplusplus::ci_node
getRatios	Fermion/ci_node.h	/^  void getRatios(const int iat, const ValueMatrix& inv0, const ValueMatrix& psi, const GradVector& dpsi, const ValueVector& d2psi, ValueVector& ratios, GradMatrix& grads, ValueMatrix& lapls, bool replace_row=false)$/;"	f	struct:qmcplusplus::ci_node
getRatios	Fermion/excitation_node.h	/^  inline void getRatios(const matrix_type& psi_big, std::vector<excitation_node>& ci$/;"	f	struct:qmcplusplus::excitation_node
getRatiosByColPromotion	Fermion/ci_node.h	/^  inline void getRatiosByColPromotion(const ValueMatrix& inv0$/;"	f	struct:qmcplusplus::ci_node
getRatiosByColPromotion	Fermion/ci_node.h	/^  inline void getRatiosByColPromotion(const int iat$/;"	f	struct:qmcplusplus::ci_node
getRatiosByColPromotion	Fermion/excitation_node.h	/^  inline void getRatiosByColPromotion(const matrix_type& inv0$/;"	f	struct:qmcplusplus::excitation_node
getRatiosByRowPromotion	Fermion/excitation_node.h	/^  inline void getRatiosByRowPromotion(const matrix_type& inv0$/;"	f	struct:qmcplusplus::excitation_node
getSPO	FermionBase.cpp	/^SPOSetBasePtr FermionBase::getSPO(const std::string& aname)$/;"	f	class:qmcplusplus::FermionBase
getSPO	FermionBase.h	/^  inline SPOSetBasePtr getSPO(SPOSetBasePtr phi)$/;"	f	struct:qmcplusplus::FermionBase
getSep2	Experimental/Bspline3DSetTrunc.h	/^  inline RealType getSep2(RealType x, RealType y, RealType z)$/;"	f	struct:qmcplusplus::Bspline3DSet_MLW
getShellFromStates	ElectronGas/HEGGrid.h	/^  inline int getShellFromStates(int nst)$/;"	f	struct:qmcplusplus::HEGGrid
getShellIndex	ElectronGas/HEGGrid.h	/^  inline int getShellIndex(int nkpt) const$/;"	f	struct:qmcplusplus::HEGGrid
getSpinName	PlaneWave/PWParameterSet.cpp	/^std::string PWParameterSet::getSpinName(int ispin)$/;"	f	class:qmcplusplus::PWParameterSet
getTwistAngleName	PlaneWave/PWParameterSet.cpp	/^std::string PWParameterSet::getTwistAngleName()$/;"	f	class:qmcplusplus::PWParameterSet
getTwistName	PlaneWave/PWParameterSet.cpp	/^std::string PWParameterSet::getTwistName()$/;"	f	class:qmcplusplus::PWParameterSet
getTwistName	PlaneWave/PWParameterSet.cpp	/^std::string PWParameterSet::getTwistName(int i)$/;"	f	class:qmcplusplus::PWParameterSet
getValues	Jastrow/CubicBsplineGroup.h	/^  inline void getValues(point_type x)$/;"	f	class:qmcplusplus::CubicBsplineGroup
getValuesOnly	Jastrow/CubicBsplineGroup.h	/^  inline void getValuesOnly(point_type x)$/;"	f	class:qmcplusplus::CubicBsplineGroup
getVariables	OrbitalConstraintsBase.cpp	/^bool OrbitalConstraintsBase::getVariables(xmlNodePtr cur)$/;"	f	class:qmcplusplus::OrbitalConstraintsBase
get_APW_radius	MuffinTin.h	/^  inline double get_APW_radius ()$/;"	f	class:qmcplusplus::MuffinTinClass
get_blend_radius	MuffinTin.h	/^  inline double get_blend_radius()$/;"	f	class:qmcplusplus::MuffinTinClass
get_indices	SPOSetInputInfo.cpp	/^  SPOSetInputInfo::indices_t& SPOSetInputInfo::get_indices(const std::vector<SPOSetInfo*>& states_vec)$/;"	f	class:qmcplusplus::SPOSetInputInfo
get_indices	SPOSetInputInfo.h	/^    inline indices_t& get_indices(xmlNodePtr cur,const std::vector<SPOSetInfo*>& states_vec)$/;"	f	struct:qmcplusplus::SPOSetInputInfo
get_k	EinsplineSet.h	/^  PosType get_k(int orb)$/;"	f	class:qmcplusplus::EinsplineSetExtended
get_k	ElectronGas/ElectronGasOrbitalBuilder.h	/^  PosType get_k(int i)$/;"	f	struct:qmcplusplus::RealEGOSet
get_k	SPOSetBase.h	/^  virtual PosType get_k(int orb)$/;"	f	class:qmcplusplus::SPOSetBase
get_nc	ElectronGas/HEGGrid.h	/^  inline int get_nc(int nstates) const$/;"	f	struct:qmcplusplus::HEGGrid
get_num_core	MuffinTin.h	/^  inline int get_num_core()$/;"	f	class:qmcplusplus::MuffinTinClass
get_num_orbitals	MuffinTin.h	/^  inline int get_num_orbitals()$/;"	f	class:qmcplusplus::MuffinTinClass
get_poly_coefs	AtomicOrbital.h	/^  Array<StorageType,3>& get_poly_coefs()$/;"	f	class:qmcplusplus::AtomicOrbital
get_psi_g	BsplineReaderBase.cpp	/^  void BsplineReaderBase::get_psi_g(int ti, int spin, int ib, Vector<std::complex<double> >& cG)$/;"	f	class:qmcplusplus::BsplineReaderBase
get_psi_g	legacy/SplineAdoptorReader.h	/^  void get_psi_g(int ti, int spin, int ib, Vector<std::complex<double> >& cG)$/;"	f	struct:qmcplusplus::BsplineReaderBase
get_radial_spline	AtomicOrbital.h	/^  SplineType* get_radial_spline ()$/;"	f	class:qmcplusplus::AtomicOrbital
get_ratios	Fermion/DiracDeterminantBase.cpp	/^void DiracDeterminantBase::get_ratios(ParticleSet& P, std::vector<ValueType>& ratios)$/;"	f	class:qmcplusplus::DiracDeterminantBase
get_ratios	Fermion/DiracDeterminantWithBackflow.cpp	/^void DiracDeterminantWithBackflow::get_ratios(ParticleSet& P, std::vector<ValueType>& ratios)$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
get_ratios	Fermion/SlaterDet.cpp	/^void SlaterDet::get_ratios(ParticleSet& P, std::vector<ValueType>& ratios)$/;"	f	class:qmcplusplus::SlaterDet
get_ratios	Fermion/SlaterDetWithBackflow.cpp	/^void SlaterDetWithBackflow::get_ratios(ParticleSet& P, std::vector<ValueType>& ratios)$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
get_ratios	Jastrow/OneBodyJastrowOrbital.h	/^  inline void get_ratios(ParticleSet& P, std::vector<ValueType>& ratios)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
get_ratios	Jastrow/OneBodySpinJastrowOrbital.h	/^  inline void get_ratios(ParticleSet& P, std::vector<ValueType>& ratios)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
get_ratios	Jastrow/TwoBodyJastrowOrbital.h	/^  inline void get_ratios(ParticleSet& P, std::vector<ValueType>& ratios)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
get_ratios	Jastrow/kSpaceJastrow.cpp	/^inline void kSpaceJastrow::get_ratios(ParticleSet& P, std::vector<kSpaceJastrow::ValueType>& ratios)$/;"	f	class:qmcplusplus::kSpaceJastrow
get_ratios	OrbitalBase.cpp	/^void OrbitalBase::get_ratios(ParticleSet& P, std::vector<ValueType>& ratios)$/;"	f	class:qmcplusplus::OrbitalBase
get_ratios	TrialWaveFunction.cpp	/^void TrialWaveFunction::get_ratios(ParticleSet& P, std::vector<ValueType>& ratios)$/;"	f	class:qmcplusplus::TrialWaveFunction
get_sposet	BasisSetFactory.cpp	/^  SPOSetBase* get_sposet(const std::string& name)$/;"	f	namespace:qmcplusplus
getchi2	Experimental/CuspCorr.h	/^  RealType getchi2()$/;"	f	class:qmcplusplus::CuspCorr
givenTwist	EinsplineSetBuilder.h	/^  TinyVector<double,OHMMS_DIM> givenTwist;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
gmPG	Fermion/MultiSlaterDeterminantFast.h	/^  ParticleSet::ParticleGradient_t gmPG;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
grad1	Experimental/CuspCorr.h	/^  GradVector_t  grad1;$/;"	m	class:qmcplusplus::CuspCorr
grad2	Experimental/CuspCorr.h	/^  GradVector_t  grad2;$/;"	m	class:qmcplusplus::CuspCorr
gradLapl	Fermion/DiracDeterminantBase.h	/^  gradLapl (MCWalkerConfiguration &W, GradMatrix_t &grads,$/;"	f	class:qmcplusplus::DiracDeterminantBase
gradLapl	Fermion/DiracDeterminantCUDA.cpp	/^DiracDeterminantCUDA::gradLapl (MCWalkerConfiguration &W, GradMatrix_t &grads,$/;"	f	class:qmcplusplus::DiracDeterminantCUDA
gradLapl	Fermion/SlaterDet.h	/^  void gradLapl (MCWalkerConfiguration &W, GradMatrix_t &grads, ValueMatrix_t &lapl)$/;"	f	class:qmcplusplus::SlaterDet
gradLapl	Fermion/determinant_update.h	/^  void *A, *Ainv, *newRow, *AinvDelta, *AinvColk, *gradLapl, *newGradLapl, *dummy;$/;"	m	struct:updateJob
gradLapl	Jastrow/OneBodyJastrowOrbitalBspline.cpp	/^OneBodyJastrowOrbitalBspline::gradLapl (MCWalkerConfiguration &W,$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
gradLapl	Jastrow/TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::gradLapl (MCWalkerConfiguration &W,$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
gradLapl	OrbitalBase.h	/^  gradLapl (MCWalkerConfiguration &W, GradMatrix_t &grads,$/;"	f	struct:qmcplusplus::OrbitalBase
gradLapl	TrialWaveFunction_CUDA.cpp	/^TrialWaveFunction::gradLapl (MCWalkerConfiguration &W, GradMatrix_t &grads,$/;"	f	class:qmcplusplus::TrialWaveFunction
gradLaplList	Fermion/DiracDeterminantCUDA.h	/^                              AinvDeltaList, AinvColkList, gradLaplList, newGradLaplList, $/;"	m	class:qmcplusplus::DiracDeterminantCUDA
gradLaplList_d	Fermion/DiracDeterminantCUDA.h	/^                                    AinvDeltaList_d, AinvColkList_d, gradLaplList_d, $/;"	m	class:qmcplusplus::DiracDeterminantCUDA
gradLaplOffset	Fermion/DiracDeterminantCUDA.h	/^         AinvColkOffset, gradLaplOffset, newGradLaplOffset, $/;"	m	class:qmcplusplus::DiracDeterminantCUDA
gradLapl_d	Fermion/DiracDeterminantCUDA.h	/^  gpu::device_vector<CudaValueType> gradLapl_d;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
gradLapl_host	Fermion/DiracDeterminantCUDA.h	/^  gpu::host_vector<CudaValueType> gradLapl_host;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
gradLogPsi	DiffOrbitalBase.h	/^  GradVectorType gradLogPsi, dg_p, dg_m;$/;"	m	struct:qmcplusplus::NumericalDiffOrbital
gradLogPsi	DiffOrbitalBase.h	/^  GradVectorType gradLogPsi;$/;"	m	struct:qmcplusplus::AnalyticDiffOrbital
gradLogPsi	Jastrow/DiffOneBodyJastrowOrbital.h	/^  std::vector<GradVectorType*> gradLogPsi;$/;"	m	class:qmcplusplus::DiffOneBodyJastrowOrbital
gradLogPsi	Jastrow/DiffOneBodySpinJastrowOrbital.h	/^  std::vector<GradVectorType*> gradLogPsi;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
gradLogPsi	Jastrow/DiffTwoBodyJastrowOrbital.h	/^  std::vector<GradVectorType*> gradLogPsi;$/;"	m	class:qmcplusplus::DiffTwoBodyJastrowOrbital
gradLogPsi	Jastrow/eeI_JastrowOrbital.h	/^  Array<PosType,2> gradLogPsi;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
grad_gradV	Fermion/DiracDeterminantWithBackflow.h	/^  HessVector_t grad_gradV;$/;"	m	class:qmcplusplus::DiracDeterminantWithBackflow
grad_gradV	Fermion/MultiDiracDeterminantWithBackflow.h	/^  HessVector_t grad_gradV;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
grad_gradV	Fermion/SPOSetProxyForMSD.h	/^  HessVector_t grad_gradV;$/;"	m	struct:qmcplusplus::SPOSetProxyForMSD
grad_grad_Phi	BasisSetBase.h	/^  HessVector_t  grad_grad_Phi;$/;"	m	struct:qmcplusplus::BasisSetBase
grad_grad_gradV	Fermion/SPOSetProxyForMSD.h	/^  GGGVector_t  grad_grad_gradV;$/;"	m	struct:qmcplusplus::SPOSetProxyForMSD
grad_grad_grad_Phi	BasisSetBase.h	/^  GGGVector_t  grad_grad_grad_Phi;$/;"	m	struct:qmcplusplus::BasisSetBase
grad_grad_grad_psiM	Fermion/DiracDeterminantWithBackflow.h	/^  GGGMatrix_t  grad_grad_grad_psiM;$/;"	m	class:qmcplusplus::DiracDeterminantWithBackflow
grad_grad_grad_psiM	Fermion/MultiDiracDeterminantWithBackflow.h	/^  GGGMatrix_t  grad_grad_grad_psiM;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
grad_grad_grad_psiM	Fermion/SPOSetProxyForMSD.h	/^  GGGMatrix_t  grad_grad_grad_psiM;$/;"	m	struct:qmcplusplus::SPOSetProxyForMSD
grad_grad_psiM	Fermion/DiracDeterminantWithBackflow.h	/^  HessMatrix_t grad_grad_psiM;$/;"	m	class:qmcplusplus::DiracDeterminantWithBackflow
grad_grad_psiM	Fermion/MultiDiracDeterminantWithBackflow.h	/^  HessMatrix_t grad_grad_psiM;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
grad_grad_psiM	Fermion/SPOSetProxyForMSD.h	/^  HessMatrix_t grad_grad_psiM;$/;"	m	struct:qmcplusplus::SPOSetProxyForMSD
grad_grad_psiM_temp	Fermion/DiracDeterminantWithBackflow.h	/^  HessMatrix_t grad_grad_psiM_temp;$/;"	m	class:qmcplusplus::DiracDeterminantWithBackflow
grad_grad_psiM_temp	Fermion/MultiDiracDeterminantWithBackflow.h	/^  HessMatrix_t grad_grad_psiM_temp;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
grad_grad_source_psiM	Fermion/DiracDeterminantBase.h	/^  HessMatrix_t  grad_grad_source_psiM;$/;"	m	class:qmcplusplus::DiracDeterminantBase
grad_lapl	EinsplineSet.h	/^  T *phi, *grad_lapl;$/;"	m	struct:qmcplusplus::AtomicPolyJob
grad_lapl	EinsplineSet.h	/^  T *phi, *grad_lapl;$/;"	m	struct:qmcplusplus::AtomicSplineJob
grad_lapl_source_psiM	Fermion/DiracDeterminantBase.h	/^  GradMatrix_t grad_source_psiM, grad_lapl_source_psiM;$/;"	m	class:qmcplusplus::DiracDeterminantBase
grad_phi_Minv	Fermion/DiracDeterminantBase.h	/^  GradMatrix_t phi_alpha_Minv, grad_phi_Minv;$/;"	m	class:qmcplusplus::DiracDeterminantBase
grad_phi_alpha_Minv	Fermion/DiracDeterminantBase.h	/^  HessMatrix_t grad_phi_alpha_Minv;$/;"	m	class:qmcplusplus::DiracDeterminantBase
grad_source_psiM	Fermion/DiracDeterminantBase.h	/^  GradMatrix_t grad_source_psiM, grad_lapl_source_psiM;$/;"	m	class:qmcplusplus::DiracDeterminantBase
grad_temp	Fermion/MultiSlaterDeterminant.h	/^  GradVector_t grad_temp;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
grad_type	HarmonicOscillator/SHOSet.h	/^    typedef GradMatrix_t::value_type grad_type;$/;"	t	struct:qmcplusplus::SHOSet
grads	Fermion/MultiDiracDeterminantBase.h	/^  GradMatrix_t grads,new_grads;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
grads	Fermion/MultiDiracDeterminantWithBackflow.h	/^  GradMatrix_t grads,new_grads;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
grads_bf	Fermion/MultiDiracDeterminantWithBackflow.h	/^  GradMatrix_t grads_bf;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
grads_dn	Fermion/MultiSlaterDeterminant.h	/^  Vector<ParticleSet::ParticleGradient_t> grads_dn;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
grads_up	Fermion/MultiSlaterDeterminant.h	/^  Vector<ParticleSet::ParticleGradient_t> grads_up;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
grid	MolecularOrbitals/NGOBuilder.h	/^  inline grid_type& grid()$/;"	f	struct:qmcplusplus::NGOrbital
gridPtr	Jastrow/Experimental/NJAABuilder.h	/^  xmlNodePtr gridPtr;$/;"	m	struct:qmcplusplus::NJAABuilder
gridPtr	Jastrow/Experimental/NJABBuilder.h	/^  xmlNodePtr gridPtr;$/;"	m	struct:qmcplusplus::NJABBuilder
grid_ref	Experimental/Spline3DBuilder.h	/^  Grid3D* grid_ref;$/;"	m	class:qmcplusplus::Spline3DBuilder
grid_ref	Experimental/TriCubicSplineBuilder.h	/^  Grid3D* grid_ref;$/;"	m	class:qmcplusplus::TriCubicSplineBuilder
grid_type	Jastrow/SplineFunctors.h	/^  typedef OneDimGridBase<real_type> grid_type;$/;"	t	struct:qmcplusplus::CubicSplineBasisSet
grid_type	Jastrow/SplineFunctors.h	/^  typedef OneDimGridBase<real_type> grid_type;$/;"	t	struct:qmcplusplus::CubicSplineSingle
grid_type	MolecularOrbitals/NGOBuilder.h	/^  typedef OneDimGridBase<real_type>    grid_type;$/;"	t	struct:qmcplusplus::NGOrbital
ground	Fermion/excitation_node.h	/^  unsigned long ground;$/;"	m	struct:qmcplusplus::excitation_node
group	SPOSetInputInfo.h	/^    int group;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
gvecs	Experimental/PlaneWaveBasis.h	/^  std::vector<TinyVector<int,3> > gvecs; \/\/Reduced coordinates$/;"	m	class:qmcplusplus::PlaneWaveBasis
gvecs	PlaneWave/PWBasis.h	/^  std::vector<GIndex_t> gvecs;$/;"	m	class:qmcplusplus::PWBasis
gvecs_shifted	PlaneWave/PWBasis.h	/^  std::vector<GIndex_t> gvecs_shifted;$/;"	m	class:qmcplusplus::PWBasis
handler	Jastrow/LRTwoBodyJastrow.h	/^  HandlerType* handler;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
hasComplexData	PlaneWave/PWParameterSet.cpp	/^bool PWParameterSet::hasComplexData(hid_t h_file)$/;"	f	class:qmcplusplus::PWParameterSet
hasSpin	PlaneWave/PWParameterSet.h	/^  bool hasSpin;$/;"	m	struct:qmcplusplus::PWParameterSet
has_degeneracy	SPOInfo.h	/^    inline bool has_degeneracy()$/;"	f	struct:qmcplusplus::SPOInfo
has_ecut	SPOSetInputInfo.h	/^    bool has_ecut;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
has_energies	SPOSetInfo.cpp	/^  bool SPOSetInfo::has_energies() const$/;"	f	class:qmcplusplus::SPOSetInfo
has_energies	SPOSetInputInfo.h	/^    bool has_energies;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
has_energy	SPOInfo.h	/^    inline bool has_energy()$/;"	f	struct:qmcplusplus::SPOInfo
has_energy_info	SPOSetInputInfo.h	/^    bool has_energy_info;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
has_energy_range	SPOSetInputInfo.h	/^    bool has_energy_range;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
has_index	SPOInfo.h	/^    inline bool has_index()$/;"	f	struct:qmcplusplus::SPOInfo
has_index_info	SPOSetInputInfo.h	/^    bool has_index_info;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
has_index_range	SPOSetInputInfo.h	/^    bool has_index_range;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
has_indices	SPOSetInfo.cpp	/^  bool SPOSetInfo::has_indices() const$/;"	f	class:qmcplusplus::SPOSetInfo
has_indices	SPOSetInputInfo.h	/^    bool has_indices;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
has_occ	SPOSetInputInfo.h	/^    bool has_occ;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
has_size	SPOSetInputInfo.h	/^    bool has_size;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
has_twist	ElectronGas/ElectronGasComplexOrbitalBuilder.h	/^  bool has_twist;$/;"	m	class:qmcplusplus::ElectronGasBasisBuilder
hbs2m	Jastrow/LRBreakupUtilities.h	/^  T hbs2m;$/;"	m	struct:qmcplusplus::RPABFeeBreakup
hdf_dual_grid	SplineMixedAdoptor.h	/^struct hdf_dual_grid$/;"	s	namespace:qmcplusplus
hermite	HarmonicOscillator/SHOSet.h	/^    Array<RealType,2> hermite;$/;"	m	struct:qmcplusplus::SHOSet
hfileID	Experimental/TricubicBsplineSetBuilder.h	/^  hid_t hfileID;$/;"	m	class:qmcplusplus::TricubicBsplineSetBuilder
hfileID	PlaneWave/PWOrbitalBuilder.h	/^  hid_t hfileID;$/;"	m	class:qmcplusplus::PWOrbitalBuilder
highest_energy	SPOSetInputInfo.h	/^    RealType highest_energy;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
highest_index	SPOSetInputInfo.h	/^    int highest_index;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
hostPos	EinsplineSet.h	/^  std::vector<CudaPosType> hostPos;$/;"	m	class:qmcplusplus::EinsplineSetExtended
hostSign	EinsplineSet.h	/^  gpu::host_vector<CudaRealType> hostSign, NLhostSign;$/;"	m	class:qmcplusplus::EinsplineSetExtended
iGroups	Jastrow/eeI_JastrowOrbital.h	/^  int eGroups, iGroups;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
iSmall	MuffinTin.h	/^  int iSmall;$/;"	m	class:qmcplusplus::MuffinTinClass
iSpecies	Jastrow/BsplineFunctor3D.h	/^  std::string iSpecies, eSpecies1, eSpecies2;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
iSpecies	Jastrow/PolynomialFunctor3D.h	/^  std::string iSpecies, eSpecies1, eSpecies2;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
iat	Fermion/determinant_update.h	/^  int iat;$/;"	m	struct:updateJob
iatList	Fermion/DiracDeterminantCUDA.h	/^  gpu::host_vector<int> iatList;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
iatList_d	Fermion/DiracDeterminantCUDA.h	/^  gpu::device_vector<int> iatList_d;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
idealEL	Experimental/CuspCorr.h	/^  RealType idealEL(RealType r)$/;"	f	class:qmcplusplus::CuspCorr
ii	Fermion/ExcitationClass.h	/^  TinyVector<int,2> ii;$/;"	m	class:qmcplusplus::ExcitationClass
img	AtomicOrbitalCuda.h	/^  T img[3];$/;"	m	class:HybridData
inFunc	Jastrow/CompositeFunctor.h	/^  OptimizableFunctorBase* inFunc;$/;"	m	struct:qmcplusplus::TruncatedPadeFunctor
inVars	OrbitalConstraintsBase.h	/^  std::map<std::string,std::pair<std::string,RealType> > inVars;$/;"	m	struct:qmcplusplus::OrbitalConstraintsBase
ind_dims	HarmonicOscillator/SHOSetBuilder.h	/^    TinyVector<int,DIM> ind_dims;$/;"	m	struct:qmcplusplus::SHOSetBuilder
index	Fermion/BackflowTransformation.h	/^  std::vector<int> indexQP, index;$/;"	m	class:qmcplusplus::BackflowTransformation
index	Jastrow/PolynomialFunctor3D.h	/^  Array<int,3> index;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
index	SPOInfo.h	/^    int index;$/;"	m	struct:qmcplusplus::SPOInfo
indexOfFirstParam	Fermion/BackflowFunctionBase.h	/^  int indexOfFirstParam;$/;"	m	class:qmcplusplus::BackflowFunctionBase
indexOffset	Fermion/Backflow_eI.h	/^  indexOffset()$/;"	f	class:qmcplusplus::Backflow_eI
indexOffset	Fermion/Backflow_eI_spin.h	/^  indexOffset()$/;"	f	class:qmcplusplus::Backflow_eI_spin
indexOffset	Fermion/Backflow_ee.h	/^  indexOffset()$/;"	f	class:qmcplusplus::Backflow_ee
indexOffset	Fermion/Backflow_ee_kSpace.h	/^  indexOffset()$/;"	f	class:qmcplusplus::Backflow_ee_kSpace
indexQP	Fermion/BackflowTransformation.h	/^  std::vector<int> indexQP, index;$/;"	m	class:qmcplusplus::BackflowTransformation
index_max	SPOSetInfo.h	/^    int index_max;$/;"	m	class:qmcplusplus::SPOSetInfo
index_max	SPOSetInputInfo.h	/^    int index_max;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
index_min	SPOSetInfo.h	/^    int index_min;$/;"	m	class:qmcplusplus::SPOSetInfo
index_min	SPOSetInputInfo.h	/^    int index_min;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
index_order	SPOInfo.h	/^    inline bool index_order(const SPOInfo* left, const SPOInfo* right)$/;"	f	namespace:qmcplusplus::spoinfo
index_ordered	SPOInfo.h	/^    enum orderings{index_ordered=0,energy_ordered,energy_and_index_ordered,unordered,no_order};$/;"	e	enum:qmcplusplus::spoinfo::orderings
index_ordered	SPOSetInfo.cpp	/^  bool SPOSetInfo::index_ordered() const$/;"	f	class:qmcplusplus::SPOSetInfo
index_sort	SPOSetInfo.cpp	/^  void SPOSetInfo::index_sort()$/;"	f	class:qmcplusplus::SPOSetInfo
index_sort	SPOSetInfo.h	/^    void index_sort()$/;"	f	struct:qmcplusplus::SPOSetInfoSimple
indices	SPOSetInputInfo.h	/^    indices_t indices;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
indices_present	SPOSetInfo.h	/^    bool indices_present;$/;"	m	class:qmcplusplus::SPOSetInfo
indices_t	BasisSetBase.h	/^  typedef std::vector<int> indices_t;$/;"	t	struct:qmcplusplus::BasisSetBuilder
indices_t	SPOSetInputInfo.h	/^    typedef std::vector<int> indices_t;$/;"	t	struct:qmcplusplus::SPOSetInputInfo
indx	Jastrow/singleRPAJastrowBuilder.h	/^  int indx,ng;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
init	Jastrow/TwoBodyJastrowOrbital.h	/^  void init(ParticleSet& p)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
init	Jastrow/eeI_JastrowOrbital.h	/^  void init(ParticleSet& p)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
init	legacy/SplineAdoptorReader.h	/^  void init(EinsplineSet* in, SPE* out)$/;"	f	struct:qmcplusplus::BsplineReaderBase
initGPU	EinsplineSetCuda.cpp	/^EinsplineSetExtended<double>::initGPU()$/;"	f	class:qmcplusplus::EinsplineSetExtended
initGPU	EinsplineSetCuda.cpp	/^EinsplineSetExtended<std::complex<double> >::initGPU()$/;"	f	class:qmcplusplus::EinsplineSetExtended
initGPU	EinsplineSetCuda.cpp	/^EinsplineSetHybrid<double>::initGPU()$/;"	f	class:qmcplusplus::EinsplineSetHybrid
initGPU	EinsplineSetCuda.cpp	/^EinsplineSetHybrid<std::complex<double> >::initGPU()$/;"	f	class:qmcplusplus::EinsplineSetHybrid
initGPU	SPOSetBase.h	/^  virtual void initGPU() {  }$/;"	f	class:qmcplusplus::SPOSetBase
initGrid	Experimental/TricubicBsplineSetBuilder.cpp	/^void TricubicBsplineSetBuilder::initGrid()$/;"	f	class:qmcplusplus::TricubicBsplineSetBuilder
initUnique	Jastrow/eeI_JastrowOrbital.h	/^  void initUnique()$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
initWithRPA	Jastrow/BsplineJastrowBuilder.cpp	/^  inline void initWithRPA(ParticleSet& P,  BsplineFunctor<T>& bfunc, T fac)$/;"	f	struct:qmcplusplus::BsplineInitializer
init_APW	MuffinTin.cpp	/^MuffinTinClass::init_APW (Vector<double> rgrid,$/;"	f	class:qmcplusplus::MuffinTinClass
init_base	EinsplineAdoptor.h	/^  inline void init_base(int n)$/;"	f	struct:qmcplusplus::SplineAdoptorBase
init_driver_vars_singlet_or_triplet	FDLRWfn.h	/^    void init_driver_vars_singlet_or_triplet() {$/;"	f	class:qmcplusplus::FDLRWfn
init_spline	Experimental/EinsplineMixedAdoptor.h	/^  void init_spline(UBspline* dense, UBspline* coarse, int ival)$/;"	f	struct:qmcplusplus::SplineMixedAdoptor
init_spline	Experimental/EinsplineMixedAdoptor.h	/^  void init_spline(UBspline* dense, UBspline* coarse, int ival)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
init_spline	Experimental/SplineOpenAdoptor.h	/^  void init_spline(UBspline* dense, UBspline* coarse, int ival)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
initialize	DiffOrbitalBase.h	/^  virtual void initialize() {}$/;"	f	struct:qmcplusplus::DiffOrbitalBase
initialize	Fermion/Backflow_ee_kSpace.h	/^  void initialize(ParticleSet&P, std::vector<RealType>& yk)$/;"	f	class:qmcplusplus::Backflow_ee_kSpace
initialize	HarmonicOscillator/SHOSet.cpp	/^  void SHOSet::initialize()$/;"	f	class:qmcplusplus::SHOSet
initialize	Jastrow/BsplineFunctor.h	/^  void initialize(int numPoints, std::vector<real_type>& x, std::vector<real_type>& y$/;"	f	struct:qmcplusplus::BsplineFunctor
initialize	Jastrow/CubicBsplineGroup.h	/^  void  initialize(FNIN* in_, point_type rmax, int npts)$/;"	f	class:qmcplusplus::CubicBsplineGroup
initialize	Jastrow/CubicBsplineGroup.h	/^  void initialize(point_type start, point_type end, const container_type& datain, bool closed,$/;"	f	class:qmcplusplus::CubicBsplineGroup
initialize	Jastrow/NumericalJastrowFunctor.h	/^  void initialize(FNIN* in_, typename FNOUT::grid_type* agrid, real_type rcut)$/;"	f	struct:qmcplusplus::NumericalJastrow
initialize	Jastrow/SplineFunctors.h	/^  void initialize(FNIN* in_, grid_type* agrid)$/;"	f	struct:qmcplusplus::CubicSplineBasisSet
initialize	Jastrow/SplineFunctors.h	/^  void initialize(FNIN* in_, grid_type* agrid)$/;"	f	struct:qmcplusplus::CubicSplineSingle
initialize	Jastrow/SplineFunctors.h	/^  void initialize(FNIN* in_, real_type rmax, int npts)$/;"	f	struct:qmcplusplus::CubicSplineSingle
initialize_matrices	LCOrbitalSetOpt.h	/^    void initialize_matrices() {$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
initialize_spline_pio	SplineAdoptorReaderP.h	/^  void initialize_spline_pio(int spin, const BandInfoGroup& bandgroup)$/;"	f	struct:qmcplusplus::SplineAdoptorReader
initialize_spline_pio	SplineMixedAdoptorReaderP.h	/^  void initialize_spline_pio(int spin, const BandInfoGroup& bandgroup)$/;"	f	struct:qmcplusplus::SplineMixedAdoptorReader
initialize_spline_pio_bcast	SplineAdoptorReaderP.h	/^  void initialize_spline_pio_bcast(int spin, const BandInfoGroup& bandgroup)$/;"	f	struct:qmcplusplus::SplineAdoptorReader
initialize_spline_pio_bcast	SplineMixedAdoptorReaderP.h	/^  void initialize_spline_pio_bcast(int spin, const BandInfoGroup& bandgroup)$/;"	f	struct:qmcplusplus::SplineMixedAdoptorReader
initialize_spline_psi_r	SplineAdoptorReaderP.h	/^  void initialize_spline_psi_r(int spin, const BandInfoGroup& bandgroup)$/;"	f	struct:qmcplusplus::SplineAdoptorReader
initialize_spline_slow	SplineAdoptorReaderP.h	/^  void initialize_spline_slow(int spin, const BandInfoGroup& bandgroup)$/;"	f	struct:qmcplusplus::SplineAdoptorReader
initialize_spline_slow	SplineMixedAdoptorReaderP.h	/^  void initialize_spline_slow(int spin, const BandInfoGroup& bandgroup)$/;"	f	struct:qmcplusplus::SplineMixedAdoptorReader
initialize_spo2band	BsplineReaderBase.cpp	/^  void BsplineReaderBase::initialize_spo2band(int spin, const std::vector<BandInfo>& bigspace, SPOSetInfo& sposet, std::vector<int>& spo2band)$/;"	f	class:qmcplusplus::BsplineReaderBase
inone	SPOSetInputInfo.cpp	/^  const int      inone = std::numeric_limits<int>::min();$/;"	m	namespace:qmcplusplus	file:
input_grid	MolecularOrbitals/NGOBuilder.h	/^  GridType *input_grid;$/;"	m	class:qmcplusplus::NGOBuilder
inputmap	Experimental/PlaneWaveBasis.h	/^  std::vector<int> inputmap;$/;"	m	class:qmcplusplus::PlaneWaveBasis
inputmap	PlaneWave/PWBasis.h	/^  std::vector<int> inputmap;$/;"	m	class:qmcplusplus::PWBasis
insert_columns	CompositeSPOSet.cpp	/^      inline void insert_columns(const MAT1& small, MAT2& big, int offset_c)$/;"	f	namespace:qmcplusplus::MatrixOperators
inside	MuffinTin.cpp	/^MuffinTinClass::inside(TinyVector<double,3> r)$/;"	f	class:qmcplusplus::MuffinTinClass
inside	MuffinTin.cpp	/^MuffinTinClass::inside(TinyVector<double,3> r,$/;"	f	class:qmcplusplus::MuffinTinClass
integrate_r2	Jastrow/LRBreakupUtilities.h	/^  inline T integrate_r2(T rc)$/;"	f	struct:qmcplusplus::DerivRPABreakup
integrate_r2	Jastrow/LRBreakupUtilities.h	/^  inline T integrate_r2(T rc)$/;"	f	struct:qmcplusplus::DerivYukawaBreakup
integrate_r2	Jastrow/LRBreakupUtilities.h	/^  inline T integrate_r2(T rc)$/;"	f	struct:qmcplusplus::EPRPABreakup
integrate_r2	Jastrow/LRBreakupUtilities.h	/^  inline T integrate_r2(T rc)$/;"	f	struct:qmcplusplus::RPABFeeBreakup
integrate_r2	Jastrow/LRBreakupUtilities.h	/^  inline T integrate_r2(T rc)$/;"	f	struct:qmcplusplus::RPABreakup
integrate_r2	Jastrow/LRBreakupUtilities.h	/^  inline T integrate_r2(T rc)$/;"	f	struct:qmcplusplus::YukawaBreakup
integrate_r2	Jastrow/LRBreakupUtilities.h	/^  inline T integrate_r2(T rc)$/;"	f	struct:qmcplusplus::derivEPRPABreakup
interpolate	Jastrow/CubicBsplineGroup.h	/^  inline value_type interpolate(value_type p0, value_type p1, value_type p2, value_type p3)$/;"	f	class:qmcplusplus::CubicBsplineGroup
interpolate	Jastrow/CubicBsplineGroup.h	/^  inline value_type interpolate(value_type p0, value_type p1, value_type p2, value_type p3,$/;"	f	class:qmcplusplus::CubicBsplineGroup
inverse	Fermion/ci_node.h	/^  ValueMatrix inverse;$/;"	m	struct:qmcplusplus::ci_node
inverse	Fermion/excitation_node.h	/^  matrix_type inverse;$/;"	m	struct:qmcplusplus::excitation_node
inverseUpdate	Fermion/excitation_node.h	/^  inline void inverseUpdate(const matrix_type& psi_big, std::vector<excitation_node>& ci, std::vector<T>& ratios$/;"	f	struct:qmcplusplus::excitation_node
inverseUpdateByColumn	Fermion/excitation_node.h	/^  void inverseUpdateByColumn(const matrix_type& psi_big , std::vector<excitation_node>& ci , std::vector<T>& ratios$/;"	f	struct:qmcplusplus::excitation_node
inverseUpdateByRow	Fermion/excitation_node.h	/^  void inverseUpdateByRow(const matrix_type& psi_big , std::vector<excitation_node>& ci , std::vector<T>& ratios$/;"	f	struct:qmcplusplus::excitation_node
ion	AtomicOrbitalCuda.h	/^  int ion;$/;"	m	class:HybridData
ionDerivs	OrbitalBase.h	/^  bool ionDerivs;$/;"	m	struct:qmcplusplus::OrbitalBase
ionDerivs	SPOSetBase.h	/^  bool ionDerivs;$/;"	m	class:qmcplusplus::SPOSetBase
ionorb_tag	OrbitalBuilderBase.cpp	/^std::string OrbitalBuilderBase::ionorb_tag="ionwf";$/;"	m	class:qmcplusplus::OrbitalBuilderBase	file:
ionorb_tag	OrbitalBuilderBase.h	/^  static std::string ionorb_tag;$/;"	m	class:qmcplusplus::OrbitalBuilderBase
ions	SPOSetScanner.h	/^    ParticleSet* ions;$/;"	m	class:qmcplusplus::SPOSetScanner
ionsGroup	EinsplineSetBuilder.h	/^  std::string parameterGroup, ionsGroup, eigenstatesGroup;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
isOptimizable	Fermion/BackflowTransformation.h	/^  inline bool isOptimizable()$/;"	f	class:qmcplusplus::BackflowTransformation
isOptimizable	Fermion/Backflow_eI.h	/^  inline bool isOptimizable()$/;"	f	class:qmcplusplus::Backflow_eI
isOptimizable	Fermion/Backflow_eI_spin.h	/^  inline bool isOptimizable()$/;"	f	class:qmcplusplus::Backflow_eI_spin
isOptimizable	Fermion/Backflow_ee.h	/^  inline bool isOptimizable()$/;"	f	class:qmcplusplus::Backflow_ee
isOptimizable	Fermion/Backflow_ee_kSpace.h	/^  inline bool isOptimizable()$/;"	f	class:qmcplusplus::Backflow_ee_kSpace
isOptimizable	Jastrow/BsplineFunctor.h	/^  bool isOptimizable()$/;"	f	struct:qmcplusplus::BsplineFunctor
isOptimizable	Jastrow/SplineFunctors.h	/^  bool isOptimizable()$/;"	f	struct:qmcplusplus::CubicSplineSingle
isSingle	Fermion/ci_configuration.h	/^  bool isSingle(const ci_configuration &c, int &rem, int &add) const$/;"	f	struct:qmcplusplus::ci_configuration
is_complete	SPOSetInfo.h	/^    bool is_complete;$/;"	m	class:qmcplusplus::SPOSetInfo
is_complex	EinsplineAdoptor.h	/^  bool is_complex;$/;"	m	struct:qmcplusplus::SplineAdoptorBase
is_complex	MultiGridBsplineSet.h	/^    bool is_complex;$/;"	m	struct:qmcplusplus::MultiGridBsplineSet
is_of_type_LCOrbitalSetOpt	LCOrbitalSetOpt.h	/^    bool is_of_type_LCOrbitalSetOpt() const { return true; }$/;"	f	class:qmcplusplus::LCOrbitalSetOpt
is_of_type_LCOrbitalSetOpt	SPOSetBase.h	/^  virtual bool is_of_type_LCOrbitalSetOpt() const { return false; }$/;"	f	class:qmcplusplus::SPOSetBase
is_real_bspline	Spline3D/EinsplineSetTemp.hpp	/^  struct is_real_bspline$/;"	s	namespace:qmcplusplus
is_real_bspline	Spline3D/EinsplineSetTemp.hpp	/^  struct is_real_bspline<multi_UBspline_3d_z>$/;"	s	namespace:qmcplusplus
is_same	Experimental/TricubicBsplineSetBuilder.1.cpp	/^  enum {is_same=0};$/;"	e	enum:qmcplusplus::bspline_data_check::__anon6	file:
is_same	Experimental/TricubicBsplineSetBuilder.1.cpp	/^  enum {is_same=1};$/;"	e	enum:qmcplusplus::bspline_data_check::__anon7	file:
is_same	MolecularOrbitals/MolecularBasisBuilder.h	/^  inline bool is_same(const xmlChar* a, const char* b)$/;"	f	class:qmcplusplus::MolecularBasisBuilder
iset_type	Fermion/ci_builder.h	/^  typedef std::set<unsigned long> iset_type;$/;"	t	struct:qmcplusplus::ci_builder
isready	Experimental/EinsplineAdoptorPacked.h	/^  inline bool isready()$/;"	f	struct:qmcplusplus::SplineC2CAdoptorPacked
isready	Experimental/EinsplineAdoptorPacked.h	/^  inline bool isready()$/;"	f	struct:qmcplusplus::SplineC2RAdoptorPacked
isready	Experimental/EinsplineMixedAdoptor.h	/^  inline bool isready()$/;"	f	struct:qmcplusplus::SplineMixedAdoptor
isready	Experimental/EinsplineMixedAdoptor.h	/^  inline bool isready()$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
isready	Experimental/SplineOpenAdoptor.h	/^  inline bool isready()$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
isready	SplineMixedAdoptor.h	/^  inline bool isready()$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
isready	SplineR2RAdoptor.h	/^  inline bool isready()$/;"	f	struct:qmcplusplus::SplineR2RAdoptor
jastrow_tag	OrbitalBuilderBase.cpp	/^std::string OrbitalBuilderBase::jastrow_tag="jastrow";$/;"	m	class:qmcplusplus::OrbitalBuilderBase	file:
jastrow_tag	OrbitalBuilderBase.h	/^  static std::string jastrow_tag;$/;"	m	class:qmcplusplus::OrbitalBuilderBase
jj	Fermion/ExcitationClass.h	/^  TinyVector<int,2> jj;$/;"	m	class:qmcplusplus::ExcitationClass
k	ElectronGas/HEGGrid.h	/^  TinyVector<T,D> k;$/;"	m	struct:qmcplusplus::kpdata
k2	ElectronGas/HEGGrid.h	/^  T k2;$/;"	m	struct:qmcplusplus::kpdata
kPoints	EinsplineAdoptor.h	/^  std::vector<TinyVector<ST,D> >  kPoints;$/;"	m	struct:qmcplusplus::SplineAdoptorBase
kPoints	EinsplineSet.h	/^  Vector<TinyVector<double,OHMMS_DIM> > kPoints;$/;"	m	class:qmcplusplus::EinsplineSetExtended
kPoints	Experimental/EinsplineAdoptorPacked.h	/^  std::vector<PointType>   kPoints;$/;"	m	struct:qmcplusplus::SplineC2CAdoptorPacked
kPoints	Experimental/EinsplineAdoptorPacked.h	/^  std::vector<PointType>   kPoints;$/;"	m	struct:qmcplusplus::SplineC2RAdoptorPacked
kPoints	MuffinTin.h	/^  std::vector<TinyVector<double,3> > kPoints;$/;"	m	class:qmcplusplus::MuffinTinClass
kPoints	Spline3D/twist_handler.hpp	/^      std::vector<point_type> kPoints;$/;"	m	struct:qmcplusplus::twist_handler
kSpaceCoef	Jastrow/kSpaceJastrow.h	/^class kSpaceCoef$/;"	c	namespace:qmcplusplus
kSpaceJastrow	Jastrow/kSpaceJastrow.cpp	/^kSpaceJastrow::kSpaceJastrow(ParticleSet& ions, ParticleSet& elecs,$/;"	f	class:qmcplusplus::kSpaceJastrow
kSpaceJastrow	Jastrow/kSpaceJastrow.cpp	/^kSpaceJastrow::kSpaceJastrow(const ParticleSet& ions, ParticleSet& els):$/;"	f	class:qmcplusplus::kSpaceJastrow
kSpaceJastrow	Jastrow/kSpaceJastrow.h	/^class kSpaceJastrow: public OrbitalBase$/;"	c	namespace:qmcplusplus
kSpaceJastrowBuilder	Jastrow/kSpaceJastrowBuilder.h	/^  kSpaceJastrowBuilder(ParticleSet& target, TrialWaveFunction& psi,$/;"	f	struct:qmcplusplus::kSpaceJastrowBuilder
kSpaceJastrowBuilder	Jastrow/kSpaceJastrowBuilder.h	/^struct kSpaceJastrowBuilder: public OrbitalBuilderBase$/;"	s	namespace:qmcplusplus
kVec	legacy/EinsplineOrb.h	/^  PosType kVec;$/;"	m	class:qmcplusplus::EinsplineOrb
kVector	EinsplineSet.h	/^  PosType TwistVector, kVector;$/;"	m	class:qmcplusplus::EinsplineSet
kVector	Spline3D/twist_handler.hpp	/^      point_type kVector;$/;"	m	struct:qmcplusplus::twist_handler
kappa	Experimental/QDwf.h	/^  double kappa;$/;"	m	class:QDwf
kdotr	ElectronGas/ElectronGasOrbitalBuilder.h	/^  RealType kdotr;$/;"	m	struct:qmcplusplus::RealEGOSet
kf	Jastrow/LRBreakupUtilities.h	/^  T kf;$/;"	m	struct:qmcplusplus::RPABFeeBreakup
kfm	Jastrow/LRBreakupUtilities.h	/^  T kfm[2];$/;"	m	struct:qmcplusplus::RPABFeeBreakup
kpdata	ElectronGas/HEGGrid.h	/^struct kpdata{$/;"	s	namespace:qmcplusplus
kpdata_comp	ElectronGas/HEGGrid.h	/^bool kpdata_comp(const kpdata<T,D>& left, const kpdata<T,D>& right)$/;"	f	namespace:qmcplusplus
kpdata_t	ElectronGas/HEGGrid.h	/^  typedef kpdata<T,2> kpdata_t;$/;"	t	struct:qmcplusplus::HEGGrid
kpdata_t	ElectronGas/HEGGrid.h	/^  typedef kpdata<T,3> kpdata_t;$/;"	t	struct:qmcplusplus::HEGGrid
kplusgvecs_cart	Experimental/PlaneWaveBasis.h	/^  std::vector<TinyVector<RealType,3> > kplusgvecs_cart; \/\/Cartesian.$/;"	m	class:qmcplusplus::PlaneWaveBasis
kplusgvecs_cart	PlaneWave/PWBasis.h	/^  std::vector<PosType>  kplusgvecs_cart; \/\/Cartesian.$/;"	m	class:qmcplusplus::PWBasis
kpoints_grid	ElectronGas/HEGGrid.h	/^  kpoints_t* kpoints_grid;$/;"	m	struct:qmcplusplus::HEGGrid
kpoints_t	ElectronGas/HEGGrid.h	/^  typedef std::vector<kpdata_t > kpoints_t;$/;"	t	struct:qmcplusplus::HEGGrid
kpt	ElectronGas/HEGGrid.h	/^  std::vector<PosType> kpt;$/;"	m	struct:qmcplusplus::HEGGrid
ksq	Spline3D/twist_handler.hpp	/^      std::vector<T> ksq;$/;"	m	struct:qmcplusplus::twist_handler
lMax	AtomicOrbital.h	/^  int lMax, Numlm, NumBands;$/;"	m	class:qmcplusplus::AtomicOrbital
lMax	AtomicOrbitalCuda.h	/^  int lMax, spline_stride, lm_stride;$/;"	m	class:AtomicOrbitalCuda
lMax	AtomicOrbitalCuda.h	/^  int lMax;$/;"	m	class:HybridData
lMax	EinsplineSet.h	/^  int lMax, PolyOrder, YlmIndex;$/;"	m	struct:qmcplusplus::AtomicPolyJob
lMax	EinsplineSet.h	/^  int lMax, YlmIndex;$/;"	m	struct:qmcplusplus::AtomicSplineJob
lMax	EinsplineSet.h	/^  int lMax;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
lMax	MuffinTin.h	/^  int lMax;$/;"	m	class:qmcplusplus::MuffinTinClass
lapLogPsi	DiffOrbitalBase.h	/^  ValueVectorType lapLogPsi, dl_p, dl_m;$/;"	m	struct:qmcplusplus::NumericalDiffOrbital
lapLogPsi	DiffOrbitalBase.h	/^  ValueVectorType lapLogPsi;$/;"	m	struct:qmcplusplus::AnalyticDiffOrbital
lapLogPsi	Jastrow/DiffOneBodyJastrowOrbital.h	/^  std::vector<ValueVectorType*> lapLogPsi;$/;"	m	class:qmcplusplus::DiffOneBodyJastrowOrbital
lapLogPsi	Jastrow/DiffOneBodySpinJastrowOrbital.h	/^  std::vector<ValueVectorType*> lapLogPsi;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
lapLogPsi	Jastrow/DiffTwoBodyJastrowOrbital.h	/^  std::vector<ValueVectorType*> lapLogPsi;$/;"	m	class:qmcplusplus::DiffTwoBodyJastrowOrbital
lapLogPsi	Jastrow/eeI_JastrowOrbital.h	/^  Array<RealType,2> lapLogPsi;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
lapl1	Experimental/CuspCorr.h	/^  ValueVector_t lapl1;$/;"	m	class:qmcplusplus::CuspCorr
lapl2	Experimental/CuspCorr.h	/^  ValueVector_t lapl2;$/;"	m	class:qmcplusplus::CuspCorr
laplSum_dn	Fermion/MultiSlaterDeterminantFast.h	/^  ValueVector_t laplSum_dn;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
laplSum_up	Fermion/MultiSlaterDeterminantFast.h	/^  ValueVector_t laplSum_up;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
lapl_phi_Minv	Fermion/DiracDeterminantBase.h	/^  ValueMatrix_t lapl_phi_Minv;$/;"	m	class:qmcplusplus::DiracDeterminantBase
lapls	Fermion/MultiDiracDeterminantBase.h	/^  ValueMatrix_t lapls,new_lapls;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
lapls	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueMatrix_t lapls,new_lapls;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
lapls_dn	Fermion/MultiSlaterDeterminant.h	/^  Vector<ParticleSet::ParticleLaplacian_t> lapls_dn;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
lapls_up	Fermion/MultiSlaterDeterminant.h	/^  Vector<ParticleSet::ParticleLaplacian_t> lapls_up;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
lastIndex	Jastrow/kSpaceJastrow.h	/^  int firstIndex, lastIndex;$/;"	m	class:qmcplusplus::kSpaceCoef
last_builder	BasisSetFactory.cpp	/^  BasisSetBuilder* BasisSetFactory::last_builder=0;$/;"	m	class:qmcplusplus::BasisSetFactory	file:
last_builder	BasisSetFactory.h	/^  static BasisSetBuilder* last_builder;$/;"	m	class:qmcplusplus::BasisSetFactory
last_spo	EinsplineAdoptor.h	/^  int last_spo;$/;"	m	struct:qmcplusplus::SplineAdoptorBase
legacy	BasisSetBase.h	/^  bool legacy;$/;"	m	struct:qmcplusplus::BasisSetBuilder
legacy_request	SPOSetInputInfo.h	/^    bool legacy_request;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
length	HarmonicOscillator/SHOSet.h	/^    RealType length; $/;"	m	struct:qmcplusplus::SHOSet
length	HarmonicOscillator/SHOSetBuilder.h	/^    RealType length;$/;"	m	struct:qmcplusplus::SHOSetBuilder
lm_stride	AtomicOrbitalCuda.h	/^  int lMax, spline_stride, lm_stride;$/;"	m	class:AtomicOrbitalCuda
lmax	Jastrow/ChebyshevFunctor.h	/^  int lmax;$/;"	m	struct:ChebyshevFunctor
locate	OrbitalSetTraits.h	/^  inline void locate(double r) {}$/;"	f	struct:qmcplusplus::DummyGrid
logRatio	AGPDeterminant.h	/^  ValueType logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::AGPDeterminant
logRatio	Experimental/DiracDeterminant.h	/^  ValueType logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::DiracDeterminant
logRatio	Experimental/SlaterDeterminant.h	/^  inline ValueType logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::SlaterDeterminant
logRatio	Experimental/TwoBodyJastrowFunction.Shared.h	/^  ValueType logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::TwoBodyJastrow
logRatio	Experimental/TwoBodyJastrowFunction.h	/^  ValueType logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::TwoBodyJastrow
logRatio	Fermion/DiracDeterminantBase.cpp	/^DiracDeterminantBase::ValueType DiracDeterminantBase::logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::DiracDeterminantBase
logRatio	Fermion/DiracDeterminantWithBackflow.cpp	/^DiracDeterminantWithBackflow::ValueType DiracDeterminantWithBackflow::logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
logRatio	Fermion/MultiDiracDeterminantBase_help.cpp	/^MultiDiracDeterminantBase::ValueType MultiDiracDeterminantBase::logRatio(ParticleSet& P, int iat,$/;"	f	class:MultiDiracDeterminantBase
logRatio	Fermion/SlaterDet.h	/^  inline ValueType logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::SlaterDet
logRatio	Fermion/SlaterDetWithBackflow.h	/^  inline ValueType logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
logRatio	IonOrbital.cpp	/^IonOrbital::logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::IonOrbital
logRatio	Jastrow/LRTwoBodyJastrow.cpp	/^LRTwoBodyJastrow::logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
logRatio	Jastrow/OneBodyJastrowOrbital.h	/^  inline ValueType logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
logRatio	Jastrow/OneBodySpinJastrowOrbital.h	/^  inline ValueType logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
logRatio	Jastrow/PolarizedJastrow.h	/^  ValueType logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::PolarizedJastrow
logRatio	Jastrow/ThreeBodyBlockSparse.cpp	/^ThreeBodyBlockSparse::logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
logRatio	Jastrow/ThreeBodyGeminal.cpp	/^ThreeBodyGeminal::logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::ThreeBodyGeminal
logRatio	Jastrow/ThreeBodyJastrowOrbital.h	/^  inline ValueType logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
logRatio	Jastrow/ThreeBodyPade.h	/^  inline ValueType logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::ThreeBodyPade
logRatio	Jastrow/kSpaceJastrow.cpp	/^kSpaceJastrow::logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::kSpaceJastrow
logepsilon	Fermion/RNDiracDeterminantBase.h	/^  ValueType logepsilon;$/;"	m	class:qmcplusplus::RNDiracDeterminantBase
logepsilon	Fermion/RNDiracDeterminantBaseAlternate.h	/^  ValueType logepsilon;$/;"	m	class:qmcplusplus::RNDiracDeterminantBaseAlternate
look_for_peers	Fermion/ci_node.h	/^  void look_for_peers(std::vector<configuration>& confg, int& count, std::vector<int>& map2det)$/;"	f	struct:qmcplusplus::ci_node
loop	Experimental/CuspCorr.h	/^  RealType loop(RealType phi0, ValueVector_t X)$/;"	f	class:qmcplusplus::CuspCorr
lowest_energy	SPOSetInputInfo.h	/^    RealType lowest_energy;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
lowest_index	SPOSetInputInfo.h	/^    int lowest_index;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
m	Jastrow/ThreeBodyPade.h	/^    int m, n, o;$/;"	m	struct:qmcplusplus::ThreeBodyPade::Coeff
mAB	Jastrow/ModPadeFunctor.h	/^  real_type mAB;$/;"	m	struct:qmcplusplus::ModPadeFunctor
mGradType	Fermion/DiracDeterminantBase.h	/^  typedef TinyVector<mValueType,DIM> mGradType;$/;"	t	class:qmcplusplus::DiracDeterminantBase
mK2	ElectronGas/ElectronGasComplexOrbitalBuilder.h	/^  std::vector<RealType> mK2;$/;"	m	struct:qmcplusplus::EGOSet
mK2	ElectronGas/ElectronGasOrbitalBuilder.h	/^  std::vector<RealType> mK2;$/;"	m	struct:qmcplusplus::RealEGOSet
mK2	Experimental/Bspline3DSetBase.h	/^  RealType mK2;$/;"	m	struct:qmcplusplus::Bspline3DSetBase
mK2	Experimental/TricubicBsplineTwistSet.h	/^  real_type mK2;$/;"	m	class:qmcplusplus::TricubicBsplineTwistSet
mKK	Experimental/EinsplineAdoptorPacked.h	/^  std::vector<real_type>   mKK;$/;"	m	struct:qmcplusplus::SplineC2RAdoptorPacked
mKK	SplineC2XAdoptor.h	/^  std::vector<ST>   mKK;$/;"	m	struct:qmcplusplus::SplineC2RPackedAdoptor
mOneOverE	Jastrow/CompositeFunctor.h	/^  real_type mOneOverE;$/;"	m	struct:qmcplusplus::CuspCorrectionFunctor
mValueType	Fermion/DiracDeterminantBase.h	/^  typedef ParticleSet::ParticleValue_t mValueType;$/;"	t	class:qmcplusplus::DiracDeterminantBase
mValueType	Fermion/DiracDeterminantBase.h	/^  typedef ValueType mValueType;$/;"	t	class:qmcplusplus::DiracDeterminantBase
m_B	LCOrbitalSetOpt.h	/^    std::vector<RealType> m_B;$/;"	m	class:qmcplusplus::LCOrbitalSetOptTrialFunc
m_act_rot_inds	LCOrbitalSetOpt.h	/^    std::vector<std::pair<int,int> > m_act_rot_inds;$/;"	m	class:qmcplusplus::LCOrbitalSetOptTrialFunc
m_basis_der1	LCOrbitalSetOpt.h	/^    std::vector<ValueType> m_basis_der1;$/;"	m	class:qmcplusplus::LCOrbitalSetOpt
m_basis_der2	LCOrbitalSetOpt.h	/^    std::vector<ValueType> m_basis_der2;$/;"	m	class:qmcplusplus::LCOrbitalSetOpt
m_basis_set	LCOrbitalSetOpt.h	/^    BS * m_basis_set;$/;"	m	class:qmcplusplus::LCOrbitalSetOpt
m_basis_vals	LCOrbitalSetOpt.h	/^    std::vector<ValueType> m_basis_vals;$/;"	m	class:qmcplusplus::LCOrbitalSetOpt
m_dh0	Fermion/SlaterDetOpt.h	/^    SPOSetBase::ValueMatrix_t m_dh0;$/;"	m	class:qmcplusplus::SlaterDetOpt
m_dh1	Fermion/SlaterDetOpt.h	/^    SPOSetBase::ValueMatrix_t m_dh1;$/;"	m	class:qmcplusplus::SlaterDetOpt
m_dh2	Fermion/SlaterDetOpt.h	/^    SPOSetBase::ValueMatrix_t m_dh2;$/;"	m	class:qmcplusplus::SlaterDetOpt
m_dp0	Fermion/SlaterDetOpt.h	/^    SPOSetBase::ValueMatrix_t m_dp0;$/;"	m	class:qmcplusplus::SlaterDetOpt
m_fileid	MolecularOrbitals/NGOBuilder.h	/^  hid_t m_fileid;$/;"	m	class:qmcplusplus::NGOBuilder
m_first	Fermion/SlaterDetOpt.h	/^    int m_first;$/;"	m	class:qmcplusplus::SlaterDetOpt
m_first_var_pos	LCOrbitalSetOpt.h	/^    int m_first_var_pos;$/;"	m	class:qmcplusplus::LCOrbitalSetOptTrialFunc
m_grid	Experimental/QDwf.h	/^  uGrid1D* m_grid;$/;"	m	class:QDwf
m_hder_mat	LCOrbitalSetOpt.h	/^    std::vector<RealType> m_hder_mat;$/;"	m	class:qmcplusplus::LCOrbitalSetOptTrialFunc
m_infunctype	MolecularOrbitals/NGOBuilder.h	/^  std::string m_infunctype;$/;"	m	class:qmcplusplus::NGOBuilder
m_init_B	LCOrbitalSetOpt.h	/^    std::vector<RealType> m_init_B;$/;"	m	class:qmcplusplus::LCOrbitalSetOptTrialFunc
m_last	Fermion/SlaterDetOpt.h	/^    int m_last;$/;"	m	class:qmcplusplus::SlaterDetOpt
m_lc_coeffs	LCOrbitalSetOpt.h	/^    std::vector<ValueType> m_lc_coeffs;$/;"	m	class:qmcplusplus::LCOrbitalSetOpt
m_name	LCOrbitalSetOpt.h	/^    std::string m_name;$/;"	m	class:qmcplusplus::LCOrbitalSetOptTrialFunc
m_nb	LCOrbitalSetOpt.h	/^    int m_nb;$/;"	m	class:qmcplusplus::LCOrbitalSetOptTrialFunc
m_nel	Fermion/SlaterDetOpt.h	/^    int m_nel;$/;"	m	class:qmcplusplus::SlaterDetOpt
m_nlc	LCOrbitalSetOpt.h	/^    int m_nlc;$/;"	m	class:qmcplusplus::LCOrbitalSetOptTrialFunc
m_nlms	Experimental/Any2GridBuilder.h	/^  QuantumNumberType m_nlms;$/;"	m	struct:qmcplusplus::Any2GridBuilder
m_nlms	Jastrow/CBSOBuilder.h	/^  QuantumNumberType m_nlms;$/;"	m	class:qmcplusplus::CBSOBuilder
m_nlms	MolecularOrbitals/NGOBuilder.h	/^  QuantumNumberType m_nlms;$/;"	m	class:qmcplusplus::NGOBuilder
m_nmo	Fermion/SlaterDetOpt.h	/^    int m_nmo;$/;"	m	class:qmcplusplus::SlaterDetOpt
m_oidx	SPOSetBase.h	/^  std::vector<int> m_oidx;$/;"	m	class:qmcplusplus::SPOSetBase
m_old_B	LCOrbitalSetOpt.h	/^    std::vector<RealType> m_old_B;$/;"	m	class:qmcplusplus::LCOrbitalSetOptTrialFunc
m_omixfac	LCOrbitalSetOpt.h	/^    double m_omixfac;$/;"	m	class:qmcplusplus::LCOrbitalSetOpt
m_orb_der_mat	Fermion/SlaterDetOpt.h	/^    SPOSetBase::GradMatrix_t  m_orb_der_mat;$/;"	m	class:qmcplusplus::SlaterDetOpt
m_orb_der_mat_all	Fermion/SlaterDetOpt.h	/^    SPOSetBase::GradMatrix_t  m_orb_der_mat_all;$/;"	m	class:qmcplusplus::SlaterDetOpt
m_orb_der_vec	Fermion/SlaterDetOpt.h	/^    SPOSetBase::GradVector_t  m_orb_der_vec;$/;"	m	class:qmcplusplus::SlaterDetOpt
m_orb_inv_mat	Fermion/SlaterDetOpt.h	/^    SPOSetBase::ValueMatrix_t m_orb_inv_mat;$/;"	m	class:qmcplusplus::SlaterDetOpt
m_orb_lap_mat	Fermion/SlaterDetOpt.h	/^    SPOSetBase::ValueMatrix_t m_orb_lap_mat;$/;"	m	class:qmcplusplus::SlaterDetOpt
m_orb_lap_mat_all	Fermion/SlaterDetOpt.h	/^    SPOSetBase::ValueMatrix_t m_orb_lap_mat_all;$/;"	m	class:qmcplusplus::SlaterDetOpt
m_orb_lap_vec	Fermion/SlaterDetOpt.h	/^    SPOSetBase::ValueVector_t m_orb_lap_vec;$/;"	m	class:qmcplusplus::SlaterDetOpt
m_orb_val_mat	Fermion/SlaterDetOpt.h	/^    SPOSetBase::ValueMatrix_t m_orb_val_mat;$/;"	m	class:qmcplusplus::SlaterDetOpt
m_orb_val_mat_all	Fermion/SlaterDetOpt.h	/^    SPOSetBase::ValueMatrix_t m_orb_val_mat_all;$/;"	m	class:qmcplusplus::SlaterDetOpt
m_orb_val_vec	Fermion/SlaterDetOpt.h	/^    SPOSetBase::ValueVector_t m_orb_val_vec;$/;"	m	class:qmcplusplus::SlaterDetOpt
m_orbitals	Experimental/TriCubicSplineBuilder.h	/^  TriCubicSplineSet* m_orbitals;$/;"	m	class:qmcplusplus::TriCubicSplineBuilder
m_orbitals	Jastrow/CBSOBuilder.h	/^  CenteredOrbitalType* m_orbitals;$/;"	m	class:qmcplusplus::CBSOBuilder
m_orbitals	MolecularOrbitals/BsplineAOBuilder.h	/^  CenteredOrbitalType* m_orbitals;$/;"	m	class:qmcplusplus::BsplineAOBuilder
m_orbitals	MolecularOrbitals/GTOBuilder.h	/^  CenteredOrbitalType* m_orbitals;$/;"	m	class:qmcplusplus::GTOBuilder
m_orbitals	MolecularOrbitals/NGOBuilder.h	/^  CenteredOrbitalType* m_orbitals;$/;"	m	class:qmcplusplus::NGOBuilder
m_orbitals	MolecularOrbitals/STOBuilder.h	/^  CenteredOrbitalType* m_orbitals;$/;"	m	class:qmcplusplus::STOBuilder
m_param	Jastrow/PolarizedJastrow.h	/^  ParameterSet m_param;$/;"	m	class:qmcplusplus::PolarizedJastrow
m_param	PlaneWave/PWParameterSet.h	/^  ParameterSet m_param;$/;"	m	struct:qmcplusplus::PWParameterSet
m_pder_mat	LCOrbitalSetOpt.h	/^    std::vector<RealType> m_pder_mat;$/;"	m	class:qmcplusplus::LCOrbitalSetOptTrialFunc
m_pidx	SPOSetBase.h	/^  std::vector<int> m_pidx;$/;"	m	class:qmcplusplus::SPOSetBase
m_pivot	Fermion/SlaterDetOpt.h	/^    std::vector<int> m_pivot;$/;"	m	class:qmcplusplus::SlaterDetOpt
m_rcut	Experimental/Any2GridBuilder.h	/^  RealType m_rcut;$/;"	m	struct:qmcplusplus::Any2GridBuilder
m_rcut	Jastrow/CBSOBuilder.h	/^  RealType m_rcut;$/;"	m	class:qmcplusplus::CBSOBuilder
m_rcut	MolecularOrbitals/NGOBuilder.h	/^  RealType m_rcut;$/;"	m	class:qmcplusplus::NGOBuilder
m_report_level	LCOrbitalSetOpt.h	/^    int m_report_level;$/;"	m	class:qmcplusplus::LCOrbitalSetOpt
m_species	Jastrow/CBSOBuilder.h	/^  std::string m_species;$/;"	m	class:qmcplusplus::CBSOBuilder
m_species	MolecularOrbitals/BsplineAOBuilder.h	/^  std::string m_species;$/;"	m	class:qmcplusplus::BsplineAOBuilder
m_species	MolecularOrbitals/GTOBuilder.h	/^  std::string m_species;$/;"	m	class:qmcplusplus::GTOBuilder
m_species	MolecularOrbitals/NGOBuilder.h	/^  std::string m_species;$/;"	m	class:qmcplusplus::NGOBuilder
m_species	MolecularOrbitals/STOBuilder.h	/^  std::string m_species;$/;"	m	class:qmcplusplus::STOBuilder
m_spline	Experimental/QDwf.h	/^  CubicSpline* m_spline;$/;"	m	class:QDwf
m_spo	Fermion/SlaterDetOpt.h	/^    SPOSetBase * m_spo;$/;"	m	class:qmcplusplus::SlaterDetOpt
m_spo_set	LCOrbitalSetOpt.h	/^    SPOSetBase * m_spo_set;$/;"	m	class:qmcplusplus::LCOrbitalSetOpt
m_temp_g	LCOrbitalSetOpt.h	/^    GradVector_t m_temp_g;$/;"	m	class:qmcplusplus::LCOrbitalSetOpt
m_temp_l	LCOrbitalSetOpt.h	/^    ValueVector_t m_temp_l;$/;"	m	class:qmcplusplus::LCOrbitalSetOpt
m_temp_p	LCOrbitalSetOpt.h	/^    ValueVector_t m_temp_p;$/;"	m	class:qmcplusplus::LCOrbitalSetOpt
m_tf	LCOrbitalSetOpt.h	/^    LCOrbitalSetOptTrialFunc * m_tf;$/;"	m	class:qmcplusplus::LCOrbitalSetOpt
m_up_or_down	Fermion/SlaterDetOpt.h	/^    int m_up_or_down;$/;"	m	class:qmcplusplus::SlaterDetOpt
m_wfn_xmd	FDLRWfn.h	/^    TrialWaveFunction * m_wfn_xmd;$/;"	m	class:qmcplusplus::FDLRWfn
m_wfn_xpd	FDLRWfn.h	/^    TrialWaveFunction * m_wfn_xpd;$/;"	m	class:qmcplusplus::FDLRWfn
m_work	Fermion/SlaterDetOpt.h	/^    std::vector<RealType> m_work;$/;"	m	class:qmcplusplus::SlaterDetOpt
magLess	Jastrow/kSpaceJastrow.cpp	/^struct magLess$/;"	s	namespace:qmcplusplus	file:
makeClone	AFMSPOSet.cpp	/^AFMSPOSet::makeClone() const$/;"	f	class:qmcplusplus::AFMSPOSet
makeClone	AGPDeterminant.cpp	/^OrbitalBasePtr AGPDeterminant::makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::AGPDeterminant
makeClone	CompositeSPOSet.cpp	/^  SPOSetBase* CompositeSPOSet::makeClone() const$/;"	f	class:qmcplusplus::CompositeSPOSet
makeClone	DiffOrbitalBase.cpp	/^DiffOrbitalBasePtr DiffOrbitalBase::makeClone(ParticleSet& tpq) const$/;"	f	class:qmcplusplus::DiffOrbitalBase
makeClone	EinsplineAdoptor.h	/^  SPOSetBase* makeClone() const$/;"	f	struct:qmcplusplus::BsplineSet
makeClone	EinsplineSet.cpp	/^EinsplineSetExtended<StorageType>::makeClone() const$/;"	f	class:qmcplusplus::EinsplineSetExtended
makeClone	EinsplineSet.cpp	/^EinsplineSetHybrid<StorageType>::makeClone() const$/;"	f	class:qmcplusplus::EinsplineSetHybrid
makeClone	ElectronGas/ElectronGasComplexOrbitalBuilder.h	/^  SPOSetBase* makeClone() const$/;"	f	struct:qmcplusplus::EGOSet
makeClone	ElectronGas/ElectronGasOrbitalBuilder.h	/^  SPOSetBase* makeClone() const$/;"	f	struct:qmcplusplus::RealEGOSet
makeClone	Experimental/Bspline3DSet.cpp	/^SPOSetBase* Bspline3DSet_Gen::makeClone() const$/;"	f	class:qmcplusplus::Bspline3DSet_Gen
makeClone	Experimental/Bspline3DSet.cpp	/^SPOSetBase* Bspline3DSet_Gen_Trunc::makeClone() const$/;"	f	class:qmcplusplus::Bspline3DSet_Gen_Trunc
makeClone	Experimental/Bspline3DSet.cpp	/^SPOSetBase* Bspline3DSet_Ortho::makeClone() const$/;"	f	class:qmcplusplus::Bspline3DSet_Ortho
makeClone	Experimental/Bspline3DSet.cpp	/^SPOSetBase* Bspline3DSet_Ortho_Trunc::makeClone() const$/;"	f	class:qmcplusplus::Bspline3DSet_Ortho_Trunc
makeClone	Experimental/Bspline3DSet.cpp	/^SPOSetBase* Bspline3DSet_Twist::makeClone() const$/;"	f	class:qmcplusplus::Bspline3DSet_Twist
makeClone	Experimental/CorrectingOrbitalBasisSet.h	/^  CorrectingOrbitalBasisSet<COT>* makeClone() const$/;"	f	struct:qmcplusplus::CorrectingOrbitalBasisSet
makeClone	Experimental/DiracDeterminant.h	/^  OrbitalBasePtr makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::DiracDeterminant
makeClone	Experimental/LCOrbitalSetWithCorrection.h	/^  SPOSetBase* makeClone() const$/;"	f	class:qmcplusplus::LCOrbitalSetWithCorrection
makeClone	Experimental/NoCuspFunctor.h	/^  OptimizableFunctorBase<T>* makeClone() const$/;"	f	struct:qmcplusplus::NoCuspFunctor
makeClone	Experimental/SlaterDeterminant.h	/^  OrbitalBasePtr makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::SlaterDeterminant
makeClone	FDLRWfn.h	/^    OrbitalBasePtr makeClone(ParticleSet& P) const {$/;"	f	class:qmcplusplus::FDLRWfn
makeClone	Fermion/BFsplineFunctor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::BFsplineFunctor
makeClone	Fermion/BackflowTransformation.h	/^  BackflowTransformation* makeClone(ParticleSet& tqp)$/;"	f	class:qmcplusplus::BackflowTransformation
makeClone	Fermion/Backflow_eI.h	/^  BackflowFunctionBase* makeClone(ParticleSet& tqp)$/;"	f	class:qmcplusplus::Backflow_eI
makeClone	Fermion/Backflow_eI_spin.h	/^  BackflowFunctionBase* makeClone(ParticleSet& tqp)$/;"	f	class:qmcplusplus::Backflow_eI_spin
makeClone	Fermion/Backflow_ee.h	/^  BackflowFunctionBase* makeClone(ParticleSet& tqp)$/;"	f	class:qmcplusplus::Backflow_ee
makeClone	Fermion/Backflow_ee_kSpace.h	/^  BackflowFunctionBase* makeClone(ParticleSet& tqp)$/;"	f	class:qmcplusplus::Backflow_ee_kSpace
makeClone	Fermion/DiracDeterminantBase.cpp	/^OrbitalBasePtr DiracDeterminantBase::makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::DiracDeterminantBase
makeClone	Fermion/DiracDeterminantWithBackflow.cpp	/^OrbitalBasePtr DiracDeterminantWithBackflow::makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
makeClone	Fermion/GaussianFunctor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	class:qmcplusplus::GaussianFunctor
makeClone	Fermion/MultiDiracDeterminantBase.cpp	/^OrbitalBasePtr MultiDiracDeterminantBase::makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
makeClone	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^OrbitalBasePtr MultiDiracDeterminantBase::makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
makeClone	Fermion/MultiSlaterDeterminant.cpp	/^OrbitalBasePtr MultiSlaterDeterminant::makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::MultiSlaterDeterminant
makeClone	Fermion/MultiSlaterDeterminantFast.cpp	/^OrbitalBasePtr MultiSlaterDeterminantFast::makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
makeClone	Fermion/MultiSlaterDeterminantWithBackflow.cpp	/^OrbitalBasePtr MultiSlaterDeterminantWithBackflow::makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
makeClone	Fermion/SlaterDet.cpp	/^OrbitalBasePtr SlaterDet::makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::SlaterDet
makeClone	Fermion/SlaterDetOpt.cpp	/^OrbitalBasePtr SlaterDetOpt::makeClone(ParticleSet& tqp) const {$/;"	f	class:qmcplusplus::SlaterDetOpt
makeClone	Fermion/SlaterDetWithBackflow.cpp	/^OrbitalBasePtr SlaterDetWithBackflow::makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
makeClone	HarmonicOscillator/SHOSet.cpp	/^  SPOSetBase* SHOSet::makeClone() const$/;"	f	class:qmcplusplus::SHOSet
makeClone	IonOrbital.cpp	/^IonOrbital::makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::IonOrbital
makeClone	Jastrow/BesselZeroFunctor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::BesselZero
makeClone	Jastrow/BsplineFunctor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::BsplineFunctor
makeClone	Jastrow/BsplineFunctor3D.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::BsplineFunctor3D
makeClone	Jastrow/CompositeFunctor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::AnyTimesRnFunctor
makeClone	Jastrow/CompositeFunctor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::CuspCorrectionFunctor
makeClone	Jastrow/DiffOneBodyJastrowOrbital.h	/^  DiffOrbitalBasePtr makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::DiffOneBodyJastrowOrbital
makeClone	Jastrow/DiffOneBodySpinJastrowOrbital.h	/^  DiffOrbitalBasePtr makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
makeClone	Jastrow/DiffTwoBodyJastrowOrbital.h	/^  DiffOrbitalBasePtr makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::DiffTwoBodyJastrowOrbital
makeClone	Jastrow/GaussianFunctor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::GaussianFunctor
makeClone	Jastrow/GaussianFunctor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
makeClone	Jastrow/LRBreakupUtilities.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::ShortRangePartAdapter
makeClone	Jastrow/LRTwoBodyJastrow.cpp	/^OrbitalBasePtr LRTwoBodyJastrow::makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
makeClone	Jastrow/LinearCombinationFunctor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:LinearCombinationFunctor
makeClone	Jastrow/McMillanJ2Functor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::McMillanJ2Functor
makeClone	Jastrow/McMillanJ2Functor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::ModMcMillanJ2Functor
makeClone	Jastrow/McMillanJ2Functor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::comboMcMillanJ2Functor
makeClone	Jastrow/McMillanJ2GFunctor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::McMillanJ2GFunctor
makeClone	Jastrow/ModPadeFunctor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::ModPadeFunctor
makeClone	Jastrow/OneBodyJastrowOrbital.h	/^  OrbitalBasePtr makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
makeClone	Jastrow/OneBodySpinJastrowOrbital.h	/^  OrbitalBasePtr makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
makeClone	Jastrow/OpenGaussianSlaterFunctor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::OpenGaussianSlaterFunctor
makeClone	Jastrow/PadeFunctors.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
makeClone	Jastrow/PadeFunctors.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::PadeFunctor
makeClone	Jastrow/PadeFunctors.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
makeClone	Jastrow/PadeFunctors.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::ScaledPadeFunctor
makeClone	Jastrow/PolynomialFunctor3D.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
makeClone	Jastrow/RPAJastrow.cpp	/^OrbitalBase* RPAJastrow::makeClone(ParticleSet& tpq) const$/;"	f	class:qmcplusplus::RPAJastrow
makeClone	Jastrow/SplineFunctors.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::CubicSplineSingle
makeClone	Jastrow/ThreeBodyBlockSparse.cpp	/^OrbitalBasePtr ThreeBodyBlockSparse::makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
makeClone	Jastrow/ThreeBodyGeminal.cpp	/^OrbitalBasePtr ThreeBodyGeminal::makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::ThreeBodyGeminal
makeClone	Jastrow/TwoBodyJastrowOrbital.h	/^  OrbitalBasePtr makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
makeClone	Jastrow/WMFunctor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::WMFunctor
makeClone	Jastrow/WMFunctor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::WMFunctorSet
makeClone	Jastrow/eeI_JastrowOrbital.h	/^  OrbitalBasePtr makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
makeClone	Jastrow/kSpaceJastrow.cpp	/^OrbitalBasePtr kSpaceJastrow::makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::kSpaceJastrow
makeClone	LCOrbitalSet.h	/^  SPOSetBase* makeClone() const$/;"	f	class:qmcplusplus::LCOrbitalSet
makeClone	LCOrbitalSetOpt.h	/^    OrbitalBasePtr makeClone(ParticleSet& tqp) const {$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
makeClone	LCOrbitalSetOpt.h	/^    SPOSetBase * makeClone() const {$/;"	f	class:qmcplusplus::LCOrbitalSetOpt
makeClone	LocalizedBasisSet.h	/^  LocalizedBasisSet<COT>* makeClone() const$/;"	f	struct:qmcplusplus::LocalizedBasisSet
makeClone	MolecularOrbitals/NGOBuilder.cpp	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::PadeOrbital
makeClone	MolecularOrbitals/NGOBuilder.cpp	/^OptimizableFunctorBase* NGOrbital::makeClone() const$/;"	f	class:qmcplusplus::NGOrbital
makeClone	MultiGridBsplineSet.h	/^    SPOSetBase* makeClone() const$/;"	f	struct:qmcplusplus::MultiGridBsplineSet
makeClone	OptimizableSPOSet.cpp	/^OptimizableSPOSet::makeClone() const$/;"	f	class:qmcplusplus::OptimizableSPOSet
makeClone	OrbitalBase.cpp	/^OrbitalBasePtr OrbitalBase::makeClone(ParticleSet& tpq) const$/;"	f	class:qmcplusplus::OrbitalBase
makeClone	OrbitalSetTraits.h	/^  DummyGrid* makeClone() const$/;"	f	struct:qmcplusplus::DummyGrid
makeClone	PlaneWave/PWOrbitalSet.cpp	/^SPOSetBase* PWOrbitalSet::makeClone() const$/;"	f	class:qmcplusplus::PWOrbitalSet
makeClone	PlaneWave/PWRealOrbitalSet.cpp	/^SPOSetBase* PWRealOrbitalSet::makeClone() const$/;"	f	class:qmcplusplus::PWRealOrbitalSet
makeClone	ProductOrbital.cpp	/^OrbitalBase* ProductOrbital::makeClone(ParticleSet& tpq) const$/;"	f	class:qmcplusplus::ProductOrbital
makeClone	SPOSetBase.cpp	/^SPOSetBase* SPOSetBase::makeClone() const$/;"	f	class:qmcplusplus::SPOSetBase
makeClone	SPOSetComboNoCopy.h	/^    inline SPOSetBase* makeClone() const$/;"	f	struct:qmcplusplus::SPOSetComboNoCopy
makeClone	SparseLocalizedBasisSet.h	/^  BasisSetBase<typename COT::value_type>* makeClone() const$/;"	f	struct:qmcplusplus::SparseLocalizedBasisSet
makeClone	SphericalBasisSet.h	/^  SphericalBasisSet<ROT,GT>* makeClone() const$/;"	f	struct:qmcplusplus::SphericalBasisSet
makeClone	TrialWaveFunction.cpp	/^TrialWaveFunction* TrialWaveFunction::makeClone(ParticleSet& tqp)  const$/;"	f	class:qmcplusplus::TrialWaveFunction
makeClone	legacy/EinsplineSetLocal.cpp	/^EinsplineSetLocal::makeClone() const$/;"	f	class:qmcplusplus::EinsplineSetLocal
makeCopy	Fermion/DiracDeterminantAFM.cpp	/^DiracDeterminantAFM::makeCopy(SPOSetBasePtr spo) const$/;"	f	class:qmcplusplus::DiracDeterminantAFM
makeCopy	Fermion/DiracDeterminantBase.cpp	/^DiracDeterminantBase* DiracDeterminantBase::makeCopy(SPOSetBasePtr spo) const$/;"	f	class:qmcplusplus::DiracDeterminantBase
makeCopy	Fermion/DiracDeterminantOpt.cpp	/^DiracDeterminantOpt::makeCopy(SPOSetBasePtr spo) const$/;"	f	class:qmcplusplus::DiracDeterminantOpt
makeCopy	Fermion/DiracDeterminantWithBackflow.cpp	/^DiracDeterminantWithBackflow* DiracDeterminantWithBackflow::makeCopy(SPOSetBasePtr spo) const$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
makeCopy	Fermion/RNDiracDeterminantBase.cpp	/^RNDiracDeterminantBase::DiracDeterminantBase* RNDiracDeterminantBase::makeCopy(SPOSetBase* spo) const$/;"	f	class:qmcplusplus::RNDiracDeterminantBase
makeCopy	Fermion/RNDiracDeterminantBaseAlternate.cpp	/^RNDiracDeterminantBaseAlternate::DiracDeterminantBase* RNDiracDeterminantBaseAlternate::makeCopy(SPOSetBase* spo) const$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
makeLongRange	Jastrow/RPAJastrow.cpp	/^void RPAJastrow::makeLongRange()$/;"	f	class:qmcplusplus::RPAJastrow
makeLongRange_oneBody	Fermion/BackflowBuilder.cpp	/^void BackflowBuilder::makeLongRange_oneBody() {}$/;"	f	class:qmcplusplus::BackflowBuilder
makeLongRange_twoBody	Fermion/BackflowBuilder.cpp	/^void BackflowBuilder::makeLongRange_twoBody(xmlNodePtr cur, Backflow_ee_kSpace *tbfks, std::vector<int>& offsets)$/;"	f	class:qmcplusplus::BackflowBuilder
makeProxy	OrbitalBase.cpp	/^OrbitalBasePtr OrbitalBase::makeProxy(ParticleSet& tpq)$/;"	f	class:qmcplusplus::OrbitalBase
makeRotations	EinsplineSetBuilder.h	/^  bool makeRotations;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
makeShortRange	Jastrow/RPAJastrow.cpp	/^void RPAJastrow::makeShortRange()$/;"	f	class:qmcplusplus::RPAJastrow
makeShortRange_oneBody	Fermion/BackflowBuilder.cpp	/^void BackflowBuilder::makeShortRange_oneBody() {}$/;"	f	class:qmcplusplus::BackflowBuilder
makeShortRange_twoBody	Fermion/BackflowBuilder.cpp	/^void BackflowBuilder::makeShortRange_twoBody(xmlNodePtr cur, Backflow_ee<BsplineFunctor<RealType> > *tbf, std::vector<int>& offsets)$/;"	f	class:qmcplusplus::BackflowBuilder
make_bandgroup_name	BsplineReaderBase.cpp	/^  inline std::string make_bandgroup_name(const std::string& root, int spin, int twist, const Tensor<int,3>& tilematrix, int first, int last)$/;"	f	namespace:qmcplusplus
make_bandinfo_filename	BsplineReaderBase.cpp	/^  inline std::string make_bandinfo_filename(const std::string& root, int spin, int twist, const Tensor<int,3>& tilematrix, int gid)$/;"	f	namespace:qmcplusplus
mass	HarmonicOscillator/SHOSetBuilder.h	/^    RealType mass;$/;"	m	struct:qmcplusplus::SHOSetBuilder
matching_tol	SPOSetInputInfo.h	/^    RealType matching_tol;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
matrix_type	Fermion/excitation_node.h	/^  typedef Matrix<T> matrix_type;$/;"	t	struct:qmcplusplus::excitation_node
max_cbm	Fermion/ci_builder.h	/^  int max_cbm;$/;"	m	struct:qmcplusplus::ci_builder
max_energy	SPOSetInputInfo.h	/^    inline RealType max_energy()$/;"	f	struct:qmcplusplus::SPOSetInputInfo
max_index	SPOSetInfo.cpp	/^  int SPOSetInfo::max_index() const$/;"	f	class:qmcplusplus::SPOSetInfo
max_index	SPOSetInputInfo.h	/^    inline int max_index()$/;"	f	struct:qmcplusplus::SPOSetInputInfo
max_vbm	Fermion/ci_builder.h	/^  int max_vbm;$/;"	m	struct:qmcplusplus::ci_builder
maxg	Experimental/PlaneWaveBasis.h	/^  TinyVector<int,3> maxg;$/;"	m	class:qmcplusplus::PlaneWaveBasis
maxg	PlaneWave/PWBasis.h	/^  GIndex_t maxg;$/;"	m	class:qmcplusplus::PWBasis
maxmaxg	Experimental/PlaneWaveBasis.h	/^  int maxmaxg;$/;"	m	class:qmcplusplus::PlaneWaveBasis
maxmaxg	PlaneWave/PWBasis.h	/^  int maxmaxg;$/;"	m	class:qmcplusplus::PWBasis
memoryUsage_DataForDerivatives	FDLRWfn.h	/^    void memoryUsage_DataForDerivatives(ParticleSet& P,long& orbs_only ,long& orbs, long& invs, long& dets) {$/;"	f	class:qmcplusplus::FDLRWfn
memoryUsage_DataForDerivatives	Fermion/DiracDeterminantBase.h	/^  virtual void memoryUsage_DataForDerivatives(ParticleSet& P,long& orbs_only, long& orbs, long& invs, long& dets)$/;"	f	class:qmcplusplus::DiracDeterminantBase
memoryUsage_DataForDerivatives	Fermion/MultiDiracDeterminantBase.h	/^  virtual void memoryUsage_DataForDerivatives(ParticleSet& P,long& orbs_only, long& orbs, long& invs, long& dets)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
memoryUsage_DataForDerivatives	Fermion/MultiDiracDeterminantWithBackflow.h	/^  virtual void memoryUsage_DataForDerivatives(ParticleSet& P,long& orbs_only, long& orbs, long& invs, long& dets)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
memoryUsage_DataForDerivatives	Fermion/MultiSlaterDeterminantFast.h	/^  virtual void memoryUsage_DataForDerivatives(ParticleSet& P,long& orbs_only,long& orbs, long& invs, long& dets)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
memoryUsage_DataForDerivatives	Fermion/SlaterDet.h	/^  virtual void memoryUsage_DataForDerivatives(ParticleSet& P,long& orbs_only,long& orbs, long& invs, long& dets)$/;"	f	class:qmcplusplus::SlaterDet
memoryUsage_DataForDerivatives	Fermion/SlaterDetOpt.h	/^    virtual void memoryUsage_DataForDerivatives(ParticleSet& P,long& orbs_only,long& orbs, long& invs, long& dets)$/;"	f	class:qmcplusplus::SlaterDetOpt
memoryUsage_DataForDerivatives	OrbitalBase.h	/^  virtual void memoryUsage_DataForDerivatives(ParticleSet& P,long& orbs_only ,long& orbs, long& invs, long& dets)$/;"	f	struct:qmcplusplus::OrbitalBase
memoryUsage_DataForDerivatives	TrialWaveFunction.cpp	/^void TrialWaveFunction::memoryUsage_DataForDerivatives(ParticleSet& P,long& orbs_only,long& orbs, long& invs, long& dets, bool zero_vars)$/;"	f	class:qmcplusplus::TrialWaveFunction
min_energy	SPOSetInputInfo.h	/^    inline RealType min_energy()$/;"	f	struct:qmcplusplus::SPOSetInputInfo
min_index	SPOSetInfo.cpp	/^  int SPOSetInfo::min_index() const$/;"	f	class:qmcplusplus::SPOSetInfo
min_index	SPOSetInputInfo.h	/^    inline int min_index()$/;"	f	struct:qmcplusplus::SPOSetInputInfo
minusModKplusG2	PlaneWave/PWBasis.h	/^  std::vector<RealType> minusModKplusG2;$/;"	m	class:qmcplusplus::PWBasis
mk2	ElectronGas/HEGGrid.h	/^  std::vector<T>       mk2;$/;"	m	struct:qmcplusplus::HEGGrid
mode	Experimental/QDwf.h	/^  gsl_mode_t mode;$/;"	m	class:QDwf
modify	SPOSetInfo.cpp	/^  void SPOSetInfo::modify()$/;"	f	class:qmcplusplus::SPOSetInfo
modify_states	BasisSetBase.h	/^  inline void modify_states(int index=0)$/;"	f	struct:qmcplusplus::BasisSetBuilder
modkplusg	Experimental/PlaneWaveBasis.h	/^  std::vector<RealType> modkplusg;$/;"	m	class:qmcplusplus::PlaneWaveBasis
multiplyDerivsByOrbR	DiffOrbitalBase.h	/^  virtual void multiplyDerivsByOrbR(std::vector<RealType>& dlogpsi)$/;"	f	struct:qmcplusplus::DiffOrbitalBase
multiplyDerivsByOrbR	OrbitalBase.h	/^  virtual void multiplyDerivsByOrbR(std::vector<RealType>& dlogpsi)$/;"	f	struct:qmcplusplus::OrbitalBase
multisd_tag	OrbitalBuilderBase.cpp	/^std::string OrbitalBuilderBase::multisd_tag="multideterminant";$/;"	m	class:qmcplusplus::OrbitalBuilderBase	file:
multisd_tag	OrbitalBuilderBase.h	/^  static std::string multisd_tag;$/;"	m	class:qmcplusplus::OrbitalBuilderBase
multislaterdet_0	Fermion/SlaterDetBuilder.h	/^  MultiSlaterDeterminant_t* multislaterdet_0;$/;"	m	class:qmcplusplus::SlaterDetBuilder
multislaterdetfast_0	Fermion/SlaterDetBuilder.h	/^  MultiSlaterDeterminantFast* multislaterdetfast_0;$/;"	m	class:qmcplusplus::SlaterDetBuilder
myBands	BandInfo.h	/^  std::vector<BandInfo> myBands;$/;"	m	struct:qmcplusplus::BandInfoGroup
myBasis	Experimental/TricubicBsplineSetBuilder.h	/^  std::map<std::string,BsplineBasisType*> myBasis;$/;"	m	class:qmcplusplus::TricubicBsplineSetBuilder
myBasisSet	Experimental/LCOrbitalSetWithCorrection.h	/^  BS* myBasisSet;$/;"	m	class:qmcplusplus::LCOrbitalSetWithCorrection
myBasisSet	Jastrow/Experimental/WMConstraints.h	/^  std::map<std::string,BasisSetType*> myBasisSet;$/;"	m	struct:qmcplusplus::WMConstraints
myBasisSet	Jastrow/JastrowBasisBuilder.h	/^  BasisSetBase<RealType>* myBasisSet;$/;"	m	class:qmcplusplus::JastrowBasisBuilder
myBasisSet	LCOrbitalSet.h	/^  BS* myBasisSet;$/;"	m	class:qmcplusplus::LCOrbitalSet
myBasisSet	PlaneWave/PWOrbitalBuilder.h	/^  PWBasisPtr myBasisSet;$/;"	m	class:qmcplusplus::PWOrbitalBuilder
myBasisSet	PlaneWave/PWOrbitalSet.h	/^  PWBasisPtr myBasisSet;$/;"	m	class:qmcplusplus::PWOrbitalSet
myBasisSet	PlaneWave/PWRealOrbitalSet.h	/^  PWBasisPtr myBasisSet;$/;"	m	class:qmcplusplus::PWRealOrbitalSet
myBasisSetFactory	AGPDeterminantBuilder.h	/^  BasisSetFactory* myBasisSetFactory;$/;"	m	class:qmcplusplus::AGPDeterminantBuilder
myBasisSetFactory	Fermion/SlaterDetBuilder.h	/^  BasisSetFactory* myBasisSetFactory;$/;"	m	class:qmcplusplus::SlaterDetBuilder
myC	Fermion/ci_node.h	/^  configuration myC;$/;"	m	struct:qmcplusplus::ci_node
myClones	WaveFunctionFactory.h	/^  std::vector<WaveFunctionFactory*> myClones;$/;"	m	struct:qmcplusplus::WaveFunctionFactory
myComm	BsplineReaderBase.h	/^  Communicate* myComm;$/;"	m	struct:qmcplusplus::BsplineReaderBase
myComm	DistributedSPOSet.h	/^  Communicate* myComm;$/;"	m	struct:qmcplusplus::DistributedSPOSet
myComm	legacy/SplineAdoptorReader.h	/^  Communicate* myComm;$/;"	m	struct:qmcplusplus::BsplineReaderBase
myFirstSPO	BsplineReaderBase.h	/^  int myFirstSPO;$/;"	m	struct:qmcplusplus::BsplineReaderBase
myFunc	Jastrow/CompositeFunctor.h	/^  OptimizableFunctorBase* myFunc;$/;"	m	struct:qmcplusplus::AnyTimesRnFunctor
myFunc	MolecularOrbitals/NGOBuilder.h	/^  functor_type myFunc;$/;"	m	struct:qmcplusplus::NGOrbital
myG	AGPDeterminant.h	/^  ParticleSet::ParticleGradient_t myG, myG_temp;$/;"	m	class:qmcplusplus::AGPDeterminant
myG	EinsplineAdoptor.h	/^  typename OrbitalSetTraits<ST>::GradVector_t      myG;$/;"	m	struct:qmcplusplus::SplineAdoptorBase
myG	Experimental/DiracDeterminant.h	/^  ParticleSet::ParticleGradient_t myG, myG_temp;$/;"	m	class:qmcplusplus::DiracDeterminant
myG	Experimental/EinsplineAdoptorPacked.h	/^  StorageGradVector_t      myG;$/;"	m	struct:qmcplusplus::SplineC2CAdoptorPacked
myG	Experimental/EinsplineAdoptorPacked.h	/^  StorageGradVector_t      myG;$/;"	m	struct:qmcplusplus::SplineC2RAdoptorPacked
myG	Experimental/EinsplineMixedAdoptor.h	/^  StorageGradVector_t      myG;$/;"	m	struct:qmcplusplus::SplineMixedAdoptor
myG	Experimental/EinsplineMixedAdoptor.h	/^  StorageGradVector_t      myG;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
myG	Experimental/SplineOpenAdoptor.h	/^  StorageGradVector_t      myG;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
myG	Fermion/DiracDeterminantBase.h	/^  ParticleSet::ParticleGradient_t myG, myG_temp;$/;"	m	class:qmcplusplus::DiracDeterminantBase
myG	Fermion/MultiSlaterDeterminant.h	/^  ParticleSet::ParticleGradient_t myG;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
myG	Fermion/MultiSlaterDeterminantFast.h	/^  ParticleSet::ParticleGradient_t myG,myG_temp;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
myGH	EinsplineAdoptor.h	/^  typename OrbitalSetTraits<ST>::GradHessVector_t  myGH;$/;"	m	struct:qmcplusplus::SplineAdoptorBase
myGH	Experimental/EinsplineAdoptorPacked.h	/^  StorageGradHessVector_t  myGH;$/;"	m	struct:qmcplusplus::SplineC2CAdoptorPacked
myGH	Experimental/EinsplineAdoptorPacked.h	/^  StorageGradHessVector_t  myGH;$/;"	m	struct:qmcplusplus::SplineC2RAdoptorPacked
myGH	Experimental/EinsplineMixedAdoptor.h	/^  StorageGradHessVector_t  myGH;$/;"	m	struct:qmcplusplus::SplineMixedAdoptor
myGH	Experimental/EinsplineMixedAdoptor.h	/^  StorageGradHessVector_t  myGH;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
myGH	Experimental/SplineOpenAdoptor.h	/^  StorageGradHessVector_t  myGH;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
myG_alternate	Fermion/RNDiracDeterminantBase.h	/^  ParticleSet::ParticleGradient_t myG_alternate;$/;"	m	class:qmcplusplus::RNDiracDeterminantBase
myG_alternate	Fermion/RNDiracDeterminantBaseAlternate.h	/^  ParticleSet::ParticleGradient_t myG_alternate;$/;"	m	class:qmcplusplus::RNDiracDeterminantBaseAlternate
myG_temp	AGPDeterminant.h	/^  ParticleSet::ParticleGradient_t myG, myG_temp;$/;"	m	class:qmcplusplus::AGPDeterminant
myG_temp	Experimental/DiracDeterminant.h	/^  ParticleSet::ParticleGradient_t myG, myG_temp;$/;"	m	class:qmcplusplus::DiracDeterminant
myG_temp	Fermion/DiracDeterminantBase.h	/^  ParticleSet::ParticleGradient_t myG, myG_temp;$/;"	m	class:qmcplusplus::DiracDeterminantBase
myG_temp	Fermion/MultiSlaterDeterminantFast.h	/^  ParticleSet::ParticleGradient_t myG,myG_temp;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
myGrad	Spline3D/EinsplineSetTemp.hpp	/^      typename OrbitalSetTraits<Type_t>::GradVector_t myGrad;$/;"	m	struct:qmcplusplus::bspline_engine
myGrad	Spline3D/EinsplineSetTemp.hpp	/^    typename OrbitalSetTraits<Type_t>::GradVector_t myGrad;$/;"	m	struct:qmcplusplus::bspline_engine
myGrid	Jastrow/RPAJastrow.h	/^  GridType* myGrid;$/;"	m	struct:qmcplusplus::RPAJastrow
myGrid	OrbitalConstraintsBase.h	/^  RadialGridType* myGrid;$/;"	m	struct:qmcplusplus::OrbitalConstraintsBase
myH	EinsplineAdoptor.h	/^  typename OrbitalSetTraits<ST>::HessVector_t      myH;$/;"	m	struct:qmcplusplus::SplineAdoptorBase
myH	Experimental/EinsplineAdoptorPacked.h	/^  StorageHessVector_t      myH;$/;"	m	struct:qmcplusplus::SplineC2CAdoptorPacked
myH	Experimental/EinsplineAdoptorPacked.h	/^  StorageHessVector_t      myH;$/;"	m	struct:qmcplusplus::SplineC2RAdoptorPacked
myH	Experimental/EinsplineMixedAdoptor.h	/^  StorageHessVector_t      myH;$/;"	m	struct:qmcplusplus::SplineMixedAdoptor
myHandler	Fermion/BackflowBuilder.h	/^  HandlerType* myHandler;$/;"	m	class:qmcplusplus::BackflowBuilder
myHandler	Jastrow/LRBreakupUtilities.h	/^  HandlerType* myHandler;$/;"	m	struct:qmcplusplus::ShortRangePartAdapter
myHandler	Jastrow/RPAJastrow.h	/^  HandlerType* myHandler;$/;"	m	struct:qmcplusplus::RPAJastrow
myHandler	Jastrow/singleRPAJastrowBuilder.h	/^  HandlerType* myHandler;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
myHess	Spline3D/EinsplineSetTemp.hpp	/^      typename OrbitalSetTraits<Type_t>::HessVector_t myHess;$/;"	m	struct:qmcplusplus::bspline_engine
myHess	Spline3D/EinsplineSetTemp.hpp	/^    typename OrbitalSetTraits<Type_t>::HessVector_t myHess;$/;"	m	struct:qmcplusplus::bspline_engine
myL	AGPDeterminant.h	/^  ParticleSet::ParticleLaplacian_t myL, myL_temp;$/;"	m	class:qmcplusplus::AGPDeterminant
myL	EinsplineAdoptor.h	/^  typename OrbitalSetTraits<ST>::ValueVector_t     myL;$/;"	m	struct:qmcplusplus::SplineAdoptorBase
myL	Experimental/DiracDeterminant.h	/^  ParticleSet::ParticleLaplacian_t myL, myL_temp;$/;"	m	class:qmcplusplus::DiracDeterminant
myL	Experimental/EinsplineAdoptorPacked.h	/^  StorageValueVector_t     myL;$/;"	m	struct:qmcplusplus::SplineC2CAdoptorPacked
myL	Experimental/EinsplineAdoptorPacked.h	/^  StorageValueVector_t     myL;$/;"	m	struct:qmcplusplus::SplineC2RAdoptorPacked
myL	Experimental/EinsplineMixedAdoptor.h	/^  StorageValueVector_t myV, myL;$/;"	m	struct:qmcplusplus::SplineMixedAdoptor
myL	Experimental/EinsplineMixedAdoptor.h	/^  StorageValueVector_t myV, myL;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
myL	Experimental/SplineOpenAdoptor.h	/^  StorageValueVector_t myV, myL;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
myL	Fermion/DiracDeterminantBase.h	/^  ParticleSet::ParticleLaplacian_t myL, myL_temp;$/;"	m	class:qmcplusplus::DiracDeterminantBase
myL	Fermion/MultiSlaterDeterminant.h	/^  ParticleSet::ParticleLaplacian_t myL;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
myL	Fermion/MultiSlaterDeterminantFast.h	/^  ParticleSet::ParticleLaplacian_t myL,myL_temp;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
myL_alternate	Fermion/RNDiracDeterminantBase.h	/^  ParticleSet::ParticleLaplacian_t myL_alternate;$/;"	m	class:qmcplusplus::RNDiracDeterminantBase
myL_alternate	Fermion/RNDiracDeterminantBaseAlternate.h	/^  ParticleSet::ParticleLaplacian_t myL_alternate;$/;"	m	class:qmcplusplus::RNDiracDeterminantBaseAlternate
myL_temp	AGPDeterminant.h	/^  ParticleSet::ParticleLaplacian_t myL, myL_temp;$/;"	m	class:qmcplusplus::AGPDeterminant
myL_temp	Experimental/DiracDeterminant.h	/^  ParticleSet::ParticleLaplacian_t myL, myL_temp;$/;"	m	class:qmcplusplus::DiracDeterminant
myL_temp	Fermion/DiracDeterminantBase.h	/^  ParticleSet::ParticleLaplacian_t myL, myL_temp;$/;"	m	class:qmcplusplus::DiracDeterminantBase
myL_temp	Fermion/MultiSlaterDeterminantFast.h	/^  ParticleSet::ParticleLaplacian_t myL,myL_temp;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
myLap	Spline3D/EinsplineSetTemp.hpp	/^      typename OrbitalSetTraits<Type_t>::ValueVector_t myLap;$/;"	m	struct:qmcplusplus::bspline_engine
myName	BandInfo.h	/^  std::string myName;$/;"	m	struct:qmcplusplus::BandInfoGroup
myNode	OrbitalBuilderBase.h	/^  xmlNodePtr myNode;$/;"	m	class:qmcplusplus::OrbitalBuilderBase
myNode	WaveFunctionFactory.h	/^  xmlNodePtr myNode;$/;"	m	struct:qmcplusplus::WaveFunctionFactory
myNumOrbs	BsplineReaderBase.h	/^  int myNumOrbs;$/;"	m	struct:qmcplusplus::BsplineReaderBase
myO	SparseLocalizedBasisSet.h	/^    COT* myO;$/;"	m	struct:qmcplusplus::SparseLocalizedBasisSet::LOForCenter
myP	SparseLocalizedBasisSet.h	/^    std::vector<int> myP;$/;"	m	struct:qmcplusplus::SparseLocalizedBasisSet::LOForCenter
myParam	Experimental/TricubicBsplineSetBuilder.h	/^  PWParameterSet* myParam;$/;"	m	class:qmcplusplus::TricubicBsplineSetBuilder
myParam	PlaneWave/PWOrbitalBuilder.h	/^  PWParameterSet* myParam;$/;"	m	class:qmcplusplus::PWOrbitalBuilder
myPsi	Spline3D/EinsplineSetTemp.hpp	/^      typename OrbitalSetTraits<Type_t>::ValueVector_t myPsi;$/;"	m	struct:qmcplusplus::bspline_engine
myPsi	Spline3D/EinsplineSetTemp.hpp	/^    typename OrbitalSetTraits<Type_t>::ValueVector_t myPsi;$/;"	m	struct:qmcplusplus::bspline_engine
mySPOSet	Experimental/TricubicBsplineSetBuilder.h	/^  std::map<std::string,SPOSetBase*> mySPOSet;$/;"	m	class:qmcplusplus::TricubicBsplineSetBuilder
mySPOSet	Fermion/SlaterDet.h	/^  std::map<std::string,SPOSetBasePtr> mySPOSet;$/;"	m	class:qmcplusplus::SlaterDet
mySPOSet	FermionBase.h	/^  spo_set_type mySPOSet;$/;"	m	struct:qmcplusplus::FermionBase
mySPOs	SPOSetComboNoCopy.h	/^    std::vector<SPOSetBase*> mySPOs;$/;"	m	struct:qmcplusplus::SPOSetComboNoCopy
myTable	Experimental/CorrectingOrbitalBasisSet.h	/^  const DistanceTableData* myTable;$/;"	m	struct:qmcplusplus::CorrectingOrbitalBasisSet
myTable	Fermion/BackflowFunctionBase.h	/^  DistanceTableData* myTable;$/;"	m	class:qmcplusplus::BackflowFunctionBase
myTable	Fermion/BackflowTransformation.h	/^  DistanceTableData* myTable;$/;"	m	class:qmcplusplus::BackflowTransformation
myTable	LocalizedBasisSet.h	/^  const DistanceTableData* myTable;$/;"	m	struct:qmcplusplus::LocalizedBasisSet
myTable	SparseLocalizedBasisSet.h	/^  const DistanceTableData* myTable;$/;"	m	struct:qmcplusplus::SparseLocalizedBasisSet
myTable	SphericalBasisSet.h	/^  const DistanceTableData* myTable;$/;"	m	struct:qmcplusplus::SphericalBasisSet
myTable	SphericalOrbitalSet.h	/^  const DistanceTableData* myTable;$/;"	m	struct:qmcplusplus::SphericalOrbitalSet
myTableIndex	EinsplineSetBuilder.h	/^  int myTableIndex;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
myTableIndex	Jastrow/DiffOneBodyJastrowOrbital.h	/^  int myTableIndex;$/;"	m	class:qmcplusplus::DiffOneBodyJastrowOrbital
myTableIndex	Jastrow/DiffOneBodySpinJastrowOrbital.h	/^  int myTableIndex;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
myTableIndex	Jastrow/OneBodyJastrowOrbital.h	/^  int myTableIndex;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbital
myTableIndex	Jastrow/OneBodySpinJastrowOrbital.h	/^  int myTableIndex;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
myTableIndex	Jastrow/ThreeBodyBlockSparse.h	/^  int myTableIndex;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
myTableIndex	Jastrow/ThreeBodyJastrowOrbital.h	/^  IndexType myTableIndex;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
myTableIndex	Jastrow/eeI_JastrowOrbital.h	/^  int myTableIndex;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
myTableIndex	LocalizedBasisSet.h	/^  int myTableIndex;$/;"	m	struct:qmcplusplus::LocalizedBasisSet
myTableIndex	MultiGridBsplineSet.h	/^    int myTableIndex;$/;"	m	struct:qmcplusplus::MultiGridBsplineSet
myTimers	TrialWaveFunction.h	/^  std::vector<NewTimer*> myTimers;$/;"	m	class:qmcplusplus::TrialWaveFunction
myTwist	TrialWaveFunction.h	/^  std::vector<RealType> myTwist;$/;"	m	class:qmcplusplus::TrialWaveFunction
myV	EinsplineAdoptor.h	/^  typename OrbitalSetTraits<ST>::ValueVector_t     myV;$/;"	m	struct:qmcplusplus::SplineAdoptorBase
myV	Experimental/EinsplineAdoptorPacked.h	/^  StorageValueVector_t     myV;$/;"	m	struct:qmcplusplus::SplineC2CAdoptorPacked
myV	Experimental/EinsplineAdoptorPacked.h	/^  StorageValueVector_t     myV;$/;"	m	struct:qmcplusplus::SplineC2RAdoptorPacked
myV	Experimental/EinsplineMixedAdoptor.h	/^  StorageValueVector_t myV, myL;$/;"	m	struct:qmcplusplus::SplineMixedAdoptor
myV	Experimental/EinsplineMixedAdoptor.h	/^  StorageValueVector_t myV, myL;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
myV	Experimental/SplineOpenAdoptor.h	/^  StorageValueVector_t myV, myL;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
myVars	Fermion/BackflowFunctionBase.h	/^  opt_variables_type myVars;$/;"	m	class:qmcplusplus::BackflowFunctionBase
myVars	Fermion/BackflowTransformation.h	/^  opt_variables_type myVars;$/;"	m	class:qmcplusplus::BackflowTransformation
myVars	Fermion/Backflow_ee_kSpace.h	/^  opt_variables_type myVars;$/;"	m	class:qmcplusplus::Backflow_ee_kSpace
myVars	Fermion/DiracDeterminantAFM.h	/^  opt_variables_type myVars;$/;"	m	class:qmcplusplus::DiracDeterminantAFM
myVars	Fermion/DiracDeterminantBase.h	/^  opt_variables_type myVars;$/;"	m	class:qmcplusplus::DiracDeterminantBase
myVars	Fermion/DiracDeterminantOpt.h	/^  opt_variables_type myVars;$/;"	m	class:qmcplusplus::DiracDeterminantOpt
myVars	Fermion/MultiDiracDeterminantBase.h	/^  opt_variables_type myVars;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
myVars	Fermion/MultiDiracDeterminantWithBackflow.h	/^  opt_variables_type myVars;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
myVars	Fermion/MultiSlaterDeterminant.h	/^  opt_variables_type myVars;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
myVars	Fermion/MultiSlaterDeterminantFast.h	/^  opt_variables_type myVars;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
myVars	Jastrow/DiffOneBodyJastrowOrbital.h	/^  opt_variables_type myVars;$/;"	m	class:qmcplusplus::DiffOneBodyJastrowOrbital
myVars	Jastrow/DiffOneBodySpinJastrowOrbital.h	/^  opt_variables_type myVars;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
myVars	Jastrow/DiffTwoBodyJastrowOrbital.h	/^  opt_variables_type myVars;$/;"	m	class:qmcplusplus::DiffTwoBodyJastrowOrbital
myVars	OrbitalBase.h	/^  opt_variables_type myVars;$/;"	m	struct:qmcplusplus::OrbitalBase
myVars	SPOSetBase.h	/^  opt_variables_type myVars;$/;"	m	class:qmcplusplus::SPOSetBase
my_id	Fermion/ci_node.h	/^  int my_id;$/;"	m	struct:qmcplusplus::ci_node
my_id	Fermion/excitation_node.h	/^  int my_id;$/;"	m	struct:qmcplusplus::excitation_node
mybuilder	BsplineReaderBase.h	/^  EinsplineSetBuilder* mybuilder;$/;"	m	struct:qmcplusplus::BsplineReaderBase
mybuilder	legacy/SplineAdoptorReader.h	/^  EinsplineSetBuilder* mybuilder;$/;"	m	struct:qmcplusplus::BsplineReaderBase
myfabs	SPOSetScanner.h	/^    RealType myfabs(RealType s) { return std::fabs(s); }$/;"	f	class:qmcplusplus::SPOSetScanner
myfabs	SPOSetScanner.h	/^    template<typename T> TinyVector<T, OHMMS_DIM> myfabs(TinyVector<T, OHMMS_DIM>& s) { return TinyVector<T, OHMMS_DIM>(myfabs(s[0]),myfabs(s[1]),myfabs(s[2])); }$/;"	f	class:qmcplusplus::SPOSetScanner
myfabs	SPOSetScanner.h	/^    template<typename T> std::complex<T> myfabs(std::complex<T>& s) { return std::complex<T>(myfabs(s.real()),myfabs(s.imag())); }$/;"	f	class:qmcplusplus::SPOSetScanner
n	Jastrow/ThreeBodyPade.h	/^    int m, n, o;$/;"	m	struct:qmcplusplus::ThreeBodyPade::Coeff
n2	Jastrow/LRBreakupUtilities.h	/^  T n2;$/;"	m	struct:qmcplusplus::DerivYukawaBreakup
nElms	Experimental/CuspCorr.h	/^  int nElms,curOrb,curCenter;$/;"	m	class:qmcplusplus::CuspCorr
nExct	Fermion/ci_configuration.h	/^  int nExct; \/\/ with respect to base ci_configuration, which we assume is hf$/;"	m	struct:qmcplusplus::ci_configuration
n_within_shell	ElectronGas/HEGGrid.h	/^  std::vector<int> n_within_shell;$/;"	m	struct:qmcplusplus::HEGGrid
name	LCOrbitalSetOpt.h	/^    static std::string name() { return "LCOrbitalSetOptTrialFunc"; }$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
nameOpt	IonOrbitalBuilder.h	/^  std::string nameOpt;$/;"	m	class:qmcplusplus::IonOrbitalBuilder
nameOpt	Jastrow/JastrowBuilder.h	/^  std::string nameOpt;$/;"	m	class:qmcplusplus::JastrowBuilder
names	Fermion/BackflowTransformation.h	/^  std::vector<std::string> names;$/;"	m	class:qmcplusplus::BackflowTransformation
nctmp	ElectronGas/HEGGrid.h	/^  int nctmp;$/;"	m	struct:qmcplusplus::HEGGrid
ndown	Experimental/PlaneWaveOrbitalBuilder.h	/^  int nup, ndown, upindx;$/;"	m	class:qmcplusplus::PlaneWaveOrbitalBuilder
needs_distance_table_for_recompute	TrialWaveFunction.h	/^  inline bool needs_distance_table_for_recompute() { return RecomputeNeedsDistanceTable; }$/;"	f	class:qmcplusplus::TrialWaveFunction
negative	Experimental/PlaneWaveBasis.h	/^  std::vector<int> negative;$/;"	m	class:qmcplusplus::PlaneWaveBasis
negative	PlaneWave/PWBasis.h	/^  std::vector<int> negative;$/;"	m	class:qmcplusplus::PWBasis
nelec	Jastrow/LRBreakupUtilities.h	/^  int nelec;$/;"	m	struct:qmcplusplus::RPABFeeBreakup
nels_dn	Fermion/MultiSlaterDeterminant.h	/^  int nels_up, nels_dn;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
nels_dn	Fermion/MultiSlaterDeterminantFast.h	/^  int nels_up,nels_dn;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
nels_up	Fermion/MultiSlaterDeterminant.h	/^  int nels_up, nels_dn;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
nels_up	Fermion/MultiSlaterDeterminantFast.h	/^  int nels_up,nels_dn;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
newGradLapl	Fermion/determinant_update.h	/^  void *A, *Ainv, *newRow, *AinvDelta, *AinvColk, *gradLapl, *newGradLapl, *dummy;$/;"	m	struct:updateJob
newGradLaplList	Fermion/DiracDeterminantCUDA.h	/^                              AinvDeltaList, AinvColkList, gradLaplList, newGradLaplList, $/;"	m	class:qmcplusplus::DiracDeterminantCUDA
newGradLaplList_d	Fermion/DiracDeterminantCUDA.h	/^                                    newGradLaplList_d, AWorkList_d, AinvWorkList_d, GLList_d;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
newGradLaplOffset	Fermion/DiracDeterminantCUDA.h	/^         AinvColkOffset, gradLaplOffset, newGradLaplOffset, $/;"	m	class:qmcplusplus::DiracDeterminantCUDA
newQP	Fermion/BackflowTransformation.h	/^  ParticleSet::ParticlePos_t newQP;$/;"	m	class:qmcplusplus::BackflowTransformation
newRow	Fermion/determinant_update.h	/^  void *A, *Ainv, *newRow, *AinvDelta, *AinvColk, *gradLapl, *newGradLapl, *dummy;$/;"	m	struct:updateJob
newRowList	Fermion/DiracDeterminantCUDA.h	/^  std::vector<CudaValueType*> srcList, destList, AList, AinvList, newRowList,$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
newRowList_d	Fermion/DiracDeterminantCUDA.h	/^  gpu::device_vector<CudaValueType*> srcList_d, destList_d, AList_d, AinvList_d, newRowList_d, $/;"	m	class:qmcplusplus::DiracDeterminantCUDA
newRowOffset	Fermion/DiracDeterminantCUDA.h	/^  size_t AOffset, AinvOffset, newRowOffset, AinvDeltaOffset,$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
new_detValues	Fermion/MultiDiracDeterminantBase.h	/^  ValueVector_t detValues, new_detValues;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
new_detValues	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueVector_t detValues, new_detValues;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
new_grads	Fermion/MultiDiracDeterminantBase.h	/^  GradMatrix_t grads,new_grads;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
new_grads	Fermion/MultiDiracDeterminantWithBackflow.h	/^  GradMatrix_t grads,new_grads;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
new_lapls	Fermion/MultiDiracDeterminantBase.h	/^  ValueMatrix_t lapls,new_lapls;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
new_lapls	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueMatrix_t lapls,new_lapls;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
next	Fermion/ExcitationClass.h	/^  TinyVector<int,2> next()$/;"	f	class:qmcplusplus::ExcitationClass
nfunc	Jastrow/RPAJastrow.h	/^  FuncType* nfunc;$/;"	m	struct:qmcplusplus::RPAJastrow
nfunc	Jastrow/singleRPAJastrowBuilder.h	/^  FuncType* nfunc;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
ng	Jastrow/singleRPAJastrowBuilder.h	/^  int indx,ng;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
nlms_id	Experimental/GTOMolecularOrbitals.h	/^  std::map<std::string,int> nlms_id;$/;"	m	class:qmcplusplus::GTOMolecularOrbitals
nlms_id	Experimental/STOMolecularOrbitals.h	/^  std::map<std::string,int> nlms_id;$/;"	m	class:qmcplusplus::STOMolecularOrbitals
nlms_id	MolecularOrbitals/AtomicBasisBuilder.h	/^  std::map<std::string,int> nlms_id;$/;"	m	struct:qmcplusplus::AtomicBasisBuilder
nmax	HarmonicOscillator/SHOSet.h	/^    int nmax;$/;"	m	struct:qmcplusplus::SHOSet
nmax	HarmonicOscillator/SHOSetBuilder.h	/^    int nmax;$/;"	m	struct:qmcplusplus::SHOSetBuilder
no_degeneracy	SPOInfo.cpp	/^  const int      SPOInfo::no_degeneracy  = -1;$/;"	m	class:qmcplusplus::SPOInfo	file:
no_degeneracy	SPOInfo.h	/^    static const int      no_degeneracy;$/;"	m	struct:qmcplusplus::SPOInfo
no_energy	SPOInfo.cpp	/^  const RealType SPOInfo::no_energy      = std::numeric_limits<RealType>::max();$/;"	m	class:qmcplusplus::SPOInfo	file:
no_energy	SPOInfo.h	/^    static const RealType no_energy    ;$/;"	m	struct:qmcplusplus::SPOInfo
no_energy_tol	SPOSetInfo.cpp	/^  const RealType no_energy_tol = std::numeric_limits<int>::max();$/;"	m	namespace:qmcplusplus	file:
no_index	SPOInfo.cpp	/^  const int      SPOInfo::no_index       = -1;$/;"	m	class:qmcplusplus::SPOInfo	file:
no_index	SPOInfo.h	/^    static const int      no_index     ;$/;"	m	struct:qmcplusplus::SPOInfo
no_index	SPOSetInfo.cpp	/^  const int      no_index      = -1;$/;"	m	namespace:qmcplusplus	file:
no_order	SPOInfo.h	/^    enum orderings{index_ordered=0,energy_ordered,energy_and_index_ordered,unordered,no_order};$/;"	e	enum:qmcplusplus::spoinfo::orderings
nodeName	MolecularOrbitals/NGOBuilder.cpp	/^  std::string  nodeName;$/;"	m	struct:qmcplusplus::PadeOrbital	file:
node_B	Jastrow/Experimental/PadeConstraints.h	/^  xmlNodePtr node_B;$/;"	m	struct:qmcplusplus::PadeConstraints
notOpt	Jastrow/BsplineFunctor.h	/^  bool notOpt;$/;"	m	struct:qmcplusplus::BsplineFunctor
notOpt	Jastrow/PolynomialFunctor3D.h	/^  bool notOpt;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
not_implemented	CompositeSPOSet.h	/^    inline void not_implemented(const std::string& method)$/;"	f	class:qmcplusplus::CompositeSPOSet
not_implemented	HarmonicOscillator/SHOSet.h	/^    inline void not_implemented(const std::string& method)$/;"	f	struct:qmcplusplus::SHOSet
nppss	Jastrow/LRBreakupUtilities.h	/^  int nppss[2];$/;"	m	struct:qmcplusplus::RPABFeeBreakup
nspin	Jastrow/LRBreakupUtilities.h	/^  int nspin;$/;"	m	struct:qmcplusplus::RPABFeeBreakup
nstates	HarmonicOscillator/SHOSetBuilder.h	/^    int nstates;$/;"	m	struct:qmcplusplus::SHOSetBuilder
num2Deriv	Experimental/CuspCorr.h	/^  RealType num2Deriv(RealType r)$/;"	f	class:qmcplusplus::CuspCorr
numBands	PlaneWave/PWParameterSet.h	/^  int numBands;$/;"	m	struct:qmcplusplus::PWParameterSet
numBasis	Experimental/PlaneWaveOrbitalSet.h	/^  inline int numBasis() const$/;"	f	class:qmcplusplus::PlaneWaveOrbitalSet
numBasis	LCOrbitals.h	/^  inline int numBasis() const$/;"	f	class:qmcplusplus::LCOrbitals
numDeriv	Experimental/CuspCorr.h	/^  RealType numDeriv(RealType r)$/;"	f	class:qmcplusplus::CuspCorr
numOrbitals	Experimental/PlaneWaveOrbitalSet.h	/^  inline int numOrbitals() const$/;"	f	class:qmcplusplus::PlaneWaveOrbitalSet
numOrbitals	LCOrbitals.h	/^  inline int numOrbitals() const$/;"	f	class:qmcplusplus::LCOrbitals
numParams	Fermion/BackflowFunctionBase.h	/^  int numParams;$/;"	m	class:qmcplusplus::BackflowFunctionBase
numParams	Fermion/BackflowTransformation.h	/^  int numParams;$/;"	m	class:qmcplusplus::BackflowTransformation
numParams	Fermion/Backflow_ee_kSpace.h	/^  int numParams;$/;"	m	class:qmcplusplus::Backflow_ee_kSpace
numQuadPoints	OrbitalBase.h	/^  int numQuadPoints;$/;"	m	struct:qmcplusplus::NLjob
numSiblings	Jastrow/CubicBsplineGroup.h	/^  int numSiblings;$/;"	m	class:qmcplusplus::CubicBsplineGroup
numVarBefore	Fermion/BackflowTransformation.h	/^  int numVarBefore;$/;"	m	class:qmcplusplus::BackflowTransformation
numbands	Experimental/PlaneWaveOrbitalSet.h	/^  int numspins, numbands;$/;"	m	class:qmcplusplus::PlaneWaveOrbitalSet
numlm	EinsplineSet.h	/^  int numlm, NumOrbitals, Ylm_BS;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
numspins	Experimental/PlaneWaveOrbitalSet.h	/^  int numspins, numbands;$/;"	m	class:qmcplusplus::PlaneWaveOrbitalSet
nunique_orbitals	EinsplineAdoptor.h	/^  int nunique_orbitals;$/;"	m	struct:qmcplusplus::SplineAdoptorBase
nup	Experimental/PlaneWaveOrbitalBuilder.h	/^  int nup, ndown, upindx;$/;"	m	class:qmcplusplus::PlaneWaveOrbitalBuilder
o	Jastrow/ThreeBodyPade.h	/^    int m, n, o;$/;"	m	struct:qmcplusplus::ThreeBodyPade::Coeff
objectName	SPOSetBase.h	/^  std::string objectName;$/;"	m	class:qmcplusplus::SPOSetBase
occ	SPOSetInputInfo.h	/^    std::string occ;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
occ_format	EinsplineSetBuilder.h	/^  std::string occ_format;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
occup	Fermion/SPOSetProxyForMSD.h	/^  Matrix<int> occup;$/;"	m	struct:qmcplusplus::SPOSetProxyForMSD
occup	Fermion/ci_configuration.h	/^  std::vector<bool> occup;$/;"	m	struct:qmcplusplus::ci_configuration
occup	Fermion/ci_configuration2.h	/^  std::vector<int> occup;$/;"	m	struct:qmcplusplus::ci_configuration2
occupations	SPOSetInputInfo.h	/^    std::vector<bool> occupations;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
occupied	Fermion/ci_builder.h	/^  std::vector<iset_type*> occupied;$/;"	m	struct:qmcplusplus::ci_builder
occupy	SPOSetInputInfo.cpp	/^  void SPOSetInputInfo::occupy(const std::string& loc,const indices_t& ind)$/;"	f	class:qmcplusplus::SPOSetInputInfo
occupy_ecut	SPOSetInputInfo.cpp	/^  void SPOSetInputInfo::occupy_ecut(const SPOSetInfo& states)$/;"	f	class:qmcplusplus::SPOSetInputInfo
occupy_energies	SPOSetInputInfo.cpp	/^  void SPOSetInputInfo::occupy_energies(const SPOSetInfo& states)$/;"	f	class:qmcplusplus::SPOSetInputInfo
occupy_energy_range	SPOSetInputInfo.cpp	/^  void SPOSetInputInfo::occupy_energy_range(const SPOSetInfo& states)$/;"	f	class:qmcplusplus::SPOSetInputInfo
occupy_index_range	SPOSetInputInfo.cpp	/^  void SPOSetInputInfo::occupy_index_range()$/;"	f	class:qmcplusplus::SPOSetInputInfo
occupy_indices	SPOSetInputInfo.cpp	/^  void SPOSetInputInfo::occupy_indices()$/;"	f	class:qmcplusplus::SPOSetInputInfo
occupy_occ	SPOSetInputInfo.cpp	/^  void SPOSetInputInfo::occupy_occ()$/;"	f	class:qmcplusplus::SPOSetInputInfo
occupy_size	SPOSetInputInfo.cpp	/^  void SPOSetInputInfo::occupy_size()$/;"	f	class:qmcplusplus::SPOSetInputInfo
offU	Jastrow/LRTwoBodyJastrow.h	/^  Vector<RealType> offU, offd2U;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
offd2U	Jastrow/LRTwoBodyJastrow.h	/^  Vector<RealType> offU, offd2U;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
offdU	Jastrow/LRTwoBodyJastrow.h	/^  Vector<PosType> offdU;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
offsetPrms	Fermion/Backflow_eI.h	/^  std::vector<int> offsetPrms;$/;"	m	class:qmcplusplus::Backflow_eI
offsetPrms	Fermion/Backflow_eI_spin.h	/^  Matrix<int> offsetPrms;$/;"	m	class:qmcplusplus::Backflow_eI_spin
offsetPrms	Fermion/Backflow_ee.h	/^  std::vector<int> offsetPrms;$/;"	m	class:qmcplusplus::Backflow_ee
offsetPrms	Fermion/Backflow_ee_kSpace.h	/^  std::vector<int> offsetPrms;$/;"	m	class:qmcplusplus::Backflow_ee_kSpace
oldPtcl	Fermion/DiracDeterminantIterative.h	/^  std::list<std::pair<int,double> >  oldPtcl;$/;"	m	class:qmcplusplus::DiracDeterminantIterative
oldPtcl	Fermion/DiracDeterminantTruncation.h	/^  std::list<std::pair<int,double> >  oldPtcl;$/;"	m	class:qmcplusplus::DiracDeterminantTruncation
oldQP	Fermion/BackflowTransformation.h	/^  ParticleSet::ParticlePos_t oldQP;$/;"	m	class:qmcplusplus::BackflowTransformation
oldVars	TrialWaveFunction.h	/^  std::vector<opt_variables_type> oldVars;$/;"	m	struct:qmcplusplus::CoefficientHolder
onethird	Experimental/QDwf.h	/^  double onethird;$/;"	m	class:QDwf
operator ()	AtomicOrbitals/HFAtomicSTOSet.h	/^  inline T operator()(T r, T rinv, const POS& dr, POS& dy, T& d2y)$/;"	f	struct:qmcplusplus::ComboSTO
operator ()	EinsplineSetBuilder.h	/^  bool operator()(const H5OrbSet &a, const H5OrbSet &b) const$/;"	f	struct:qmcplusplus::H5OrbSet
operator ()	EinsplineSetBuilder.h	/^  bool operator()(const TinyVector<int,3>& a, const TinyVector<int,3> &b) const$/;"	f	struct:qmcplusplus::Int3less
operator ()	EinsplineSetBuilder.h	/^  bool operator()(const TinyVector<int,4>& a, const TinyVector<int,4>&b)$/;"	f	struct:qmcplusplus::Int4less
operator ()	Jastrow/LRBreakupUtilities.h	/^  inline T operator()(T r, T rinv)$/;"	f	struct:qmcplusplus::DerivRPABreakup
operator ()	Jastrow/LRBreakupUtilities.h	/^  inline T operator()(T r, T rinv)$/;"	f	struct:qmcplusplus::DerivYukawaBreakup
operator ()	Jastrow/LRBreakupUtilities.h	/^  inline T operator()(T r, T rinv)$/;"	f	struct:qmcplusplus::EPRPABreakup
operator ()	Jastrow/LRBreakupUtilities.h	/^  inline T operator()(T r, T rinv)$/;"	f	struct:qmcplusplus::RPABFeeBreakup
operator ()	Jastrow/LRBreakupUtilities.h	/^  inline T operator()(T r, T rinv)$/;"	f	struct:qmcplusplus::RPABreakup
operator ()	Jastrow/LRBreakupUtilities.h	/^  inline T operator()(T r, T rinv)$/;"	f	struct:qmcplusplus::YukawaBreakup
operator ()	Jastrow/LRBreakupUtilities.h	/^  inline T operator()(T r, T rinv)$/;"	f	struct:qmcplusplus::derivEPRPABreakup
operator ()	Jastrow/NumericalJastrowFunctor.h	/^  inline T operator()(T r)$/;"	f	struct:qmcplusplus::CutoffFunctor
operator ()	Jastrow/kSpaceJastrow.cpp	/^  inline bool operator()(kSpaceJastrow::PosType a, kSpaceJastrow::PosType b)$/;"	f	struct:qmcplusplus::magLess
operator ()	Jastrow/kSpaceJastrow.cpp	/^kSpaceJastrow::operator()(PosType G1, PosType G2)$/;"	f	class:qmcplusplus::kSpaceJastrow
operator ()	Jastrow/kSpaceJastrow.h	/^  inline T operator()(T kk)$/;"	f	struct:qmcplusplus::RPA0
operator ()	MolecularOrbitals/NGOBuilder.h	/^  inline value_type operator()(int i) const$/;"	f	struct:qmcplusplus::NGOrbital
operator ()	MolecularOrbitals/NGOBuilder.h	/^  inline value_type& operator()(int i)$/;"	f	struct:qmcplusplus::NGOrbital
operator ()	SPOInfo.h	/^      inline bool operator()(const SPOInfo* left, const SPOInfo* right)$/;"	f	struct:qmcplusplus::spoinfo::EnergyOrder
operator ()	legacy/EinsplineWrapper.cpp	/^NUBsplineClass_2d_d::operator()(TinyVector<double,2> r)$/;"	f	class:qmcplusplus::NUBsplineClass_2d_d
operator ()	legacy/EinsplineWrapper.cpp	/^NUBsplineClass_2d_z::operator()(TinyVector<double,2> r)$/;"	f	class:qmcplusplus::NUBsplineClass_2d_z
operator ()	legacy/EinsplineWrapper.cpp	/^UBsplineClass_2d_d::operator()(TinyVector<double,2> r)$/;"	f	class:qmcplusplus::UBsplineClass_2d_d
operator ()	legacy/EinsplineWrapper.cpp	/^UBsplineClass_2d_z::operator()(TinyVector<double,2> r)$/;"	f	class:qmcplusplus::UBsplineClass_2d_z
operator <	BandInfo.h	/^  inline bool operator<(BandInfo other) const$/;"	f	struct:qmcplusplus::BandInfo
operator <<	AtomicOrbitals/HFAtomicSTOSetBuilder.cpp	/^operator<<(std::ostream& out, const ComboSTO<T,POS>& asto)$/;"	f	namespace:qmcplusplus
operator <<	Fermion/ci_configuration.h	/^inline std::ostream& operator<<(std::ostream& out, const ci_configuration& c)$/;"	f	namespace:qmcplusplus
operator <<	Fermion/ci_configuration2.h	/^inline std::ostream& operator<<(std::ostream& out, const ci_configuration2& c)$/;"	f	namespace:qmcplusplus
operator =	Experimental/DiracDeterminant.h	/^  DiracDeterminant<SPOSet>& operator=(const DiracDeterminant<SPOSet>& s)$/;"	f	class:qmcplusplus::DiracDeterminant
operator =	Fermion/DiracDeterminantBase.cpp	/^DiracDeterminantBase& DiracDeterminantBase::operator=(const DiracDeterminantBase& s)$/;"	f	class:qmcplusplus::DiracDeterminantBase
operator =	Fermion/DiracDeterminantIterative.cpp	/^DiracDeterminantIterative& DiracDeterminantIterative::operator=(const DiracDeterminantIterative& s)$/;"	f	class:qmcplusplus::DiracDeterminantIterative
operator =	Fermion/DiracDeterminantTruncation.cpp	/^DiracDeterminantTruncation& DiracDeterminantTruncation::operator=(const DiracDeterminantTruncation& s)$/;"	f	class:qmcplusplus::DiracDeterminantTruncation
operator =	Fermion/DiracDeterminantWithBackflow.cpp	/^DiracDeterminantWithBackflow& DiracDeterminantWithBackflow::operator=(const DiracDeterminantWithBackflow& s)$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
operator =	Fermion/MultiDiracDeterminantBase.cpp	/^MultiDiracDeterminantBase& MultiDiracDeterminantBase::operator=(const MultiDiracDeterminantBase& s)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
operator =	Fermion/MultiDiracDeterminantBase_help.cpp	/^MultiDiracDeterminantBase& MultiDiracDeterminantBase::operator=(const MultiDiracDeterminantBase& s)$/;"	f	class:MultiDiracDeterminantBase
operator =	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^MultiDiracDeterminantBase& MultiDiracDeterminantBase::operator=(const MultiDiracDeterminantBase& s)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
operator =	Fermion/RNDiracDeterminantBase.cpp	/^RNDiracDeterminantBase& RNDiracDeterminantBase::operator=(const RNDiracDeterminantBase& s)$/;"	f	class:qmcplusplus::RNDiracDeterminantBase
operator =	Fermion/RNDiracDeterminantBaseAlternate.cpp	/^RNDiracDeterminantBaseAlternate& RNDiracDeterminantBaseAlternate::operator=(const RNDiracDeterminantBaseAlternate& s)$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
operator ==	Fermion/ci_configuration.h	/^  bool operator==(const ci_configuration& c) const$/;"	f	struct:qmcplusplus::ci_configuration
operator ==	Fermion/ci_configuration2.h	/^  inline bool operator==(const ci_configuration2& c) const$/;"	f	struct:qmcplusplus::ci_configuration2
operator []	SPOSetInfo.cpp	/^  const SPOInfo* SPOSetInfo::operator[](int s) const$/;"	f	class:qmcplusplus::SPOSetInfo
operator []	SPOSetInfo.cpp	/^  const SPOInfo* SPOSetInfo::operator[](int s)$/;"	f	class:qmcplusplus::SPOSetInfo
operator []	SPOSetInfo.h	/^    SPOI* operator[](int s) const$/;"	f	struct:qmcplusplus::SPOSetInfoSimple
operator []	SPOSetInfo.h	/^    SPOI*& operator[](int s)$/;"	f	struct:qmcplusplus::SPOSetInfoSimple
optIndexMap	Fermion/BackflowTransformation.h	/^  std::map<int,int> optIndexMap;$/;"	m	class:qmcplusplus::BackflowTransformation
opt_d_vars	FDLRWfn.h	/^    bool opt_d_vars;$/;"	m	class:qmcplusplus::FDLRWfn
opt_variables_type	Fermion/Backflow_ee_kSpace.h	/^  typedef optimize::VariableSet opt_variables_type;$/;"	t	class:qmcplusplus::Backflow_ee_kSpace
opt_variables_type	Fermion/DiracDeterminantAFM.h	/^  typedef optimize::VariableSet opt_variables_type;$/;"	t	class:qmcplusplus::DiracDeterminantAFM
opt_variables_type	Fermion/DiracDeterminantOpt.h	/^  typedef optimize::VariableSet opt_variables_type;$/;"	t	class:qmcplusplus::DiracDeterminantOpt
opt_variables_type	OptimizableSPOSet.h	/^  typedef optimize::VariableSet opt_variables_type;$/;"	t	class:qmcplusplus::OptimizableSPOSet
opt_variables_type	OrbitalSetTraits.h	/^typedef optimize::VariableSet  opt_variables_type;$/;"	t	namespace:qmcplusplus
opt_x_vars	FDLRWfn.h	/^    bool opt_x_vars;$/;"	m	class:qmcplusplus::FDLRWfn
optimizable	Jastrow/GaussianFunctor.h	/^  bool optimizable;$/;"	m	struct:qmcplusplus::GaussianFunctor
optslaterdet_dn	Fermion/SlaterDetBuilder.h	/^  SlaterDetOpt* optslaterdet_dn;$/;"	m	class:qmcplusplus::SlaterDetBuilder
optslaterdet_up	Fermion/SlaterDetBuilder.h	/^  SlaterDetOpt* optslaterdet_up;$/;"	m	class:qmcplusplus::SlaterDetBuilder
orbitals_to_replace	Fermion/ExcitationClass.h	/^  std::vector<int> orbitals_to_replace;$/;"	m	class:qmcplusplus::ExcitationClass
orbitals_to_replace_index	Fermion/ExcitationClass.h	/^  int orbitals_to_replace_index;$/;"	m	class:qmcplusplus::ExcitationClass
order	SPOSetInfo.h	/^    orderings order;$/;"	m	class:qmcplusplus::SPOSetInfo
orderings	SPOInfo.h	/^    enum orderings{index_ordered=0,energy_ordered,energy_and_index_ordered,unordered,no_order};$/;"	g	namespace:qmcplusplus::spoinfo
orderings	SPOSetInfo.h	/^    typedef spoinfo::orderings orderings;$/;"	t	class:qmcplusplus::SPOSetInfo
originalSPOSet	Experimental/LCOrbitalSetWithCorrection.h	/^  LCOrbitalSet<BS,false>* originalSPOSet;$/;"	m	class:qmcplusplus::LCOrbitalSetWithCorrection
out1	Fermion/MultiDiracDeterminantBase.cpp	/^void out1(int n, std::string str="NULL") {}$/;"	f	namespace:qmcplusplus
out1	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^void out1(int n, std::string str="NULL") {}$/;"	f	namespace:qmcplusplus
outerProductSymm	EinsplineAdoptor.h	/^inline Tensor<T,D> outerProductSymm(const TinyVector<T,D>& v, const TinyVector<T,D>& w)$/;"	f	namespace:qmcplusplus
pairType	Fermion/BFsplineFunctor.h	/^  std::string elementType, pairType;$/;"	m	struct:qmcplusplus::BFsplineFunctor
pairType	Jastrow/BsplineFunctor.h	/^  std::string elementType, pairType;$/;"	m	struct:qmcplusplus::BsplineFunctor
paramTag	PlaneWave/PWParameterSet.h	/^  std::string paramTag;$/;"	m	struct:qmcplusplus::PWParameterSet
param_tag	OrbitalBuilderBase.cpp	/^std::string OrbitalBuilderBase::param_tag="parameter";$/;"	m	class:qmcplusplus::OrbitalBuilderBase	file:
param_tag	OrbitalBuilderBase.h	/^  static std::string param_tag;$/;"	m	class:qmcplusplus::OrbitalBuilderBase
parameterGroup	EinsplineSetBuilder.h	/^  std::string parameterGroup, ionsGroup, eigenstatesGroup;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
parameterType	OrbitalBase.h	/^  int parameterType;$/;"	m	struct:qmcplusplus::OrbitalBase
parent_id	Fermion/ci_node.h	/^  int parent_id;$/;"	m	struct:qmcplusplus::ci_node
parent_id	Fermion/excitation_node.h	/^  int parent_id;$/;"	m	struct:qmcplusplus::excitation_node
partial	SPOSetInfo.cpp	/^  bool SPOSetInfo::partial() const$/;"	f	class:qmcplusplus::SPOSetInfo
particleLists	Fermion/DiracDeterminantIterative.h	/^  std::vector<std::list<std::pair<int,double> > > particleLists;$/;"	m	class:qmcplusplus::DiracDeterminantIterative
particleLists	Fermion/DiracDeterminantTruncation.h	/^  std::vector<std::list<std::pair<int,double> > > particleLists;$/;"	m	class:qmcplusplus::DiracDeterminantTruncation
particle_hole_pairs	EinsplineSetBuilder.h	/^  int particle_hole_pairs;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
peers	Fermion/ci_node.h	/^  std::vector<int> peers;$/;"	m	struct:qmcplusplus::ci_node
peers	Fermion/excitation_node.h	/^  std::vector<int> peers;$/;"	m	struct:qmcplusplus::excitation_node
periodic	Jastrow/BsplineFunctor.h	/^  bool periodic;$/;"	m	struct:qmcplusplus::BsplineFunctor
phase	EinsplineSet.h	/^  Vector<double> phase;$/;"	m	class:qmcplusplus::EinsplineSetExtended
phase	Experimental/EinsplineAdoptorPacked.h	/^  std::vector<real_type> phase;$/;"	m	struct:qmcplusplus::SplineC2CAdoptorPacked
phi	EinsplineSet.h	/^  T *phi, *grad_lapl;$/;"	m	struct:qmcplusplus::AtomicPolyJob
phi	EinsplineSet.h	/^  T *phi, *grad_lapl;$/;"	m	struct:qmcplusplus::AtomicSplineJob
phi	Experimental/CuspCorr.h	/^  RealType phi( RealType r)$/;"	f	class:qmcplusplus::CuspCorr
phi	PlaneWave/PWBasis.h	/^  Vector<RealType> phi;$/;"	m	class:qmcplusplus::PWBasis
phi2	Jastrow/ThreeBodyJastrowOrbital.h	/^  Matrix<RealType> phi2;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
phiBar	Experimental/CuspCorr.h	/^  inline RealType phiBar(RealType r)$/;"	f	class:qmcplusplus::CuspCorr
phiT	AGPDeterminant.h	/^  ValueMatrix_t phiT;$/;"	m	class:qmcplusplus::AGPDeterminant
phiTv	AGPDeterminant.h	/^  ValueVector_t phiTv;$/;"	m	class:qmcplusplus::AGPDeterminant
phi_alpha_Minv	Fermion/DiracDeterminantBase.h	/^  GradMatrix_t phi_alpha_Minv, grad_phi_Minv;$/;"	m	class:qmcplusplus::DiracDeterminantBase
pi	Jastrow/NumericalJastrowFunctor.h	/^  T pi;$/;"	m	struct:qmcplusplus::CutoffFunctor
pm	AFMSPOSet.h	/^  int pm;$/;"	m	class:qmcplusplus::AFMSPOSet
pm	Fermion/DiracDeterminantAFM.h	/^  int NumOrbitals, pm;$/;"	m	class:qmcplusplus::DiracDeterminantAFM
point_type	Jastrow/CubicBsplineGroup.h	/^  typedef typename CubicBsplineGrid<T,GRIDTYPE,FIRSTDERIV_CONSTRAINTS>::point_type point_type;$/;"	t	class:qmcplusplus::CubicBsplineGroup
point_type	MolecularOrbitals/NGOBuilder.h	/^  typedef real_type                    point_type;$/;"	t	struct:qmcplusplus::NGOrbital
point_type	Spline3D/twist_handler.hpp	/^      typedef TinyVector<T, D> point_type;$/;"	t	struct:qmcplusplus::twist_handler
poly_coefs	AtomicOrbitalCuda.h	/^  T *spline_coefs, *poly_coefs;$/;"	m	class:AtomicOrbitalCuda
poly_order	AtomicOrbitalCuda.h	/^  int poly_order, poly_stride;$/;"	m	class:AtomicOrbitalCuda
poly_stride	AtomicOrbitalCuda.h	/^  int poly_order, poly_stride;$/;"	m	class:AtomicOrbitalCuda
pos	Experimental/CuspCorr.h	/^  ValueVector_t pos;$/;"	m	class:qmcplusplus::CuspCorr
pos_type	Spline3D/SplineGridHandler.h	/^  typedef TinyVector<T,D> pos_type;$/;"	t	struct:qmcplusplus::SplineGridHandler
pr	Experimental/CuspCorr.h	/^  inline RealType pr(RealType r)$/;"	f	class:qmcplusplus::CuspCorr
pr	Jastrow/BesselZeroFunctor.h	/^  std::string pr;$/;"	m	struct:qmcplusplus::BesselZero
prefactors	HarmonicOscillator/SHOSet.h	/^    std::vector<RealType>  prefactors;$/;"	m	struct:qmcplusplus::SHOSet
prepareFor	Fermion/SPOSetProxyForMSD.h	/^  void prepareFor(int n)$/;"	f	struct:qmcplusplus::SPOSetProxyForMSD
prepare_index_vector	SPOSetBase.h	/^  template<class IntIter> static std::vector<int>::iterator prepare_index_vector(IntIter start, IntIter end, std::vector<int> & vec) {$/;"	f	class:qmcplusplus::SPOSetBase
prepare_index_vector_contiguous	SPOSetBase.h	/^  static std::vector<int>::iterator prepare_index_vector_contiguous(const int start, const int end, std::vector<int> & vec) {$/;"	f	class:qmcplusplus::SPOSetBase
prepare_tf_component	LCOrbitalSetOpt.h	/^    void prepare_tf_component() {$/;"	f	class:qmcplusplus::LCOrbitalSetOpt
print	Fermion/BFsplineFunctor.h	/^  void print()$/;"	f	struct:qmcplusplus::BFsplineFunctor
print	Fermion/BFsplineFunctor.h	/^  void print(std::ostream& os)$/;"	f	struct:qmcplusplus::BFsplineFunctor
print	Jastrow/BesselZeroFunctor.h	/^  void print()$/;"	f	struct:qmcplusplus::BesselZero
print	Jastrow/BesselZeroFunctor.h	/^  void print(std::ostream& os)$/;"	f	struct:qmcplusplus::BesselZero
print	Jastrow/BsplineFunctor.h	/^  void print()$/;"	f	struct:qmcplusplus::BsplineFunctor
print	Jastrow/BsplineFunctor.h	/^  void print(std::ostream& os)$/;"	f	struct:qmcplusplus::BsplineFunctor
print	Jastrow/BsplineFunctor3D.h	/^  void print()$/;"	f	struct:qmcplusplus::BsplineFunctor3D
print	Jastrow/BsplineFunctor3D.h	/^  void print(std::ostream& os)$/;"	f	struct:qmcplusplus::BsplineFunctor3D
print	Jastrow/NumericalJastrowFunctor.h	/^  void print(std::ostream& os)$/;"	f	struct:qmcplusplus::NumericalJastrow
print	Jastrow/PolynomialFunctor3D.h	/^  void print()$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
print	Jastrow/PolynomialFunctor3D.h	/^  void print(std::ostream& os)$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
print	Jastrow/SplineFunctors.h	/^  void print(std::ostream& os)$/;"	f	struct:qmcplusplus::CubicSplineBasisSet
print	Jastrow/SplineFunctors.h	/^  void print(std::ostream& os)$/;"	f	struct:qmcplusplus::CubicSplineSingle
printGL	TrialWaveFunction.cpp	/^void TrialWaveFunction::printGL(ParticleSet::ParticleGradient_t& G, ParticleSet::ParticleLaplacian_t& L, std::string tag)$/;"	f	class:qmcplusplus::TrialWaveFunction
printOrbs	Experimental/CuspCorr.h	/^  bool printOrbs;$/;"	m	class:qmcplusplus::CuspCorr
printRadialFunctors	Jastrow/JastrowBasisBuilder.cpp	/^void JastrowBasisBuilder::printRadialFunctors(const std::string& elementType, COT* aoBasis)$/;"	f	class:qmcplusplus::JastrowBasisBuilder
print_B	LCOrbitalSetOpt.h	/^    void print_B() {$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
promote	Fermion/ci_builder.h	/^  inline int promote(std::vector<NODETYPE>& excitations, int level)$/;"	f	struct:qmcplusplus::ci_builder
psiB	Experimental/QDwf.h	/^  double psiB;$/;"	m	class:QDwf
psiBuilder	WaveFunctionFactory.h	/^  std::vector<OrbitalBuilderBase*> psiBuilder;$/;"	m	struct:qmcplusplus::WaveFunctionFactory
psiCurrent	Fermion/MultiSlaterDeterminant.h	/^  ValueType psiCurrent;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
psiCurrent	Fermion/MultiSlaterDeterminantFast.h	/^  ValueType psiCurrent;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
psiD	AGPDeterminant.h	/^  ValueVector_t psiU, psiD;$/;"	m	class:qmcplusplus::AGPDeterminant
psiM	AGPDeterminant.h	/^  ValueMatrix_t psiM, psiM_temp;$/;"	m	class:qmcplusplus::AGPDeterminant
psiM	Experimental/DiracDeterminant.h	/^  Determinant_t psiM, psiM_temp;$/;"	m	class:qmcplusplus::DiracDeterminant
psiM	Fermion/DiracDeterminantBase.h	/^  ValueMatrix_t psiM, psiM_temp;$/;"	m	class:qmcplusplus::DiracDeterminantBase
psiM	Fermion/MultiDiracDeterminantBase.h	/^  ValueMatrix_t psiM,psiM_temp, TpsiM, psiMinv, psiMinv_temp;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
psiM	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueMatrix_t psiM,psiM_temp, TpsiM, psiMinv, psiMinv_temp;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
psiM	Fermion/SPOSetProxy.h	/^  ValueMatrix_t psiM;$/;"	m	struct:qmcplusplus::SPOSetProxy
psiM	Fermion/SPOSetProxyForMSD.h	/^  ValueMatrix_t psiM;$/;"	m	struct:qmcplusplus::SPOSetProxyForMSD
psiM2	Fermion/DiracDeterminantTruncation.h	/^  ValueMatrix_t psiM2;$/;"	m	class:qmcplusplus::DiracDeterminantTruncation
psiM_actual	Fermion/DiracDeterminantTruncation.h	/^  ValueMatrix_t psiM_actual;$/;"	m	class:qmcplusplus::DiracDeterminantTruncation
psiM_hp	Fermion/DiracDeterminantBase.h	/^  ValueMatrix_hp_t psiM_hp;$/;"	m	class:qmcplusplus::DiracDeterminantBase
psiM_temp	AGPDeterminant.h	/^  ValueMatrix_t psiM, psiM_temp;$/;"	m	class:qmcplusplus::AGPDeterminant
psiM_temp	Experimental/DiracDeterminant.h	/^  Determinant_t psiM, psiM_temp;$/;"	m	class:qmcplusplus::DiracDeterminant
psiM_temp	Fermion/DiracDeterminantBase.h	/^  ValueMatrix_t psiM, psiM_temp;$/;"	m	class:qmcplusplus::DiracDeterminantBase
psiM_temp	Fermion/MultiDiracDeterminantBase.h	/^  ValueMatrix_t psiM,psiM_temp, TpsiM, psiMinv, psiMinv_temp;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
psiM_temp	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueMatrix_t psiM,psiM_temp, TpsiM, psiMinv, psiMinv_temp;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
psiM_v	Experimental/DiracDeterminant.h	/^  Vector<Determinant_t> psiM_v;$/;"	m	class:qmcplusplus::DiracDeterminant
psiMinv	AGPDeterminant.h	/^  ValueMatrix_t psiMinv;$/;"	m	class:qmcplusplus::AGPDeterminant
psiMinv	Experimental/DiracDeterminant.h	/^  Determinant_t psiMinv;$/;"	m	class:qmcplusplus::DiracDeterminant
psiMinv	Fermion/DiracDeterminantBase.h	/^  ValueMatrix_t psiMinv;$/;"	m	class:qmcplusplus::DiracDeterminantBase
psiMinv	Fermion/MultiDiracDeterminantBase.h	/^  ValueMatrix_t psiM,psiM_temp, TpsiM, psiMinv, psiMinv_temp;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
psiMinv	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueMatrix_t psiM,psiM_temp, TpsiM, psiMinv, psiMinv_temp;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
psiMinv_temp	Fermion/DiracDeterminantWithBackflow.h	/^  ValueMatrix_t psiMinv_temp;$/;"	m	class:qmcplusplus::DiracDeterminantWithBackflow
psiMinv_temp	Fermion/MultiDiracDeterminantBase.h	/^  ValueMatrix_t psiM,psiM_temp, TpsiM, psiMinv, psiMinv_temp;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
psiMinv_temp	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueMatrix_t psiM,psiM_temp, TpsiM, psiMinv, psiMinv_temp;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
psiU	AGPDeterminant.h	/^  ValueVector_t psiU, psiD;$/;"	m	class:qmcplusplus::AGPDeterminant
psiV	Experimental/DiracDeterminant.h	/^  Vector<ValueType> psiV;$/;"	m	class:qmcplusplus::DiracDeterminant
psiV	Fermion/DiracDeterminantBase.h	/^  ValueVector_t psiV;$/;"	m	class:qmcplusplus::DiracDeterminantBase
psiV	Fermion/MultiDiracDeterminantBase.h	/^  ValueVector_t psiV, psiV_temp;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
psiV	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueVector_t psiV, psiV_temp;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
psiV	Fermion/SPOSetProxy.h	/^  ValueVector_t psiV;$/;"	m	struct:qmcplusplus::SPOSetProxy
psiV	Fermion/SPOSetProxyForMSD.h	/^  ValueVector_t psiV;$/;"	m	struct:qmcplusplus::SPOSetProxyForMSD
psiV_temp	Fermion/MultiDiracDeterminantBase.h	/^  ValueVector_t psiV, psiV_temp;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
psiV_temp	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueVector_t psiV, psiV_temp;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
psi_diff	Fermion/DiracDeterminantTruncation.h	/^  ValueVector_t psi_diff;$/;"	m	class:qmcplusplus::DiracDeterminantTruncation
psi_g_path	BsplineReaderBase.h	/^  inline std::string psi_g_path(int ti, int spin, int ib)$/;"	f	struct:qmcplusplus::BsplineReaderBase
psi_g_path	legacy/SplineAdoptorReader.h	/^  inline std::string psi_g_path(int ti, int spin, int ib)$/;"	f	struct:qmcplusplus::BsplineReaderBase
psi_r_path	BsplineReaderBase.h	/^  inline std::string psi_r_path(int ti, int spin, int ib)$/;"	f	struct:qmcplusplus::BsplineReaderBase
psi_r_path	legacy/SplineAdoptorReader.h	/^  inline std::string psi_r_path(int ti, int spin, int ib)$/;"	f	struct:qmcplusplus::BsplineReaderBase
ptargetPtcl	Experimental/PlaneWaveOrbitalSet.h	/^  ParticleSet* ptargetPtcl;$/;"	m	class:qmcplusplus::PlaneWaveOrbitalSet
ptclPool	AGPDeterminantBuilder.h	/^  PtclPoolType& ptclPool;$/;"	m	class:qmcplusplus::AGPDeterminantBuilder
ptclPool	BasisSetFactory.h	/^  PtclPoolType& ptclPool;$/;"	m	class:qmcplusplus::BasisSetFactory
ptclPool	Experimental/MolecularOrbitalBuilder.h	/^  PtclPoolType& ptclPool;$/;"	m	struct:qmcplusplus::MolecularOrbitalBuilder
ptclPool	Experimental/NumericalOrbitalSetBuilder.h	/^  PtclPoolType& ptclPool;$/;"	m	class:qmcplusplus::NumericalOrbitalSetBuilder
ptclPool	Experimental/SplineSetBuilder.h	/^  PtclPoolType& ptclPool;$/;"	m	class:qmcplusplus::SplineSetBuilder
ptclPool	Experimental/TricubicBsplineSetBuilder.h	/^  PtclPoolType& ptclPool;$/;"	m	class:qmcplusplus::TricubicBsplineSetBuilder
ptclPool	Fermion/BackflowBuilder.h	/^  PtclPoolType& ptclPool;$/;"	m	class:qmcplusplus::BackflowBuilder
ptclPool	Fermion/SlaterDetBuilder.h	/^  PtclPoolType& ptclPool;$/;"	m	class:qmcplusplus::SlaterDetBuilder
ptclPool	IonOrbitalBuilder.h	/^  PtclPoolType& ptclPool;$/;"	m	class:qmcplusplus::IonOrbitalBuilder
ptclPool	Jastrow/Experimental/NJABBuilder.h	/^  PtclPoolType& ptclPool;$/;"	m	struct:qmcplusplus::NJABBuilder
ptclPool	Jastrow/Experimental/OldJastrowBuilder.h	/^  PtclPoolType& ptclPool;$/;"	m	struct:qmcplusplus::JastrowBuilder
ptclPool	Jastrow/Experimental/TwoBodyJastrowBuilder.h	/^  PtclPoolType& ptclPool;$/;"	m	class:qmcplusplus::TwoBodyJastrowBuilder
ptclPool	Jastrow/JABBuilder.h	/^  PtclPoolType& ptclPool;$/;"	m	struct:qmcplusplus::JABBuilder
ptclPool	Jastrow/JastrowBuilder.h	/^  PtclPoolType& ptclPool;$/;"	m	class:qmcplusplus::JastrowBuilder
ptclPool	Jastrow/PadeJastrowBuilder.h	/^  PtclPoolType& ptclPool;$/;"	m	struct:qmcplusplus::PadeJastrowBuilder
ptclPool	PlaneWave/PWOrbitalBuilder.h	/^  PtclPoolType& ptclPool;$/;"	m	class:qmcplusplus::PWOrbitalBuilder
ptclPool	WaveFunctionFactory.h	/^  PtclPoolType&  ptclPool;$/;"	m	struct:qmcplusplus::WaveFunctionFactory
ptr_to_B	LCOrbitalSetOpt.h	/^    const RealType * ptr_to_B() const { return &(*m_B.begin()); }$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
put	AFMSPOBuilder.cpp	/^AFMSPOBuilder::put (xmlNodePtr cur)$/;"	f	class:qmcplusplus::AFMSPOBuilder
put	AFMSPOSet.cpp	/^AFMSPOSet::put (xmlNodePtr node, SPOPool_t &spo_pool)$/;"	f	class:qmcplusplus::AFMSPOSet
put	AGPDeterminantBuilder.cpp	/^bool AGPDeterminantBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::AGPDeterminantBuilder
put	AtomicOrbitals/HFAtomicSTOSetBuilder.cpp	/^HFAtomicSTOSetBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::HFAtomicSTOSetBuilder
put	AtomicOrbitals/HeSTOClementiRottie.cpp	/^HePresetHFBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::HePresetHFBuilder
put	BasisSetFactory.cpp	/^bool BasisSetFactory::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::BasisSetFactory
put	CompositeSPOSet.cpp	/^  bool CompositeSPOSetBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::CompositeSPOSetBuilder
put	EinsplineSetBuilderCommon.cpp	/^EinsplineSetBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
put	ElectronGas/ElectronGasComplexOrbitalBuilder.cpp	/^bool ElectronGasBasisBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::ElectronGasBasisBuilder
put	ElectronGas/ElectronGasComplexOrbitalBuilder.cpp	/^bool ElectronGasComplexOrbitalBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::ElectronGasComplexOrbitalBuilder
put	ElectronGas/ElectronGasOrbitalBuilder.cpp	/^bool ElectronGasBasisBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::ElectronGasBasisBuilder
put	ElectronGas/ElectronGasOrbitalBuilder.cpp	/^bool ElectronGasOrbitalBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::ElectronGasOrbitalBuilder
put	Experimental/DetSetBuilderWithBasisSet.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::DetSetBuilderWithBasisSet
put	Experimental/EinsplineSetBuilder.cpp	/^EinsplineSetBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
put	Experimental/MolecularOrbitalBuilder.cpp	/^bool MolecularOrbitalBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::MolecularOrbitalBuilder
put	Experimental/NoCuspFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::NoCuspFunctor
put	Experimental/NumericalMolecularOrbitals.cpp	/^bool NumericalMolecularOrbitals::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::NumericalMolecularOrbitals
put	Experimental/NumericalOrbitalSetBuilder.cpp	/^bool NumericalOrbitalSetBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::NumericalOrbitalSetBuilder
put	Experimental/PlaneWaveOrbitalBuilder.cpp	/^bool PlaneWaveOrbitalBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::PlaneWaveOrbitalBuilder
put	Experimental/PlaneWaveOrbitalSet.h	/^  bool put(std::istream& )$/;"	f	class:qmcplusplus::PlaneWaveOrbitalSet
put	Experimental/PlaneWaveOrbitalSet.h	/^  bool put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::PlaneWaveOrbitalSet
put	Experimental/QDwf.h	/^  void put(xmlNodePtr cur, VarRegistry<T1>& vlist)$/;"	f	class:QDwf
put	Experimental/QDwfBuilder.cpp	/^bool QDwfBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::QDwfBuilder
put	Experimental/STOMolecularOrbitals.cpp	/^bool STOMolecularOrbitals::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::STOMolecularOrbitals
put	Experimental/Spline3DBuilder.cpp	/^Spline3DBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::Spline3DBuilder
put	Experimental/SplineSetBuilder.cpp	/^bool SplineSetBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::SplineSetBuilder
put	Experimental/TriCubicSplineBuilder.cpp	/^bool TriCubicSplineBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::TriCubicSplineBuilder
put	Experimental/TricubicBsplineSetBuilder.cpp	/^bool TricubicBsplineSetBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::TricubicBsplineSetBuilder
put	Fermion/BFsplineFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::BFsplineFunctor
put	Fermion/BackflowBuilder.cpp	/^bool BackflowBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::BackflowBuilder
put	Fermion/BackflowTransformation.h	/^  bool put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::BackflowTransformation
put	Fermion/GaussianFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::GaussianFunctor
put	Fermion/SlaterDetBuilder.cpp	/^bool SlaterDetBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::SlaterDetBuilder
put	HarmonicOscillator/SHOSetBuilder.h	/^    bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::SHOSetBuilder
put	IonOrbitalBuilder.cpp	/^IonOrbitalBuilder:: put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::IonOrbitalBuilder
put	Jastrow/BesselZeroFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::BesselZero
put	Jastrow/BsplineFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::BsplineFunctor
put	Jastrow/BsplineFunctor3D.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::BsplineFunctor3D
put	Jastrow/BsplineJastrowBuilder.cpp	/^bool BsplineJastrowBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::BsplineJastrowBuilder
put	Jastrow/ChebyshevFunctor.h	/^  void put(xmlNodePtr cur, VarRegistry<T1>& vlist)$/;"	f	struct:ChebyshevFunctor
put	Jastrow/CompositeFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::AnyTimesRnFunctor
put	Jastrow/CompositeFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::CuspCorrectionFunctor
put	Jastrow/CompositeFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::DCuspCorrectionDEFunctor
put	Jastrow/CompositeFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::TruncatedPadeFunctor
put	Jastrow/DerivPadeFunctors.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::D2PadeDB2Functor
put	Jastrow/DerivPadeFunctors.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::DPadeDBFunctor
put	Jastrow/DerivWMFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::D2WMDB2Functor
put	Jastrow/DerivWMFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::DWMDBFunctor
put	Jastrow/Experimental/AnyConstraints.cpp	/^bool AnyConstraints::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::AnyConstraints
put	Jastrow/Experimental/JAAPBCBuilder.cpp	/^bool JAAPBCBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::JAAPBCBuilder
put	Jastrow/Experimental/NJAABuilder.cpp	/^bool NJAABuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::NJAABuilder
put	Jastrow/Experimental/NJABBuilder.cpp	/^bool NJABBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::NJABBuilder
put	Jastrow/Experimental/OldJastrowBuilder.cpp	/^bool JastrowBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::JastrowBuilder
put	Jastrow/Experimental/PadeBuilder.cpp	/^bool PadeBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::PadeBuilder
put	Jastrow/Experimental/PadeConstraints.cpp	/^bool PadeConstraints::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::PadeConstraints
put	Jastrow/Experimental/PadeConstraints.cpp	/^bool ScaledPadeConstraints::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::ScaledPadeConstraints
put	Jastrow/Experimental/TwoBodyJastrowBuilder.cpp	/^bool TwoBodyJastrowBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::TwoBodyJastrowBuilder
put	Jastrow/Experimental/WMConstraints.cpp	/^bool WMConstraints::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::WMConstraints
put	Jastrow/GaussianFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::GaussianFunctor
put	Jastrow/GaussianFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
put	Jastrow/JAABuilder.cpp	/^bool JAABuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::JAABuilder
put	Jastrow/JABBuilder.cpp	/^bool JABBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::JABBuilder
put	Jastrow/JastrowBasisBuilder.cpp	/^bool JastrowBasisBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::JastrowBasisBuilder
put	Jastrow/JastrowBuilder.cpp	/^bool JastrowBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::JastrowBuilder
put	Jastrow/LRBreakupUtilities.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::ShortRangePartAdapter
put	Jastrow/LRTwoBodyJastrow.cpp	/^bool LRTwoBodyJastrow::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
put	Jastrow/LinearCombinationFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:LinearCombinationFunctor
put	Jastrow/McMillanJ2Functor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::McMillanJ2Functor
put	Jastrow/McMillanJ2Functor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::ModMcMillanJ2Functor
put	Jastrow/McMillanJ2Functor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::comboMcMillanJ2Functor
put	Jastrow/McMillanJ2GFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::McMillanJ2GFunctor
put	Jastrow/ModPadeFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::ModPadeFunctor
put	Jastrow/NumericalJastrowFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::NumericalJastrow
put	Jastrow/OpenGaussianSlaterFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::OpenGaussianSlaterFunctor
put	Jastrow/PadeFunctors.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
put	Jastrow/PadeFunctors.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::PadeFunctor
put	Jastrow/PadeFunctors.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
put	Jastrow/PadeFunctors.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::ScaledPadeFunctor
put	Jastrow/PadeJastrowBuilder.cpp	/^bool PadeJastrowBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::PadeJastrowBuilder
put	Jastrow/PolarizedJastrow.h	/^  void put(xmlNodePtr cur, VarRegistry<RealType>& vlist)$/;"	f	class:qmcplusplus::PolarizedJastrow
put	Jastrow/PolyConstraints.cpp	/^bool PolyConstraints::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::PolyConstraints
put	Jastrow/PolyFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::PolyFunctor
put	Jastrow/PolynomialFunctor3D.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
put	Jastrow/RPAJastrow.cpp	/^bool RPAJastrow::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::RPAJastrow
put	Jastrow/RPAJastrowFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::RPAJastrowFunctor
put	Jastrow/SplineFunctors.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::CubicSplineBasisSet
put	Jastrow/SplineFunctors.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::CubicSplineSingle
put	Jastrow/ThreeBodyBlockSparse.cpp	/^bool ThreeBodyBlockSparse::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
put	Jastrow/ThreeBodyGeminal.cpp	/^bool ThreeBodyGeminal::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
put	Jastrow/ThreeBodyGeminalBuilder.cpp	/^bool ThreeBodyGeminalBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::ThreeBodyGeminalBuilder
put	Jastrow/ThreeBodyPade.h	/^  void put(xmlNodePtr cur, VarRegistry<RealType>& vlist)$/;"	f	class:qmcplusplus::ThreeBodyPade
put	Jastrow/ThreeBodyPadeBuilder.cpp	/^bool ThreeBodyPadeBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::ThreeBodyPadeBuilder
put	Jastrow/WMFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::WMFunctor
put	Jastrow/WMFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::WMFunctorSet
put	Jastrow/WMJastrowBuilder.cpp	/^bool WMJastrowBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::WMJastrowBuilder
put	Jastrow/eeI_JastrowBuilder.cpp	/^bool eeI_JastrowBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::eeI_JastrowBuilder
put	Jastrow/kSpaceJastrow.cpp	/^kSpaceJastrow::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::kSpaceJastrow
put	Jastrow/kSpaceJastrowBuilder.cpp	/^kSpaceJastrowBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::kSpaceJastrowBuilder
put	Jastrow/singleRPAJastrowBuilder.cpp	/^bool singleRPAJastrowBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::singleRPAJastrowBuilder
put	Jastrow/singleRPAJastrowBuilder.cpp	/^bool singleRPAJastrowBuilder::put(xmlNodePtr cur, int addOrbital)$/;"	f	class:qmcplusplus::singleRPAJastrowBuilder
put	LCOrbitals.h	/^  bool put(std::istream& )$/;"	f	class:qmcplusplus::LCOrbitals
put	LCOrbitals.h	/^  bool put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::LCOrbitals
put	MolecularOrbitals/AtomicBasisBuilder.h	/^bool AtomicBasisBuilder<RFB>::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::AtomicBasisBuilder
put	MolecularOrbitals/GTOMolecularOrbitals.cpp	/^bool GTOMolecularOrbitals::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::GTOMolecularOrbitals
put	MolecularOrbitals/MolecularBasisBuilder.h	/^  bool put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::MolecularBasisBuilder
put	MolecularOrbitals/NGOBuilder.cpp	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::PadeOrbital
put	MolecularOrbitals/NGOBuilder.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::NGOrbital
put	OptimizableSPOBuilder.cpp	/^OptimizableSPOBuilder::put (xmlNodePtr cur)$/;"	f	class:qmcplusplus::OptimizableSPOBuilder
put	OptimizableSPOSet.cpp	/^OptimizableSPOSet::put (xmlNodePtr node, SPOPool_t &spo_pool)$/;"	f	class:qmcplusplus::OptimizableSPOSet
put	PlaneWave/PWOrbitalBuilder.cpp	/^bool PWOrbitalBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::PWOrbitalBuilder
put	PlaneWave/PWParameterSet.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::PWParameterSet
put	SPOSetBase.cpp	/^bool SPOSetBase::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::SPOSetBase
put	SPOSetBase.h	/^  virtual bool put(xmlNodePtr cur, SPOPool_t &spo_pool)$/;"	f	class:qmcplusplus::SPOSetBase
put	SPOSetInputInfo.cpp	/^  void SPOSetInputInfo::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::SPOSetInputInfo
put	SPOSetScanner.h	/^    void put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::SPOSetScanner
put	TrialWaveFunction.cpp	/^bool TrialWaveFunction::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::TrialWaveFunction
put	WaveFunctionFactory.cpp	/^bool WaveFunctionFactory::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::WaveFunctionFactory
putBasisGroup	MolecularOrbitals/NGOBuilder.cpp	/^  bool putBasisGroup(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::PadeOrbital
putCommon	Experimental/Any2GridBuilder.cpp	/^bool Any2GridBuilder::putCommon(xmlNodePtr cur)$/;"	f	class:qmcplusplus::Any2GridBuilder
putCommon	Experimental/NumericalRGFBuilder.cpp	/^bool NumericalRGFBuilder::putCommon(xmlNodePtr cur)$/;"	f	class:qmcplusplus::NumericalRGFBuilder
putCommon	Jastrow/CBSOBuilder.cpp	/^CBSOBuilder::putCommon(xmlNodePtr cur)$/;"	f	class:qmcplusplus::CBSOBuilder
putCommon	MolecularOrbitals/BsplineAOBuilder.cpp	/^bool BsplineAOBuilder::putCommon(xmlNodePtr cur)$/;"	f	class:qmcplusplus::BsplineAOBuilder
putCommon	MolecularOrbitals/GTOBuilder.cpp	/^bool GTOBuilder::putCommon(xmlNodePtr cur)$/;"	f	class:qmcplusplus::GTOBuilder
putCommon	MolecularOrbitals/NGOBuilder.cpp	/^bool NGOBuilder::putCommon(xmlNodePtr cur)$/;"	f	class:qmcplusplus::NGOBuilder
putCommon	MolecularOrbitals/STOBuilder.cpp	/^bool STOBuilder::putCommon(xmlNodePtr cur)$/;"	f	class:qmcplusplus::STOBuilder
putContent2	Jastrow/kSpaceJastrowBuilder.cpp	/^putContent2(std::vector<T>& a, xmlNodePtr cur)$/;"	f	namespace:qmcplusplus
putDeterminant	Fermion/SlaterDetBuilder.cpp	/^bool SlaterDetBuilder::putDeterminant(xmlNodePtr cur, int spin_group)$/;"	f	class:qmcplusplus::SlaterDetBuilder
putFromH5	LCOrbitals.h	/^  bool putFromH5(const char* fname, xmlNodePtr coeff_ptr)$/;"	f	class:qmcplusplus::LCOrbitals
putFromH5	SPOSetBase.cpp	/^bool SPOSetBase::putFromH5(const char* fname, xmlNodePtr coeff_ptr)$/;"	f	class:qmcplusplus::SPOSetBase
putFromXML	LCOrbitals.h	/^  bool putFromXML(xmlNodePtr coeff_ptr)$/;"	f	class:qmcplusplus::LCOrbitals
putFromXML	SPOSetBase.cpp	/^bool SPOSetBase::putFromXML(xmlNodePtr coeff_ptr)$/;"	f	class:qmcplusplus::SPOSetBase
putInFunc	Jastrow/Experimental/NJAABuilder.cpp	/^bool NJAABuilder::putInFunc(xmlNodePtr cur)$/;"	f	class:qmcplusplus::NJAABuilder
putInFunc	Jastrow/Experimental/NJABBuilder.cpp	/^bool NJABBuilder::putInFunc(xmlNodePtr cur)$/;"	f	class:qmcplusplus::NJABBuilder
putOccupation	LCOrbitals.h	/^  bool putOccupation(xmlNodePtr occ_ptr)$/;"	f	class:qmcplusplus::LCOrbitals
putOccupation	SPOSetBase.cpp	/^bool SPOSetBase::putOccupation(xmlNodePtr occ_ptr)$/;"	f	class:qmcplusplus::SPOSetBase
putOpen	Experimental/MolecularOrbitalBuilder.cpp	/^bool MolecularOrbitalBuilder::putOpen(const std::string& fname_in)$/;"	f	class:qmcplusplus::MolecularOrbitalBuilder
putParametersInStandardForm	FDLRWfn.h	/^    void putParametersInStandardForm(opt_variables_type & active, const bool copy_back)$/;"	f	class:qmcplusplus::FDLRWfn
putParametersInStandardForm	LCOrbitalSetOpt.h	/^    void putParametersInStandardForm(opt_variables_type & active, const bool copy_back) {$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
putParametersInStandardForm	OrbitalBase.cpp	/^void OrbitalBase::putParametersInStandardForm(opt_variables_type & active, const bool copy_back) {$/;"	f	class:qmcplusplus::OrbitalBase
putParametersInStandardForm	TrialWaveFunction.cpp	/^void TrialWaveFunction::putParametersInStandardForm(opt_variables_type & active, const bool copy_back) {$/;"	f	class:qmcplusplus::TrialWaveFunction
putSlaterDet	PlaneWave/PWOrbitalBuilder.cpp	/^bool PWOrbitalBuilder::putSlaterDet(xmlNodePtr cur)$/;"	f	class:qmcplusplus::PWOrbitalBuilder
putSpecial	Experimental/MolecularOrbitalBuilder.cpp	/^bool MolecularOrbitalBuilder::putSpecial(xmlNodePtr cur)$/;"	f	class:qmcplusplus::MolecularOrbitalBuilder
putkids	Jastrow/eeI_JastrowBuilder.cpp	/^bool eeI_JastrowBuilder::putkids (xmlNodePtr kids, J3type &J3)$/;"	f	class:qmcplusplus::eeI_JastrowBuilder
pwMultTag	PlaneWave/PWParameterSet.h	/^  std::string pwMultTag;$/;"	m	struct:qmcplusplus::PWParameterSet
pwTag	PlaneWave/PWParameterSet.h	/^  std::string pwTag;$/;"	m	struct:qmcplusplus::PWParameterSet
q_l	OrbitalSetTraits.h	/^enum {q_n=0,q_l,q_m, q_s};$/;"	e	enum:qmcplusplus::__anon20
q_m	OrbitalSetTraits.h	/^enum {q_n=0,q_l,q_m, q_s};$/;"	e	enum:qmcplusplus::__anon20
q_n	OrbitalSetTraits.h	/^enum {q_n=0,q_l,q_m, q_s};$/;"	e	enum:qmcplusplus::__anon20
q_s	OrbitalSetTraits.h	/^enum {q_n=0,q_l,q_m, q_s};$/;"	e	enum:qmcplusplus::__anon20
qafm	EinsplineSetBuilder.h	/^  RealType qafm;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
qmcplusplus	AFMSPOBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	AFMSPOBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	AFMSPOSet.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	AFMSPOSet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	AGPDeterminant.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	AGPDeterminant.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	AGPDeterminantBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	AGPDeterminantBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	AtomicOrbital.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	AtomicOrbital.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	AtomicOrbitals/HFAtomicSTOSet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	AtomicOrbitals/HFAtomicSTOSetBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	AtomicOrbitals/HFAtomicSTOSetBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	AtomicOrbitals/HeSTOClementiRottie.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	AtomicOrbitals/HeSTOClementiRottie.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	BandInfo.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	BandInfo.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	BasisSetBase.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	BasisSetBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	BasisSetFactory.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	BasisSetFactory.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	BsplineReaderBase.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	BsplineReaderBase.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	CompositeSPOSet.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	CompositeSPOSet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	ConstantOrbital.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	DiffOrbitalBase.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	DiffOrbitalBase.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	DistributedSPOSet.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	DistributedSPOSet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	DummyBasisSet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	EinsplineAdoptor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	EinsplineSet.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	EinsplineSet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	EinsplineSetBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	EinsplineSetBuilderCommon.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	EinsplineSetBuilderESHDF.fft.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	EinsplineSetBuilderOld.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	EinsplineSetBuilderReadBands_ESHDF.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	EinsplineSetBuilder_createSPOs.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	EinsplineSetCuda.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	ElectronGas/ElectronGasComplexOrbitalBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	ElectronGas/ElectronGasComplexOrbitalBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	ElectronGas/ElectronGasOrbitalBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	ElectronGas/ElectronGasOrbitalBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	ElectronGas/HEGGrid.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/Any2GridBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/Any2GridBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/BigEinsplineSetBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/Bspline3DSet.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/Bspline3DSet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/Bspline3DSetBase.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/Bspline3DSetBase.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/Bspline3DSetTemp.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/Bspline3DSetTrunc.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/Bspline3DSetTrunc.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/CorrectingOrbitalBasisSet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/CuspCorr.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/DetSetBuilderWithBasisSet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/DiracDeterminant.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/EinsplineAdoptorPacked.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/EinsplineMixedAdoptor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/EinsplineSetBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/EinsplineSetBuilderESHDF.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/EinsplineSetBuilderReadBands_ESHDF2.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/GTOMolecularOrbitals.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/LCOrbitalSetWithCorrection.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/LCOrbitalSetWithCorrection.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/MolecularOrbitalBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/MolecularOrbitalBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/NoCuspFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/NumericalMolecularOrbitals.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/NumericalMolecularOrbitals.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/NumericalOrbitalSetBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/NumericalOrbitalSetBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/NumericalRGFBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/NumericalRGFBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/PlaneWaveBasis.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/PlaneWaveOrbitalBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/PlaneWaveOrbitalBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/PlaneWaveOrbitalSet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/QDwfBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/QDwfBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/STOMolecularOrbitals.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/STOMolecularOrbitals.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/SingleParticleOrbitalSet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/SlaterDeterminant.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/Spline3DBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/Spline3DBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/SplineOpenAdoptor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/SplineSetBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/SplineSetBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/TriCubicSplineBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/TriCubicSplineBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/TricubicBsplineSPOSet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/TricubicBsplineSetBuilder.1.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/TricubicBsplineSetBuilder.2.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/TricubicBsplineSetBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/TricubicBsplineSetBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/TricubicBsplineTwistSet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/TwoBodyJastrowFunction.Shared.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/TwoBodyJastrowFunction.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	FDLRWfn.h	/^namespace qmcplusplus {$/;"	n
qmcplusplus	Fermion/BFsplineFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/BackflowBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Fermion/BackflowBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/BackflowFunctionBase.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/BackflowTransformation.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/Backflow_eI.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/Backflow_eI_spin.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/Backflow_ee.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/Backflow_ee_kSpace.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/DiracDeterminantAFM.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Fermion/DiracDeterminantAFM.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/DiracDeterminantBase.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Fermion/DiracDeterminantBase.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/DiracDeterminantCUDA.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Fermion/DiracDeterminantCUDA.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/DiracDeterminantIterative.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Fermion/DiracDeterminantIterative.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/DiracDeterminantOpt.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Fermion/DiracDeterminantOpt.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/DiracDeterminantT.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/DiracDeterminantTruncation.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Fermion/DiracDeterminantTruncation.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/DiracDeterminantWithBackflow.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Fermion/DiracDeterminantWithBackflow.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/ExcitationClass.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/GaussianFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/MultiDiracDeterminantBase.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Fermion/MultiDiracDeterminantBase.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/MultiDiracDeterminantBase_help.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Fermion/MultiDiracDeterminantWithBackflow.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/MultiSlaterDeterminant.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Fermion/MultiSlaterDeterminant.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/MultiSlaterDeterminantFast.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Fermion/MultiSlaterDeterminantFast.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/MultiSlaterDeterminantWithBackflow.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Fermion/MultiSlaterDeterminantWithBackflow.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/RNDiracDeterminantBase.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Fermion/RNDiracDeterminantBase.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/RNDiracDeterminantBaseAlternate.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Fermion/RNDiracDeterminantBaseAlternate.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/SPOSetProxy.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Fermion/SPOSetProxy.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/SPOSetProxyForMSD.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Fermion/SPOSetProxyForMSD.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/SlaterDet.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Fermion/SlaterDet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/SlaterDetBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Fermion/SlaterDetBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/SlaterDetCUDA.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Fermion/SlaterDetOpt.cpp	/^namespace qmcplusplus {$/;"	n	file:
qmcplusplus	Fermion/SlaterDetOpt.h	/^namespace qmcplusplus {$/;"	n
qmcplusplus	Fermion/SlaterDetWithBackflow.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Fermion/SlaterDetWithBackflow.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/ci_builder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/ci_configuration.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/ci_configuration2.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/ci_node.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Fermion/excitation_node.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	FermionBase.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	FermionBase.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	HarmonicOscillator/SHOSet.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	HarmonicOscillator/SHOSet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	HarmonicOscillator/SHOSetBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	HarmonicOscillator/SHOSetBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	IonOrbital.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	IonOrbital.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	IonOrbitalBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	IonOrbitalBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/BesselZeroFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/BsplineFunctor.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/BsplineFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/BsplineFunctor3D.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/BsplineJastrowBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/BsplineJastrowBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/CBSOBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/CBSOBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/CompositeFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/CubicBsplineGroup.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/CudaSpline.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/DerivPadeFunctors.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/DerivWMFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/DiffOneBodyJastrowOrbital.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/DiffOneBodySpinJastrowOrbital.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/DiffTwoBodyJastrowOrbital.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/Experimental/AnyConstraints.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/Experimental/AnyConstraints.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/Experimental/JAAPBCBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/Experimental/JAAPBCBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/Experimental/NJAABuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/Experimental/NJAABuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/Experimental/NJABBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/Experimental/NJABBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/Experimental/OldJastrowBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/Experimental/OldJastrowBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/Experimental/PadeBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/Experimental/PadeConstraints.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/Experimental/PadeConstraints.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/Experimental/TwoBodyJastrowBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/Experimental/TwoBodyJastrowBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/Experimental/WMConstraints.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/Experimental/WMConstraints.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/GaussianFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/JAABuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/JAABuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/JABBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/JABBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/JastrowBasisBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/JastrowBasisBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/JastrowBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/JastrowBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/LRBreakupUtilities.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/LRTwoBodyJastrow.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/LRTwoBodyJastrow.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/McMillanJ2Functor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/McMillanJ2GFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/ModPadeFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/NumericalJastrowFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/OneBodyJastrowOrbital.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/OneBodyJastrowOrbitalBspline.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/OneBodyJastrowOrbitalBspline.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/OneBodySpinJastrowOrbital.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/OpenGaussianSlaterFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/PadeFunctors.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/PadeJastrowBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/PadeJastrowBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/PolarizedJastrow.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/PolyConstraints.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/PolyConstraints.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/PolyFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/PolynomialFunctor3D.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/RPAJastrow.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/RPAJastrow.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/RPAJastrowFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/SplineFunctors.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/ThreeBodyBlockSparse.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/ThreeBodyBlockSparse.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/ThreeBodyGeminal.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/ThreeBodyGeminal.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/ThreeBodyGeminalBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/ThreeBodyGeminalBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/ThreeBodyJastrowOrbital.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/ThreeBodyPade.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/ThreeBodyPadeBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/ThreeBodyPadeBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/TwoBodyJastrowOrbital.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/TwoBodyJastrowOrbitalBspline.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/WMFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/WMJastrowBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/WMJastrowBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/eeI_JastrowBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/eeI_JastrowBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/eeI_JastrowOrbital.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/kSpaceJastrow.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/kSpaceJastrow.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/kSpaceJastrowBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/kSpaceJastrowBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Jastrow/singleRPAJastrowBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Jastrow/singleRPAJastrowBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	LCOrbitalSet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	LCOrbitalSetOpt.h	/^namespace qmcplusplus {$/;"	n
qmcplusplus	LCOrbitals.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	LocalizedBasisSet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	MixedSPOSet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	MolecularOrbitals/AtomicBasisBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	MolecularOrbitals/BsplineAOBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	MolecularOrbitals/BsplineAOBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	MolecularOrbitals/GTOBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	MolecularOrbitals/GTOBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	MolecularOrbitals/GTOMolecularOrbitals.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	MolecularOrbitals/MolecularBasisBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	MolecularOrbitals/NGOBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	MolecularOrbitals/NGOBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	MolecularOrbitals/STOBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	MolecularOrbitals/STOBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	MuffinTin.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	MuffinTin.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	MultiGridBsplineSet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	MultiGridBsplineSetReader.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	OptimizableSPOBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	OptimizableSPOBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	OptimizableSPOSet.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	OptimizableSPOSet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	OrbitalBase.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	OrbitalBase.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	OrbitalBuilderBase.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	OrbitalBuilderBase.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	OrbitalConstraintsBase.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	OrbitalConstraintsBase.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	OrbitalSetTraits.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	PlaneWave/PWBasis.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	PlaneWave/PWBasis.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	PlaneWave/PWOrbitalBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	PlaneWave/PWOrbitalBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	PlaneWave/PWOrbitalSet.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	PlaneWave/PWOrbitalSet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	PlaneWave/PWParameterSet.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	PlaneWave/PWParameterSet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	PlaneWave/PWRealOrbitalSet.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	PlaneWave/PWRealOrbitalSet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	ProductOrbital.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	ProductOrbital.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	SPOInfo.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	SPOInfo.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	SPOSetBase.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	SPOSetBase.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	SPOSetComboNoCopy.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	SPOSetInfo.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	SPOSetInfo.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	SPOSetInputInfo.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	SPOSetInputInfo.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	SPOSetScanner.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	SparseLocalizedBasisSet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	SphericalBasisSet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	SphericalOrbitalSet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Spline3D/EinsplineSetTemp.hpp	/^namespace qmcplusplus$/;"	n
qmcplusplus	Spline3D/SplineBasisSet.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Spline3D/SplineGridHandler.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Spline3D/twist_handler.hpp	/^namespace qmcplusplus$/;"	n
qmcplusplus	SplineAdoptorReaderP.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	SplineC2XAdoptor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	SplineMixedAdoptor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	SplineMixedAdoptorReaderP.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	SplineR2RAdoptor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	TrialWaveFunction.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	TrialWaveFunction.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	TrialWaveFunction_CUDA.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	WaveFunctionFactory.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	WaveFunctionFactory.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	einspline_helper.hpp	/^namespace qmcplusplus$/;"	n
qmcplusplus	legacy/EinsplineOrb.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	legacy/EinsplineOrb.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	legacy/EinsplineSetLocal.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	legacy/EinsplineSetLocal.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	legacy/EinsplineWrapper.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	legacy/EinsplineWrapper.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	legacy/SplineAdoptorReader.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	legacy/SplineC2XAdoptor.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	legacy/SplineMixedAdoptor.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	legacy/SplineMixedAdoptorReader.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	legacy/SplineR2RAdoptor.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	legacy/einspline.hpp	/^namespace qmcplusplus { namespace einspline {$/;"	n
qmcplusplus	tests/test_bspline_jastrow.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	tests/test_einset.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	tests/test_polynomial_eeI_jastrow.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	tests/test_pw.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	tests/test_wf.cpp	/^namespace qmcplusplus$/;"	n	file:
qn_max	HarmonicOscillator/SHOSet.h	/^    TinyVector<int,DIM> qn_max;$/;"	m	struct:qmcplusplus::SHOSet
quantum_number	HarmonicOscillator/SHOSet.h	/^    TinyVector<int,DIM> quantum_number;$/;"	m	struct:qmcplusplus::SHOState
rMax	Jastrow/CudaSpline.h	/^  T rMax;$/;"	m	struct:qmcplusplus::CudaSpline
rSmall	MuffinTin.h	/^  double rSmall;$/;"	m	class:qmcplusplus::MuffinTinClass
rSmallCore	MuffinTin.h	/^  double rSmallCore;$/;"	m	class:qmcplusplus::MuffinTinClass
radFuncBuilder	MolecularOrbitals/AtomicBasisBuilder.h	/^  RFB radFuncBuilder;$/;"	m	struct:qmcplusplus::AtomicBasisBuilder
radius	Fermion/DiracDeterminantTruncation.h	/^  double radius;$/;"	m	class:qmcplusplus::DiracDeterminantTruncation
ratio	AGPDeterminant.cpp	/^AGPDeterminant::ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::AGPDeterminant
ratio	AGPDeterminant.cpp	/^AGPDeterminant::ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::AGPDeterminant
ratio	ConstantOrbital.h	/^  virtual ValueType ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::ConstantOrbital
ratio	ConstantOrbital.h	/^  virtual ValueType ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::ConstantOrbital
ratio	Experimental/DiracDeterminant.h	/^  ValueType ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::DiracDeterminant
ratio	Experimental/DiracDeterminant.h	/^  inline ValueType ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::DiracDeterminant
ratio	Experimental/SlaterDeterminant.h	/^  inline ValueType ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::SlaterDeterminant
ratio	Experimental/SlaterDeterminant.h	/^  ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::SlaterDeterminant
ratio	Experimental/TwoBodyJastrowFunction.Shared.h	/^  ValueType ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::TwoBodyJastrow
ratio	Experimental/TwoBodyJastrowFunction.Shared.h	/^  ValueType ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::TwoBodyJastrow
ratio	Experimental/TwoBodyJastrowFunction.h	/^  ValueType ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::TwoBodyJastrow
ratio	Experimental/TwoBodyJastrowFunction.h	/^  ValueType ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::TwoBodyJastrow
ratio	FDLRWfn.h	/^    ValueType ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::FDLRWfn
ratio	FDLRWfn.h	/^    ValueType ratio(ParticleSet& P, int iat, ParticleSet::ParticleGradient_t& dG, ParticleSet::ParticleLaplacian_t& dL) {$/;"	f	class:qmcplusplus::FDLRWfn
ratio	Fermion/DiracDeterminantBase.cpp	/^DiracDeterminantBase::ValueType DiracDeterminantBase::ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::DiracDeterminantBase
ratio	Fermion/DiracDeterminantBase.cpp	/^DiracDeterminantBase::ValueType DiracDeterminantBase::ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::DiracDeterminantBase
ratio	Fermion/DiracDeterminantBase.h	/^  ratio (MCWalkerConfiguration &W, int iat,$/;"	f	class:qmcplusplus::DiracDeterminantBase
ratio	Fermion/DiracDeterminantBase.h	/^  ratio (std::vector<Walker_t*> &walkers,    std::vector<int> &iatList,$/;"	f	class:qmcplusplus::DiracDeterminantBase
ratio	Fermion/DiracDeterminantCUDA.cpp	/^void DiracDeterminantCUDA::ratio (MCWalkerConfiguration &W, int iat,$/;"	f	class:qmcplusplus::DiracDeterminantCUDA
ratio	Fermion/DiracDeterminantCUDA.cpp	/^void DiracDeterminantCUDA::ratio (MCWalkerConfiguration &W,$/;"	f	class:qmcplusplus::DiracDeterminantCUDA
ratio	Fermion/DiracDeterminantCUDA.cpp	/^void DiracDeterminantCUDA::ratio (std::vector<Walker_t*> &walkers, std::vector<int> &iat_list,$/;"	f	class:qmcplusplus::DiracDeterminantCUDA
ratio	Fermion/DiracDeterminantCUDA.h	/^  ValueType ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::DiracDeterminantCUDA
ratio	Fermion/DiracDeterminantCUDA.h	/^  ValueType ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::DiracDeterminantCUDA
ratio	Fermion/DiracDeterminantIterative.cpp	/^DiracDeterminantBase::ValueType DiracDeterminantIterative::ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::DiracDeterminantIterative
ratio	Fermion/DiracDeterminantIterative.cpp	/^DiracDeterminantBase::ValueType DiracDeterminantIterative::ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::DiracDeterminantIterative
ratio	Fermion/DiracDeterminantTruncation.cpp	/^DiracDeterminantBase::ValueType DiracDeterminantTruncation::ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::DiracDeterminantTruncation
ratio	Fermion/DiracDeterminantTruncation.cpp	/^DiracDeterminantBase::ValueType DiracDeterminantTruncation::ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::DiracDeterminantTruncation
ratio	Fermion/DiracDeterminantWithBackflow.cpp	/^DiracDeterminantWithBackflow::ValueType DiracDeterminantWithBackflow::ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
ratio	Fermion/DiracDeterminantWithBackflow.cpp	/^DiracDeterminantWithBackflow::ValueType DiracDeterminantWithBackflow::ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
ratio	Fermion/MultiDiracDeterminantBase.h	/^  ValueType ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
ratio	Fermion/MultiDiracDeterminantBase.h	/^  ValueType ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
ratio	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueType ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
ratio	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueType ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
ratio	Fermion/MultiSlaterDeterminant.cpp	/^OrbitalBase::ValueType  MultiSlaterDeterminant::ratio(ParticleSet& P, int iat$/;"	f	class:qmcplusplus::MultiSlaterDeterminant
ratio	Fermion/MultiSlaterDeterminant.cpp	/^OrbitalBase::ValueType MultiSlaterDeterminant::ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::MultiSlaterDeterminant
ratio	Fermion/MultiSlaterDeterminantFast.cpp	/^OrbitalBase::ValueType  MultiSlaterDeterminantFast::ratio(ParticleSet& P, int iat$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
ratio	Fermion/MultiSlaterDeterminantFast.cpp	/^OrbitalBase::ValueType MultiSlaterDeterminantFast::ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
ratio	Fermion/MultiSlaterDeterminantWithBackflow.cpp	/^OrbitalBase::ValueType  MultiSlaterDeterminantWithBackflow::ratio(ParticleSet& P, int iat$/;"	f	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
ratio	Fermion/MultiSlaterDeterminantWithBackflow.cpp	/^OrbitalBase::ValueType MultiSlaterDeterminantWithBackflow::ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
ratio	Fermion/RNDiracDeterminantBase.cpp	/^RNDiracDeterminantBase::ValueType RNDiracDeterminantBase::ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::RNDiracDeterminantBase
ratio	Fermion/RNDiracDeterminantBase.cpp	/^RNDiracDeterminantBase::ValueType RNDiracDeterminantBase::ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::RNDiracDeterminantBase
ratio	Fermion/RNDiracDeterminantBaseAlternate.cpp	/^RNDiracDeterminantBaseAlternate::ValueType RNDiracDeterminantBaseAlternate::ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
ratio	Fermion/RNDiracDeterminantBaseAlternate.cpp	/^RNDiracDeterminantBaseAlternate::ValueType RNDiracDeterminantBaseAlternate::ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
ratio	Fermion/SlaterDet.h	/^  inline ValueType ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::SlaterDet
ratio	Fermion/SlaterDet.h	/^  inline ValueType ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::SlaterDet
ratio	Fermion/SlaterDet.h	/^  ratio (MCWalkerConfiguration &W, int iat$/;"	f	class:qmcplusplus::SlaterDet
ratio	Fermion/SlaterDetCUDA.cpp	/^SlaterDet::ratio (std::vector<Walker_t*> &walkers,    std::vector<int> &iatList,$/;"	f	class:qmcplusplus::SlaterDet
ratio	Fermion/SlaterDetOpt.cpp	/^OrbitalBase::ValueType SlaterDetOpt::ratio(ParticleSet& P, int iat) {$/;"	f	class:qmcplusplus::SlaterDetOpt
ratio	Fermion/SlaterDetOpt.cpp	/^OrbitalBase::ValueType SlaterDetOpt::ratio(ParticleSet& P,$/;"	f	class:qmcplusplus::SlaterDetOpt
ratio	Fermion/SlaterDetWithBackflow.h	/^  inline ValueType ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
ratio	Fermion/SlaterDetWithBackflow.h	/^  inline ValueType ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
ratio	Fermion/excitation_node.h	/^  T ratio;$/;"	m	struct:qmcplusplus::excitation_node
ratio	IonOrbital.cpp	/^IonOrbital::ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::IonOrbital
ratio	IonOrbital.cpp	/^IonOrbital::ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::IonOrbital
ratio	Jastrow/LRTwoBodyJastrow.cpp	/^LRTwoBodyJastrow::ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
ratio	Jastrow/LRTwoBodyJastrow.h	/^  ValueType ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
ratio	Jastrow/OneBodyJastrowOrbital.h	/^  inline ValueType ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
ratio	Jastrow/OneBodyJastrowOrbital.h	/^  inline ValueType ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
ratio	Jastrow/OneBodyJastrowOrbitalBspline.cpp	/^OneBodyJastrowOrbitalBspline::ratio$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
ratio	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  void ratio (std::vector<Walker_t*> &walkers,    std::vector<int> &iatList,$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
ratio	Jastrow/OneBodySpinJastrowOrbital.h	/^  inline ValueType ratio(ParticleSet& P, int iat$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
ratio	Jastrow/OneBodySpinJastrowOrbital.h	/^  inline ValueType ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
ratio	Jastrow/PolarizedJastrow.h	/^  ValueType ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::PolarizedJastrow
ratio	Jastrow/PolarizedJastrow.h	/^  ValueType ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::PolarizedJastrow
ratio	Jastrow/RPAJastrow.cpp	/^RPAJastrow::ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::RPAJastrow
ratio	Jastrow/RPAJastrow.cpp	/^RPAJastrow::ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::RPAJastrow
ratio	Jastrow/ThreeBodyBlockSparse.cpp	/^ThreeBodyBlockSparse::ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
ratio	Jastrow/ThreeBodyBlockSparse.cpp	/^ThreeBodyBlockSparse::ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
ratio	Jastrow/ThreeBodyGeminal.cpp	/^ThreeBodyGeminal::ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
ratio	Jastrow/ThreeBodyGeminal.cpp	/^ThreeBodyGeminal::ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::ThreeBodyGeminal
ratio	Jastrow/ThreeBodyJastrowOrbital.h	/^  inline ValueType ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
ratio	Jastrow/ThreeBodyJastrowOrbital.h	/^  inline ValueType ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
ratio	Jastrow/ThreeBodyPade.h	/^  inline ValueType ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::ThreeBodyPade
ratio	Jastrow/ThreeBodyPade.h	/^  inline ValueType ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::ThreeBodyPade
ratio	Jastrow/TwoBodyJastrowOrbital.h	/^  ValueType ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
ratio	Jastrow/TwoBodyJastrowOrbital.h	/^  ValueType ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
ratio	Jastrow/TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::ratio$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
ratio	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  void ratio (std::vector<Walker_t*> &walkers,    std::vector<int> &iatList,$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
ratio	Jastrow/eeI_JastrowOrbital.h	/^  ValueType ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
ratio	Jastrow/eeI_JastrowOrbital.h	/^  ValueType ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
ratio	Jastrow/kSpaceJastrow.cpp	/^kSpaceJastrow::ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::kSpaceJastrow
ratio	Jastrow/kSpaceJastrow.h	/^  ValueType ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::kSpaceJastrow
ratio	LCOrbitalSetOpt.h	/^    ValueType ratio(ParticleSet& P, int iat) {$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
ratio	LCOrbitalSetOpt.h	/^    ValueType ratio(ParticleSet& P, int iat, ParticleSet::ParticleGradient_t& dG, ParticleSet::ParticleLaplacian_t& dL) {$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
ratio	OrbitalBase.h	/^  ratio (MCWalkerConfiguration &W, int iat,$/;"	f	struct:qmcplusplus::OrbitalBase
ratio	OrbitalBase.h	/^  ratio (std::vector<Walker_t*> &walkers, std::vector<int> &iatList,$/;"	f	struct:qmcplusplus::OrbitalBase
ratio	ProductOrbital.cpp	/^ProductOrbital::ValueType ProductOrbital::ratio(ParticleSet& P, int iat$/;"	f	class:qmcplusplus::ProductOrbital
ratio	ProductOrbital.cpp	/^ProductOrbital::ValueType ProductOrbital::ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::ProductOrbital
ratio	TrialWaveFunction.cpp	/^TrialWaveFunction::RealType TrialWaveFunction::ratio(ParticleSet& P, int iat$/;"	f	class:qmcplusplus::TrialWaveFunction
ratio	TrialWaveFunction.cpp	/^TrialWaveFunction::RealType TrialWaveFunction::ratio(ParticleSet& P,int iat)$/;"	f	class:qmcplusplus::TrialWaveFunction
ratio	TrialWaveFunction_CUDA.cpp	/^TrialWaveFunction::ratio (MCWalkerConfiguration &W, int iat,$/;"	f	class:qmcplusplus::TrialWaveFunction
ratio	TrialWaveFunction_CUDA.cpp	/^TrialWaveFunction::ratio (std::vector<Walker_t*> &walkers, std::vector<int> &iatList,$/;"	f	class:qmcplusplus::TrialWaveFunction
ratioDown	AGPDeterminant.cpp	/^void AGPDeterminant::ratioDown(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::AGPDeterminant
ratioGrad	FDLRWfn.h	/^    ValueType ratioGrad(ParticleSet& P, int iat, GradType& grad_iat)$/;"	f	class:qmcplusplus::FDLRWfn
ratioGrad	Fermion/DiracDeterminantBase.cpp	/^DiracDeterminantBase::ratioGrad(ParticleSet& P, int iat, GradType& grad_iat)$/;"	f	class:qmcplusplus::DiracDeterminantBase
ratioGrad	Fermion/DiracDeterminantWithBackflow.cpp	/^DiracDeterminantWithBackflow::ratioGrad(ParticleSet& P, int iat, GradType& grad_iat)$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
ratioGrad	Fermion/MultiDiracDeterminantBase.h	/^  ValueType ratioGrad(ParticleSet& P, int iat, GradType& grad_iat)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
ratioGrad	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueType ratioGrad(ParticleSet& P, int iat, GradType& grad_iat)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
ratioGrad	Fermion/MultiSlaterDeterminant.cpp	/^OrbitalBase::ValueType MultiSlaterDeterminant::ratioGrad(ParticleSet& P$/;"	f	class:qmcplusplus::MultiSlaterDeterminant
ratioGrad	Fermion/MultiSlaterDeterminantFast.cpp	/^OrbitalBase::ValueType MultiSlaterDeterminantFast::ratioGrad(ParticleSet& P$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
ratioGrad	Fermion/MultiSlaterDeterminantWithBackflow.cpp	/^OrbitalBase::ValueType MultiSlaterDeterminantWithBackflow::ratioGrad(ParticleSet& P$/;"	f	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
ratioGrad	Fermion/RNDiracDeterminantBase.cpp	/^RNDiracDeterminantBase::ratioGrad(ParticleSet& P, int iat, GradType& grad_iat)$/;"	f	class:qmcplusplus::RNDiracDeterminantBase
ratioGrad	Fermion/RNDiracDeterminantBaseAlternate.cpp	/^RNDiracDeterminantBaseAlternate::ratioGrad(ParticleSet& P, int iat, GradType& grad_iat)$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
ratioGrad	Fermion/SlaterDet.h	/^  inline ValueType ratioGrad(ParticleSet& P, int iat, GradType& grad_iat)$/;"	f	class:qmcplusplus::SlaterDet
ratioGrad	Fermion/SlaterDetOpt.cpp	/^OrbitalBase::ValueType SlaterDetOpt::ratioGrad(ParticleSet& P, int iat, GradType& grad_iat) {$/;"	f	class:qmcplusplus::SlaterDetOpt
ratioGrad	Fermion/SlaterDetWithBackflow.h	/^  inline ValueType ratioGrad(ParticleSet& P, int iat, GradType& grad_iat)$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
ratioGrad	IonOrbital.cpp	/^IonOrbital::ratioGrad(ParticleSet& P, int iat, GradType& grad_iat)$/;"	f	class:qmcplusplus::IonOrbital
ratioGrad	Jastrow/LRTwoBodyJastrow.cpp	/^LRTwoBodyJastrow::ratioGrad(ParticleSet& P, int iat, GradType & g)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
ratioGrad	Jastrow/OneBodyJastrowOrbital.h	/^  inline ValueType ratioGrad(ParticleSet& P, int iat, GradType& grad_iat)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
ratioGrad	Jastrow/OneBodySpinJastrowOrbital.h	/^  inline ValueType ratioGrad(ParticleSet& P, int iat, GradType& grad_iat)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
ratioGrad	Jastrow/RPAJastrow.cpp	/^RPAJastrow::ratioGrad(ParticleSet &P, int iat, GradType& g)$/;"	f	class:qmcplusplus::RPAJastrow
ratioGrad	Jastrow/TwoBodyJastrowOrbital.h	/^  ValueType ratioGrad(ParticleSet& P, int iat, GradType& grad_iat)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
ratioGrad	Jastrow/eeI_JastrowOrbital.h	/^  ValueType ratioGrad(ParticleSet& P, int iat, GradType& grad_iat)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
ratioGrad	Jastrow/kSpaceJastrow.cpp	/^kSpaceJastrow::ratioGrad(ParticleSet& P, int iat, GradType& grad_iat)$/;"	f	class:qmcplusplus::kSpaceJastrow
ratioGrad	LCOrbitalSetOpt.h	/^    OrbitalBase::ValueType ratioGrad(ParticleSet& P, int iat, GradType& grad_iat) {$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
ratioGrad	OrbitalBase.h	/^  virtual ValueType ratioGrad(ParticleSet& P, int iat, GradType& grad_iat)$/;"	f	struct:qmcplusplus::OrbitalBase
ratioGrad	TrialWaveFunction.cpp	/^TrialWaveFunction::RealType TrialWaveFunction::ratioGrad(ParticleSet& P$/;"	f	class:qmcplusplus::TrialWaveFunction
ratioUp	AGPDeterminant.cpp	/^void AGPDeterminant::ratioUp(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::AGPDeterminant
ratioVector	TrialWaveFunction.cpp	/^TrialWaveFunction::RealType TrialWaveFunction::ratioVector(ParticleSet& P, int iat, std::vector<RealType>& ratios)$/;"	f	class:qmcplusplus::TrialWaveFunction
ratio_d	Fermion/DiracDeterminantCUDA.h	/^  gpu::device_vector<CudaValueType> ratio_d;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
ratio_host	Fermion/DiracDeterminantCUDA.h	/^  gpu::host_vector<CudaValueType> ratio_host;$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
ratio_multi	Fermion/MultiDiracDeterminantBase_help.cpp	/^MultiDiracDeterminantBase::ValueType MultiDiracDeterminantBase::ratio_multi(ParticleSet& P, int iat)$/;"	f	class:MultiDiracDeterminantBase
rcdot	Fermion/DiracDeterminantWithBackflow.h	/^  inline ValueType rcdot(TinyVector<RealType,OHMMS_DIM>& lhs, TinyVector<ValueType,OHMMS_DIM>& rhs)$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
rcdot	Fermion/DiracDeterminantWithBackflow.h	/^  inline ValueType rcdot(TinyVector<ValueType,OHMMS_DIM>& lhs, TinyVector<RealType,OHMMS_DIM>& rhs)$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
rcut	MolecularOrbitals/NGOBuilder.cpp	/^  real_type a0,a1,a2,a3,rcut;$/;"	m	struct:qmcplusplus::PadeOrbital	file:
read	SplineMixedAdoptor.h	/^  static bool read(SMA* bspline, hdf_archive& h5f)$/;"	f	struct:qmcplusplus::hdf_dual_grid
read	legacy/EinsplineOrb.cpp	/^EinsplineOrb<double,2>::read (hid_t h5file, std::string groupPath)$/;"	f	class:qmcplusplus::EinsplineOrb
read	legacy/EinsplineOrb.cpp	/^EinsplineOrb<double,3>::read (hid_t h5file, std::string groupPath)$/;"	f	class:qmcplusplus::EinsplineOrb
read	legacy/EinsplineOrb.cpp	/^EinsplineOrb<std::complex<double>,2>::read (hid_t h5file, std::string groupPath)$/;"	f	class:qmcplusplus::EinsplineOrb
read	legacy/EinsplineOrb.cpp	/^EinsplineOrb<std::complex<double>,3>::read (hid_t h5file, std::string groupPath)$/;"	f	class:qmcplusplus::EinsplineOrb
read	legacy/EinsplineOrb.h	/^  void read (hid_t h5file, const std::string& groupPath)$/;"	f	class:qmcplusplus::EinsplineOrb
readComplex2RealDataWithTruncation	Experimental/TricubicBsplineSetBuilder.2.cpp	/^void TricubicBsplineSetBuilder::readComplex2RealDataWithTruncation(const char* hroot,$/;"	f	class:qmcplusplus::TricubicBsplineSetBuilder
readCuspInfo	Experimental/LCOrbitalSetWithCorrection.cpp	/^bool LCOrbitalSetWithCorrection<BS,false>::readCuspInfo(Matrix<TinyVector<RealType,9> > &info)$/;"	f	class:qmcplusplus::LCOrbitalSetWithCorrection
readData	Experimental/TricubicBsplineSetBuilder.1.cpp	/^TricubicBsplineSetBuilder::readData(const char* hroot, const std::vector<int>& occSet, int spinIndex, int degeneracy)$/;"	f	class:qmcplusplus::TricubicBsplineSetBuilder
readDataOMP	Experimental/TricubicBsplineSetBuilder.1.cpp	/^void TricubicBsplineSetBuilder::readDataOMP(const char* hroot, const std::vector<int>& occSet, int spinIndex, int degeneracy)$/;"	f	class:qmcplusplus::TricubicBsplineSetBuilder
readDetList	Fermion/SlaterDetBuilder.cpp	/^bool SlaterDetBuilder::readDetList(xmlNodePtr cur, std::vector<ci_configuration>& uniqueConfg_up, std::vector<ci_configuration>& uniqueConfg_dn, std::vector<int>& C2node_up, std::vector<int>& C2node_dn, std::vector<std::string>& CItags, std::vector<RealType>& coeff, bool& optimizeCI, int nels_up, int nels_dn,  std::vector<RealType>& CSFcoeff, std::vector<int>& DetsPerCSF, std::vector<RealType>& CSFexpansion, bool& usingCSF)$/;"	f	class:qmcplusplus::SlaterDetBuilder
readMatGradTimer	Fermion/MultiDiracDeterminantBase.h	/^  NewTimer readMatGradTimer,buildTableGradTimer,ExtraStuffTimer;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
readMatGradTimer	Fermion/MultiDiracDeterminantWithBackflow.h	/^  NewTimer readMatGradTimer,buildTableGradTimer,ExtraStuffTimer;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
readMatTimer	Fermion/MultiDiracDeterminantBase.h	/^  NewTimer UpdateTimer, RatioTimer, InverseTimer, buildTableTimer, readMatTimer, evalWTimer, evalOrbTimer,evalOrb1Timer;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
readMatTimer	Fermion/MultiDiracDeterminantWithBackflow.h	/^  NewTimer UpdateTimer, RatioTimer, InverseTimer, buildTableTimer, readMatTimer, evalWTimer, evalOrbTimer,evalOrb1Timer;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
read_splines	SplineC2XAdoptor.h	/^  bool read_splines(hdf_archive& h5f)$/;"	f	struct:qmcplusplus::SplineC2CPackedAdoptor
read_splines	SplineC2XAdoptor.h	/^  bool read_splines(hdf_archive& h5f)$/;"	f	struct:qmcplusplus::SplineC2RPackedAdoptor
read_splines	SplineMixedAdoptor.h	/^  bool read_splines(hdf_archive& h5f)$/;"	f	struct:qmcplusplus::SplineMixedAdoptor
read_splines	SplineMixedAdoptor.h	/^  bool read_splines(hdf_archive& h5f)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
read_splines	SplineR2RAdoptor.h	/^  bool read_splines(hdf_archive& h5f)$/;"	f	struct:qmcplusplus::SplineR2RAdoptor
readbasis	Experimental/PlaneWaveBasis.h	/^  readbasis(hid_t h5basisgroup,RealType ecutoff,int& nh5gvecs,$/;"	f	class:qmcplusplus::PlaneWaveBasis
readbasis	PlaneWave/PWBasis.cpp	/^int PWBasis::readbasis(hid_t h5basisgroup, RealType ecutoff, ParticleLayout_t &lat,$/;"	f	class:qmcplusplus::PWBasis
realType1	AtomicOrbitalCuda.h	/^  typedef double1 realType1;$/;"	t	struct:cudaTypeTraits
realType1	AtomicOrbitalCuda.h	/^  typedef float1 realType1; $/;"	t	struct:cudaTypeTraits
realType2	AtomicOrbitalCuda.h	/^  typedef double2 realType2;$/;"	t	struct:cudaTypeTraits
realType2	AtomicOrbitalCuda.h	/^  typedef float2 realType2; $/;"	t	struct:cudaTypeTraits
realType3	AtomicOrbitalCuda.h	/^  typedef double3 realType3;$/;"	t	struct:cudaTypeTraits
realType3	AtomicOrbitalCuda.h	/^  typedef float3 realType3; $/;"	t	struct:cudaTypeTraits
realType4	AtomicOrbitalCuda.h	/^  typedef double4 realType4;$/;"	t	struct:cudaTypeTraits
realType4	AtomicOrbitalCuda.h	/^  typedef float4 realType4; $/;"	t	struct:cudaTypeTraits
real_type	Experimental/EinsplineAdoptorPacked.h	/^  typedef ST                                                      real_type;$/;"	t	struct:qmcplusplus::SplineC2CAdoptorPacked
real_type	Experimental/EinsplineAdoptorPacked.h	/^  typedef ST                                                    real_type;$/;"	t	struct:qmcplusplus::SplineC2RAdoptorPacked
real_type	Experimental/NoCuspFunctor.h	/^  typedef typename OptimizableFunctorBase<T>::real_type real_type;$/;"	t	struct:qmcplusplus::NoCuspFunctor
real_type	Experimental/TricubicBsplineSPOSet.h	/^  typedef typename TricubicBsplineTraits<T>::real_type   real_type;$/;"	t	class:qmcplusplus::TricubicBsplineSPOSet
real_type	Experimental/TricubicBsplineTwistSet.h	/^  typedef typename TricubicBsplineTraits<T>::real_type   real_type;$/;"	t	class:qmcplusplus::TricubicBsplineTwistSet
real_type	Fermion/ci_node.h	/^  typedef typename scalar_traits<T>::real_type real_type;$/;"	t	struct:qmcplusplus::ci_node
real_type	Jastrow/DerivPadeFunctors.h	/^  typedef typename OptimizableFunctorBase<T>::real_type real_type;$/;"	t	struct:qmcplusplus::D2PadeDB2Functor
real_type	Jastrow/DerivPadeFunctors.h	/^  typedef typename OptimizableFunctorBase<T>::real_type real_type;$/;"	t	struct:qmcplusplus::DPadeDBFunctor
real_type	Jastrow/DerivWMFunctor.h	/^  typedef typename OptimizableFunctorBase<T>::real_type real_type;$/;"	t	struct:qmcplusplus::D2WMDB2Functor
real_type	Jastrow/DerivWMFunctor.h	/^  typedef typename OptimizableFunctorBase<T>::real_type real_type;$/;"	t	struct:qmcplusplus::DWMDBFunctor
real_type	Jastrow/GaussianFunctor.h	/^  typedef typename OptimizableFunctorBase::real_type real_type;$/;"	t	struct:qmcplusplus::GaussianFunctor
real_type	Jastrow/GaussianFunctor.h	/^  typedef typename OptimizableFunctorBase::real_type real_type;$/;"	t	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
real_type	Jastrow/McMillanJ2Functor.h	/^  typedef typename OptimizableFunctorBase::real_type real_type;$/;"	t	struct:qmcplusplus::McMillanJ2Functor
real_type	Jastrow/McMillanJ2Functor.h	/^  typedef typename OptimizableFunctorBase::real_type real_type;$/;"	t	struct:qmcplusplus::ModMcMillanJ2Functor
real_type	Jastrow/McMillanJ2Functor.h	/^  typedef typename OptimizableFunctorBase::real_type real_type;$/;"	t	struct:qmcplusplus::comboMcMillanJ2Functor
real_type	Jastrow/McMillanJ2GFunctor.h	/^  typedef typename OptimizableFunctorBase::real_type real_type;$/;"	t	struct:qmcplusplus::McMillanJ2GFunctor
real_type	Jastrow/OpenGaussianSlaterFunctor.h	/^  typedef typename OptimizableFunctorBase::real_type real_type;$/;"	t	struct:qmcplusplus::OpenGaussianSlaterFunctor
real_type	Jastrow/PolyFunctor.h	/^  typedef typename OptimizableFunctorBase<T>::real_type real_type;$/;"	t	struct:qmcplusplus::PolyFunctor
real_type	Jastrow/RPAJastrowFunctor.h	/^  typedef typename OptimizableFunctorBase<T>::real_type real_type;$/;"	t	struct:qmcplusplus::RPAJastrowFunctor
real_type	legacy/EinsplineOrb.h	/^  typedef typename scalar_traits<T>::real_type real_type;$/;"	t	class:qmcplusplus::EinsplineOrb
recompute	Fermion/DiracDeterminantBase.cpp	/^DiracDeterminantBase::recompute(ParticleSet& P)$/;"	f	class:qmcplusplus::DiracDeterminantBase
recompute	Fermion/DiracDeterminantBase.h	/^  virtual void recompute(MCWalkerConfiguration &W, bool firstTime)$/;"	f	class:qmcplusplus::DiracDeterminantBase
recompute	Fermion/DiracDeterminantCUDA.cpp	/^DiracDeterminantCUDA::recompute(MCWalkerConfiguration &W, bool firstTime)$/;"	f	class:qmcplusplus::DiracDeterminantCUDA
recompute	Fermion/SlaterDet.cpp	/^void SlaterDet::recompute(ParticleSet& P)$/;"	f	class:qmcplusplus::SlaterDet
recompute	Fermion/SlaterDet.h	/^  void recompute(MCWalkerConfiguration &W, bool firstTime)$/;"	f	class:qmcplusplus::SlaterDet
recompute	Jastrow/OneBodyJastrowOrbitalBspline.cpp	/^OneBodyJastrowOrbitalBspline::recompute(MCWalkerConfiguration &W,$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
recompute	Jastrow/TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::recompute(MCWalkerConfiguration &W,$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
recompute	OrbitalBase.h	/^  virtual void recompute(MCWalkerConfiguration &W, bool firstTime)$/;"	f	struct:qmcplusplus::OrbitalBase
recompute	OrbitalBase.h	/^  virtual void recompute(ParticleSet& P) {};$/;"	f	struct:qmcplusplus::OrbitalBase
recompute	TrialWaveFunction.cpp	/^void TrialWaveFunction::recompute(ParticleSet& P)$/;"	f	class:qmcplusplus::TrialWaveFunction
recompute	TrialWaveFunction_CUDA.cpp	/^TrialWaveFunction::recompute$/;"	f	class:qmcplusplus::TrialWaveFunction
refOrbital	DiffOrbitalBase.h	/^  std::vector<OrbitalBase*> refOrbital;$/;"	m	struct:qmcplusplus::DiffOrbitalBase
refPhi	Fermion/SPOSetProxy.h	/^  SPOSetBasePtr refPhi;$/;"	m	struct:qmcplusplus::SPOSetProxy
refPhi	Fermion/SPOSetProxyForMSD.h	/^  SPOSetBasePtr refPhi;$/;"	m	struct:qmcplusplus::SPOSetProxyForMSD
refVal	Jastrow/eeI_JastrowOrbital.h	/^  ParticleAttrib<RealType> refVal;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
registerData	AGPDeterminant.cpp	/^AGPDeterminant::registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::AGPDeterminant
registerData	ConstantOrbital.h	/^  virtual RealType registerData(ParticleSet& P, BufferType& buf) {return 0.0;}$/;"	f	class:qmcplusplus::ConstantOrbital
registerData	Experimental/DiracDeterminant.h	/^  RealType registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::DiracDeterminant
registerData	Experimental/SlaterDeterminant.h	/^  RealType registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::SlaterDeterminant
registerData	Experimental/TwoBodyJastrowFunction.Shared.h	/^  ValueType registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::TwoBodyJastrow
registerData	Experimental/TwoBodyJastrowFunction.h	/^  inline ValueType registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::TwoBodyJastrow
registerData	FDLRWfn.h	/^    RealType registerData(ParticleSet& P, BufferType& buf)$/;"	f	class:qmcplusplus::FDLRWfn
registerData	Fermion/BackflowTransformation.h	/^  void registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::BackflowTransformation
registerData	Fermion/Backflow_eI.h	/^  void registerData(PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::Backflow_eI
registerData	Fermion/Backflow_eI_spin.h	/^  void registerData(PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::Backflow_eI_spin
registerData	Fermion/Backflow_ee.h	/^  void registerData(PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::Backflow_ee
registerData	Fermion/Backflow_ee_kSpace.h	/^  void registerData(PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::Backflow_ee_kSpace
registerData	Fermion/DiracDeterminantBase.cpp	/^DiracDeterminantBase::registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::DiracDeterminantBase
registerData	Fermion/DiracDeterminantWithBackflow.cpp	/^DiracDeterminantWithBackflow::registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
registerData	Fermion/MultiDiracDeterminantBase.cpp	/^MultiDiracDeterminantBase::registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
registerData	Fermion/MultiDiracDeterminantBase_help.cpp	/^MultiDiracDeterminantBase::registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:MultiDiracDeterminantBase
registerData	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^MultiDiracDeterminantBase::registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
registerData	Fermion/MultiSlaterDeterminant.cpp	/^OrbitalBase::RealType MultiSlaterDeterminant::registerData(ParticleSet& P, BufferType& buf)$/;"	f	class:qmcplusplus::MultiSlaterDeterminant
registerData	Fermion/MultiSlaterDeterminantFast.cpp	/^OrbitalBase::RealType MultiSlaterDeterminantFast::registerData(ParticleSet& P, BufferType& buf)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
registerData	Fermion/MultiSlaterDeterminantWithBackflow.cpp	/^OrbitalBase::RealType MultiSlaterDeterminantWithBackflow::registerData(ParticleSet& P, BufferType& buf)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
registerData	Fermion/RNDiracDeterminantBase.cpp	/^RNDiracDeterminantBase::registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::RNDiracDeterminantBase
registerData	Fermion/RNDiracDeterminantBaseAlternate.cpp	/^RNDiracDeterminantBaseAlternate::registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
registerData	Fermion/SlaterDet.cpp	/^SlaterDet::RealType SlaterDet::registerData(ParticleSet& P,$/;"	f	class:qmcplusplus::SlaterDet
registerData	Fermion/SlaterDetOpt.cpp	/^OrbitalBase::RealType SlaterDetOpt::registerData(ParticleSet& P, BufferType& buf) {$/;"	f	class:qmcplusplus::SlaterDetOpt
registerData	Fermion/SlaterDetWithBackflow.cpp	/^SlaterDetWithBackflow::RealType SlaterDetWithBackflow::registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
registerData	IonOrbital.cpp	/^IonOrbital::registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::IonOrbital
registerData	Jastrow/LRTwoBodyJastrow.cpp	/^LRTwoBodyJastrow::registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
registerData	Jastrow/OneBodyJastrowOrbital.h	/^  RealType registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
registerData	Jastrow/OneBodySpinJastrowOrbital.h	/^  RealType registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
registerData	Jastrow/PolarizedJastrow.h	/^  ValueType registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::PolarizedJastrow
registerData	Jastrow/RPAJastrow.cpp	/^RPAJastrow::registerData(ParticleSet& P, BufferType& buf)$/;"	f	class:qmcplusplus::RPAJastrow
registerData	Jastrow/ThreeBodyBlockSparse.cpp	/^ThreeBodyBlockSparse::registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
registerData	Jastrow/ThreeBodyGeminal.cpp	/^ThreeBodyGeminal::registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
registerData	Jastrow/ThreeBodyJastrowOrbital.h	/^  ValueType registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
registerData	Jastrow/ThreeBodyPade.h	/^  ValueType registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::ThreeBodyPade
registerData	Jastrow/TwoBodyJastrowOrbital.h	/^  inline RealType registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
registerData	Jastrow/eeI_JastrowOrbital.h	/^  inline RealType registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
registerData	Jastrow/kSpaceJastrow.cpp	/^kSpaceJastrow::registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::kSpaceJastrow
registerData	LCOrbitalSetOpt.h	/^    RealType registerData(ParticleSet& P, BufferType& buf) { return 0; }$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
registerData	ProductOrbital.cpp	/^ProductOrbital::RealType ProductOrbital::registerData(ParticleSet& P, BufferType& buf)$/;"	f	class:qmcplusplus::ProductOrbital
registerData	TrialWaveFunction.cpp	/^TrialWaveFunction::RealType TrialWaveFunction::registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::TrialWaveFunction
registerDataForDerivatives	FDLRWfn.h	/^    void registerDataForDerivatives(ParticleSet& P, BufferType& buf, int storageType) {$/;"	f	class:qmcplusplus::FDLRWfn
registerDataForDerivatives	Fermion/DiracDeterminantBase.cpp	/^void DiracDeterminantBase::registerDataForDerivatives(ParticleSet& P, PooledData<RealType>& buf, int storageType)$/;"	f	class:qmcplusplus::DiracDeterminantBase
registerDataForDerivatives	Fermion/MultiDiracDeterminantBase.cpp	/^void MultiDiracDeterminantBase::registerDataForDerivatives(ParticleSet& P, PooledData<RealType>& buf, int storageType)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
registerDataForDerivatives	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^void MultiDiracDeterminantBase::registerDataForDerivatives(ParticleSet& P, PooledData<RealType>& buf, int storageType)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
registerDataForDerivatives	Fermion/MultiSlaterDeterminantFast.cpp	/^void MultiSlaterDeterminantFast::registerDataForDerivatives(ParticleSet& P, BufferType& buf, int storageType)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
registerDataForDerivatives	Fermion/SlaterDet.cpp	/^void SlaterDet::registerDataForDerivatives(ParticleSet& P, BufferType& buf, int storageType)$/;"	f	class:qmcplusplus::SlaterDet
registerDataForDerivatives	Fermion/SlaterDetOpt.cpp	/^void SlaterDetOpt::registerDataForDerivatives(ParticleSet& P, BufferType& buf, int storageType) {}$/;"	f	class:qmcplusplus::SlaterDetOpt
registerDataForDerivatives	OrbitalBase.h	/^  virtual void registerDataForDerivatives(ParticleSet& P, BufferType& buf, int storageType=0)$/;"	f	struct:qmcplusplus::OrbitalBase
registerDataForDerivatives	TrialWaveFunction.cpp	/^TrialWaveFunction::RealType TrialWaveFunction::registerDataForDerivatives(ParticleSet& P, PooledData<RealType>& buf, int storageType)$/;"	f	class:qmcplusplus::TrialWaveFunction
registerTimers	AtomicOrbital.h	/^  inline void registerTimers()$/;"	f	class:qmcplusplus::AtomicOrbital
registerTimers	EinsplineSet.cpp	/^EinsplineSetExtended<StorageType>::registerTimers()$/;"	f	class:qmcplusplus::EinsplineSetExtended
registerTimers	Fermion/DiracDeterminantBase.cpp	/^void DiracDeterminantBase::registerTimers()$/;"	f	class:qmcplusplus::DiracDeterminantBase
registerTimers	Fermion/MultiDiracDeterminantBase.cpp	/^void MultiDiracDeterminantBase::registerTimers()$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
registerTimers	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^void MultiDiracDeterminantBase::registerTimers()$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
registerTimers	Fermion/MultiSlaterDeterminant.cpp	/^void MultiSlaterDeterminant::registerTimers()$/;"	f	class:qmcplusplus::MultiSlaterDeterminant
registerTimers	Fermion/MultiSlaterDeterminantFast.cpp	/^void MultiSlaterDeterminantFast::registerTimers()$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
rejectMove	TrialWaveFunction.cpp	/^void TrialWaveFunction::rejectMove(int iat)$/;"	f	class:qmcplusplus::TrialWaveFunction
replaceList	Fermion/ExcitationClass.h	/^  std::list<TinyVector<int,2> > replaceList;$/;"	m	class:qmcplusplus::ExcitationClass
report	CompositeSPOSet.cpp	/^  void CompositeSPOSet::report()$/;"	f	class:qmcplusplus::CompositeSPOSet
report	HarmonicOscillator/SHOSet.cpp	/^  void SHOSet::report(const std::string& pad)$/;"	f	class:qmcplusplus::SHOSet
report	HarmonicOscillator/SHOSetBuilder.cpp	/^  void SHOSetBuilder::report(const std::string& pad)$/;"	f	class:qmcplusplus::SHOSetBuilder
report	SPOInfo.cpp	/^  void SPOInfo::report(const std::string& pad)$/;"	f	class:qmcplusplus::SPOInfo
report	SPOSetBase.h	/^  virtual void report(const std::string& pad="")$/;"	f	class:qmcplusplus::SPOSetBase
report	SPOSetInfo.cpp	/^  void SPOSetInfo::report(const std::string& pad)$/;"	f	class:qmcplusplus::SPOSetInfo
report	SPOSetInputInfo.cpp	/^  void SPOSetInputInfo::report(const std::string& pad)$/;"	f	class:qmcplusplus::SPOSetInputInfo
reportStatus	AGPDeterminant.cpp	/^void AGPDeterminant::reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::AGPDeterminant
reportStatus	ConstantOrbital.h	/^  virtual void reportStatus(std::ostream& os) {}$/;"	f	class:qmcplusplus::ConstantOrbital
reportStatus	Experimental/Bspline3DSetBase.cpp	/^void Bspline3DSetBase::reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::Bspline3DSetBase
reportStatus	Experimental/DiracDeterminant.h	/^  inline void reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::DiracDeterminant
reportStatus	Experimental/SlaterDeterminant.h	/^  inline void reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::SlaterDeterminant
reportStatus	FDLRWfn.h	/^    void reportStatus(std::ostream& os) {$/;"	f	class:qmcplusplus::FDLRWfn
reportStatus	Fermion/BackflowTransformation.h	/^  inline void reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::BackflowTransformation
reportStatus	Fermion/Backflow_eI.h	/^  void reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::Backflow_eI
reportStatus	Fermion/Backflow_eI_spin.h	/^  void reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::Backflow_eI_spin
reportStatus	Fermion/Backflow_ee.h	/^  void reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::Backflow_ee
reportStatus	Fermion/Backflow_ee_kSpace.h	/^  void reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::Backflow_ee_kSpace
reportStatus	Fermion/DiracDeterminantBase.h	/^  inline void reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::DiracDeterminantBase
reportStatus	Fermion/MultiDiracDeterminantBase.h	/^  inline void reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
reportStatus	Fermion/MultiDiracDeterminantWithBackflow.h	/^  inline void reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
reportStatus	Fermion/MultiSlaterDeterminant.cpp	/^void MultiSlaterDeterminant::reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::MultiSlaterDeterminant
reportStatus	Fermion/MultiSlaterDeterminantFast.cpp	/^void MultiSlaterDeterminantFast::reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
reportStatus	Fermion/MultiSlaterDeterminantWithBackflow.cpp	/^void MultiSlaterDeterminantWithBackflow::reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
reportStatus	Fermion/SlaterDet.cpp	/^void SlaterDet::reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::SlaterDet
reportStatus	Fermion/SlaterDetOpt.cpp	/^void SlaterDetOpt::reportStatus(std::ostream& os) {$/;"	f	class:qmcplusplus::SlaterDetOpt
reportStatus	IonOrbital.cpp	/^void IonOrbital::reportStatus(std::ostream& os)                           { }$/;"	f	class:qmcplusplus::IonOrbital
reportStatus	Jastrow/BsplineFunctor.h	/^  void reportStatus(std::ostream& os)$/;"	f	struct:qmcplusplus::BsplineFunctor
reportStatus	Jastrow/LRTwoBodyJastrow.cpp	/^void LRTwoBodyJastrow::reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
reportStatus	Jastrow/OneBodyJastrowOrbital.h	/^  void reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
reportStatus	Jastrow/OneBodySpinJastrowOrbital.h	/^  void reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
reportStatus	Jastrow/RPAJastrow.cpp	/^void RPAJastrow::reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::RPAJastrow
reportStatus	Jastrow/SplineFunctors.h	/^  void reportStatus(std::ostream& os)$/;"	f	struct:qmcplusplus::CubicSplineSingle
reportStatus	Jastrow/ThreeBodyBlockSparse.cpp	/^void ThreeBodyBlockSparse::reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
reportStatus	Jastrow/ThreeBodyGeminal.cpp	/^void ThreeBodyGeminal::reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
reportStatus	Jastrow/TwoBodyJastrowOrbital.h	/^  void reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
reportStatus	Jastrow/eeI_JastrowOrbital.h	/^  void reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
reportStatus	Jastrow/kSpaceJastrow.cpp	/^void kSpaceJastrow::reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::kSpaceJastrow
reportStatus	LCOrbitalSetOpt.h	/^    void reportStatus(std::ostream& os) {$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
reportStatus	ProductOrbital.cpp	/^void ProductOrbital::reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::ProductOrbital
reportStatus	TrialWaveFunction.cpp	/^void TrialWaveFunction::reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::TrialWaveFunction
reserve	Fermion/DiracDeterminantBase.h	/^  reserve (PointerPool<gpu::device_vector<CudaValueType> > &pool)$/;"	f	class:qmcplusplus::DiracDeterminantBase
reserve	Fermion/DiracDeterminantCUDA.h	/^  void reserve (PointerPool<gpu::device_vector<CudaValueType> > &pool) {$/;"	f	class:qmcplusplus::DiracDeterminantCUDA
reserve	Fermion/SlaterDet.h	/^  void reserve (PointerPool<gpu::device_vector<CudaValueType> > &pool)$/;"	f	class:qmcplusplus::SlaterDet
reserve	Jastrow/OneBodyJastrowOrbitalBspline.cpp	/^OneBodyJastrowOrbitalBspline::reserve$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
reserve	Jastrow/TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::reserve$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
reserve	OrbitalBase.h	/^  virtual void reserve (PointerPool<gpu::device_vector<CudaValueType> > &pool)$/;"	f	struct:qmcplusplus::OrbitalBase
reserve	SPOSetBase.h	/^  reserve (PointerPool<gpu::device_vector<CudaValueType> > &pool) { }$/;"	f	class:qmcplusplus::SPOSetBase
reserve	TrialWaveFunction_CUDA.cpp	/^TrialWaveFunction::reserve$/;"	f	class:qmcplusplus::TrialWaveFunction
reserve_states	BasisSetBuilder.cpp	/^  void BasisSetBuilder::reserve_states(int nsets)$/;"	f	class:qmcplusplus::BasisSetBuilder
reset	AtomicOrbitals/HFAtomicSTOSet.h	/^  inline void reset() { }$/;"	f	struct:qmcplusplus::HFAtomicSTOSet
reset	AtomicOrbitals/HeSTOClementiRottie.h	/^  inline void reset() { }$/;"	f	struct:qmcplusplus::HePresetHF
reset	Experimental/NoCuspFunctor.h	/^  void reset(real_type a, real_type b)$/;"	f	struct:qmcplusplus::NoCuspFunctor
reset	Experimental/PlaneWaveOrbitalSet.h	/^  inline void reset() { }$/;"	f	class:qmcplusplus::PlaneWaveOrbitalSet
reset	Experimental/QDwf.cpp	/^void QDwf::reset()$/;"	f	class:QDwf
reset	Experimental/TwoBodyJastrowFunction.Shared.h	/^  void reset()$/;"	f	class:qmcplusplus::TwoBodyJastrow
reset	Experimental/TwoBodyJastrowFunction.h	/^  void reset()$/;"	f	class:qmcplusplus::TwoBodyJastrow
reset	Fermion/BFsplineFunctor.h	/^  void reset()$/;"	f	struct:qmcplusplus::BFsplineFunctor
reset	Fermion/DiracDeterminantT.h	/^  void reset()$/;"	f	class:qmcplusplus::DiracDeterminantT
reset	Fermion/GaussianFunctor.h	/^  void reset()$/;"	f	class:qmcplusplus::GaussianFunctor
reset	HarmonicOscillator/SHOSetBuilder.cpp	/^  void SHOSetBuilder::reset()$/;"	f	class:qmcplusplus::SHOSetBuilder
reset	Jastrow/BesselZeroFunctor.h	/^  void reset()$/;"	f	struct:qmcplusplus::BesselZero
reset	Jastrow/BsplineFunctor.h	/^  void reset()$/;"	f	struct:qmcplusplus::BsplineFunctor
reset	Jastrow/BsplineFunctor3D.h	/^  void reset()$/;"	f	struct:qmcplusplus::BsplineFunctor3D
reset	Jastrow/ChebyshevFunctor.h	/^  inline void reset() { }$/;"	f	struct:ChebyshevFunctor
reset	Jastrow/ChebyshevFunctor.h	/^  void reset(std::vector<T> a)$/;"	f	struct:ChebyshevFunctor
reset	Jastrow/CompositeFunctor.h	/^  inline void reset()$/;"	f	struct:qmcplusplus::AnyTimesRnFunctor
reset	Jastrow/CompositeFunctor.h	/^  inline void reset()$/;"	f	struct:qmcplusplus::CuspCorrectionFunctor
reset	Jastrow/CompositeFunctor.h	/^  inline void reset()$/;"	f	struct:qmcplusplus::DCuspCorrectionDEFunctor
reset	Jastrow/CubicBsplineGroup.h	/^  inline void reset()$/;"	f	class:qmcplusplus::CubicBsplineGroup
reset	Jastrow/DerivPadeFunctors.h	/^  void reset(real_type a, real_type b)$/;"	f	struct:qmcplusplus::D2PadeDB2Functor
reset	Jastrow/DerivPadeFunctors.h	/^  void reset(real_type a, real_type b)$/;"	f	struct:qmcplusplus::DPadeDBFunctor
reset	Jastrow/DerivWMFunctor.h	/^  void reset(real_type b, real_type rc)$/;"	f	struct:qmcplusplus::D2WMDB2Functor
reset	Jastrow/DerivWMFunctor.h	/^  void reset(real_type b, real_type rc)$/;"	f	struct:qmcplusplus::DWMDBFunctor
reset	Jastrow/GaussianFunctor.h	/^  inline void reset()$/;"	f	struct:qmcplusplus::GaussianFunctor
reset	Jastrow/GaussianFunctor.h	/^  void reset()$/;"	f	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
reset	Jastrow/LRBreakupUtilities.h	/^  inline void reset() {}$/;"	f	struct:qmcplusplus::ShortRangePartAdapter
reset	Jastrow/LRBreakupUtilities.h	/^  void reset(ParticleSet& ref)$/;"	f	struct:qmcplusplus::DerivRPABreakup
reset	Jastrow/LRBreakupUtilities.h	/^  void reset(ParticleSet& ref)$/;"	f	struct:qmcplusplus::DerivYukawaBreakup
reset	Jastrow/LRBreakupUtilities.h	/^  void reset(ParticleSet& ref)$/;"	f	struct:qmcplusplus::EPRPABreakup
reset	Jastrow/LRBreakupUtilities.h	/^  void reset(ParticleSet& ref)$/;"	f	struct:qmcplusplus::RPABFeeBreakup
reset	Jastrow/LRBreakupUtilities.h	/^  void reset(ParticleSet& ref)$/;"	f	struct:qmcplusplus::RPABreakup
reset	Jastrow/LRBreakupUtilities.h	/^  void reset(ParticleSet& ref)$/;"	f	struct:qmcplusplus::YukawaBreakup
reset	Jastrow/LRBreakupUtilities.h	/^  void reset(ParticleSet& ref)$/;"	f	struct:qmcplusplus::derivEPRPABreakup
reset	Jastrow/LRBreakupUtilities.h	/^  void reset(ParticleSet& ref, T rs)$/;"	f	struct:qmcplusplus::DerivRPABreakup
reset	Jastrow/LRBreakupUtilities.h	/^  void reset(ParticleSet& ref, T rs)$/;"	f	struct:qmcplusplus::DerivYukawaBreakup
reset	Jastrow/LRBreakupUtilities.h	/^  void reset(ParticleSet& ref, T rs)$/;"	f	struct:qmcplusplus::EPRPABreakup
reset	Jastrow/LRBreakupUtilities.h	/^  void reset(ParticleSet& ref, T rs)$/;"	f	struct:qmcplusplus::RPABFeeBreakup
reset	Jastrow/LRBreakupUtilities.h	/^  void reset(ParticleSet& ref, T rs)$/;"	f	struct:qmcplusplus::RPABreakup
reset	Jastrow/LRBreakupUtilities.h	/^  void reset(ParticleSet& ref, T rs)$/;"	f	struct:qmcplusplus::YukawaBreakup
reset	Jastrow/LRBreakupUtilities.h	/^  void reset(ParticleSet& ref, T rs)$/;"	f	struct:qmcplusplus::derivEPRPABreakup
reset	Jastrow/LinearCombinationFunctor.h	/^  inline void reset()$/;"	f	struct:LinearCombinationFunctor
reset	Jastrow/McMillanJ2Functor.h	/^  inline void reset()$/;"	f	struct:qmcplusplus::McMillanJ2Functor
reset	Jastrow/McMillanJ2Functor.h	/^  inline void reset()$/;"	f	struct:qmcplusplus::ModMcMillanJ2Functor
reset	Jastrow/McMillanJ2Functor.h	/^  inline void reset()$/;"	f	struct:qmcplusplus::comboMcMillanJ2Functor
reset	Jastrow/McMillanJ2Functor.h	/^  inline void reset(real_type a, real_type b)$/;"	f	struct:qmcplusplus::McMillanJ2Functor
reset	Jastrow/McMillanJ2GFunctor.h	/^  inline void reset()$/;"	f	struct:qmcplusplus::McMillanJ2GFunctor
reset	Jastrow/McMillanJ2GFunctor.h	/^  inline void reset(real_type a, real_type b)$/;"	f	struct:qmcplusplus::McMillanJ2GFunctor
reset	Jastrow/ModPadeFunctor.h	/^  inline void reset()$/;"	f	struct:qmcplusplus::ModPadeFunctor
reset	Jastrow/NumericalJastrowFunctor.h	/^  inline void reset()$/;"	f	struct:qmcplusplus::NumericalJastrow
reset	Jastrow/OpenGaussianSlaterFunctor.h	/^  inline void reset()$/;"	f	struct:qmcplusplus::OpenGaussianSlaterFunctor
reset	Jastrow/PadeFunctors.h	/^  void reset()$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
reset	Jastrow/PadeFunctors.h	/^  void reset()$/;"	f	struct:qmcplusplus::PadeFunctor
reset	Jastrow/PadeFunctors.h	/^  void reset()$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
reset	Jastrow/PadeFunctors.h	/^  void reset()$/;"	f	struct:qmcplusplus::ScaledPadeFunctor
reset	Jastrow/PolynomialFunctor3D.h	/^  void reset()$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
reset	Jastrow/RPAJastrowFunctor.h	/^  void reset(real_type a)$/;"	f	struct:qmcplusplus::RPAJastrowFunctor
reset	Jastrow/SplineFunctors.h	/^  void reset()$/;"	f	struct:qmcplusplus::CubicSplineBasisSet
reset	Jastrow/SplineFunctors.h	/^  void reset()$/;"	f	struct:qmcplusplus::CubicSplineSingle
reset	Jastrow/WMFunctor.h	/^  inline void reset() {}$/;"	f	struct:qmcplusplus::WMFunctorSet
reset	Jastrow/WMFunctor.h	/^  void reset()$/;"	f	struct:qmcplusplus::WMFunctor
reset	LCOrbitals.h	/^  void reset()$/;"	f	class:qmcplusplus::LCOrbitals
reset	MixedSPOSet.h	/^  inline void reset()$/;"	f	class:qmcplusplus::MixedSPOSet
reset	MolecularOrbitals/NGOBuilder.cpp	/^  void reset() {}$/;"	f	struct:qmcplusplus::PadeOrbital
reset	MolecularOrbitals/NGOBuilder.h	/^  void reset() {}$/;"	f	struct:qmcplusplus::NGOrbital
reset	PlaneWave/PWBasis.cpp	/^void PWBasis::reset()$/;"	f	class:qmcplusplus::PWBasis
reset	SPOSetInputInfo.cpp	/^  void SPOSetInputInfo::reset()$/;"	f	class:qmcplusplus::SPOSetInputInfo
reset	TrialWaveFunction.cpp	/^void TrialWaveFunction::reset()$/;"	f	class:qmcplusplus::TrialWaveFunction
reset	WaveFunctionFactory.cpp	/^void WaveFunctionFactory::reset() { }$/;"	f	class:qmcplusplus::WaveFunctionFactory
resetByFunction	Jastrow/LRTwoBodyJastrow.h	/^  void resetByFunction(RealType kc)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
resetByHandler	Jastrow/LRTwoBodyJastrow.cpp	/^void LRTwoBodyJastrow::resetByHandler(HandlerType* handler)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
resetInternals	Jastrow/PolyFunctor.h	/^  inline void resetInternals()$/;"	f	struct:qmcplusplus::PolyFunctor
resetInternals	Jastrow/RPAJastrowFunctor.h	/^  void resetInternals()$/;"	f	struct:qmcplusplus::RPAJastrowFunctor
resetOffset	Fermion/excitation_node.h	/^  void resetOffset(int m, std::vector<int>& p_peers, std::vector<excitation_node>& ci)$/;"	f	struct:qmcplusplus::excitation_node
resetOptions	Jastrow/JastrowBuilder.cpp	/^void JastrowBuilder::resetOptions()$/;"	f	class:qmcplusplus::JastrowBuilder
resetParameters	AFMSPOSet.cpp	/^AFMSPOSet::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::AFMSPOSet
resetParameters	AGPDeterminant.cpp	/^void AGPDeterminant::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::AGPDeterminant
resetParameters	BasisSetBase.h	/^  virtual void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::BasisSetBase
resetParameters	CompositeSPOSet.cpp	/^  void CompositeSPOSet::resetParameters(const opt_variables_type& optVariables)$/;"	f	class:qmcplusplus::CompositeSPOSet
resetParameters	ConstantOrbital.h	/^  virtual void resetParameters(const opt_variables_type &active) {}$/;"	f	class:qmcplusplus::ConstantOrbital
resetParameters	DiffOrbitalBase.cpp	/^void AnalyticDiffOrbital::resetParameters(const opt_variables_type& optvars)$/;"	f	class:qmcplusplus::AnalyticDiffOrbital
resetParameters	DiffOrbitalBase.cpp	/^void NumericalDiffOrbital::resetParameters(const opt_variables_type& optvars)$/;"	f	class:qmcplusplus::NumericalDiffOrbital
resetParameters	DistributedSPOSet.cpp	/^void DistributedSPOSet::resetParameters(VarRegistry<RealType>& optVariables)$/;"	f	class:qmcplusplus::DistributedSPOSet
resetParameters	EinsplineAdoptor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::BsplineSet
resetParameters	EinsplineSet.cpp	/^EinsplineSetExtended<StorageType>::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::EinsplineSetExtended
resetParameters	EinsplineSet.h	/^  virtual void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::EinsplineSet
resetParameters	ElectronGas/ElectronGasComplexOrbitalBuilder.h	/^  void resetParameters(const opt_variables_type& optVariables) {}$/;"	f	struct:qmcplusplus::EGOSet
resetParameters	ElectronGas/ElectronGasOrbitalBuilder.h	/^  void resetParameters(const opt_variables_type& optVariables) {}$/;"	f	struct:qmcplusplus::RealEGOSet
resetParameters	Experimental/Bspline3DSetBase.cpp	/^void Bspline3DSetBase::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::Bspline3DSetBase
resetParameters	Experimental/CorrectingOrbitalBasisSet.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::CorrectingOrbitalBasisSet
resetParameters	Experimental/DiracDeterminant.h	/^  inline void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::DiracDeterminant
resetParameters	Experimental/LCOrbitalSetWithCorrection.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::LCOrbitalSetWithCorrection
resetParameters	Experimental/NoCuspFunctor.h	/^  void resetParameters(OptimizableSetType& optVariables)$/;"	f	struct:qmcplusplus::NoCuspFunctor
resetParameters	Experimental/SingleParticleOrbitalSet.h	/^  void resetParameters(VarRegistry<RealType>& optVariables)$/;"	f	struct:qmcplusplus::SingleParticleOrbitalSet
resetParameters	Experimental/SlaterDeterminant.h	/^  inline void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::SlaterDeterminant
resetParameters	Experimental/TricubicBsplineSPOSet.h	/^  void resetParameters(VarRegistry<real_type>& vlist)$/;"	f	class:qmcplusplus::TricubicBsplineSPOSet
resetParameters	Experimental/TricubicBsplineTwistSet.h	/^  void resetParameters(VarRegistry<real_type>& vlist)$/;"	f	class:qmcplusplus::TricubicBsplineTwistSet
resetParameters	FDLRWfn.h	/^    void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::FDLRWfn
resetParameters	Fermion/BFsplineFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::BFsplineFunctor
resetParameters	Fermion/BackflowTransformation.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::BackflowTransformation
resetParameters	Fermion/Backflow_eI.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::Backflow_eI
resetParameters	Fermion/Backflow_eI_spin.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::Backflow_eI_spin
resetParameters	Fermion/Backflow_ee.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::Backflow_ee
resetParameters	Fermion/Backflow_ee_kSpace.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::Backflow_ee_kSpace
resetParameters	Fermion/DiracDeterminantBase.h	/^  virtual void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::DiracDeterminantBase
resetParameters	Fermion/DiracDeterminantOpt.cpp	/^DiracDeterminantOpt::resetParameters(const opt_variables_type& optvars)$/;"	f	class:qmcplusplus::DiracDeterminantOpt
resetParameters	Fermion/GaussianFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::GaussianFunctor
resetParameters	Fermion/MultiDiracDeterminantBase.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
resetParameters	Fermion/MultiDiracDeterminantWithBackflow.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
resetParameters	Fermion/MultiSlaterDeterminant.cpp	/^void MultiSlaterDeterminant::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::MultiSlaterDeterminant
resetParameters	Fermion/MultiSlaterDeterminantFast.cpp	/^void MultiSlaterDeterminantFast::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
resetParameters	Fermion/MultiSlaterDeterminantWithBackflow.cpp	/^void MultiSlaterDeterminantWithBackflow::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
resetParameters	Fermion/SPOSetProxy.cpp	/^void SPOSetProxy::resetParameters(const opt_variables_type& optVariables)$/;"	f	class:qmcplusplus::SPOSetProxy
resetParameters	Fermion/SPOSetProxyForMSD.cpp	/^void SPOSetProxyForMSD::resetParameters(const opt_variables_type& optVariables)$/;"	f	class:qmcplusplus::SPOSetProxyForMSD
resetParameters	Fermion/SlaterDet.cpp	/^void SlaterDet::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::SlaterDet
resetParameters	Fermion/SlaterDetOpt.cpp	/^void SlaterDetOpt::resetParameters(const opt_variables_type& active) {}$/;"	f	class:qmcplusplus::SlaterDetOpt
resetParameters	Fermion/SlaterDetWithBackflow.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
resetParameters	HarmonicOscillator/SHOSet.cpp	/^  void SHOSet::resetParameters(const opt_variables_type& optVariables)$/;"	f	class:qmcplusplus::SHOSet
resetParameters	IonOrbital.cpp	/^void IonOrbital::resetParameters(const opt_variables_type& active)   { }$/;"	f	class:qmcplusplus::IonOrbital
resetParameters	Jastrow/BesselZeroFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::BesselZero
resetParameters	Jastrow/BsplineFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::BsplineFunctor
resetParameters	Jastrow/BsplineFunctor3D.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::BsplineFunctor3D
resetParameters	Jastrow/CompositeFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::AnyTimesRnFunctor
resetParameters	Jastrow/CompositeFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::CuspCorrectionFunctor
resetParameters	Jastrow/CompositeFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::DCuspCorrectionDEFunctor
resetParameters	Jastrow/CompositeFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::TruncatedPadeFunctor
resetParameters	Jastrow/DerivPadeFunctors.h	/^  void resetParameters(OptimizableSetType& optVariables)$/;"	f	struct:qmcplusplus::D2PadeDB2Functor
resetParameters	Jastrow/DerivPadeFunctors.h	/^  void resetParameters(const OptimizableSetType& optVariables)$/;"	f	struct:qmcplusplus::DPadeDBFunctor
resetParameters	Jastrow/DerivWMFunctor.h	/^  void resetParameters(OptimizableSetType& optVariables)$/;"	f	struct:qmcplusplus::D2WMDB2Functor
resetParameters	Jastrow/DerivWMFunctor.h	/^  void resetParameters(OptimizableSetType& optVariables)$/;"	f	struct:qmcplusplus::DWMDBFunctor
resetParameters	Jastrow/DiffOneBodyJastrowOrbital.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::DiffOneBodyJastrowOrbital
resetParameters	Jastrow/DiffOneBodySpinJastrowOrbital.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
resetParameters	Jastrow/DiffTwoBodyJastrowOrbital.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::DiffTwoBodyJastrowOrbital
resetParameters	Jastrow/Experimental/AnyConstraints.cpp	/^void AnyConstraints::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::AnyConstraints
resetParameters	Jastrow/Experimental/PadeConstraints.cpp	/^void PadeConstraints::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::PadeConstraints
resetParameters	Jastrow/Experimental/PadeConstraints.cpp	/^void ScaledPadeConstraints::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::ScaledPadeConstraints
resetParameters	Jastrow/GaussianFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::GaussianFunctor
resetParameters	Jastrow/GaussianFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
resetParameters	Jastrow/LRBreakupUtilities.h	/^  void resetParameters(const opt_variables_type& optVariables) { }$/;"	f	struct:qmcplusplus::ShortRangePartAdapter
resetParameters	Jastrow/LRTwoBodyJastrow.cpp	/^void LRTwoBodyJastrow::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
resetParameters	Jastrow/LinearCombinationFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:LinearCombinationFunctor
resetParameters	Jastrow/McMillanJ2Functor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::McMillanJ2Functor
resetParameters	Jastrow/McMillanJ2Functor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::ModMcMillanJ2Functor
resetParameters	Jastrow/McMillanJ2Functor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::comboMcMillanJ2Functor
resetParameters	Jastrow/McMillanJ2GFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::McMillanJ2GFunctor
resetParameters	Jastrow/ModPadeFunctor.h	/^  inline void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::ModPadeFunctor
resetParameters	Jastrow/OneBodyJastrowOrbital.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
resetParameters	Jastrow/OneBodyJastrowOrbitalBspline.cpp	/^OneBodyJastrowOrbitalBspline::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
resetParameters	Jastrow/OneBodySpinJastrowOrbital.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
resetParameters	Jastrow/OpenGaussianSlaterFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::OpenGaussianSlaterFunctor
resetParameters	Jastrow/PadeFunctors.h	/^  inline void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::ScaledPadeFunctor
resetParameters	Jastrow/PadeFunctors.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
resetParameters	Jastrow/PadeFunctors.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::PadeFunctor
resetParameters	Jastrow/PadeFunctors.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
resetParameters	Jastrow/PolarizedJastrow.h	/^  void resetParameters(OptimizableSetType& optVariables)$/;"	f	class:qmcplusplus::PolarizedJastrow
resetParameters	Jastrow/PolyConstraints.cpp	/^void PolyConstraints::resetParameters(OptimizableSetType& optVariables)$/;"	f	class:qmcplusplus::PolyConstraints
resetParameters	Jastrow/PolyFunctor.h	/^  void resetParameters(OptimizableSetType& optVariables)$/;"	f	struct:qmcplusplus::PolyFunctor
resetParameters	Jastrow/PolynomialFunctor3D.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
resetParameters	Jastrow/RPAJastrow.cpp	/^void RPAJastrow::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::RPAJastrow
resetParameters	Jastrow/RPAJastrowFunctor.h	/^  void resetParameters(OptimizableSetType& optVariables)$/;"	f	struct:qmcplusplus::RPAJastrowFunctor
resetParameters	Jastrow/SplineFunctors.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::CubicSplineBasisSet
resetParameters	Jastrow/SplineFunctors.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::CubicSplineSingle
resetParameters	Jastrow/ThreeBodyBlockSparse.cpp	/^void ThreeBodyBlockSparse::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
resetParameters	Jastrow/ThreeBodyGeminal.cpp	/^void ThreeBodyGeminal::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
resetParameters	Jastrow/ThreeBodyJastrowOrbital.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
resetParameters	Jastrow/ThreeBodyPade.h	/^  void resetParameters(OptimizableSetType& optVariables)$/;"	f	class:qmcplusplus::ThreeBodyPade
resetParameters	Jastrow/TwoBodyJastrowOrbital.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
resetParameters	Jastrow/TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
resetParameters	Jastrow/WMFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::WMFunctor
resetParameters	Jastrow/WMFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::WMFunctorSet
resetParameters	Jastrow/eeI_JastrowOrbital.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
resetParameters	Jastrow/kSpaceJastrow.cpp	/^kSpaceJastrow::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::kSpaceJastrow
resetParameters	LCOrbitalSet.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::LCOrbitalSet
resetParameters	LCOrbitalSetOpt.h	/^    void resetParameters(const opt_variables_type & active) {$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
resetParameters	LCOrbitalSetOpt.h	/^    void resetParameters(const opt_variables_type& optvars) {$/;"	f	class:qmcplusplus::LCOrbitalSetOpt
resetParameters	LCOrbitals.h	/^  void resetParameters(VarRegistry<RealType>& optVariables)$/;"	f	class:qmcplusplus::LCOrbitals
resetParameters	LocalizedBasisSet.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::LocalizedBasisSet
resetParameters	MolecularOrbitals/NGOBuilder.h	/^  void resetParameters(const opt_variables_type& active) {}$/;"	f	struct:qmcplusplus::NGOrbital
resetParameters	MultiGridBsplineSet.h	/^    void resetParameters(const opt_variables_type& active) { }$/;"	f	struct:qmcplusplus::MultiGridBsplineSet
resetParameters	OptimizableSPOSet.cpp	/^OptimizableSPOSet::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::OptimizableSPOSet
resetParameters	PlaneWave/PWOrbitalSet.cpp	/^void PWOrbitalSet::resetParameters(const opt_variables_type& optVariables)$/;"	f	class:qmcplusplus::PWOrbitalSet
resetParameters	PlaneWave/PWRealOrbitalSet.cpp	/^void PWRealOrbitalSet::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::PWRealOrbitalSet
resetParameters	ProductOrbital.cpp	/^void ProductOrbital::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::ProductOrbital
resetParameters	SPOSetComboNoCopy.h	/^    inline void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::SPOSetComboNoCopy
resetParameters	SparseLocalizedBasisSet.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::SparseLocalizedBasisSet
resetParameters	SphericalBasisSet.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::SphericalBasisSet
resetParameters	SphericalOrbitalSet.h	/^  void resetParameters(OptimizableSetType& optVariables)$/;"	f	struct:qmcplusplus::SphericalOrbitalSet
resetParameters	Spline3D/SplineBasisSet.h	/^  void resetParameters(OptimizableSetType& optVariables) {}$/;"	f	class:qmcplusplus::SplineBasisSet
resetParameters	TrialWaveFunction.cpp	/^void TrialWaveFunction::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::TrialWaveFunction
resetParameters	legacy/EinsplineSetLocal.cpp	/^EinsplineSetLocal::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::EinsplineSetLocal
resetPhaseDiff	TrialWaveFunction.h	/^  inline void resetPhaseDiff()$/;"	f	class:qmcplusplus::TrialWaveFunction
resetSPOs	FermionBase.cpp	/^void FermionBase::resetSPOs(ParticleSet& P)$/;"	f	class:qmcplusplus::FermionBase
resetSourceParticleSet	EinsplineSet.cpp	/^EinsplineSet::resetSourceParticleSet(ParticleSet& ions)$/;"	f	class:qmcplusplus::EinsplineSet
resetTargetParticleSet	AFMSPOSet.cpp	/^AFMSPOSet::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::AFMSPOSet
resetTargetParticleSet	AGPDeterminant.cpp	/^void AGPDeterminant::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::AGPDeterminant
resetTargetParticleSet	AtomicOrbitals/HFAtomicSTOSet.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	struct:qmcplusplus::HFAtomicSTOSet
resetTargetParticleSet	AtomicOrbitals/HeSTOClementiRottie.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	struct:qmcplusplus::HePresetHF
resetTargetParticleSet	CompositeSPOSet.cpp	/^  void CompositeSPOSet::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::CompositeSPOSet
resetTargetParticleSet	ConstantOrbital.h	/^  virtual void resetTargetParticleSet(ParticleSet& P) {}$/;"	f	class:qmcplusplus::ConstantOrbital
resetTargetParticleSet	DiffOrbitalBase.cpp	/^void AnalyticDiffOrbital::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::AnalyticDiffOrbital
resetTargetParticleSet	DiffOrbitalBase.cpp	/^void NumericalDiffOrbital::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::NumericalDiffOrbital
resetTargetParticleSet	DistributedSPOSet.cpp	/^void DistributedSPOSet::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::DistributedSPOSet
resetTargetParticleSet	DummyBasisSet.h	/^  inline void resetTargetParticleSet(ParticleSet& P) { }$/;"	f	struct:qmcplusplus::DummyBasisSet
resetTargetParticleSet	EinsplineAdoptor.h	/^  void resetTargetParticleSet(ParticleSet& e)$/;"	f	struct:qmcplusplus::BsplineSet
resetTargetParticleSet	EinsplineSet.cpp	/^EinsplineSet::resetTargetParticleSet(ParticleSet& e)$/;"	f	class:qmcplusplus::EinsplineSet
resetTargetParticleSet	EinsplineSet.cpp	/^EinsplineSetExtended<StorageType>::resetTargetParticleSet(ParticleSet& e)$/;"	f	class:qmcplusplus::EinsplineSetExtended
resetTargetParticleSet	ElectronGas/ElectronGasComplexOrbitalBuilder.h	/^  inline void resetTargetParticleSet(ParticleSet& P) { }$/;"	f	struct:qmcplusplus::EGOSet
resetTargetParticleSet	ElectronGas/ElectronGasOrbitalBuilder.h	/^  inline void resetTargetParticleSet(ParticleSet& P) { }$/;"	f	struct:qmcplusplus::RealEGOSet
resetTargetParticleSet	Experimental/Bspline3DSetBase.cpp	/^void Bspline3DSetBase::resetTargetParticleSet(ParticleSet& e) { }$/;"	f	class:qmcplusplus::Bspline3DSetBase
resetTargetParticleSet	Experimental/CorrectingOrbitalBasisSet.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	struct:qmcplusplus::CorrectingOrbitalBasisSet
resetTargetParticleSet	Experimental/DiracDeterminant.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::DiracDeterminant
resetTargetParticleSet	Experimental/LCOrbitalSetWithCorrection.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::LCOrbitalSetWithCorrection
resetTargetParticleSet	Experimental/PlaneWaveOrbitalSet.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::PlaneWaveOrbitalSet
resetTargetParticleSet	Experimental/SingleParticleOrbitalSet.h	/^  void resetTargetParticleSet(ParticleSet& P) { }$/;"	f	struct:qmcplusplus::SingleParticleOrbitalSet
resetTargetParticleSet	Experimental/SlaterDeterminant.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::SlaterDeterminant
resetTargetParticleSet	Experimental/TwoBodyJastrowFunction.Shared.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::TwoBodyJastrow
resetTargetParticleSet	Experimental/TwoBodyJastrowFunction.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::TwoBodyJastrow
resetTargetParticleSet	FDLRWfn.h	/^    void resetTargetParticleSet(ParticleSet& P) {$/;"	f	class:qmcplusplus::FDLRWfn
resetTargetParticleSet	Fermion/BackflowTransformation.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::BackflowTransformation
resetTargetParticleSet	Fermion/Backflow_eI.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::Backflow_eI
resetTargetParticleSet	Fermion/Backflow_eI_spin.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::Backflow_eI_spin
resetTargetParticleSet	Fermion/Backflow_ee.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::Backflow_ee
resetTargetParticleSet	Fermion/Backflow_ee_kSpace.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::Backflow_ee_kSpace
resetTargetParticleSet	Fermion/DiracDeterminantBase.h	/^  virtual void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::DiracDeterminantBase
resetTargetParticleSet	Fermion/DiracDeterminantT.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::DiracDeterminantT
resetTargetParticleSet	Fermion/MultiDiracDeterminantBase.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
resetTargetParticleSet	Fermion/MultiDiracDeterminantWithBackflow.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
resetTargetParticleSet	Fermion/MultiSlaterDeterminant.cpp	/^void MultiSlaterDeterminant::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::MultiSlaterDeterminant
resetTargetParticleSet	Fermion/MultiSlaterDeterminantFast.cpp	/^void MultiSlaterDeterminantFast::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
resetTargetParticleSet	Fermion/SPOSetProxy.cpp	/^void SPOSetProxy::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::SPOSetProxy
resetTargetParticleSet	Fermion/SPOSetProxyForMSD.cpp	/^void SPOSetProxyForMSD::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::SPOSetProxyForMSD
resetTargetParticleSet	Fermion/SlaterDet.cpp	/^void SlaterDet::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::SlaterDet
resetTargetParticleSet	Fermion/SlaterDetOpt.cpp	/^void SlaterDetOpt::resetTargetParticleSet(ParticleSet& P) {$/;"	f	class:qmcplusplus::SlaterDetOpt
resetTargetParticleSet	Fermion/SlaterDetWithBackflow.cpp	/^void SlaterDetWithBackflow::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
resetTargetParticleSet	HarmonicOscillator/SHOSet.h	/^    inline void resetTargetParticleSet(ParticleSet& P)           { }$/;"	f	struct:qmcplusplus::SHOSet
resetTargetParticleSet	IonOrbital.cpp	/^IonOrbital::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::IonOrbital
resetTargetParticleSet	Jastrow/DiffOneBodyJastrowOrbital.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::DiffOneBodyJastrowOrbital
resetTargetParticleSet	Jastrow/DiffOneBodySpinJastrowOrbital.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
resetTargetParticleSet	Jastrow/DiffTwoBodyJastrowOrbital.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::DiffTwoBodyJastrowOrbital
resetTargetParticleSet	Jastrow/LRTwoBodyJastrow.cpp	/^void LRTwoBodyJastrow::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
resetTargetParticleSet	Jastrow/OneBodyJastrowOrbital.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
resetTargetParticleSet	Jastrow/OneBodySpinJastrowOrbital.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
resetTargetParticleSet	Jastrow/PolarizedJastrow.h	/^  void resetTargetParticleSet(ParticleSet& P) {}$/;"	f	class:qmcplusplus::PolarizedJastrow
resetTargetParticleSet	Jastrow/RPAJastrow.cpp	/^void RPAJastrow::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::RPAJastrow
resetTargetParticleSet	Jastrow/ThreeBodyBlockSparse.cpp	/^void ThreeBodyBlockSparse::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
resetTargetParticleSet	Jastrow/ThreeBodyGeminal.cpp	/^void ThreeBodyGeminal::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
resetTargetParticleSet	Jastrow/ThreeBodyJastrowOrbital.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
resetTargetParticleSet	Jastrow/ThreeBodyPade.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::ThreeBodyPade
resetTargetParticleSet	Jastrow/TwoBodyJastrowOrbital.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
resetTargetParticleSet	Jastrow/eeI_JastrowOrbital.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
resetTargetParticleSet	Jastrow/kSpaceJastrow.cpp	/^kSpaceJastrow::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::kSpaceJastrow
resetTargetParticleSet	LCOrbitalSet.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::LCOrbitalSet
resetTargetParticleSet	LCOrbitalSetOpt.h	/^    void resetTargetParticleSet(ParticleSet & P) {$/;"	f	class:qmcplusplus::LCOrbitalSetOpt
resetTargetParticleSet	LCOrbitalSetOpt.h	/^    void resetTargetParticleSet(ParticleSet& P) {$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
resetTargetParticleSet	LCOrbitals.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::LCOrbitals
resetTargetParticleSet	LocalizedBasisSet.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	struct:qmcplusplus::LocalizedBasisSet
resetTargetParticleSet	MixedSPOSet.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::MixedSPOSet
resetTargetParticleSet	MultiGridBsplineSet.h	/^    void resetTargetParticleSet(ParticleSet& e) { }$/;"	f	struct:qmcplusplus::MultiGridBsplineSet
resetTargetParticleSet	OptimizableSPOSet.cpp	/^OptimizableSPOSet::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::OptimizableSPOSet
resetTargetParticleSet	PlaneWave/PWOrbitalSet.cpp	/^void PWOrbitalSet::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::PWOrbitalSet
resetTargetParticleSet	PlaneWave/PWRealOrbitalSet.cpp	/^void PWRealOrbitalSet::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::PWRealOrbitalSet
resetTargetParticleSet	ProductOrbital.cpp	/^void ProductOrbital::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::ProductOrbital
resetTargetParticleSet	SPOSetComboNoCopy.h	/^    inline void resetTargetParticleSet(ParticleSet& e)$/;"	f	struct:qmcplusplus::SPOSetComboNoCopy
resetTargetParticleSet	SparseLocalizedBasisSet.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	struct:qmcplusplus::SparseLocalizedBasisSet
resetTargetParticleSet	SphericalBasisSet.h	/^  void resetTargetParticleSet(ParticleSet& P) { }$/;"	f	struct:qmcplusplus::SphericalBasisSet
resetTargetParticleSet	SphericalOrbitalSet.h	/^  void resetTargetParticleSet(ParticleSet& P) { }$/;"	f	struct:qmcplusplus::SphericalOrbitalSet
resetTargetParticleSet	Spline3D/SplineBasisSet.h	/^  void resetTargetParticleSet(ParticleSet& e) {}$/;"	f	class:qmcplusplus::SplineBasisSet
resetTargetParticleSet	TrialWaveFunction.cpp	/^TrialWaveFunction::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::TrialWaveFunction
resetTheta	AFMSPOSet.h	/^  inline void resetTheta(RealType x)$/;"	f	class:qmcplusplus::AFMSPOSet
reset_gamma	Jastrow/PolynomialFunctor3D.h	/^  void reset_gamma()$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
resize	AFMSPOSet.h	/^  void resize(int n)$/;"	f	class:qmcplusplus::AFMSPOSet
resize	AGPDeterminant.cpp	/^void AGPDeterminant::resize(int nup, int ndown)$/;"	f	class:qmcplusplus::AGPDeterminant
resize	BasisSetBase.h	/^  void resize(int ntargets)$/;"	f	struct:qmcplusplus::BasisSetBase
resize	Experimental/Bspline3DSetBase.cpp	/^void Bspline3DSetBase::resize(int norbs)$/;"	f	class:qmcplusplus::Bspline3DSetBase
resize	Experimental/DiracDeterminant.h	/^  inline void resize(int nel, int morb)$/;"	f	class:qmcplusplus::DiracDeterminant
resize	Experimental/PlaneWaveBasis.h	/^  inline void resize(int nptcl)$/;"	f	class:qmcplusplus::PlaneWaveBasis
resize	Experimental/PlaneWaveOrbitalSet.h	/^  inline void resize(int nptcl)$/;"	f	class:qmcplusplus::PlaneWaveOrbitalSet
resize	Fermion/BFsplineFunctor.h	/^  void resize(int n)$/;"	f	struct:qmcplusplus::BFsplineFunctor
resize	Fermion/BackflowFunctionBase.h	/^  void resize(int NT, int NC)$/;"	f	class:qmcplusplus::BackflowFunctionBase
resize	Fermion/Backflow_ee_kSpace.h	/^  void resize(int NT)$/;"	f	class:qmcplusplus::Backflow_ee_kSpace
resize	Fermion/DiracDeterminantBase.cpp	/^void DiracDeterminantBase::resize(int nel, int morb)$/;"	f	class:qmcplusplus::DiracDeterminantBase
resize	Fermion/DiracDeterminantIterative.cpp	/^void DiracDeterminantIterative::resize(int nel, int morb)$/;"	f	class:qmcplusplus::DiracDeterminantIterative
resize	Fermion/DiracDeterminantTruncation.cpp	/^void DiracDeterminantTruncation::resize(int nel, int morb)$/;"	f	class:qmcplusplus::DiracDeterminantTruncation
resize	Fermion/DiracDeterminantWithBackflow.cpp	/^void DiracDeterminantWithBackflow::resize(int nel, int morb)$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
resize	Fermion/MultiDiracDeterminantBase.cpp	/^void MultiDiracDeterminantBase::resize(int nel, int morb)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
resize	Fermion/MultiDiracDeterminantBase_help.cpp	/^void MultiDiracDeterminantBase::resize(int nel, int morb)$/;"	f	class:MultiDiracDeterminantBase
resize	Fermion/MultiDiracDeterminantBase_help.h	/^  void resize(int n)$/;"	f	struct:qmcplusplus::MyDeterminant
resize	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^void MultiDiracDeterminantBase::resize(int nel, int morb)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
resize	Fermion/MultiSlaterDeterminant.cpp	/^void MultiSlaterDeterminant::resize(int n1, int n2)$/;"	f	class:qmcplusplus::MultiSlaterDeterminant
resize	Fermion/MultiSlaterDeterminantWithBackflow.cpp	/^void MultiSlaterDeterminantWithBackflow::resize(int n1, int n2)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
resize	Fermion/RNDiracDeterminantBase.cpp	/^void RNDiracDeterminantBase::resize(int nel, int morb)$/;"	f	class:qmcplusplus::RNDiracDeterminantBase
resize	Fermion/RNDiracDeterminantBaseAlternate.cpp	/^void RNDiracDeterminantBaseAlternate::resize(int nel, int morb)$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
resize	Fermion/excitation_node.h	/^  void resize(int m, int nv, std::vector<excitation_node>& ci)$/;"	f	struct:qmcplusplus::excitation_node
resize	Jastrow/BesselZeroFunctor.h	/^  void resize(int n)$/;"	f	struct:qmcplusplus::BesselZero
resize	Jastrow/BsplineFunctor.h	/^  void resize(int n)$/;"	f	struct:qmcplusplus::BsplineFunctor
resize	Jastrow/BsplineFunctor3D.h	/^  void resize(int neI, int nee)$/;"	f	struct:qmcplusplus::BsplineFunctor3D
resize	Jastrow/LRTwoBodyJastrow.cpp	/^void LRTwoBodyJastrow::resize()$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
resize	Jastrow/PolynomialFunctor3D.h	/^  void resize(int neI, int nee)$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
resize	LCOrbitals.h	/^  inline void resize(int nptcl)$/;"	f	class:qmcplusplus::LCOrbitals
resize	MolecularOrbitals/NGOBuilder.h	/^  inline void resize(int n)$/;"	f	struct:qmcplusplus::NGOrbital
resize	OptimizableSPOSet.h	/^  void resize(int n, int m)$/;"	f	class:qmcplusplus::OptimizableSPOSet
resize	PlaneWave/PWOrbitalSet.cpp	/^void PWOrbitalSet::resize(PWBasisPtr bset, int nbands, bool cleanup)$/;"	f	class:qmcplusplus::PWOrbitalSet
resize	PlaneWave/PWRealOrbitalSet.cpp	/^void PWRealOrbitalSet::resize(PWBasisPtr bset, int nbands, bool cleanup)$/;"	f	class:qmcplusplus::PWRealOrbitalSet
resizeCoefs	Experimental/PlaneWaveOrbitalSet.h	/^  inline void resizeCoefs()$/;"	f	class:qmcplusplus::PlaneWaveOrbitalSet
resizeLists	Fermion/DiracDeterminantCUDA.h	/^  void resizeLists(int numWalkers)$/;"	f	class:qmcplusplus::DiracDeterminantCUDA
resizeStorage	EinsplineSet.h	/^  inline void resizeStorage(int n, int nvals, int ncores=0)$/;"	f	class:qmcplusplus::EinsplineSetExtended
resizeStorage	Experimental/EinsplineAdoptorPacked.h	/^  inline void resizeStorage(int n, int nvals)$/;"	f	struct:qmcplusplus::SplineC2CAdoptorPacked
resizeStorage	Experimental/EinsplineAdoptorPacked.h	/^  inline void resizeStorage(int n, int nvals)$/;"	f	struct:qmcplusplus::SplineC2RAdoptorPacked
resizeStorage	Experimental/EinsplineMixedAdoptor.h	/^  void resizeStorage(int n, int nv)$/;"	f	struct:qmcplusplus::SplineMixedAdoptor
resizeStorage	Experimental/EinsplineMixedAdoptor.h	/^  void resizeStorage(int n, int nv)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
resizeStorage	Experimental/SplineOpenAdoptor.h	/^  void resizeStorage(int n, int nv)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
resizeStorage	SplineC2XAdoptor.h	/^  inline void resizeStorage(int n, int nvals)$/;"	f	struct:qmcplusplus::SplineC2CPackedAdoptor
resizeStorage	SplineC2XAdoptor.h	/^  inline void resizeStorage(int n, int nvals)$/;"	f	struct:qmcplusplus::SplineC2RPackedAdoptor
resizeStorage	SplineMixedAdoptor.h	/^  void resizeStorage(int n, int nv)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
resizeStorage	SplineR2RAdoptor.h	/^  void resizeStorage(int n, int nv)$/;"	f	struct:qmcplusplus::SplineR2RAdoptor
resizeSubDomains	MultiGridBsplineSet.h	/^    void resizeSubDomains(int ntot, int n)$/;"	f	struct:qmcplusplus::MultiGridBsplineSet
resizeTempP	TrialWaveFunction.h	/^  inline void resizeTempP(ParticleSet& P)$/;"	f	class:qmcplusplus::TrialWaveFunction
resize_cuda	EinsplineSetCuda.cpp	/^EinsplineSetExtended<T>::resize_cuda(int numWalkers)$/;"	f	class:qmcplusplus::EinsplineSetExtended
resize_cuda	EinsplineSetCuda.cpp	/^EinsplineSetHybrid<double>::resize_cuda(int numwalkers)$/;"	f	class:qmcplusplus::EinsplineSetHybrid
resize_cuda	EinsplineSetCuda.cpp	/^EinsplineSetHybrid<std::complex<double> >::resize_cuda(int numwalkers)$/;"	f	class:qmcplusplus::EinsplineSetHybrid
resize_kk	SplineC2XAdoptor.h	/^  inline void resize_kk()$/;"	f	struct:qmcplusplus::SplineC2RPackedAdoptor
restore	AGPDeterminant.cpp	/^void AGPDeterminant::restore(int iat)$/;"	f	class:qmcplusplus::AGPDeterminant
restore	ConstantOrbital.h	/^  virtual void restore(int iat) {}$/;"	f	class:qmcplusplus::ConstantOrbital
restore	Experimental/DiracDeterminant.h	/^  void restore(int iat)$/;"	f	class:qmcplusplus::DiracDeterminant
restore	Experimental/SlaterDeterminant.h	/^  inline void restore(int iat)$/;"	f	class:qmcplusplus::SlaterDeterminant
restore	Experimental/TwoBodyJastrowFunction.Shared.h	/^  inline void restore(int iat) {}$/;"	f	class:qmcplusplus::TwoBodyJastrow
restore	Experimental/TwoBodyJastrowFunction.h	/^  inline void restore(int iat) {}$/;"	f	class:qmcplusplus::TwoBodyJastrow
restore	FDLRWfn.h	/^    void restore(int iat)$/;"	f	class:qmcplusplus::FDLRWfn
restore	Fermion/BackflowTransformation.h	/^  restore(int iat=0)$/;"	f	class:qmcplusplus::BackflowTransformation
restore	Fermion/Backflow_eI.h	/^  restore(int iat, int UpdateType)$/;"	f	class:qmcplusplus::Backflow_eI
restore	Fermion/Backflow_eI_spin.h	/^  restore(int iat, int UpdateType)$/;"	f	class:qmcplusplus::Backflow_eI_spin
restore	Fermion/Backflow_ee.h	/^  restore(int iat, int UpdateType)$/;"	f	class:qmcplusplus::Backflow_ee
restore	Fermion/Backflow_ee_kSpace.h	/^  restore(int iat, int UpdateType)$/;"	f	class:qmcplusplus::Backflow_ee_kSpace
restore	Fermion/DiracDeterminantBase.cpp	/^void DiracDeterminantBase::restore(int iat)$/;"	f	class:qmcplusplus::DiracDeterminantBase
restore	Fermion/DiracDeterminantWithBackflow.cpp	/^void DiracDeterminantWithBackflow::restore(int iat)$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
restore	Fermion/MultiDiracDeterminantBase.cpp	/^void MultiDiracDeterminantBase::restore(int iat)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
restore	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^void MultiDiracDeterminantBase::restore(int iat)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
restore	Fermion/MultiSlaterDeterminant.cpp	/^void MultiSlaterDeterminant::restore(int iat)$/;"	f	class:qmcplusplus::MultiSlaterDeterminant
restore	Fermion/MultiSlaterDeterminantFast.cpp	/^void MultiSlaterDeterminantFast::restore(int iat)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
restore	Fermion/MultiSlaterDeterminantWithBackflow.cpp	/^void MultiSlaterDeterminantWithBackflow::restore(int iat)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
restore	Fermion/RNDiracDeterminantBase.cpp	/^void RNDiracDeterminantBase::restore(int iat)$/;"	f	class:qmcplusplus::RNDiracDeterminantBase
restore	Fermion/RNDiracDeterminantBaseAlternate.cpp	/^void RNDiracDeterminantBaseAlternate::restore(int iat)$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
restore	Fermion/SlaterDet.h	/^  inline void restore(int iat)$/;"	f	class:qmcplusplus::SlaterDet
restore	Fermion/SlaterDetOpt.cpp	/^void SlaterDetOpt::restore(int iat) {}$/;"	f	class:qmcplusplus::SlaterDetOpt
restore	Fermion/SlaterDetWithBackflow.h	/^  inline void restore(int iat)$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
restore	IonOrbital.cpp	/^IonOrbital::restore(int iat) {}$/;"	f	class:qmcplusplus::IonOrbital
restore	Jastrow/LRTwoBodyJastrow.cpp	/^void LRTwoBodyJastrow::restore(int iat)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
restore	Jastrow/OneBodyJastrowOrbital.h	/^  inline void restore(int iat) {}$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
restore	Jastrow/OneBodySpinJastrowOrbital.h	/^  inline void restore(int iat) {}$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
restore	Jastrow/PolarizedJastrow.h	/^  inline void restore(int iat) { }$/;"	f	class:qmcplusplus::PolarizedJastrow
restore	Jastrow/RPAJastrow.cpp	/^void RPAJastrow::restore(int iat)$/;"	f	class:qmcplusplus::RPAJastrow
restore	Jastrow/ThreeBodyBlockSparse.cpp	/^void ThreeBodyBlockSparse::restore(int iat)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
restore	Jastrow/ThreeBodyGeminal.cpp	/^void ThreeBodyGeminal::restore(int iat)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
restore	Jastrow/ThreeBodyJastrowOrbital.h	/^  inline void restore(int iat) {}$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
restore	Jastrow/ThreeBodyPade.h	/^  inline void restore(int iat) {}$/;"	f	class:qmcplusplus::ThreeBodyPade
restore	Jastrow/TwoBodyJastrowOrbital.h	/^  inline void restore(int iat) {}$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
restore	Jastrow/eeI_JastrowOrbital.h	/^  inline void restore(int iat) {}$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
restore	Jastrow/kSpaceJastrow.cpp	/^kSpaceJastrow::restore(int iat)$/;"	f	class:qmcplusplus::kSpaceJastrow
restore	LCOrbitalSetOpt.h	/^    void restore(int iat) {}$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
restore	ProductOrbital.cpp	/^void ProductOrbital::restore(int iat)$/;"	f	class:qmcplusplus::ProductOrbital
reverse	TrialWaveFunction.cpp	/^void TrialWaveFunction::reverse()$/;"	f	class:qmcplusplus::TrialWaveFunction
rhat	EinsplineSet.h	/^  T rhat[OHMMS_DIM];$/;"	m	struct:qmcplusplus::AtomicPolyJob
rhat	EinsplineSet.h	/^  T rhat[OHMMS_DIM];$/;"	m	struct:qmcplusplus::AtomicSplineJob
rhats_CPU	EinsplineSet.h	/^  gpu::host_vector<CudaRealType> rhats_CPU;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
rhats_GPU	EinsplineSet.h	/^  gpu::device_vector<CudaRealType> rhats_GPU;$/;"	m	class:qmcplusplus::EinsplineSetHybrid
rmagLast	AtomicOrbital.h	/^  RealType rmagLast;$/;"	m	class:qmcplusplus::AtomicOrbital
rn_tag	OrbitalBuilderBase.cpp	/^std::string OrbitalBuilderBase::rn_tag="determinant_rn";$/;"	m	class:qmcplusplus::OrbitalBuilderBase	file:
rn_tag	OrbitalBuilderBase.h	/^  static std::string rn_tag;$/;"	m	class:qmcplusplus::OrbitalBuilderBase
rnone	SPOSetInputInfo.cpp	/^  const RealType rnone = std::numeric_limits<RealType>::max();$/;"	m	namespace:qmcplusplus	file:
rokbyF	Jastrow/LRTwoBodyJastrow.h	/^  Matrix<ComplexType> rokbyF;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
rokbyF_i	Jastrow/LRTwoBodyJastrow.h	/^  Matrix<RealType> rokbyF_i;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
rokbyF_r	Jastrow/LRTwoBodyJastrow.h	/^  Matrix<RealType> rokbyF_r;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
rootNode	Experimental/TricubicBsplineSetBuilder.h	/^  xmlNodePtr rootNode;$/;"	m	class:qmcplusplus::TricubicBsplineSetBuilder
rootNode	PlaneWave/PWOrbitalBuilder.h	/^  xmlNodePtr rootNode;$/;"	m	class:qmcplusplus::PWOrbitalBuilder
rotatedOrbitals	EinsplineSetBuilder.h	/^  std::vector<int> rotatedOrbitals;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
rotationMatrix	EinsplineSetBuilder.h	/^  std::vector<RealType> rotationMatrix;$/;"	m	class:qmcplusplus::EinsplineSetBuilder
rows	Experimental/DiracDeterminant.h	/^  inline int rows() const$/;"	f	class:qmcplusplus::DiracDeterminant
rows	Fermion/DiracDeterminantBase.h	/^  inline IndexType rows() const$/;"	f	class:qmcplusplus::DiracDeterminantBase
rows	Fermion/MultiDiracDeterminantBase.h	/^  inline IndexType rows() const$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
rows	Fermion/MultiDiracDeterminantWithBackflow.h	/^  inline IndexType rows() const$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
rpaValues	Jastrow/BsplineJastrowBuilder.cpp	/^  std::vector<T> rpaValues;$/;"	m	struct:qmcplusplus::BsplineInitializer	file:
rpafunc	Jastrow/RPAJastrow.h	/^  std::string rpafunc;$/;"	m	struct:qmcplusplus::RPAJastrow
rs	ElectronGas/HEGGrid.h	/^  std::map<int,std::vector<PosType>*> rs;$/;"	m	struct:qmcplusplus::HEGGrid
s_offset	Fermion/Backflow_eI_spin.h	/^  std::vector<int> s_offset;$/;"	m	class:qmcplusplus::Backflow_eI_spin
s_offset	Jastrow/DiffOneBodySpinJastrowOrbital.h	/^  std::vector<int> s_offset;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
s_offset	Jastrow/OneBodySpinJastrowOrbital.h	/^  std::vector<int> s_offset;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
scale	Jastrow/PolynomialFunctor3D.h	/^  real_type scale;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
scan_path	SPOSetScanner.h	/^    void scan_path(xmlNodePtr cur, SPOSetBasePtr mySPOSet, std::string prefix)$/;"	f	class:qmcplusplus::SPOSetScanner
sd_tag	OrbitalBuilderBase.cpp	/^std::string OrbitalBuilderBase::sd_tag="slaterdeterminant";$/;"	m	class:qmcplusplus::OrbitalBuilderBase	file:
sd_tag	OrbitalBuilderBase.h	/^  static std::string sd_tag;$/;"	m	class:qmcplusplus::OrbitalBuilderBase
second_replaces_first	Fermion/ExcitationClass.h	/^  TinyVector<int,2> second_replaces_first;$/;"	m	class:qmcplusplus::ExcitationClass
selectBands	BandInfo.cpp	/^  void BandInfoGroup::selectBands(const std::vector<BandInfo>& bigspace, $/;"	f	class:qmcplusplus::BandInfoGroup
selectBands	BandInfo.cpp	/^  void BandInfoGroup::selectBands(const std::vector<BandInfo>& bigspace, double emin, double emax)$/;"	f	class:qmcplusplus::BandInfoGroup
set	Experimental/DiracDeterminant.h	/^  inline void set(int first, int nel)$/;"	f	class:qmcplusplus::DiracDeterminant
set	Fermion/DiracDeterminantBase.cpp	/^void DiracDeterminantBase::set(int first, int nel)$/;"	f	class:qmcplusplus::DiracDeterminantBase
set	Fermion/DiracDeterminantIterative.cpp	/^void DiracDeterminantIterative::set(int first, int nel)$/;"	f	class:qmcplusplus::DiracDeterminantIterative
set	Fermion/MultiDiracDeterminantBase.cpp	/^void MultiDiracDeterminantBase::set(int first, int nel)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
set	Fermion/MultiDiracDeterminantBase.cpp	/^void MultiDiracDeterminantBase::set(int first, int nel,int norb)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
set	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^void MultiDiracDeterminantBase::set(int first, int nel)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
set	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^void MultiDiracDeterminantBase::set(int first, int nel,int norb)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
set	HarmonicOscillator/SHOSet.h	/^    inline void set(TinyVector<int,DIM> qn, RealType e)$/;"	f	struct:qmcplusplus::SHOState
set	Jastrow/CudaSpline.h	/^  void set (BsplineFunctor<T2> &func)$/;"	f	struct:qmcplusplus::CudaSpline
set	Jastrow/NumericalJastrowFunctor.h	/^  inline void set(T r1, T r2)$/;"	f	struct:qmcplusplus::CutoffFunctor
set	Jastrow/kSpaceJastrow.h	/^  inline void set (std::vector<T> &unpackedCoefs)$/;"	f	class:qmcplusplus::kSpaceCoef
setBF	Fermion/DiracDeterminantBase.h	/^  void setBF(BackflowTransformation* BFTrans) {}$/;"	f	class:qmcplusplus::DiracDeterminantBase
setBF	Fermion/DiracDeterminantWithBackflow.h	/^  void setBF(BackflowTransformation* bf)$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
setBF	Fermion/MultiDiracDeterminantBase.h	/^  void setBF(BackflowTransformation* bf) {}$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
setBF	Fermion/MultiDiracDeterminantWithBackflow.h	/^  void setBF(BackflowTransformation* bf)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
setBF	Fermion/MultiSlaterDeterminant.h	/^  void setBF(BackflowTransformation* BFTrans) {}$/;"	f	class:qmcplusplus::MultiSlaterDeterminant
setBF	Fermion/MultiSlaterDeterminantFast.h	/^  void setBF(BackflowTransformation* bf)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
setBF	Fermion/MultiSlaterDeterminantWithBackflow.h	/^  void setBF(BackflowTransformation* bf)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
setBF	Fermion/SlaterDet.h	/^  void setBF(BackflowTransformation* BFTrans) {}$/;"	f	class:qmcplusplus::SlaterDet
setBF	Fermion/SlaterDetWithBackflow.h	/^  void setBF(BackflowTransformation* bf)$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
setBasisSet	Experimental/LCOrbitalSetWithCorrection.h	/^  void setBasisSet(BS* bs)$/;"	f	class:qmcplusplus::LCOrbitalSetWithCorrection
setBasisSet	Experimental/SlaterDeterminant.h	/^  void setBasisSet(BasisSet_t* bs)$/;"	f	class:qmcplusplus::SlaterDeterminant
setBasisSet	Jastrow/ThreeBodyBlockSparse.h	/^  void setBasisSet(BasisSetType* abasis)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
setBasisSet	Jastrow/ThreeBodyGeminal.h	/^  void setBasisSet(BasisSetType* abasis)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
setBasisSet	LCOrbitalSet.h	/^  void setBasisSet(BS* bs)$/;"	f	class:qmcplusplus::LCOrbitalSet
setBasisSet	LCOrbitalSetOpt.h	/^    void setBasisSet(BS * const bs) {$/;"	f	class:qmcplusplus::LCOrbitalSetOpt
setBasisSetSize	Experimental/CorrectingOrbitalBasisSet.h	/^  void setBasisSetSize(int nbs)$/;"	f	struct:qmcplusplus::CorrectingOrbitalBasisSet
setBasisSetSize	LocalizedBasisSet.h	/^  void setBasisSetSize(int nbs)$/;"	f	struct:qmcplusplus::LocalizedBasisSet
setBasisSetSize	SparseLocalizedBasisSet.h	/^  void setBasisSetSize(int nbs)$/;"	f	struct:qmcplusplus::SparseLocalizedBasisSet
setBasisSetSize	SphericalBasisSet.h	/^  inline void setBasisSetSize(int n)$/;"	f	struct:qmcplusplus::SphericalBasisSet
setBasisSetSize	SphericalOrbitalSet.h	/^  inline void setBasisSetSize(int n)$/;"	f	struct:qmcplusplus::SphericalOrbitalSet
setBasisSetSize	Spline3D/SplineBasisSet.h	/^  void setBasisSetSize(int nbs)$/;"	f	class:qmcplusplus::SplineBasisSet
setBlocks	Jastrow/ThreeBodyBlockSparse.cpp	/^void ThreeBodyBlockSparse::setBlocks(const std::vector<int>& blockspergroup)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
setBsplineBasisSet	Experimental/TricubicBsplineSetBuilder.1.cpp	/^void TricubicBsplineSetBuilder::setBsplineBasisSet(xmlNodePtr cur)$/;"	f	class:qmcplusplus::TricubicBsplineSetBuilder
setCenter	SphericalBasisSet.h	/^  inline void setCenter(int c, int offset)$/;"	f	struct:qmcplusplus::SphericalBasisSet
setCenter	SphericalOrbitalSet.h	/^  inline void setCenter(int c, int offset)$/;"	f	struct:qmcplusplus::SphericalOrbitalSet
setCloneSize	WaveFunctionFactory.cpp	/^void WaveFunctionFactory::setCloneSize(int np)$/;"	f	class:qmcplusplus::WaveFunctionFactory
setCoefficients	Jastrow/kSpaceJastrow.cpp	/^kSpaceJastrow::setCoefficients(std::vector<RealType> &oneBodyCoefs,$/;"	f	class:qmcplusplus::kSpaceJastrow
setCommon	BsplineReaderBase.cpp	/^  void BsplineReaderBase::setCommon(xmlNodePtr cur)$/;"	f	class:qmcplusplus::BsplineReaderBase
setCommunicator	DistributedSPOSet.cpp	/^void DistributedSPOSet::setCommunicator(Communicate* c)$/;"	f	class:qmcplusplus::DistributedSPOSet
setContraints	ProductOrbital.h	/^  void setContraints(OrbitalConstraintsBase* control)$/;"	f	struct:qmcplusplus::ProductOrbital
setCutoff	Jastrow/NumericalJastrowFunctor.h	/^  void setCutoff(real_type r1, real_type r2)$/;"	f	struct:qmcplusplus::NumericalJastrow
setDensity	Fermion/GaussianFunctor.h	/^  void setDensity(real_type n) { }$/;"	f	class:qmcplusplus::GaussianFunctor
setDensity	Jastrow/RPAJastrowFunctor.h	/^  void setDensity(real_type n)$/;"	f	struct:qmcplusplus::RPAJastrowFunctor
setDetInfo	Fermion/MultiDiracDeterminantBase.cpp	/^void MultiDiracDeterminantBase::setDetInfo(int ref, std::vector<ci_configuration2> list)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
setDetInfo	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^void MultiDiracDeterminantBase::setDetInfo(int ref, std::vector<ci_configuration2> list)$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
setDiffOrbital	OrbitalBase.cpp	/^void OrbitalBase::setDiffOrbital(DiffOrbitalBasePtr d)$/;"	f	class:qmcplusplus::OrbitalBase
setGrid	Experimental/Bspline3DSetBase.cpp	/^void Bspline3DSetBase::setGrid(RealType xi, RealType xf,$/;"	f	class:qmcplusplus::Bspline3DSetBase
setGrid	Experimental/TricubicBsplineSPOSet.h	/^  inline void setGrid(const GridType& knots)$/;"	f	class:qmcplusplus::TricubicBsplineSPOSet
setGrid	Experimental/TricubicBsplineSPOSet.h	/^  inline void setGrid(real_type xi, real_type xf,$/;"	f	class:qmcplusplus::TricubicBsplineSPOSet
setGrid	Experimental/TricubicBsplineTwistSet.h	/^  inline void setGrid($/;"	f	class:qmcplusplus::TricubicBsplineTwistSet
setGrid	Experimental/TricubicBsplineTwistSet.h	/^  inline void setGrid(const GridType& knots)$/;"	f	class:qmcplusplus::TricubicBsplineTwistSet
setGrid	Jastrow/Experimental/AnyConstraints.h	/^    void setGrid(RealType rc, int npts)$/;"	f	struct:qmcplusplus::AnyConstraints::BasisGroupType
setGrid	Jastrow/WMJastrowBuilder.h	/^    void setGrid(RealType rc, int npts)$/;"	f	struct:qmcplusplus::WMJastrowBuilder::BasisGroupType
setGridManager	Jastrow/CubicBsplineGroup.h	/^  void setGridManager(bool manage)$/;"	f	class:qmcplusplus::CubicBsplineGroup
setGridManager	MolecularOrbitals/NGOBuilder.h	/^  inline void setGridManager(bool willmanage)$/;"	f	struct:qmcplusplus::NGOrbital
setHandler	Jastrow/RPAJastrow.h	/^  void setHandler(HandlerType* Handler)$/;"	f	struct:qmcplusplus::RPAJastrow
setIdentity	SPOSetBase.h	/^  bool setIdentity(bool useIdentity)$/;"	f	class:qmcplusplus::SPOSetBase
setInFunc	Jastrow/NumericalJastrowFunctor.h	/^  void setInFunc(FNIN* in_)$/;"	f	struct:qmcplusplus::NumericalJastrow
setInFunc	Jastrow/SplineFunctors.h	/^  void setInFunc(FNIN* in_)$/;"	f	struct:qmcplusplus::CubicSplineBasisSet
setInFunc	Jastrow/SplineFunctors.h	/^  void setInFunc(FNIN* in_)$/;"	f	struct:qmcplusplus::CubicSplineSingle
setIonDerivs	OrbitalBase.h	/^  inline void setIonDerivs(bool calcionderiv)$/;"	f	struct:qmcplusplus::OrbitalBase
setL	Jastrow/PolyFunctor.h	/^  inline void setL(real_type rc)$/;"	f	struct:qmcplusplus::PolyFunctor
setLattice	Experimental/Bspline3DSetBase.cpp	/^void Bspline3DSetBase::setLattice(const CrystalLattice<RealType,DIM>& lat)$/;"	f	class:qmcplusplus::Bspline3DSetBase
setLattice	Spline3D/SplineGridHandler.h	/^  void setLattice(const unitcell_type& lat)$/;"	f	struct:qmcplusplus::SplineGridHandler
setLocalizedOrbitals	MixedSPOSet.h	/^  void setLocalizedOrbitals(LOType* lo)$/;"	f	class:qmcplusplus::MixedSPOSet
setLogEpsilon	Fermion/DiracDeterminantBase.h	/^  virtual inline void setLogEpsilon(ValueType x) { }$/;"	f	class:qmcplusplus::DiracDeterminantBase
setLogEpsilon	Fermion/DiracDeterminantWithBackflow.h	/^  inline void setLogEpsilon(ValueType x) { }$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
setLogEpsilon	Fermion/RNDiracDeterminantBase.h	/^  inline void setLogEpsilon(ValueType x)$/;"	f	class:qmcplusplus::RNDiracDeterminantBase
setLogEpsilon	Fermion/RNDiracDeterminantBaseAlternate.h	/^  inline void setLogEpsilon(ValueType x)$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
setLogPsi	TrialWaveFunction.h	/^  inline void setLogPsi(RealType LogPsi_new)$/;"	f	class:qmcplusplus::TrialWaveFunction
setMassTerm	TrialWaveFunction.h	/^  inline void setMassTerm(ParticleSet& P)$/;"	f	class:qmcplusplus::TrialWaveFunction
setOptimizable	OrbitalBase.h	/^  inline void setOptimizable(bool optimizeit)$/;"	f	struct:qmcplusplus::OrbitalBase
setOrbitalSet	Jastrow/CBSOBuilder.cpp	/^CBSOBuilder::setOrbitalSet(CenteredOrbitalType* oset, const std::string& acenter)$/;"	f	class:qmcplusplus::CBSOBuilder
setOrbitalSet	MolecularOrbitals/BsplineAOBuilder.h	/^  void setOrbitalSet(CenteredOrbitalType* oset, const std::string& acenter)$/;"	f	class:qmcplusplus::BsplineAOBuilder
setOrbitalSet	MolecularOrbitals/GTOBuilder.h	/^  void setOrbitalSet(CenteredOrbitalType* oset, const std::string& acenter)$/;"	f	class:qmcplusplus::GTOBuilder
setOrbitalSet	MolecularOrbitals/NGOBuilder.cpp	/^NGOBuilder::setOrbitalSet(CenteredOrbitalType* oset, const std::string& acenter)$/;"	f	class:qmcplusplus::NGOBuilder
setOrbitalSet	MolecularOrbitals/STOBuilder.h	/^  void setOrbitalSet(CenteredOrbitalType* oset, const std::string& acenter)$/;"	f	class:qmcplusplus::STOBuilder
setOrbitalSetSize	AFMSPOSet.cpp	/^AFMSPOSet::setOrbitalSetSize(int norbs)$/;"	f	class:qmcplusplus::AFMSPOSet
setOrbitalSetSize	CompositeSPOSet.h	/^    inline void setOrbitalSetSize(int norbs) { }$/;"	f	class:qmcplusplus::CompositeSPOSet
setOrbitalSetSize	DistributedSPOSet.cpp	/^void DistributedSPOSet::setOrbitalSetSize(int norbs)$/;"	f	class:qmcplusplus::DistributedSPOSet
setOrbitalSetSize	EinsplineAdoptor.h	/^  void setOrbitalSetSize(int norbs)$/;"	f	struct:qmcplusplus::BsplineSet
setOrbitalSetSize	EinsplineSet.cpp	/^EinsplineSet::setOrbitalSetSize(int norbs)$/;"	f	class:qmcplusplus::EinsplineSet
setOrbitalSetSize	EinsplineSet.cpp	/^EinsplineSetExtended<StorageType>::setOrbitalSetSize(int norbs)$/;"	f	class:qmcplusplus::EinsplineSetExtended
setOrbitalSetSize	ElectronGas/ElectronGasComplexOrbitalBuilder.h	/^  void setOrbitalSetSize(int norbs) { }$/;"	f	struct:qmcplusplus::EGOSet
setOrbitalSetSize	ElectronGas/ElectronGasOrbitalBuilder.h	/^  void setOrbitalSetSize(int norbs) { }$/;"	f	struct:qmcplusplus::RealEGOSet
setOrbitalSetSize	Experimental/Bspline3DSetBase.cpp	/^void Bspline3DSetBase::setOrbitalSetSize(int norbs)$/;"	f	class:qmcplusplus::Bspline3DSetBase
setOrbitalSetSize	Experimental/LCOrbitalSetWithCorrection.h	/^  void setOrbitalSetSize(int norbs)$/;"	f	class:qmcplusplus::LCOrbitalSetWithCorrection
setOrbitalSetSize	Experimental/SingleParticleOrbitalSet.h	/^  void setOrbitalSetSize(int norbs)$/;"	f	struct:qmcplusplus::SingleParticleOrbitalSet
setOrbitalSetSize	Fermion/SPOSetProxy.cpp	/^void SPOSetProxy::setOrbitalSetSize(int norbs)$/;"	f	class:qmcplusplus::SPOSetProxy
setOrbitalSetSize	Fermion/SPOSetProxyForMSD.cpp	/^void SPOSetProxyForMSD::setOrbitalSetSize(int norbs)$/;"	f	class:qmcplusplus::SPOSetProxyForMSD
setOrbitalSetSize	HarmonicOscillator/SHOSet.h	/^    inline void setOrbitalSetSize(int norbs)                     { }$/;"	f	struct:qmcplusplus::SHOSet
setOrbitalSetSize	LCOrbitalSet.h	/^  void setOrbitalSetSize(int norbs)$/;"	f	class:qmcplusplus::LCOrbitalSet
setOrbitalSetSize	LCOrbitalSetOpt.h	/^    void setOrbitalSetSize(int norbs) {$/;"	f	class:qmcplusplus::LCOrbitalSetOpt
setOrbitalSetSize	MultiGridBsplineSet.h	/^    void setOrbitalSetSize(int norbs)$/;"	f	struct:qmcplusplus::MultiGridBsplineSet
setOrbitalSetSize	OptimizableSPOSet.cpp	/^OptimizableSPOSet::setOrbitalSetSize(int norbs)$/;"	f	class:qmcplusplus::OptimizableSPOSet
setOrbitalSetSize	PlaneWave/PWOrbitalSet.cpp	/^void PWOrbitalSet::setOrbitalSetSize(int norbs)$/;"	f	class:qmcplusplus::PWOrbitalSet
setOrbitalSetSize	PlaneWave/PWRealOrbitalSet.cpp	/^void PWRealOrbitalSet::setOrbitalSetSize(int norbs)$/;"	f	class:qmcplusplus::PWRealOrbitalSet
setOrbitalSetSize	SPOSetComboNoCopy.h	/^    inline void setOrbitalSetSize(int norbs)$/;"	f	struct:qmcplusplus::SPOSetComboNoCopy
setOutFunc	Jastrow/NumericalJastrowFunctor.h	/^  void setOutFunc(FNOUT* out_)$/;"	f	struct:qmcplusplus::NumericalJastrow
setOutFunc	Jastrow/SplineFunctors.h	/^  void setOutFunc(FNOUT* out_)$/;"	f	struct:qmcplusplus::CubicSplineBasisSet
setParamIndex	Fermion/BackflowFunctionBase.h	/^  setParamIndex(int n)$/;"	f	class:qmcplusplus::BackflowFunctionBase
setPhase	TrialWaveFunction.h	/^  inline void setPhase(RealType PhaseValue_new)$/;"	f	class:qmcplusplus::TrialWaveFunction
setPsi	WaveFunctionFactory.cpp	/^void WaveFunctionFactory::setPsi(TrialWaveFunction* psi)$/;"	f	class:qmcplusplus::WaveFunctionFactory
setRadialGrid	OrbitalConstraintsBase.cpp	/^void OrbitalConstraintsBase::setRadialGrid()$/;"	f	class:qmcplusplus::OrbitalConstraintsBase
setRcut	Experimental/Bspline3DSetBase.h	/^  inline void setRcut(RealType rc)$/;"	f	struct:qmcplusplus::Bspline3DSetBase
setRcut	Spline3D/SplineGridHandler.h	/^  inline void setRcut(T rc)$/;"	f	struct:qmcplusplus::SplineGridHandler
setReportLevel	Fermion/BFsplineFunctor.h	/^  inline void setReportLevel(int i)$/;"	f	struct:qmcplusplus::BFsplineFunctor
setReportLevel	Jastrow/BsplineFunctor.h	/^  inline void setReportLevel(int i, const std::string& fname)$/;"	f	struct:qmcplusplus::BsplineFunctor
setRmax	Jastrow/LRBreakupUtilities.h	/^  inline void setRmax(real_type rm)$/;"	f	struct:qmcplusplus::ShortRangePartAdapter
setSPOSet	LCOrbitalSetOpt.h	/^    void setSPOSet(SPOSetBase * const spo) {$/;"	f	class:qmcplusplus::LCOrbitalSetOpt
setSubDomain	MultiGridBsplineSet.h	/^      size_t setSubDomain(int ic, typename SplineAdoptor::SingleSplineType* dense, PT& lower, PT& upper)$/;"	f	struct:qmcplusplus::MultiGridBsplineSet
setTable	AtomicOrbitals/HFAtomicSTOSet.h	/^  void setTable(DistanceTableData* dtable)$/;"	f	struct:qmcplusplus::HFAtomicSTOSet
setTable	AtomicOrbitals/HeSTOClementiRottie.h	/^  void setTable(DistanceTableData* dtable)$/;"	f	struct:qmcplusplus::HePresetHF
setTable	LCOrbitals.h	/^  inline void setTable(DistanceTableData* atable)$/;"	f	class:qmcplusplus::LCOrbitals
setTable	SphericalBasisSet.h	/^  inline void setTable(const DistanceTableData* atable)$/;"	f	struct:qmcplusplus::SphericalBasisSet
setTable	SphericalOrbitalSet.h	/^  inline void setTable(DistanceTableData* atable)$/;"	f	struct:qmcplusplus::SphericalOrbitalSet
setTiling	EinsplineSetBuilder.h	/^  inline void setTiling(SPE* oset, int numOrbs)$/;"	f	class:qmcplusplus::EinsplineSetBuilder
setTwist	TrialWaveFunction.h	/^  void setTwist(std::vector<RealType> t)$/;"	f	class:qmcplusplus::TrialWaveFunction
setTwistAngle	Experimental/Bspline3DSetBase.cpp	/^void Bspline3DSetBase::setTwistAngle(const PosType& tangle)$/;"	f	class:qmcplusplus::Bspline3DSetBase
setTwistAngle	Experimental/TricubicBsplineSPOSet.h	/^  inline void setTwistAngle(const PosType& tangle)$/;"	f	class:qmcplusplus::TricubicBsplineSPOSet
setTwistAngle	Experimental/TricubicBsplineTwistSet.h	/^  inline void setTwistAngle(const PosType& tangle)$/;"	f	class:qmcplusplus::TricubicBsplineTwistSet
setTwistAngle	PlaneWave/PWBasis.cpp	/^void PWBasis::setTwistAngle(const PosType& tang)$/;"	f	class:qmcplusplus::PWBasis
setVars	Jastrow/DiffOneBodyJastrowOrbital.h	/^  inline void setVars(const opt_variables_type& vars)$/;"	f	class:qmcplusplus::DiffOneBodyJastrowOrbital
setVars	Jastrow/DiffOneBodySpinJastrowOrbital.h	/^  inline void setVars(const opt_variables_type& vars)$/;"	f	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
set_APW	MuffinTin.cpp	/^MuffinTinClass::set_APW (int orbNum, TinyVector<double,3> k,$/;"	f	class:qmcplusplus::MuffinTinClass
set_active_basis	OptimizableSPOSet.h	/^  void set_active_basis (std::vector<std::vector<int> > &active)$/;"	f	class:qmcplusplus::OptimizableSPOSet
set_band	AtomicOrbital.cpp	/^AtomicOrbital<double>::set_band (int band, Array<std::complex<double>,2> &spline_data,$/;"	f	class:qmcplusplus::AtomicOrbital
set_band	AtomicOrbital.cpp	/^AtomicOrbital<std::complex<double> >::set_band(int band, Array<std::complex<double>,2> &spline_data,$/;"	f	class:qmcplusplus::AtomicOrbital
set_center	MuffinTin.cpp	/^MuffinTinClass::set_center (TinyVector<double,3> r)$/;"	f	class:qmcplusplus::MuffinTinClass
set_cutoff	AtomicOrbital.h	/^  inline void set_cutoff (RealType cutoff)$/;"	f	class:qmcplusplus::AtomicOrbital
set_excitations	Fermion/ExcitationClass.h	/^  void set_excitations(int start_uo,int end_uo,int start_rep,int end_rep,ValueVector_t &coefs)$/;"	f	class:qmcplusplus::ExcitationClass
set_grid	BsplineReaderBase.h	/^  inline bool set_grid(const TinyVector<int,3>& halfg, GT* xyz_grid, BCT* xyz_bc)$/;"	f	struct:qmcplusplus::BsplineReaderBase
set_grid	legacy/SplineAdoptorReader.h	/^  inline bool set_grid(const TinyVector<int,3>& halfg, GT* xyz_grid, BCT* xyz_bc)$/;"	f	struct:qmcplusplus::BsplineReaderBase
set_iterative	Fermion/DiracDeterminantIterative.cpp	/^DiracDeterminantIterative::set_iterative(int first, int nel,double &temp_cutoff)$/;"	f	class:qmcplusplus::DiracDeterminantIterative
set_lattice	MuffinTin.cpp	/^MuffinTinClass::set_lattice (Tensor<RealType,3> lattice)$/;"	f	class:qmcplusplus::MuffinTinClass
set_lmax	AtomicOrbital.h	/^  inline void set_lmax (int lmax)$/;"	f	class:qmcplusplus::AtomicOrbital
set_num_bands	AtomicOrbital.h	/^  inline void set_num_bands (int num_bands)$/;"	f	class:qmcplusplus::AtomicOrbital
set_optimizable_rotation_ranges	LCOrbitalSetOpt.h	/^    void set_optimizable_rotation_ranges(const int istart, const int iend, const int jstart, const int jend) {$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
set_orbital_mixing_factor	LCOrbitalSetOpt.h	/^    void set_orbital_mixing_factor(const double factor) {$/;"	f	class:qmcplusplus::LCOrbitalSetOpt
set_orbital_mixing_factor	SPOSetBase.cpp	/^void SPOSetBase::set_orbital_mixing_factor(const double factor) {$/;"	f	class:qmcplusplus::SPOSetBase
set_peers	Fermion/ci_node.h	/^  void set_peers(std::vector<int>& p_peers)$/;"	f	struct:qmcplusplus::ci_node
set_point	Experimental/QDwf.h	/^  inline void set_point(const posvec_t& r) {}$/;"	f	class:QDwf
set_polynomial	AtomicOrbital.h	/^  inline void set_polynomial (RealType radius, int order)$/;"	f	class:qmcplusplus::AtomicOrbital
set_pos	AtomicOrbital.h	/^  inline void set_pos  (PosType pos)$/;"	f	class:qmcplusplus::AtomicOrbital
set_spline	AtomicOrbital.h	/^  inline void set_spline (RealType radius, int points)$/;"	f	class:qmcplusplus::AtomicOrbital
set_spline	EinsplineAdoptor.h	/^  void set_spline(CT* spline_r, CT* spline_i, int twist, int ispline, int level)$/;"	f	struct:qmcplusplus::BsplineSet
set_spline	MultiGridBsplineSet.h	/^    void set_spline(SingleSplineType* spline_r, SingleSplineType* spline_i, int twist, int ispline, int center)$/;"	f	struct:qmcplusplus::MultiGridBsplineSet
set_spline	SplineC2XAdoptor.h	/^  inline void set_spline(ST* restrict psi_r, ST* restrict psi_i, int twist, int ispline, int level)$/;"	f	struct:qmcplusplus::SplineC2CPackedAdoptor
set_spline	SplineC2XAdoptor.h	/^  inline void set_spline(SingleSplineType* spline_r, SingleSplineType* spline_i, int twist, int ispline, int level)$/;"	f	struct:qmcplusplus::SplineC2CPackedAdoptor
set_spline	SplineC2XAdoptor.h	/^  inline void set_spline(SingleSplineType* spline_r, SingleSplineType* spline_i, int twist, int ispline, int level)$/;"	f	struct:qmcplusplus::SplineC2RPackedAdoptor
set_spline	SplineC2XAdoptor.h	/^  void set_spline(ST* restrict psi_r, ST* restrict psi_i, int twist, int ispline, int level)$/;"	f	struct:qmcplusplus::SplineC2RPackedAdoptor
set_spline	SplineMixedAdoptor.h	/^  void set_spline(SingleSplineType* spline_r, SingleSplineType* spline_i, int twist, int ispline, int level)$/;"	f	struct:qmcplusplus::SplineMixedAdoptor
set_spline	SplineMixedAdoptor.h	/^  void set_spline(SingleSplineType* spline_r, SingleSplineType* spline_i, int twist, int ispline, int level)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
set_spline	SplineR2RAdoptor.h	/^  inline void set_spline(ST* restrict psi_r, ST* restrict psi_i, int twist, int ispline, int level)$/;"	f	struct:qmcplusplus::SplineR2RAdoptor
set_spline	SplineR2RAdoptor.h	/^  inline void set_spline(SingleSplineType* spline_r, SingleSplineType* spline_i, int twist, int ispline, int level)$/;"	f	struct:qmcplusplus::SplineR2RAdoptor
set_spline_domain	SplineC2XAdoptor.h	/^  inline void set_spline_domain(SingleSplineType* spline_r, SingleSplineType* spline_i, $/;"	f	struct:qmcplusplus::SplineC2CPackedAdoptor
set_spline_domain	SplineC2XAdoptor.h	/^  inline void set_spline_domain(SingleSplineType* spline_r, SingleSplineType* spline_i, $/;"	f	struct:qmcplusplus::SplineC2RPackedAdoptor
set_spline_domain	SplineR2RAdoptor.h	/^  inline void set_spline_domain(SingleSplineType* spline_r, SingleSplineType* spline_i, $/;"	f	struct:qmcplusplus::SplineR2RAdoptor
set_spo_optimizable_rotations	Fermion/SlaterDetOpt.cpp	/^void SlaterDetOpt::set_spo_optimizable_rotations() {$/;"	f	class:qmcplusplus::SlaterDetOpt
set_truncation	Fermion/DiracDeterminantTruncation.cpp	/^DiracDeterminantTruncation::set_truncation(int first, int nel,double &temp_cutoff,double &temp_radius)$/;"	f	class:qmcplusplus::DiracDeterminantTruncation
setpm	AFMSPOSet.h	/^  inline void setpm(int x)$/;"	f	class:qmcplusplus::AFMSPOSet
setpm	SPOSetBase.h	/^  virtual inline void setpm(int x) {};$/;"	f	class:qmcplusplus::SPOSetBase
setupGvecs	Jastrow/kSpaceJastrow.cpp	/^kSpaceJastrow::setupGvecs(RealType kc, std::vector<PosType> &gvecs,$/;"	f	class:qmcplusplus::kSpaceJastrow
sg	Experimental/CuspCorr.h	/^  RealType Rc_init,Rc,C,sg,Z,valAtZero,valAtRc,Rc_max;$/;"	m	class:qmcplusplus::CuspCorr
sho_report	HarmonicOscillator/SHOSet.h	/^    inline void sho_report(const std::string& pad="")$/;"	f	struct:qmcplusplus::SHOState
sigx	Experimental/QDwf.h	/^  std::vector<double> sigx;$/;"	m	class:QDwf
sigy	Experimental/QDwf.h	/^  double sigy;\/\/var$/;"	m	class:QDwf
singleRPAJastrowBuilder	Jastrow/singleRPAJastrowBuilder.h	/^  singleRPAJastrowBuilder(ParticleSet& target, TrialWaveFunction& psi,$/;"	f	struct:qmcplusplus::singleRPAJastrowBuilder
singleRPAJastrowBuilder	Jastrow/singleRPAJastrowBuilder.h	/^struct singleRPAJastrowBuilder: public OrbitalBuilderBase$/;"	s	namespace:qmcplusplus
singles	Fermion/ci_builder.h	/^  template<typename NODETYPE> inline int singles(std::vector<NODETYPE>& excitations)$/;"	f	struct:qmcplusplus::ci_builder
singlet	FDLRWfn.h	/^    bool singlet;$/;"	m	class:qmcplusplus::FDLRWfn
sintheta	AFMSPOSet.h	/^  RealType theta, costheta, sintheta, dcostheta, dsintheta;$/;"	m	class:qmcplusplus::AFMSPOSet
size	AtomicOrbitals/HFAtomicSTOSet.h	/^  inline int size() const$/;"	f	struct:qmcplusplus::HFAtomicSTOSet
size	Experimental/SlaterDeterminant.h	/^  inline int size() const$/;"	f	class:qmcplusplus::SlaterDeterminant
size	Experimental/SlaterDeterminant.h	/^  inline int size(int i) const$/;"	f	class:qmcplusplus::SlaterDeterminant
size	Fermion/SlaterDet.h	/^  inline int size() const$/;"	f	class:qmcplusplus::SlaterDet
size	Fermion/SlaterDet.h	/^  inline int size(int i) const$/;"	f	class:qmcplusplus::SlaterDet
size	Jastrow/LinearCombinationFunctor.h	/^  int size() const$/;"	f	struct:LinearCombinationFunctor
size	MixedSPOSet.h	/^  inline int size() const$/;"	f	class:qmcplusplus::MixedSPOSet
size	SPOSetBase.h	/^  inline int size() const$/;"	f	class:qmcplusplus::SPOSetBase
size	SPOSetInfo.cpp	/^  int SPOSetInfo::size() const$/;"	f	class:qmcplusplus::SPOSetInfo
size	SPOSetInfo.h	/^    int size() const$/;"	f	struct:qmcplusplus::SPOSetInfoSimple
size	SPOSetInputInfo.h	/^    int size;$/;"	m	struct:qmcplusplus::SPOSetInputInfo
size	TrialWaveFunction.h	/^  inline int size() const$/;"	f	class:qmcplusplus::TrialWaveFunction
sizeOfExtended	MultiGridBsplineSet.h	/^    size_t sizeOfExtended() const$/;"	f	struct:qmcplusplus::MultiGridBsplineSet
skRef	Jastrow/LRTwoBodyJastrow.h	/^  StructFact* skRef;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
slaterdet_0	Fermion/SlaterDetBuilder.h	/^  SlaterDeterminant_t* slaterdet_0;$/;"	m	class:qmcplusplus::SlaterDetBuilder
smallBox	Experimental/EinsplineMixedAdoptor.h	/^  SplineType *smallBox;$/;"	m	struct:qmcplusplus::SplineMixedAdoptor
smallBox	Experimental/EinsplineMixedAdoptor.h	/^  SplineType *smallBox;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
smallBox	Experimental/SplineOpenAdoptor.h	/^  SplineType *smallBox;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
smallBox	SplineMixedAdoptor.h	/^  SplineType *smallBox;$/;"	m	struct:qmcplusplus::SplineMixedAdoptor
smallBox	SplineMixedAdoptor.h	/^  SplineType *smallBox;$/;"	m	struct:qmcplusplus::SplineOpenAdoptor
smallD_i	SplineMixedAdoptorReaderP.h	/^  Array<double,3> smallD_r, smallD_i;$/;"	m	struct:qmcplusplus::SplineMixedAdoptorReader
smallD_r	SplineMixedAdoptorReaderP.h	/^  Array<double,3> smallD_r, smallD_i;$/;"	m	struct:qmcplusplus::SplineMixedAdoptorReader
snone	SPOSetInputInfo.cpp	/^  const std::string&  snone = "none";$/;"	m	namespace:qmcplusplus	file:
sortByIndex	EinsplineSetBuilderESHDF.fft.cpp	/^bool sortByIndex(BandInfo leftB, BandInfo rightB)$/;"	f	namespace:qmcplusplus
sortGrid	ElectronGas/HEGGrid.h	/^  void sortGrid(int nc)$/;"	f	struct:qmcplusplus::HEGGrid
sortGvecs	Jastrow/kSpaceJastrow.cpp	/^kSpaceJastrow::sortGvecs(std::vector<PosType> &gvecs,$/;"	f	class:qmcplusplus::kSpaceJastrow
sourceOpt	IonOrbitalBuilder.h	/^  std::string sourceOpt;$/;"	m	class:qmcplusplus::IonOrbitalBuilder
sourceOpt	Jastrow/JastrowBuilder.h	/^  std::string sourceOpt;$/;"	m	class:qmcplusplus::JastrowBuilder
sourcePtcl	Experimental/CuspCorr.h	/^  ParticleSet *sourcePtcl;$/;"	m	class:qmcplusplus::CuspCorr
sourcePtcl	Experimental/LCOrbitalSetWithCorrection.h	/^  ParticleSet* sourcePtcl;$/;"	m	class:qmcplusplus::LCOrbitalSetWithCorrection
sourcePtcl	Jastrow/BsplineJastrowBuilder.h	/^  ParticleSet *sourcePtcl;$/;"	m	struct:qmcplusplus::BsplineJastrowBuilder
sourcePtcl	Jastrow/Experimental/NJABBuilder.h	/^  ParticleSet* sourcePtcl;$/;"	m	struct:qmcplusplus::NJABBuilder
sourcePtcl	Jastrow/JastrowBasisBuilder.h	/^  ParticleSet& sourcePtcl;$/;"	m	class:qmcplusplus::JastrowBasisBuilder
sourcePtcl	Jastrow/ThreeBodyGeminalBuilder.h	/^  ParticleSet& sourcePtcl;$/;"	m	class:qmcplusplus::ThreeBodyGeminalBuilder
sourcePtcl	Jastrow/WMJastrowBuilder.h	/^  ParticleSet* sourcePtcl;$/;"	m	class:qmcplusplus::WMJastrowBuilder
sourcePtcl	Jastrow/eeI_JastrowBuilder.h	/^  ParticleSet *sourcePtcl;$/;"	m	struct:qmcplusplus::eeI_JastrowBuilder
sourcePtcl	Jastrow/kSpaceJastrowBuilder.h	/^  ParticleSet sourcePtcl;$/;"	m	struct:qmcplusplus::kSpaceJastrowBuilder
sourcePtcl	Jastrow/singleRPAJastrowBuilder.h	/^  ParticleSet* sourcePtcl;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
sourcePtcl	MolecularOrbitals/MolecularBasisBuilder.h	/^  ParticleSet& sourcePtcl;$/;"	m	class:qmcplusplus::MolecularBasisBuilder
sources	Fermion/BackflowTransformation.h	/^  std::map<std::string,int> sources;$/;"	m	class:qmcplusplus::BackflowTransformation
sph	MolecularOrbitals/AtomicBasisBuilder.h	/^  std::string sph;$/;"	m	struct:qmcplusplus::AtomicBasisBuilder
spinOpt	IonOrbitalBuilder.h	/^  std::string spinOpt;$/;"	m	class:qmcplusplus::IonOrbitalBuilder
spinOpt	Jastrow/JastrowBuilder.h	/^  std::string spinOpt;$/;"	m	class:qmcplusplus::JastrowBuilder
spinTag	PlaneWave/PWParameterSet.h	/^  std::string spinTag;$/;"	m	struct:qmcplusplus::PWParameterSet
spline	MolecularOrbitals/NGOBuilder.h	/^  inline void spline(int imin, value_type yp1, int imax, value_type ypn)$/;"	f	struct:qmcplusplus::NGOrbital
splineData_i	SplineAdoptorReaderP.h	/^  Array<double,3> splineData_r, splineData_i;$/;"	m	struct:qmcplusplus::SplineAdoptorReader
splineData_r	SplineAdoptorReaderP.h	/^  Array<double,3> splineData_r, splineData_i;$/;"	m	struct:qmcplusplus::SplineAdoptorReader
spline_coefs	AtomicOrbitalCuda.h	/^  T *spline_coefs, *poly_coefs;$/;"	m	class:AtomicOrbitalCuda
spline_dr_inv	AtomicOrbitalCuda.h	/^  T spline_dr_inv;$/;"	m	class:AtomicOrbitalCuda
spline_i	MultiGridBsplineSetReader.h	/^  std::vector<SingleSplineType*> spline_i;$/;"	m	struct:qmcplusplus::MultiGridBsplineSetReader
spline_i	SplineAdoptorReaderP.h	/^  std::vector<UBspline_3d_d*> spline_i;$/;"	m	struct:qmcplusplus::SplineAdoptorReader
spline_i	SplineMixedAdoptorReaderP.h	/^  std::vector<UBspline_3d_d*> spline_i;$/;"	m	struct:qmcplusplus::SplineMixedAdoptorReader
spline_r	MultiGridBsplineSetReader.h	/^  std::vector<SingleSplineType*> spline_r;$/;"	m	struct:qmcplusplus::MultiGridBsplineSetReader
spline_r	SplineAdoptorReaderP.h	/^  std::vector<UBspline_3d_d*> spline_r;$/;"	m	struct:qmcplusplus::SplineAdoptorReader
spline_r	SplineMixedAdoptorReaderP.h	/^  std::vector<UBspline_3d_d*> spline_r;$/;"	m	struct:qmcplusplus::SplineMixedAdoptorReader
spline_stride	AtomicOrbitalCuda.h	/^  int lMax, spline_stride, lm_stride;$/;"	m	class:AtomicOrbitalCuda
spo2band	BsplineReaderBase.h	/^  std::vector<std::vector<int> > spo2band;$/;"	m	struct:qmcplusplus::BsplineReaderBase
spo_dn	Fermion/MultiSlaterDeterminant.h	/^  SPOSetProxyPtr spo_dn;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
spo_node	ElectronGas/ElectronGasComplexOrbitalBuilder.h	/^  xmlNodePtr spo_node;$/;"	m	class:qmcplusplus::ElectronGasBasisBuilder
spo_node	ElectronGas/ElectronGasOrbitalBuilder.h	/^  xmlNodePtr spo_node;$/;"	m	class:qmcplusplus::ElectronGasBasisBuilder
spo_set_type	FermionBase.h	/^  typedef std::map<std::string,SPOSetBasePtr> spo_set_type;$/;"	t	struct:qmcplusplus::FermionBase
spo_tag	OrbitalBuilderBase.cpp	/^std::string OrbitalBuilderBase::spo_tag="psi";$/;"	m	class:qmcplusplus::OrbitalBuilderBase	file:
spo_tag	OrbitalBuilderBase.h	/^  static std::string spo_tag;$/;"	m	class:qmcplusplus::OrbitalBuilderBase
spo_up	Fermion/MultiSlaterDeterminant.h	/^  SPOSetProxyPtr spo_up;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
spoinfo	SPOInfo.h	/^  namespace spoinfo$/;"	n	namespace:qmcplusplus
spomap	PlaneWave/PWOrbitalBuilder.h	/^  std::map<std::string,SPOSetBasePtr> spomap;$/;"	m	class:qmcplusplus::PWOrbitalBuilder
sposcanner_tag	OrbitalBuilderBase.cpp	/^std::string OrbitalBuilderBase::sposcanner_tag="spo_scanner";$/;"	m	class:qmcplusplus::OrbitalBuilderBase	file:
sposcanner_tag	OrbitalBuilderBase.h	/^  static std::string sposcanner_tag;$/;"	m	class:qmcplusplus::OrbitalBuilderBase
sposet_tag	OrbitalBuilderBase.cpp	/^std::string OrbitalBuilderBase::sposet_tag="sposet";$/;"	m	class:qmcplusplus::OrbitalBuilderBase	file:
sposet_tag	OrbitalBuilderBase.h	/^  static std::string sposet_tag;$/;"	m	class:qmcplusplus::OrbitalBuilderBase
sposets	BasisSetBase.h	/^  std::vector<SPOSetBase*> sposets;$/;"	m	struct:qmcplusplus::BasisSetBuilder
srcList	Fermion/DiracDeterminantCUDA.h	/^  std::vector<CudaValueType*> srcList, destList, AList, AinvList, newRowList,$/;"	m	class:qmcplusplus::DiracDeterminantCUDA
srcList_d	Fermion/DiracDeterminantCUDA.h	/^  gpu::device_vector<CudaValueType*> srcList_d, destList_d, AList_d, AinvList_d, newRowList_d, $/;"	m	class:qmcplusplus::DiracDeterminantCUDA
startOptimization	TrialWaveFunction.cpp	/^void TrialWaveFunction::startOptimization()$/;"	f	class:qmcplusplus::TrialWaveFunction
state_info	HarmonicOscillator/SHOSet.h	/^    std::vector<SHOState>  state_info;$/;"	m	struct:qmcplusplus::SHOSet
states	BasisSetBase.h	/^  std::vector<SPOSetInfo*> states;$/;"	m	struct:qmcplusplus::BasisSetBuilder
states	SPOSetInfo.h	/^    std::vector<SPOI*> states; \/\/SPOI should derive from SPOInfo$/;"	m	struct:qmcplusplus::SPOSetInfoSimple
states	SPOSetInfo.h	/^    std::vector<SPOInfo*> states;$/;"	m	class:qmcplusplus::SPOSetInfo
states_t	SPOSetInfo.h	/^    typedef std::vector<SPOInfo*> states_t;$/;"	t	class:qmcplusplus::SPOSetInfo
stopOptimization	TrialWaveFunction.cpp	/^void TrialWaveFunction::stopOptimization()$/;"	f	class:qmcplusplus::TrialWaveFunction
storeQP	Fermion/BackflowTransformation.h	/^  Vector<PosType> storeQP;$/;"	m	class:qmcplusplus::BackflowTransformation
sumB	Jastrow/BesselZeroFunctor.h	/^  inline void sumB(real_type X, real_type& u, real_type& du, real_type& d2u)$/;"	f	struct:qmcplusplus::BesselZero
tGrad	Jastrow/ThreeBodyBlockSparse.h	/^  Vector<PosType> curGrad, tGrad;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
tGrad	Jastrow/ThreeBodyGeminal.h	/^  Vector<PosType> curGrad, tGrad;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
tLap	Jastrow/ThreeBodyBlockSparse.h	/^  Vector<RealType> curLap, tLap;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
tLap	Jastrow/ThreeBodyGeminal.h	/^  Vector<RealType> curLap, tLap;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
t_logpsi	SPOSetBase.h	/^  ValueMatrix_t t_logpsi;$/;"	m	class:qmcplusplus::SPOSetBase
t_offset	Fermion/Backflow_eI_spin.h	/^  std::vector<int> t_offset;$/;"	m	class:qmcplusplus::Backflow_eI_spin
t_offset	Jastrow/DiffOneBodySpinJastrowOrbital.h	/^  std::vector<int> t_offset;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
t_offset	Jastrow/OneBodySpinJastrowOrbital.h	/^  std::vector<int> t_offset;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
taken	Fermion/ci_configuration.h	/^  bool taken;$/;"	m	struct:qmcplusplus::ci_configuration
target	SPOSetScanner.h	/^    ParticleSet& target;$/;"	m	class:qmcplusplus::SPOSetScanner
targetPsi	OrbitalBuilderBase.h	/^  TrialWaveFunction& targetPsi;$/;"	m	class:qmcplusplus::OrbitalBuilderBase
targetPsi	WaveFunctionFactory.h	/^  TrialWaveFunction* targetPsi;$/;"	m	struct:qmcplusplus::WaveFunctionFactory
targetPtcl	AFMSPOBuilder.h	/^  ParticleSet *targetPtcl;$/;"	m	class:qmcplusplus::AFMSPOBuilder
targetPtcl	Experimental/CuspCorr.h	/^  ParticleSet *targetPtcl;$/;"	m	class:qmcplusplus::CuspCorr
targetPtcl	Experimental/LCOrbitalSetWithCorrection.h	/^  ParticleSet* targetPtcl;$/;"	m	class:qmcplusplus::LCOrbitalSetWithCorrection
targetPtcl	Experimental/SplineSetBuilder.h	/^  ParticleSet& targetPtcl;$/;"	m	class:qmcplusplus::SplineSetBuilder
targetPtcl	Experimental/TricubicBsplineSetBuilder.h	/^  ParticleSet& targetPtcl;$/;"	m	class:qmcplusplus::TricubicBsplineSetBuilder
targetPtcl	Fermion/BackflowTransformation.h	/^  ParticleSet& targetPtcl;$/;"	m	class:qmcplusplus::BackflowTransformation
targetPtcl	Fermion/DiracDeterminantBase.h	/^  ParticleSet *targetPtcl;$/;"	m	class:qmcplusplus::DiracDeterminantBase
targetPtcl	Jastrow/JastrowBasisBuilder.h	/^  ParticleSet& targetPtcl;$/;"	m	class:qmcplusplus::JastrowBasisBuilder
targetPtcl	Jastrow/RPAJastrow.h	/^  ParticleSet& targetPtcl;$/;"	m	struct:qmcplusplus::RPAJastrow
targetPtcl	MolecularOrbitals/MolecularBasisBuilder.h	/^  ParticleSet& targetPtcl;$/;"	m	class:qmcplusplus::MolecularBasisBuilder
targetPtcl	OptimizableSPOBuilder.h	/^  ParticleSet *targetPtcl;$/;"	m	class:qmcplusplus::OptimizableSPOBuilder
targetPtcl	OrbitalBuilderBase.h	/^  ParticleSet& targetPtcl;$/;"	m	class:qmcplusplus::OrbitalBuilderBase
targetPtcl	WaveFunctionFactory.h	/^  ParticleSet* targetPtcl;$/;"	m	struct:qmcplusplus::WaveFunctionFactory
tempP	FDLRWfn.h	/^    ParticleSet* tempP;$/;"	m	class:qmcplusplus::FDLRWfn
tempP	TrialWaveFunction.h	/^  ParticleSet* tempP;$/;"	m	class:qmcplusplus::TrialWaveFunction
tempPsi	PlaneWave/PWRealOrbitalSet.h	/^  Vector<ComplexType> tempPsi;$/;"	m	class:qmcplusplus::PWRealOrbitalSet
temp_psiM2	Fermion/DiracDeterminantTruncation.h	/^  ValueMatrix_t temp_psiM2;$/;"	m	class:qmcplusplus::DiracDeterminantTruncation
tempgrad	Fermion/MultiSlaterDeterminant.h	/^  Vector<ParticleSet::ParticleGradient_t> tempgrad;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
templapl	Fermion/MultiSlaterDeterminant.h	/^  Vector<ParticleSet::ParticleLaplacian_t> templapl;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
tempstorage_dn	Fermion/MultiSlaterDeterminant.h	/^  ValueVector_t tempstorage_dn;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
tempstorage_up	Fermion/MultiSlaterDeterminant.h	/^  ValueVector_t tempstorage_up;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
tensor_type	Spline3D/SplineGridHandler.h	/^  typedef Tensor<T,D>     tensor_type;$/;"	t	struct:qmcplusplus::SplineGridHandler
testDeriv	Fermion/BackflowTransformation.h	/^  void testDeriv(const ParticleSet& P)$/;"	f	class:qmcplusplus::BackflowTransformation
testDerivFjj	Fermion/DiracDeterminantWithBackflow.cpp	/^void DiracDeterminantWithBackflow::testDerivFjj(ParticleSet& P, int pa)$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
testDerivGL	Fermion/SlaterDetWithBackflow.cpp	/^void SlaterDetWithBackflow::testDerivGL(ParticleSet& P)$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
testDerivLi	Fermion/DiracDeterminantWithBackflow.cpp	/^void DiracDeterminantWithBackflow::testDerivLi(ParticleSet& P, int pa)$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
testGG	Fermion/DiracDeterminantWithBackflow.cpp	/^void DiracDeterminantWithBackflow::testGG(ParticleSet& P)$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
testGGG	Fermion/DiracDeterminantWithBackflow.cpp	/^void DiracDeterminantWithBackflow::testGGG(ParticleSet& P)$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
testL	Fermion/DiracDeterminantWithBackflow.cpp	/^void DiracDeterminantWithBackflow::testL(ParticleSet& P)$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
testMSD	Fermion/MultiSlaterDeterminantFast.cpp	/^void MultiSlaterDeterminantFast::testMSD(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
testMe	Fermion/ExcitationClass.h	/^  void testMe()$/;"	f	class:qmcplusplus::ExcitationClass
testPbyP	Fermion/BackflowTransformation.h	/^  void testPbyP(ParticleSet& P)$/;"	f	class:qmcplusplus::BackflowTransformation
test_derivatives	HarmonicOscillator/SHOSet.cpp	/^  void SHOSet::test_derivatives()$/;"	f	class:qmcplusplus::SHOSet
test_overlap	HarmonicOscillator/SHOSet.cpp	/^  void SHOSet::test_overlap()$/;"	f	class:qmcplusplus::SHOSet
tf_component	LCOrbitalSetOpt.h	/^    OrbitalBase * tf_component() {$/;"	f	class:qmcplusplus::LCOrbitalSetOpt
tf_component	SPOSetBase.cpp	/^OrbitalBase * SPOSetBase::tf_component() {$/;"	f	class:qmcplusplus::SPOSetBase
tfc_ptr	Fermion/SlaterDetOpt.cpp	/^LCOrbitalSetOptTrialFunc * SlaterDetOpt::tfc_ptr(const std::string & calling_func) {$/;"	f	class:qmcplusplus::SlaterDetOpt
theta	AFMSPOSet.h	/^  RealType theta, costheta, sintheta, dcostheta, dsintheta;$/;"	m	class:qmcplusplus::AFMSPOSet
thisBasisSet	MolecularOrbitals/MolecularBasisBuilder.h	/^  ThisBasisSetType* thisBasisSet;$/;"	m	class:qmcplusplus::MolecularBasisBuilder
thisSPOSet	MultiGridBsplineSetReader.h	/^  ThisSPOSetType* thisSPOSet;$/;"	m	struct:qmcplusplus::MultiGridBsplineSetReader
thr	OptimizableSPOSet.h	/^  RealType thr;$/;"	m	class:qmcplusplus::OptimizableSPOSet
tileOrbitals	Experimental/Bspline3DSetBase.cpp	/^void Bspline3DSetBase::tileOrbitals(const TinyVector<int,3>& boxdup)$/;"	f	class:qmcplusplus::Bspline3DSetBase
tlen	Jastrow/singleRPAJastrowBuilder.h	/^  RealType tlen;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
to	Fermion/ci_node.h	/^  int to;$/;"	m	struct:qmcplusplus::ci_node
to	Fermion/excitation_node.h	/^  int to;$/;"	m	struct:qmcplusplus::excitation_node
transform2GridData	PlaneWave/PWOrbitalBuilder.cpp	/^void PWOrbitalBuilder::transform2GridData(PWBasis::GIndex_t& nG, int spinIndex, PWOrbitalSet& pwFunc)$/;"	f	class:qmcplusplus::PWOrbitalBuilder
transformOnly	Fermion/BackflowTransformation.h	/^  transformOnly(const ParticleSet& P)$/;"	f	class:qmcplusplus::BackflowTransformation
transformOpt	AGPDeterminantBuilder.h	/^  std::string transformOpt;$/;"	m	class:qmcplusplus::AGPDeterminantBuilder
transformOpt	IonOrbitalBuilder.h	/^  std::string transformOpt;$/;"	m	class:qmcplusplus::IonOrbitalBuilder
transformOpt	Jastrow/JastrowBuilder.h	/^  std::string transformOpt;$/;"	m	class:qmcplusplus::JastrowBuilder
transformSPOSet	Experimental/LCOrbitalSetWithCorrection.cpp	/^bool LCOrbitalSetWithCorrection<BS,false>::transformSPOSet()$/;"	f	class:qmcplusplus::LCOrbitalSetWithCorrection
transformSPOSet	SPOSetBase.h	/^  virtual bool transformSPOSet()$/;"	f	class:qmcplusplus::SPOSetBase
translate	Experimental/Bspline3DSetTrunc.h	/^  inline PosType translate(const PosType& r, int j)$/;"	f	struct:qmcplusplus::Bspline3DSet_MLW
transpose	SPOSetBase.cpp	/^inline void transpose(const T* restrict in, T* restrict out, int m)$/;"	f	namespace:qmcplusplus
trimforecut	Experimental/PlaneWaveBasis.h	/^  void trimforecut(ParticleLayout_t &Lattice)$/;"	f	class:qmcplusplus::PlaneWaveBasis
trimforecut	PlaneWave/PWBasis.cpp	/^void PWBasis::trimforecut()$/;"	f	class:qmcplusplus::PWBasis
triplet	FDLRWfn.h	/^    bool triplet;$/;"	m	class:qmcplusplus::FDLRWfn
twist	ElectronGas/HEGGrid.h	/^  PosType twist;$/;"	m	struct:qmcplusplus::HEGGrid
twist	Experimental/PlaneWaveBasis.h	/^  TinyVector<RealType,3> twist,twist_cart; \/\/Twist angle in reduced and Cartesian.$/;"	m	class:qmcplusplus::PlaneWaveBasis
twist	PlaneWave/PWBasis.h	/^  PosType twist;$/;"	m	class:qmcplusplus::PWBasis
twist	TrialWaveFunction.h	/^  const std::vector<RealType> twist()$/;"	f	class:qmcplusplus::TrialWaveFunction
twistIndex	PlaneWave/PWParameterSet.h	/^  int twistIndex;$/;"	m	struct:qmcplusplus::PWParameterSet
twistTag	PlaneWave/PWParameterSet.h	/^  std::string twistTag;$/;"	m	struct:qmcplusplus::PWParameterSet
twist_cart	Experimental/PlaneWaveBasis.h	/^  TinyVector<RealType,3> twist,twist_cart; \/\/Twist angle in reduced and Cartesian.$/;"	m	class:qmcplusplus::PlaneWaveBasis
twist_cart	PlaneWave/PWBasis.h	/^  PosType twist_cart; \/\/Twist angle in reduced and Cartesian.$/;"	m	class:qmcplusplus::PWBasis
twist_handler	Spline3D/twist_handler.hpp	/^    struct twist_handler$/;"	s	namespace:qmcplusplus
typeOpt	IonOrbitalBuilder.h	/^  std::string typeOpt;$/;"	m	class:qmcplusplus::IonOrbitalBuilder
typeOpt	Jastrow/JastrowBuilder.h	/^  std::string typeOpt;$/;"	m	class:qmcplusplus::JastrowBuilder
type_check	Spline3D/EinsplineSetTemp.hpp	/^    struct type_check$/;"	s	namespace:qmcplusplus
type_check	Spline3D/EinsplineSetTemp.hpp	/^    struct type_check<T1,T1>$/;"	s	namespace:qmcplusplus
ulmVec	AtomicOrbital.h	/^  std::vector<StorageType> YlmVec, dYlm_dthetaVec, dYlm_dphiVec, ulmVec, dulmVec, d2ulmVec;$/;"	m	class:qmcplusplus::AtomicOrbital
uniqueFunctions	Fermion/BackflowFunctionBase.h	/^  bool uniqueFunctions;$/;"	m	class:qmcplusplus::BackflowFunctionBase
uniquePairs	Fermion/MultiDiracDeterminantBase.h	/^  std::vector<std::pair<int,int> > uniquePairs;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
uniquePairs	Fermion/MultiDiracDeterminantWithBackflow.h	/^  std::vector<std::pair<int,int> > uniquePairs;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
uniqueRadFun	Fermion/Backflow_eI.h	/^  std::vector<FT*> uniqueRadFun;$/;"	m	class:qmcplusplus::Backflow_eI
uniqueRadFun	Fermion/Backflow_ee.h	/^  std::vector<FT*> uniqueRadFun;$/;"	m	class:qmcplusplus::Backflow_ee
unique_twist	ElectronGas/ElectronGasComplexOrbitalBuilder.h	/^  PosType unique_twist;$/;"	m	class:qmcplusplus::ElectronGasBasisBuilder
unitcell_type	Spline3D/SplineGridHandler.h	/^  typedef CrystalLattice<T,D> unitcell_type;$/;"	t	struct:qmcplusplus::SplineGridHandler
unitcell_type	Spline3D/twist_handler.hpp	/^      typedef CrystalLattice<T, D> unitcell_type;$/;"	t	struct:qmcplusplus::twist_handler
unoccupied_orbitals_to_use	Fermion/ExcitationClass.h	/^  std::vector<int> unoccupied_orbitals_to_use;$/;"	m	class:qmcplusplus::ExcitationClass
unoccupied_orbitals_to_use_index	Fermion/ExcitationClass.h	/^  int unoccupied_orbitals_to_use_index;$/;"	m	class:qmcplusplus::ExcitationClass
unordered	SPOInfo.h	/^    enum orderings{index_ordered=0,energy_ordered,energy_and_index_ordered,unordered,no_order};$/;"	e	enum:qmcplusplus::spoinfo::orderings
unordered	SPOSetInfo.cpp	/^  bool SPOSetInfo::unordered() const$/;"	f	class:qmcplusplus::SPOSetInfo
unpack4fftw	einspline_helper.hpp	/^    inline void unpack4fftw(const Vector<std::complex<T> >& cG$/;"	f	namespace:qmcplusplus
update	AGPDeterminant.cpp	/^void AGPDeterminant::update(ParticleSet& P,$/;"	f	class:qmcplusplus::AGPDeterminant
update	ConstantOrbital.h	/^  virtual void update(ParticleSet& P,$/;"	f	class:qmcplusplus::ConstantOrbital
update	Experimental/DiracDeterminant.h	/^  void update(ParticleSet& P,$/;"	f	class:qmcplusplus::DiracDeterminant
update	Experimental/SlaterDeterminant.h	/^  void update(ParticleSet& P,$/;"	f	class:qmcplusplus::SlaterDeterminant
update	Experimental/TwoBodyJastrowFunction.Shared.h	/^  void update(ParticleSet& P,$/;"	f	class:qmcplusplus::TwoBodyJastrow
update	Experimental/TwoBodyJastrowFunction.h	/^  inline void update(ParticleSet& P,$/;"	f	class:qmcplusplus::TwoBodyJastrow
update	FDLRWfn.h	/^    void update(ParticleSet& P, ParticleSet::ParticleGradient_t& dG, ParticleSet::ParticleLaplacian_t& dL, int iat) {$/;"	f	class:qmcplusplus::FDLRWfn
update	Fermion/DiracDeterminantBase.cpp	/^void DiracDeterminantBase::update(ParticleSet& P,$/;"	f	class:qmcplusplus::DiracDeterminantBase
update	Fermion/DiracDeterminantBase.h	/^  update (const std::vector<Walker_t*> &walkers,$/;"	f	class:qmcplusplus::DiracDeterminantBase
update	Fermion/DiracDeterminantBase.h	/^  virtual void update (std::vector<Walker_t*> &walkers, int iat)$/;"	f	class:qmcplusplus::DiracDeterminantBase
update	Fermion/DiracDeterminantCUDA.cpp	/^DiracDeterminantCUDA::update (const std::vector<Walker_t*> &walkers,$/;"	f	class:qmcplusplus::DiracDeterminantCUDA
update	Fermion/DiracDeterminantCUDA.cpp	/^DiracDeterminantCUDA::update (std::vector<Walker_t*> &walkers, int iat)$/;"	f	class:qmcplusplus::DiracDeterminantCUDA
update	Fermion/DiracDeterminantCUDA.h	/^  void update(ParticleSet& P,$/;"	f	class:qmcplusplus::DiracDeterminantCUDA
update	Fermion/DiracDeterminantWithBackflow.cpp	/^void DiracDeterminantWithBackflow::update(ParticleSet& P,$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
update	Fermion/MultiDiracDeterminantBase.cpp	/^void MultiDiracDeterminantBase::update(ParticleSet& P,$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
update	Fermion/MultiDiracDeterminantBase_help.cpp	/^void MultiDiracDeterminantBase::update(ParticleSet& P,$/;"	f	class:MultiDiracDeterminantBase
update	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^void MultiDiracDeterminantBase::update(ParticleSet& P,$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
update	Fermion/MultiSlaterDeterminant.cpp	/^void MultiSlaterDeterminant::update(ParticleSet& P$/;"	f	class:qmcplusplus::MultiSlaterDeterminant
update	Fermion/MultiSlaterDeterminantFast.cpp	/^void MultiSlaterDeterminantFast::update(ParticleSet& P$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
update	Fermion/MultiSlaterDeterminantWithBackflow.cpp	/^void MultiSlaterDeterminantWithBackflow::update(ParticleSet& P$/;"	f	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
update	Fermion/RNDiracDeterminantBase.cpp	/^void RNDiracDeterminantBase::update(ParticleSet& P,$/;"	f	class:qmcplusplus::RNDiracDeterminantBase
update	Fermion/RNDiracDeterminantBaseAlternate.cpp	/^void RNDiracDeterminantBaseAlternate::update(ParticleSet& P,$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
update	Fermion/SlaterDet.h	/^  void update (std::vector<Walker_t*> &walkers, int iat)$/;"	f	class:qmcplusplus::SlaterDet
update	Fermion/SlaterDet.h	/^  void update(ParticleSet& P,$/;"	f	class:qmcplusplus::SlaterDet
update	Fermion/SlaterDetCUDA.cpp	/^void SlaterDet::update (const std::vector<Walker_t*> &walkers,$/;"	f	class:qmcplusplus::SlaterDet
update	Fermion/SlaterDetOpt.cpp	/^void SlaterDetOpt::update(ParticleSet& P,$/;"	f	class:qmcplusplus::SlaterDetOpt
update	Fermion/SlaterDetWithBackflow.h	/^  void update(ParticleSet& P,$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
update	IonOrbital.cpp	/^IonOrbital::update(ParticleSet& P,$/;"	f	class:qmcplusplus::IonOrbital
update	Jastrow/LRTwoBodyJastrow.cpp	/^void LRTwoBodyJastrow::update(ParticleSet& P,$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
update	Jastrow/OneBodyJastrowOrbital.h	/^  void update(ParticleSet& P,$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
update	Jastrow/OneBodyJastrowOrbitalBspline.cpp	/^OneBodyJastrowOrbitalBspline::update (std::vector<Walker_t*> &walkers, int iat)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
update	Jastrow/OneBodyJastrowOrbitalBspline.h	/^  void update (const std::vector<Walker_t*> &walkers, const std::vector<int> &iatList)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
update	Jastrow/OneBodySpinJastrowOrbital.h	/^  void update(ParticleSet& P,$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
update	Jastrow/PolarizedJastrow.h	/^  void update(ParticleSet& P,$/;"	f	class:qmcplusplus::PolarizedJastrow
update	Jastrow/RPAJastrow.cpp	/^void RPAJastrow::update(ParticleSet& P,$/;"	f	class:qmcplusplus::RPAJastrow
update	Jastrow/ThreeBodyBlockSparse.cpp	/^void ThreeBodyBlockSparse::update(ParticleSet& P,$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
update	Jastrow/ThreeBodyGeminal.cpp	/^void ThreeBodyGeminal::update(ParticleSet& P,$/;"	f	class:qmcplusplus::ThreeBodyGeminal
update	Jastrow/ThreeBodyJastrowOrbital.h	/^  void update(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
update	Jastrow/ThreeBodyJastrowOrbital.h	/^  void update(ParticleSet& P,$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
update	Jastrow/ThreeBodyPade.h	/^  void update(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::ThreeBodyPade
update	Jastrow/ThreeBodyPade.h	/^  void update(ParticleSet& P,$/;"	f	class:qmcplusplus::ThreeBodyPade
update	Jastrow/TwoBodyJastrowOrbital.h	/^  inline void update(ParticleSet& P,$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
update	Jastrow/TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::update (std::vector<Walker_t*> &walkers, int iat)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
update	Jastrow/TwoBodyJastrowOrbitalBspline.h	/^  void update (const std::vector<Walker_t*> &walkers, const std::vector<int> &iatList)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
update	Jastrow/eeI_JastrowOrbital.h	/^  inline void update(ParticleSet& P,$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
update	Jastrow/kSpaceJastrow.cpp	/^kSpaceJastrow::update(ParticleSet& P,$/;"	f	class:qmcplusplus::kSpaceJastrow
update	LCOrbitalSetOpt.h	/^    void update(ParticleSet& P, ParticleSet::ParticleGradient_t& dG, ParticleSet::ParticleLaplacian_t& dL, int iat) {$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
update	OrbitalBase.h	/^  update (const std::vector<Walker_t*> &walkers,$/;"	f	struct:qmcplusplus::OrbitalBase
update	OrbitalBase.h	/^  update (std::vector<Walker_t*> &walkers, int iat)$/;"	f	struct:qmcplusplus::OrbitalBase
update	ProductOrbital.cpp	/^void ProductOrbital::update(ParticleSet& P$/;"	f	class:qmcplusplus::ProductOrbital
update	TrialWaveFunction.cpp	/^void   TrialWaveFunction::update(ParticleSet& P,int iat)$/;"	f	class:qmcplusplus::TrialWaveFunction
update	TrialWaveFunction_CUDA.cpp	/^TrialWaveFunction::update (const std::vector<Walker_t*> &walkers,$/;"	f	class:qmcplusplus::TrialWaveFunction
update	TrialWaveFunction_CUDA.cpp	/^TrialWaveFunction::update (std::vector<Walker_t*> &walkers, int iat)$/;"	f	class:qmcplusplus::TrialWaveFunction
updateBuffer	AGPDeterminant.cpp	/^AGPDeterminant::updateBuffer(ParticleSet& P, PooledData<RealType>& buf,$/;"	f	class:qmcplusplus::AGPDeterminant
updateBuffer	ConstantOrbital.h	/^  virtual RealType updateBuffer(ParticleSet& P, BufferType& buf, bool fromscratch=false) {return 0.0;}$/;"	f	class:qmcplusplus::ConstantOrbital
updateBuffer	Experimental/DiracDeterminant.h	/^  RealType updateBuffer(ParticleSet& P, PooledData<RealType>& buf, bool fromscratch=false)$/;"	f	class:qmcplusplus::DiracDeterminant
updateBuffer	Experimental/SlaterDeterminant.h	/^  RealType updateBuffer(ParticleSet& P, PooledData<RealType>& buf,$/;"	f	class:qmcplusplus::SlaterDeterminant
updateBuffer	Experimental/TwoBodyJastrowFunction.Shared.h	/^  ValueType updateBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::TwoBodyJastrow
updateBuffer	Experimental/TwoBodyJastrowFunction.h	/^  inline ValueType updateBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::TwoBodyJastrow
updateBuffer	FDLRWfn.h	/^    RealType updateBuffer(ParticleSet& P, BufferType& buf, bool fromscratch=false)$/;"	f	class:qmcplusplus::FDLRWfn
updateBuffer	Fermion/BackflowFunctionBase.h	/^  void updateBuffer(PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::BackflowFunctionBase
updateBuffer	Fermion/BackflowTransformation.h	/^  void updateBuffer(ParticleSet& P, PooledData<RealType>& buf, bool redo)$/;"	f	class:qmcplusplus::BackflowTransformation
updateBuffer	Fermion/DiracDeterminantBase.cpp	/^DiracDeterminantBase::RealType DiracDeterminantBase::updateBuffer(ParticleSet& P,$/;"	f	class:qmcplusplus::DiracDeterminantBase
updateBuffer	Fermion/DiracDeterminantWithBackflow.cpp	/^DiracDeterminantWithBackflow::RealType DiracDeterminantWithBackflow::updateBuffer(ParticleSet& P,$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
updateBuffer	Fermion/MultiDiracDeterminantBase.cpp	/^MultiDiracDeterminantBase::RealType MultiDiracDeterminantBase::updateBuffer(ParticleSet& P,$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
updateBuffer	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^MultiDiracDeterminantBase::RealType MultiDiracDeterminantBase::updateBuffer(ParticleSet& P,$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
updateBuffer	Fermion/MultiSlaterDeterminant.cpp	/^OrbitalBase::RealType MultiSlaterDeterminant::updateBuffer(ParticleSet& P, BufferType& buf, bool fromscratch)$/;"	f	class:qmcplusplus::MultiSlaterDeterminant
updateBuffer	Fermion/MultiSlaterDeterminantFast.cpp	/^OrbitalBase::RealType MultiSlaterDeterminantFast::updateBuffer(ParticleSet& P, BufferType& buf, bool fromscratch)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
updateBuffer	Fermion/MultiSlaterDeterminantWithBackflow.cpp	/^OrbitalBase::RealType MultiSlaterDeterminantWithBackflow::updateBuffer(ParticleSet& P, BufferType& buf, bool fromscratch)$/;"	f	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
updateBuffer	Fermion/RNDiracDeterminantBase.cpp	/^RNDiracDeterminantBase::RealType RNDiracDeterminantBase::updateBuffer(ParticleSet& P,$/;"	f	class:qmcplusplus::RNDiracDeterminantBase
updateBuffer	Fermion/RNDiracDeterminantBaseAlternate.cpp	/^RNDiracDeterminantBaseAlternate::RealType RNDiracDeterminantBaseAlternate::updateBuffer(ParticleSet& P,$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
updateBuffer	Fermion/SlaterDet.cpp	/^SlaterDet::RealType SlaterDet::updateBuffer(ParticleSet& P,$/;"	f	class:qmcplusplus::SlaterDet
updateBuffer	Fermion/SlaterDetOpt.cpp	/^OrbitalBase::RealType SlaterDetOpt::updateBuffer(ParticleSet& P, BufferType& buf, bool fromscratch) {$/;"	f	class:qmcplusplus::SlaterDetOpt
updateBuffer	Fermion/SlaterDetWithBackflow.cpp	/^SlaterDetWithBackflow::RealType SlaterDetWithBackflow::updateBuffer(ParticleSet& P, PooledData<RealType>& buf,$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
updateBuffer	IonOrbital.cpp	/^IonOrbital::updateBuffer(ParticleSet& P, BufferType& buf,$/;"	f	class:qmcplusplus::IonOrbital
updateBuffer	Jastrow/LRTwoBodyJastrow.cpp	/^LRTwoBodyJastrow::updateBuffer(ParticleSet& P, PooledData<RealType>& buf,$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
updateBuffer	Jastrow/OneBodyJastrowOrbital.h	/^  RealType updateBuffer(ParticleSet& P, BufferType& buf, bool fromscratch=false)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
updateBuffer	Jastrow/OneBodySpinJastrowOrbital.h	/^  RealType updateBuffer(ParticleSet& P, BufferType& buf, bool fromscratch=false)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
updateBuffer	Jastrow/PolarizedJastrow.h	/^  ValueType updateBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::PolarizedJastrow
updateBuffer	Jastrow/RPAJastrow.cpp	/^RPAJastrow::updateBuffer(ParticleSet& P, BufferType& buf, bool fromscratch)$/;"	f	class:qmcplusplus::RPAJastrow
updateBuffer	Jastrow/ThreeBodyBlockSparse.cpp	/^ThreeBodyBlockSparse::updateBuffer(ParticleSet& P, PooledData<RealType>& buf,$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
updateBuffer	Jastrow/ThreeBodyGeminal.cpp	/^ThreeBodyGeminal::updateBuffer(ParticleSet& P, PooledData<RealType>& buf,$/;"	f	class:qmcplusplus::ThreeBodyGeminal
updateBuffer	Jastrow/ThreeBodyJastrowOrbital.h	/^  ValueType updateBuffer(ParticleSet& P, BufferType& buf)$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
updateBuffer	Jastrow/ThreeBodyPade.h	/^  ValueType updateBuffer(ParticleSet& P, BufferType& buf)$/;"	f	class:qmcplusplus::ThreeBodyPade
updateBuffer	Jastrow/TwoBodyJastrowOrbital.h	/^  inline RealType updateBuffer(ParticleSet& P, PooledData<RealType>& buf,$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
updateBuffer	Jastrow/eeI_JastrowOrbital.h	/^  inline RealType updateBuffer(ParticleSet& P, PooledData<RealType>& buf,$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
updateBuffer	Jastrow/kSpaceJastrow.cpp	/^kSpaceJastrow::updateBuffer(ParticleSet& P, PooledData<RealType>& buf,$/;"	f	class:qmcplusplus::kSpaceJastrow
updateBuffer	LCOrbitalSetOpt.h	/^    RealType updateBuffer(ParticleSet& P, BufferType& buf, bool fromscratch=false) { return 0; }$/;"	f	class:qmcplusplus::LCOrbitalSetOptTrialFunc
updateBuffer	ProductOrbital.cpp	/^ProductOrbital::RealType ProductOrbital::updateBuffer(ParticleSet& P$/;"	f	class:qmcplusplus::ProductOrbital
updateBuffer	TrialWaveFunction.cpp	/^TrialWaveFunction::RealType TrialWaveFunction::updateBuffer(ParticleSet& P$/;"	f	class:qmcplusplus::TrialWaveFunction
updateJob	Fermion/determinant_update.h	/^struct updateJob$/;"	s
update_basis_states	HarmonicOscillator/SHOSetBuilder.cpp	/^  void SHOSetBuilder::update_basis_states(int smax)$/;"	f	class:qmcplusplus::SHOSetBuilder
update_token	EinsplineSetBuilder.h	/^  inline void update_token(const char* f, int l, const char* msg) $/;"	f	class:qmcplusplus::EinsplineSetBuilder
updetspinindex	Experimental/PlaneWaveOrbitalBuilder.h	/^  int updetspinindex, downdetspinindex;$/;"	m	class:qmcplusplus::PlaneWaveOrbitalBuilder
upindx	Experimental/PlaneWaveOrbitalBuilder.h	/^  int nup, ndown, upindx;$/;"	m	class:qmcplusplus::PlaneWaveOrbitalBuilder
urpa	Jastrow/LRBreakupUtilities.h	/^  T urpa(T q)$/;"	f	struct:qmcplusplus::RPABFeeBreakup
useCartesian	SphericalBasisSet.h	/^  bool useCartesian;$/;"	m	struct:qmcplusplus::SphericalBasisSet
use_complex	MultiGridBsplineSetReader.h	/^  bool use_complex;$/;"	m	struct:qmcplusplus::MultiGridBsplineSetReader
use_imaginary	SplineMixedAdoptorReaderP.h	/^  bool use_imaginary;$/;"	m	struct:qmcplusplus::SplineMixedAdoptorReader
usingBF	Fermion/MultiDiracDeterminantWithBackflow.h	/^  bool usingBF;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
usingBF	Fermion/MultiSlaterDeterminantFast.h	/^  bool usingBF;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
usingCSF	Fermion/MultiSlaterDeterminant.h	/^  bool usingCSF;$/;"	m	class:qmcplusplus::MultiSlaterDeterminant
usingCSF	Fermion/MultiSlaterDeterminantFast.h	/^  bool usingCSF;$/;"	m	class:qmcplusplus::MultiSlaterDeterminantFast
usingDerivBuffer	Fermion/DiracDeterminantWithBackflow.h	/^  bool usingDerivBuffer;$/;"	m	class:qmcplusplus::DiracDeterminantWithBackflow
utv	Fermion/excitation_node.h	/^  T utv;$/;"	m	struct:qmcplusplus::excitation_node
v_offset	Fermion/ci_builder.h	/^  std::vector<int> v_offset;$/;"	m	struct:qmcplusplus::ci_builder
val1	Experimental/CuspCorr.h	/^  ValueVector_t val1;$/;"	m	class:qmcplusplus::CuspCorr
val2	Experimental/CuspCorr.h	/^  ValueVector_t val2;$/;"	m	class:qmcplusplus::CuspCorr
valAtRc	Experimental/CuspCorr.h	/^  RealType Rc_init,Rc,C,sg,Z,valAtZero,valAtRc,Rc_max;$/;"	m	class:qmcplusplus::CuspCorr
valAtZero	Experimental/CuspCorr.h	/^  RealType Rc_init,Rc,C,sg,Z,valAtZero,valAtRc,Rc_max;$/;"	m	class:qmcplusplus::CuspCorr
value	Spline3D/EinsplineSetTemp.hpp	/^      static const bool value=false;$/;"	m	struct:qmcplusplus::is_real_bspline
value	Spline3D/EinsplineSetTemp.hpp	/^      static const bool value=false;$/;"	m	struct:qmcplusplus::type_check
value	Spline3D/EinsplineSetTemp.hpp	/^      static const bool value=true;$/;"	m	struct:qmcplusplus::is_real_bspline
value	Spline3D/EinsplineSetTemp.hpp	/^      static const bool value=true;$/;"	m	struct:qmcplusplus::type_check
value_type	AtomicOrbitals/HFAtomicSTOSet.h	/^  typedef T value_type;$/;"	t	struct:qmcplusplus::ComboSTO
value_type	Experimental/EinsplineAdoptorPacked.h	/^  typedef std::complex<ST>                                             value_type;$/;"	t	struct:qmcplusplus::SplineC2CAdoptorPacked
value_type	Experimental/EinsplineAdoptorPacked.h	/^  typedef std::complex<ST>                                           value_type;$/;"	t	struct:qmcplusplus::SplineC2RAdoptorPacked
value_type	Experimental/QDwf.h	/^  typedef double value_type;$/;"	t	class:QDwf
value_type	Experimental/SingleParticleOrbitalSet.h	/^  typedef typename OT::value_type value_type;$/;"	t	struct:qmcplusplus::SingleParticleOrbitalSet
value_type	Experimental/TricubicBsplineSPOSet.h	/^  typedef typename TricubicBsplineTraits<T>::value_type  value_type;$/;"	t	class:qmcplusplus::TricubicBsplineSPOSet
value_type	Experimental/TricubicBsplineTwistSet.h	/^  typedef typename TricubicBsplineTraits<T>::value_type  value_type;$/;"	t	class:qmcplusplus::TricubicBsplineTwistSet
value_type	Fermion/BFsplineFunctor.h	/^  typedef real_type value_type;$/;"	t	struct:qmcplusplus::BFsplineFunctor
value_type	Fermion/ci_node.h	/^  typedef typename scalar_traits<T>::value_type value_type;$/;"	t	struct:qmcplusplus::ci_node
value_type	HarmonicOscillator/SHOSet.h	/^    typedef ValueMatrix_t::value_type value_type;$/;"	t	struct:qmcplusplus::SHOSet
value_type	Jastrow/BesselZeroFunctor.h	/^  typedef real_type value_type;$/;"	t	struct:qmcplusplus::BesselZero
value_type	Jastrow/BsplineFunctor.h	/^  typedef real_type value_type;$/;"	t	struct:qmcplusplus::BsplineFunctor
value_type	Jastrow/BsplineFunctor3D.h	/^  typedef real_type value_type;$/;"	t	struct:qmcplusplus::BsplineFunctor3D
value_type	Jastrow/CubicBsplineGroup.h	/^  typedef typename CubicBsplineGrid<T,GRIDTYPE,FIRSTDERIV_CONSTRAINTS>::value_type value_type;$/;"	t	class:qmcplusplus::CubicBsplineGroup
value_type	Jastrow/PolynomialFunctor3D.h	/^  typedef real_type value_type;$/;"	t	struct:qmcplusplus::PolynomialFunctor3D
value_type	Jastrow/SplineFunctors.h	/^  typedef RT value_type;$/;"	t	struct:qmcplusplus::CubicSplineSingle
value_type	MolecularOrbitals/NGOBuilder.cpp	/^  typedef T value_type;$/;"	t	struct:qmcplusplus::PadeOrbital	file:
value_type	MolecularOrbitals/NGOBuilder.h	/^  typedef real_type                    value_type;$/;"	t	struct:qmcplusplus::NGOrbital
value_type	SphericalBasisSet.h	/^  typedef typename ROT::value_type                             value_type;$/;"	t	struct:qmcplusplus::SphericalBasisSet
value_type	SphericalOrbitalSet.h	/^  typedef typename ROT::value_type                             value_type;$/;"	t	struct:qmcplusplus::SphericalOrbitalSet
variable_map_type	Fermion/Backflow_ee_kSpace.h	/^  typedef optimize::VariableSet::variable_map_type variable_map_type;$/;"	t	class:qmcplusplus::Backflow_ee_kSpace
variable_map_type	OptimizableSPOSet.h	/^  typedef optimize::VariableSet::variable_map_type variable_map_type;$/;"	t	class:qmcplusplus::OptimizableSPOSet
variable_map_type	OrbitalSetTraits.h	/^typedef optimize::VariableSet::variable_map_type variable_map_type;$/;"	t	namespace:qmcplusplus
variable_type	Jastrow/WMFunctor.h	/^  typedef TinyVector<real_type,2>  variable_type;$/;"	t	struct:qmcplusplus::WMFunctorSet
variances	TrialWaveFunction.h	/^  std::vector<RealType> variances;$/;"	m	struct:qmcplusplus::CoefficientHolder
version	PlaneWave/PWParameterSet.h	/^  TinyVector<int,2> version;$/;"	m	struct:qmcplusplus::PWParameterSet
volume	Jastrow/LRBreakupUtilities.h	/^  T volume;$/;"	m	struct:qmcplusplus::RPABFeeBreakup
walker	OrbitalBase.h	/^  int walker;$/;"	m	struct:qmcplusplus::NLjob
wfs_tag	OrbitalBuilderBase.cpp	/^std::string OrbitalBuilderBase::wfs_tag="wavefunction";$/;"	m	class:qmcplusplus::OrbitalBuilderBase	file:
wfs_tag	OrbitalBuilderBase.h	/^  static std::string wfs_tag;$/;"	m	class:qmcplusplus::OrbitalBuilderBase
widthOpt	IonOrbitalBuilder.h	/^  Vector<RealType> widthOpt;$/;"	m	class:qmcplusplus::IonOrbitalBuilder
workG	Fermion/DiracDeterminantBase.h	/^  GradVector_t workG;$/;"	m	class:qmcplusplus::DiracDeterminantBase
workV1	AGPDeterminant.h	/^  ValueVector_t workV1, workV2;$/;"	m	class:qmcplusplus::AGPDeterminant
workV1	Experimental/DiracDeterminant.h	/^  Vector<ValueType> workV1, workV2;$/;"	m	class:qmcplusplus::DiracDeterminant
workV1	Fermion/DiracDeterminantBase.h	/^  ValueVector_t workV1, workV2;$/;"	m	class:qmcplusplus::DiracDeterminantBase
workV1	Fermion/MultiDiracDeterminantBase.h	/^  ValueVector_t workV1, workV2;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
workV1	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueVector_t workV1, workV2;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
workV2	AGPDeterminant.h	/^  ValueVector_t workV1, workV2;$/;"	m	class:qmcplusplus::AGPDeterminant
workV2	Experimental/DiracDeterminant.h	/^  Vector<ValueType> workV1, workV2;$/;"	m	class:qmcplusplus::DiracDeterminant
workV2	Fermion/DiracDeterminantBase.h	/^  ValueVector_t workV1, workV2;$/;"	m	class:qmcplusplus::DiracDeterminantBase
workV2	Fermion/MultiDiracDeterminantBase.h	/^  ValueVector_t workV1, workV2;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
workV2	Fermion/MultiDiracDeterminantWithBackflow.h	/^  ValueVector_t workV1, workV2;$/;"	m	class:qmcplusplus::MultiDiracDeterminantBase
workingSet	Fermion/SPOSetProxyForMSD.h	/^  int workingSet;$/;"	m	struct:qmcplusplus::SPOSetProxyForMSD
write	SplineMixedAdoptor.h	/^  static bool write(SMA* bspline, hdf_archive& h5f)$/;"	f	struct:qmcplusplus::hdf_dual_grid
writeParameters	PlaneWave/PWParameterSet.cpp	/^void PWParameterSet::writeParameters(hid_t gid)$/;"	f	class:qmcplusplus::PWParameterSet
write_basis_builders	BasisSetFactory.cpp	/^  void write_basis_builders(const std::string& pad)$/;"	f	namespace:qmcplusplus
write_node	Fermion/ci_node.h	/^  void write_node(std::ostream& os)$/;"	f	struct:qmcplusplus::ci_node
write_node	Fermion/excitation_node.h	/^  inline void write_node(std::ostream& os, int level, int& count, std::vector<excitation_node>& ci)$/;"	f	struct:qmcplusplus::excitation_node
write_splines	SplineC2XAdoptor.h	/^  bool write_splines(hdf_archive& h5f)$/;"	f	struct:qmcplusplus::SplineC2CPackedAdoptor
write_splines	SplineC2XAdoptor.h	/^  bool write_splines(hdf_archive& h5f)$/;"	f	struct:qmcplusplus::SplineC2RPackedAdoptor
write_splines	SplineMixedAdoptor.h	/^  bool write_splines(hdf_archive& h5f)$/;"	f	struct:qmcplusplus::SplineMixedAdoptor
write_splines	SplineMixedAdoptor.h	/^  bool write_splines(hdf_archive& h5f)$/;"	f	struct:qmcplusplus::SplineOpenAdoptor
write_splines	SplineR2RAdoptor.h	/^  bool write_splines(hdf_archive& h5f)$/;"	f	struct:qmcplusplus::SplineR2RAdoptor
xGrid	legacy/EinsplineWrapper.h	/^  NUgrid *xGrid, *yGrid, *zGrid;$/;"	m	class:qmcplusplus::NUBsplineClass_2d_d
xGrid	legacy/EinsplineWrapper.h	/^  NUgrid *xGrid, *yGrid, *zGrid;$/;"	m	class:qmcplusplus::NUBsplineClass_2d_z
x_vars	FDLRWfn.h	/^    opt_variables_type x_vars;$/;"	m	class:qmcplusplus::FDLRWfn
x_vars_driver	FDLRWfn.h	/^    opt_variables_type x_vars_driver;$/;"	m	class:qmcplusplus::FDLRWfn
y	Experimental/PlaneWaveBasis.h	/^  inline const ValueType* __restrict__ y(int i)$/;"	f	class:qmcplusplus::PlaneWaveBasis
yGrid	legacy/EinsplineWrapper.h	/^  NUgrid *xGrid, *yGrid, *zGrid;$/;"	m	class:qmcplusplus::NUBsplineClass_2d_d
yGrid	legacy/EinsplineWrapper.h	/^  NUgrid *xGrid, *yGrid, *zGrid;$/;"	m	class:qmcplusplus::NUBsplineClass_2d_z
z0	Experimental/QDwf.h	/^  double z0;\/\/var$/;"	m	class:QDwf
zB	Experimental/QDwf.h	/^  double zB;$/;"	m	class:QDwf
zGrid	legacy/EinsplineWrapper.h	/^  NUgrid *xGrid, *yGrid, *zGrid;$/;"	m	class:qmcplusplus::NUBsplineClass_2d_d
zGrid	legacy/EinsplineWrapper.h	/^  NUgrid *xGrid, *yGrid, *zGrid;$/;"	m	class:qmcplusplus::NUBsplineClass_2d_z
zprime	Experimental/QDwf.h	/^  inline double zprime(double z)$/;"	f	class:QDwf
~AGPDeterminant	AGPDeterminant.cpp	/^AGPDeterminant::~AGPDeterminant() {}$/;"	f	class:qmcplusplus::AGPDeterminant
~AnyConstraints	Jastrow/Experimental/AnyConstraints.cpp	/^AnyConstraints::~AnyConstraints()$/;"	f	class:qmcplusplus::AnyConstraints
~BackflowBuilder	Fermion/BackflowBuilder.cpp	/^BackflowBuilder::~BackflowBuilder()$/;"	f	class:qmcplusplus::BackflowBuilder
~BackflowFunctionBase	Fermion/BackflowFunctionBase.h	/^  virtual ~BackflowFunctionBase() {};$/;"	f	class:qmcplusplus::BackflowFunctionBase
~BackflowTransformation	Fermion/BackflowTransformation.h	/^  ~BackflowTransformation() {};$/;"	f	class:qmcplusplus::BackflowTransformation
~Backflow_eI	Fermion/Backflow_eI.h	/^  ~Backflow_eI() {};$/;"	f	class:qmcplusplus::Backflow_eI
~Backflow_eI_spin	Fermion/Backflow_eI_spin.h	/^  ~Backflow_eI_spin()$/;"	f	class:qmcplusplus::Backflow_eI_spin
~Backflow_ee	Fermion/Backflow_ee.h	/^  ~Backflow_ee() {};$/;"	f	class:qmcplusplus::Backflow_ee
~Backflow_ee_kSpace	Fermion/Backflow_ee_kSpace.h	/^  ~Backflow_ee_kSpace() {};$/;"	f	class:qmcplusplus::Backflow_ee_kSpace
~BasisSetBase	BasisSetBase.h	/^  virtual ~BasisSetBase() { }$/;"	f	struct:qmcplusplus::BasisSetBase
~BasisSetBuilder	BasisSetBase.h	/^  virtual ~BasisSetBuilder() {}$/;"	f	struct:qmcplusplus::BasisSetBuilder
~BasisSetFactory	BasisSetFactory.cpp	/^BasisSetFactory::~BasisSetFactory()$/;"	f	class:qmcplusplus::BasisSetFactory
~Bspline3DSet	Experimental/Bspline3DSetTemp.h	/^  ~Bspline3DSet() { }$/;"	f	class:qmcplusplus::Bspline3DSet
~Bspline3DSetBase	Experimental/Bspline3DSetBase.cpp	/^Bspline3DSetBase::~Bspline3DSetBase()$/;"	f	class:qmcplusplus::Bspline3DSetBase
~Bspline3DSet_Gen	Experimental/Bspline3DSet.h	/^  ~Bspline3DSet_Gen() { }$/;"	f	struct:qmcplusplus::Bspline3DSet_Gen
~Bspline3DSet_Gen_Trunc	Experimental/Bspline3DSet.h	/^  ~Bspline3DSet_Gen_Trunc() { }$/;"	f	struct:qmcplusplus::Bspline3DSet_Gen_Trunc
~Bspline3DSet_MLW	Experimental/Bspline3DSetTrunc.cpp	/^Bspline3DSet_MLW::~Bspline3DSet_MLW()$/;"	f	class:qmcplusplus::Bspline3DSet_MLW
~Bspline3DSet_Ortho	Experimental/Bspline3DSet.h	/^  ~Bspline3DSet_Ortho() { }$/;"	f	struct:qmcplusplus::Bspline3DSet_Ortho
~Bspline3DSet_Ortho_Trunc	Experimental/Bspline3DSet.h	/^  ~Bspline3DSet_Ortho_Trunc() { }$/;"	f	struct:qmcplusplus::Bspline3DSet_Ortho_Trunc
~Bspline3DSet_Twist	Experimental/Bspline3DSet.h	/^  ~Bspline3DSet_Twist() { }$/;"	f	struct:qmcplusplus::Bspline3DSet_Twist
~BsplineReaderBase	BsplineReaderBase.cpp	/^  BsplineReaderBase::~BsplineReaderBase() $/;"	f	class:qmcplusplus::BsplineReaderBase
~BsplineReaderBase	legacy/SplineAdoptorReader.h	/^  virtual ~BsplineReaderBase() {}$/;"	f	struct:qmcplusplus::BsplineReaderBase
~CompositeSPOSet	CompositeSPOSet.cpp	/^  CompositeSPOSet::~CompositeSPOSet()$/;"	f	class:qmcplusplus::CompositeSPOSet
~CuspCorr	Experimental/CuspCorr.h	/^  ~CuspCorr() {}$/;"	f	class:qmcplusplus::CuspCorr
~DiffOneBodyJastrowOrbital	Jastrow/DiffOneBodyJastrowOrbital.h	/^  ~DiffOneBodyJastrowOrbital()$/;"	f	class:qmcplusplus::DiffOneBodyJastrowOrbital
~DiffOneBodySpinJastrowOrbital	Jastrow/DiffOneBodySpinJastrowOrbital.h	/^  ~DiffOneBodySpinJastrowOrbital()$/;"	f	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
~DiffOrbitalBase	DiffOrbitalBase.h	/^  virtual ~DiffOrbitalBase() { }$/;"	f	struct:qmcplusplus::DiffOrbitalBase
~DiffTwoBodyJastrowOrbital	Jastrow/DiffTwoBodyJastrowOrbital.h	/^  ~DiffTwoBodyJastrowOrbital()$/;"	f	class:qmcplusplus::DiffTwoBodyJastrowOrbital
~DiracDeterminant	Experimental/DiracDeterminant.h	/^  ~DiracDeterminant() {}$/;"	f	class:qmcplusplus::DiracDeterminant
~DiracDeterminantBase	Fermion/DiracDeterminantBase.cpp	/^DiracDeterminantBase::~DiracDeterminantBase() {}$/;"	f	class:qmcplusplus::DiracDeterminantBase
~DiracDeterminantIterative	Fermion/DiracDeterminantIterative.cpp	/^DiracDeterminantIterative::~DiracDeterminantIterative() {}$/;"	f	class:qmcplusplus::DiracDeterminantIterative
~DiracDeterminantTruncation	Fermion/DiracDeterminantTruncation.cpp	/^DiracDeterminantTruncation::~DiracDeterminantTruncation() {}$/;"	f	class:qmcplusplus::DiracDeterminantTruncation
~DiracDeterminantWithBackflow	Fermion/DiracDeterminantWithBackflow.cpp	/^DiracDeterminantWithBackflow::~DiracDeterminantWithBackflow() {}$/;"	f	class:qmcplusplus::DiracDeterminantWithBackflow
~DistributedSPOSet	DistributedSPOSet.cpp	/^DistributedSPOSet::~DistributedSPOSet()$/;"	f	class:qmcplusplus::DistributedSPOSet
~EinsplineSetBuilder	EinsplineSetBuilderCommon.cpp	/^EinsplineSetBuilder::~EinsplineSetBuilder()$/;"	f	class:qmcplusplus::EinsplineSetBuilder
~EinsplineSetBuilder	Experimental/EinsplineSetBuilder.cpp	/^EinsplineSetBuilder::~EinsplineSetBuilder()$/;"	f	class:qmcplusplus::EinsplineSetBuilder
~EnergyOrder	SPOInfo.h	/^      ~EnergyOrder() { };$/;"	f	struct:qmcplusplus::spoinfo::EnergyOrder
~GaussianFunctor	Fermion/GaussianFunctor.h	/^  ~GaussianFunctor() {};$/;"	f	class:qmcplusplus::GaussianFunctor
~HEGGrid	ElectronGas/HEGGrid.h	/^  ~HEGGrid()$/;"	f	struct:qmcplusplus::HEGGrid
~IonOrbital	IonOrbital.cpp	/^IonOrbital::~IonOrbital() {  }$/;"	f	class:qmcplusplus::IonOrbital
~JastrowBasisBuilder	Jastrow/JastrowBasisBuilder.cpp	/^JastrowBasisBuilder::~JastrowBasisBuilder()$/;"	f	class:qmcplusplus::JastrowBasisBuilder
~LCOrbitalSet	LCOrbitalSet.h	/^  ~LCOrbitalSet() {}$/;"	f	class:qmcplusplus::LCOrbitalSet
~LCOrbitalSetOpt	LCOrbitalSetOpt.h	/^    ~LCOrbitalSetOpt() {$/;"	f	class:qmcplusplus::LCOrbitalSetOpt
~LCOrbitalSetWithCorrection	Experimental/LCOrbitalSetWithCorrection.h	/^  ~LCOrbitalSetWithCorrection() {}$/;"	f	class:qmcplusplus::LCOrbitalSetWithCorrection
~LCOrbitals	LCOrbitals.h	/^  inline ~LCOrbitals()$/;"	f	class:qmcplusplus::LCOrbitals
~MixedSPOSet	MixedSPOSet.h	/^  ~MixedSPOSet() { }$/;"	f	class:qmcplusplus::MixedSPOSet
~MuffinTinClass	MuffinTin.h	/^  ~MuffinTinClass()$/;"	f	class:qmcplusplus::MuffinTinClass
~MultiDiracDeterminantBase	Fermion/MultiDiracDeterminantBase.cpp	/^MultiDiracDeterminantBase::~MultiDiracDeterminantBase() {}$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
~MultiDiracDeterminantBase	Fermion/MultiDiracDeterminantBase_help.cpp	/^MultiDiracDeterminantBase::~MultiDiracDeterminantBase() {}$/;"	f	class:MultiDiracDeterminantBase
~MultiDiracDeterminantBase	Fermion/MultiDiracDeterminantWithBackflow.cpp	/^MultiDiracDeterminantBase::~MultiDiracDeterminantBase() {}$/;"	f	class:qmcplusplus::MultiDiracDeterminantBase
~MultiGridBsplineSetReader	MultiGridBsplineSetReader.h	/^  ~MultiGridBsplineSetReader()$/;"	f	struct:qmcplusplus::MultiGridBsplineSetReader
~MultiSlaterDeterminant	Fermion/MultiSlaterDeterminant.cpp	/^MultiSlaterDeterminant::~MultiSlaterDeterminant() { }$/;"	f	class:qmcplusplus::MultiSlaterDeterminant
~MultiSlaterDeterminantFast	Fermion/MultiSlaterDeterminantFast.cpp	/^MultiSlaterDeterminantFast::~MultiSlaterDeterminantFast() { }$/;"	f	class:qmcplusplus::MultiSlaterDeterminantFast
~MultiSlaterDeterminantWithBackflow	Fermion/MultiSlaterDeterminantWithBackflow.cpp	/^MultiSlaterDeterminantWithBackflow::~MultiSlaterDeterminantWithBackflow() { }$/;"	f	class:qmcplusplus::MultiSlaterDeterminantWithBackflow
~NGOBuilder	MolecularOrbitals/NGOBuilder.cpp	/^NGOBuilder::~NGOBuilder()$/;"	f	class:qmcplusplus::NGOBuilder
~OneBodyJastrowOrbital	Jastrow/OneBodyJastrowOrbital.h	/^  ~OneBodyJastrowOrbital() { }$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
~OneBodySpinJastrowOrbital	Jastrow/OneBodySpinJastrowOrbital.h	/^  ~OneBodySpinJastrowOrbital()$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
~OrbitalBase	OrbitalBase.h	/^  virtual ~OrbitalBase() { }$/;"	f	struct:qmcplusplus::OrbitalBase
~OrbitalBuilderBase	OrbitalBuilderBase.cpp	/^OrbitalBuilderBase::~OrbitalBuilderBase()$/;"	f	class:qmcplusplus::OrbitalBuilderBase
~OrbitalConstraintsBase	OrbitalConstraintsBase.h	/^  virtual ~OrbitalConstraintsBase() {}$/;"	f	struct:qmcplusplus::OrbitalConstraintsBase
~PWBasis	PlaneWave/PWBasis.h	/^  ~PWBasis()$/;"	f	class:qmcplusplus::PWBasis
~PWOrbitalBuilder	PlaneWave/PWOrbitalBuilder.cpp	/^PWOrbitalBuilder::~PWOrbitalBuilder()$/;"	f	class:qmcplusplus::PWOrbitalBuilder
~PWOrbitalSet	PlaneWave/PWOrbitalSet.cpp	/^PWOrbitalSet::~PWOrbitalSet()$/;"	f	class:qmcplusplus::PWOrbitalSet
~PWRealOrbitalSet	PlaneWave/PWRealOrbitalSet.cpp	/^PWRealOrbitalSet::~PWRealOrbitalSet()$/;"	f	class:qmcplusplus::PWRealOrbitalSet
~PadeConstraints	Jastrow/Experimental/PadeConstraints.cpp	/^PadeConstraints::~PadeConstraints()$/;"	f	class:qmcplusplus::PadeConstraints
~PadeOrbital	MolecularOrbitals/NGOBuilder.cpp	/^  ~PadeOrbital() { }$/;"	f	struct:qmcplusplus::PadeOrbital
~PlaneWaveOrbitalBuilder	Experimental/PlaneWaveOrbitalBuilder.cpp	/^PlaneWaveOrbitalBuilder::~PlaneWaveOrbitalBuilder()$/;"	f	class:qmcplusplus::PlaneWaveOrbitalBuilder
~PlaneWaveOrbitalSet	Experimental/PlaneWaveOrbitalSet.h	/^  ~PlaneWaveOrbitalSet()$/;"	f	class:qmcplusplus::PlaneWaveOrbitalSet
~PolarizedJastrow	Jastrow/PolarizedJastrow.h	/^  ~PolarizedJastrow()$/;"	f	class:qmcplusplus::PolarizedJastrow
~PolyConstraints	Jastrow/PolyConstraints.cpp	/^PolyConstraints::~PolyConstraints()$/;"	f	class:qmcplusplus::PolyConstraints
~ProductOrbital	ProductOrbital.cpp	/^ProductOrbital::~ProductOrbital()$/;"	f	class:qmcplusplus::ProductOrbital
~RNDiracDeterminantBase	Fermion/RNDiracDeterminantBase.cpp	/^RNDiracDeterminantBase::~RNDiracDeterminantBase() {}$/;"	f	class:qmcplusplus::RNDiracDeterminantBase
~RNDiracDeterminantBaseAlternate	Fermion/RNDiracDeterminantBaseAlternate.cpp	/^RNDiracDeterminantBaseAlternate::~RNDiracDeterminantBaseAlternate() {}$/;"	f	class:qmcplusplus::RNDiracDeterminantBaseAlternate
~RPAJastrow	Jastrow/RPAJastrow.cpp	/^RPAJastrow::~RPAJastrow()$/;"	f	class:qmcplusplus::RPAJastrow
~SHOSet	HarmonicOscillator/SHOSet.cpp	/^  SHOSet::~SHOSet()$/;"	f	class:qmcplusplus::SHOSet
~SHOSetBuilder	HarmonicOscillator/SHOSetBuilder.cpp	/^  SHOSetBuilder::~SHOSetBuilder()$/;"	f	class:qmcplusplus::SHOSetBuilder
~SHOState	HarmonicOscillator/SHOSet.h	/^    ~SHOState() { }$/;"	f	struct:qmcplusplus::SHOState
~SPOInfo	SPOInfo.h	/^    virtual ~SPOInfo() { }$/;"	f	struct:qmcplusplus::SPOInfo
~SPOSetBase	SPOSetBase.h	/^  virtual ~SPOSetBase() {}$/;"	f	class:qmcplusplus::SPOSetBase
~SPOSetInfo	SPOSetInfo.cpp	/^  SPOSetInfo::~SPOSetInfo() $/;"	f	class:qmcplusplus::SPOSetInfo
~SPOSetInfoSimple	SPOSetInfo.h	/^    ~SPOSetInfoSimple() $/;"	f	struct:qmcplusplus::SPOSetInfoSimple
~SPOSetInputInfo	SPOSetInputInfo.h	/^    ~SPOSetInputInfo() { }$/;"	f	struct:qmcplusplus::SPOSetInputInfo
~ScaledPadeConstraints	Jastrow/Experimental/PadeConstraints.cpp	/^ScaledPadeConstraints::~ScaledPadeConstraints()$/;"	f	class:qmcplusplus::ScaledPadeConstraints
~SlaterDet	Fermion/SlaterDet.cpp	/^SlaterDet::~SlaterDet()$/;"	f	class:qmcplusplus::SlaterDet
~SlaterDetBuilder	Fermion/SlaterDetBuilder.cpp	/^SlaterDetBuilder::~SlaterDetBuilder()$/;"	f	class:qmcplusplus::SlaterDetBuilder
~SlaterDetOpt	Fermion/SlaterDetOpt.cpp	/^SlaterDetOpt::~SlaterDetOpt() { }$/;"	f	class:qmcplusplus::SlaterDetOpt
~SlaterDetWithBackflow	Fermion/SlaterDetWithBackflow.cpp	/^SlaterDetWithBackflow::~SlaterDetWithBackflow()$/;"	f	class:qmcplusplus::SlaterDetWithBackflow
~SlaterDeterminant	Experimental/SlaterDeterminant.h	/^  ~SlaterDeterminant() { }$/;"	f	class:qmcplusplus::SlaterDeterminant
~SphericalBasisSet	SphericalBasisSet.h	/^  ~SphericalBasisSet() { }$/;"	f	struct:qmcplusplus::SphericalBasisSet
~SphericalOrbitalSet	SphericalOrbitalSet.h	/^  ~SphericalOrbitalSet() { }$/;"	f	struct:qmcplusplus::SphericalOrbitalSet
~SplineAdoptorReader	SplineAdoptorReaderP.h	/^  ~SplineAdoptorReader()$/;"	f	struct:qmcplusplus::SplineAdoptorReader
~SplineC2RAdoptorPacked	Experimental/EinsplineAdoptorPacked.h	/^  virtual ~SplineC2RAdoptorPacked() {}$/;"	f	struct:qmcplusplus::SplineC2RAdoptorPacked
~SplineC2RPackedAdoptor	SplineC2XAdoptor.h	/^  virtual ~SplineC2RPackedAdoptor() {}$/;"	f	struct:qmcplusplus::SplineC2RPackedAdoptor
~SplineGridHandler	Spline3D/SplineGridHandler.h	/^  ~SplineGridHandler() {}$/;"	f	struct:qmcplusplus::SplineGridHandler
~SplineMixedAdoptorReader	SplineMixedAdoptorReaderP.h	/^  ~SplineMixedAdoptorReader()$/;"	f	struct:qmcplusplus::SplineMixedAdoptorReader
~ThreeBodyBlockSparse	Jastrow/ThreeBodyBlockSparse.cpp	/^ThreeBodyBlockSparse::~ThreeBodyBlockSparse()$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
~ThreeBodyGeminal	Jastrow/ThreeBodyGeminal.cpp	/^ThreeBodyGeminal::~ThreeBodyGeminal()$/;"	f	class:qmcplusplus::ThreeBodyGeminal
~ThreeBodyJastrowOrbital	Jastrow/ThreeBodyJastrowOrbital.h	/^  ~ThreeBodyJastrowOrbital() { }$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
~ThreeBodyPade	Jastrow/ThreeBodyPade.h	/^  ~ThreeBodyPade() { }$/;"	f	class:qmcplusplus::ThreeBodyPade
~TrialWaveFunction	TrialWaveFunction.cpp	/^TrialWaveFunction::~TrialWaveFunction()$/;"	f	class:qmcplusplus::TrialWaveFunction
~TricubicBsplineSPOSet	Experimental/TricubicBsplineSPOSet.h	/^  ~TricubicBsplineSPOSet() { }$/;"	f	class:qmcplusplus::TricubicBsplineSPOSet
~TricubicBsplineSPOSet	Experimental/TricubicBsplineSPOSet.h	/^  ~TricubicBsplineSPOSet()$/;"	f	class:qmcplusplus::TricubicBsplineSPOSet
~TricubicBsplineSetBuilder	Experimental/TricubicBsplineSetBuilder.cpp	/^TricubicBsplineSetBuilder::~TricubicBsplineSetBuilder()$/;"	f	class:qmcplusplus::TricubicBsplineSetBuilder
~TricubicBsplineTwistSet	Experimental/TricubicBsplineTwistSet.h	/^  ~TricubicBsplineTwistSet()$/;"	f	class:qmcplusplus::TricubicBsplineTwistSet
~TwoBodyJastrow	Experimental/TwoBodyJastrowFunction.Shared.h	/^  ~TwoBodyJastrow()$/;"	f	class:qmcplusplus::TwoBodyJastrow
~TwoBodyJastrow	Experimental/TwoBodyJastrowFunction.h	/^  ~TwoBodyJastrow()$/;"	f	class:qmcplusplus::TwoBodyJastrow
~TwoBodyJastrowOrbital	Jastrow/TwoBodyJastrowOrbital.h	/^  ~TwoBodyJastrowOrbital() { }$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
~WMConstraints	Jastrow/Experimental/WMConstraints.cpp	/^WMConstraints::~WMConstraints()$/;"	f	class:qmcplusplus::WMConstraints
~WaveFunctionFactory	WaveFunctionFactory.cpp	/^WaveFunctionFactory::~WaveFunctionFactory()$/;"	f	class:qmcplusplus::WaveFunctionFactory
~ci_builder	Fermion/ci_builder.h	/^  ~ci_builder()$/;"	f	struct:qmcplusplus::ci_builder
~ci_configuration	Fermion/ci_configuration.h	/^  ~ci_configuration() {}$/;"	f	struct:qmcplusplus::ci_configuration
~ci_configuration2	Fermion/ci_configuration2.h	/^  ~ci_configuration2() {}$/;"	f	struct:qmcplusplus::ci_configuration2
~ci_node	Fermion/ci_node.h	/^  ~ci_node()$/;"	f	struct:qmcplusplus::ci_node
~eeI_JastrowOrbital	Jastrow/eeI_JastrowOrbital.h	/^  ~eeI_JastrowOrbital() { }$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
~twist_handler	Spline3D/twist_handler.hpp	/^      virtual ~twist_handler() { }$/;"	f	struct:qmcplusplus::twist_handler
