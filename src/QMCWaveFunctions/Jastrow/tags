!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	BsplineFunctor.cpp	/^const double  BsplineFunctor<double>::A[16] =$/;"	m	class:qmcplusplus::BsplineFunctor	file:
A	BsplineFunctor.h	/^  const TinyVector<real_type,16> A, dA, d2A, d3A;$/;"	m	struct:qmcplusplus::BsplineFunctor
A	BsplineFunctor3D.h	/^  const TinyVector<real_type,16> A, dA, d2A, d3A;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
A	CompositeFunctor.h	/^  real_type A;$/;"	m	struct:qmcplusplus::TruncatedPadeFunctor
A	DerivPadeFunctors.h	/^  real_type A;$/;"	m	struct:qmcplusplus::D2PadeDB2Functor
A	DerivPadeFunctors.h	/^  real_type A;$/;"	m	struct:qmcplusplus::DPadeDBFunctor
A	GaussianFunctor.h	/^  real_type A, B, C, RC;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
A	GaussianFunctor.h	/^  real_type A;$/;"	m	struct:qmcplusplus::GaussianFunctor
A	McMillanJ2Functor.h	/^  real_type A;$/;"	m	struct:qmcplusplus::McMillanJ2Functor
A	McMillanJ2Functor.h	/^  real_type A;$/;"	m	struct:qmcplusplus::ModMcMillanJ2Functor
A	McMillanJ2Functor.h	/^  real_type A;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
A	McMillanJ2GFunctor.h	/^  real_type A, B, R0, c1, c2;$/;"	m	struct:qmcplusplus::McMillanJ2GFunctor
A	ModPadeFunctor.h	/^  real_type A;$/;"	m	struct:qmcplusplus::ModPadeFunctor
A	OpenGaussianSlaterFunctor.h	/^  real_type A;$/;"	m	struct:qmcplusplus::OpenGaussianSlaterFunctor
A	PadeFunctors.h	/^  real_type A, B, C, C2;$/;"	m	struct:qmcplusplus::Pade2ndOrderFunctor
A	PadeFunctors.h	/^  real_type A, B, C, D;$/;"	m	struct:qmcplusplus::PadeTwo2ndOrderFunctor
A	PadeFunctors.h	/^  real_type A, B, C;$/;"	m	struct:qmcplusplus::ScaledPadeFunctor
A	PadeFunctors.h	/^  real_type A;$/;"	m	struct:qmcplusplus::PadeFunctor
A	RPAJastrowFunctor.h	/^  real_type A, B, AB, ABB;$/;"	m	struct:qmcplusplus::RPAJastrowFunctor
A12	DerivPadeFunctors.h	/^  real_type A12;$/;"	m	struct:qmcplusplus::D2PadeDB2Functor
A2	DerivPadeFunctors.h	/^  real_type A2;$/;"	m	struct:qmcplusplus::D2PadeDB2Functor
A2	DerivPadeFunctors.h	/^  real_type A2;$/;"	m	struct:qmcplusplus::DPadeDBFunctor
A6	DerivPadeFunctors.h	/^  real_type A6;$/;"	m	struct:qmcplusplus::D2PadeDB2Functor
AB	CompositeFunctor.h	/^  real_type AB;$/;"	m	struct:qmcplusplus::TruncatedPadeFunctor
AB	PadeFunctors.h	/^  real_type AB;$/;"	m	struct:qmcplusplus::PadeFunctor
AB	RPAJastrowFunctor.h	/^  real_type A, B, AB, ABB;$/;"	m	struct:qmcplusplus::RPAJastrowFunctor
ABB	RPAJastrowFunctor.h	/^  real_type A, B, AB, ABB;$/;"	m	struct:qmcplusplus::RPAJastrowFunctor
AnyConstraints	Experimental/AnyConstraints.cpp	/^AnyConstraints::AnyConstraints(ParticleSet& p, TrialWaveFunction& psi):$/;"	f	class:qmcplusplus::AnyConstraints
AnyConstraints	Experimental/AnyConstraints.h	/^struct AnyConstraints: public OrbitalConstraintsBase$/;"	s	namespace:qmcplusplus
AnyTimesRnFunctor	CompositeFunctor.h	/^  AnyTimesRnFunctor(OptimizableFunctorBase* infunc=0, int n=1):$/;"	f	struct:qmcplusplus::AnyTimesRnFunctor
AnyTimesRnFunctor	CompositeFunctor.h	/^struct AnyTimesRnFunctor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
AoverB	CompositeFunctor.h	/^  real_type AoverB;$/;"	m	struct:qmcplusplus::TruncatedPadeFunctor
AoverB	PadeFunctors.h	/^  real_type AoverB;$/;"	m	struct:qmcplusplus::PadeFunctor
B	ChebyshevFunctor.h	/^  T B, L;$/;"	m	struct:ChebyshevFunctor
B	CompositeFunctor.h	/^  real_type B;$/;"	m	struct:qmcplusplus::TruncatedPadeFunctor
B	DerivPadeFunctors.h	/^  real_type B;$/;"	m	struct:qmcplusplus::D2PadeDB2Functor
B	DerivPadeFunctors.h	/^  real_type B;$/;"	m	struct:qmcplusplus::DPadeDBFunctor
B	Experimental/PadeConstraints.h	/^  RealType B;$/;"	m	struct:qmcplusplus::PadeConstraints
B	Experimental/PadeConstraints.h	/^  RealType B;$/;"	m	struct:qmcplusplus::ScaledPadeConstraints
B	GaussianFunctor.h	/^  real_type A, B, C, RC;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
B	McMillanJ2Functor.h	/^  real_type B;$/;"	m	struct:qmcplusplus::McMillanJ2Functor
B	McMillanJ2Functor.h	/^  real_type B;$/;"	m	struct:qmcplusplus::ModMcMillanJ2Functor
B	McMillanJ2Functor.h	/^  real_type B;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
B	McMillanJ2GFunctor.h	/^  real_type A, B, R0, c1, c2;$/;"	m	struct:qmcplusplus::McMillanJ2GFunctor
B	ModPadeFunctor.h	/^  real_type B;$/;"	m	struct:qmcplusplus::ModPadeFunctor
B	OpenGaussianSlaterFunctor.h	/^  real_type B;$/;"	m	struct:qmcplusplus::OpenGaussianSlaterFunctor
B	PadeFunctors.h	/^  real_type A, B, C, C2;$/;"	m	struct:qmcplusplus::Pade2ndOrderFunctor
B	PadeFunctors.h	/^  real_type A, B, C, D;$/;"	m	struct:qmcplusplus::PadeTwo2ndOrderFunctor
B	PadeFunctors.h	/^  real_type A, B, C;$/;"	m	struct:qmcplusplus::ScaledPadeFunctor
B	PadeFunctors.h	/^  real_type B;$/;"	m	struct:qmcplusplus::PadeFunctor
B	RPAJastrowFunctor.h	/^  real_type A, B, AB, ABB;$/;"	m	struct:qmcplusplus::RPAJastrowFunctor
B0	DerivWMFunctor.h	/^  real_type B0;$/;"	m	struct:qmcplusplus::D2WMDB2Functor
B0	DerivWMFunctor.h	/^  real_type B0;$/;"	m	struct:qmcplusplus::DWMDBFunctor
B0	PadeFunctors.h	/^  real_type B0;$/;"	m	struct:qmcplusplus::PadeFunctor
B0	WMFunctor.h	/^  real_type B0;$/;"	m	struct:qmcplusplus::WMFunctor
B2	CompositeFunctor.h	/^  real_type B2;$/;"	m	struct:qmcplusplus::TruncatedPadeFunctor
B2	DerivPadeFunctors.h	/^  real_type B2;$/;"	m	struct:qmcplusplus::D2PadeDB2Functor
B2	DerivPadeFunctors.h	/^  real_type B2;$/;"	m	struct:qmcplusplus::DPadeDBFunctor
B2	PadeFunctors.h	/^  real_type B2;$/;"	m	struct:qmcplusplus::PadeFunctor
B2	PadeFunctors.h	/^  real_type OneOverC, B2;$/;"	m	struct:qmcplusplus::ScaledPadeFunctor
BGContainerType	Experimental/AnyConstraints.h	/^  typedef std::map<std::string,BasisGroupType*> BGContainerType;$/;"	t	struct:qmcplusplus::AnyConstraints
BGContainerType	PolyConstraints.h	/^  typedef std::map<std::string,BasisGroupType*> BGContainerType;$/;"	t	struct:qmcplusplus::PolyConstraints
BGContainerType	WMJastrowBuilder.h	/^  typedef std::map<std::string,BasisGroupType*> BGContainerType;$/;"	t	class:qmcplusplus::WMJastrowBuilder
BSPLINE_JASTROW_CUDA_H	BsplineJastrowCuda.h	15;"	d
BSPLINE_JASTROW_CUDA_PBC_H	BsplineJastrowCudaPBC.h	16;"	d
BasisGroupType	Experimental/AnyConstraints.h	/^    BasisGroupType():In_(0),Deriv_(0),Out_(0),NumGridPoints(81),Rcut(8.0),Cusp(0.0) {}$/;"	f	struct:qmcplusplus::AnyConstraints::BasisGroupType
BasisGroupType	Experimental/AnyConstraints.h	/^  struct BasisGroupType$/;"	s	struct:qmcplusplus::AnyConstraints
BasisGroupType	PolyConstraints.h	/^  typedef PolyFunctor<RealType> BasisGroupType;$/;"	t	struct:qmcplusplus::PolyConstraints
BasisGroupType	WMJastrowBuilder.h	/^    BasisGroupType():In_(0),Deriv_(0),Out_(0),NumGridPoints(81),Rcut(8.0),Cusp(0.0) {}$/;"	f	struct:qmcplusplus::WMJastrowBuilder::BasisGroupType
BasisGroupType	WMJastrowBuilder.h	/^  struct BasisGroupType$/;"	s	class:qmcplusplus::WMJastrowBuilder
BasisGroups	Experimental/AnyConstraints.h	/^  BGContainerType BasisGroups;$/;"	m	struct:qmcplusplus::AnyConstraints
BasisGroups	PolyConstraints.h	/^  BGContainerType BasisGroups;$/;"	m	struct:qmcplusplus::PolyConstraints
BasisGroups	WMJastrowBuilder.h	/^  BGContainerType BasisGroups;$/;"	m	class:qmcplusplus::WMJastrowBuilder
BasisSetType	Experimental/WMConstraints.h	/^  typedef std::vector<BasisType*> BasisSetType;$/;"	t	struct:qmcplusplus::WMConstraints
BasisSetType	ThreeBodyBlockSparse.h	/^  typedef BasisSetBase<RealType> BasisSetType;$/;"	t	class:qmcplusplus::ThreeBodyBlockSparse
BasisSetType	ThreeBodyGeminal.h	/^  typedef BasisSetBase<RealType> BasisSetType;$/;"	t	class:qmcplusplus::ThreeBodyGeminal
BasisSize	ThreeBodyBlockSparse.h	/^  int BasisSize;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
BasisSize	ThreeBodyGeminal.h	/^  int BasisSize;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
BasisType	Experimental/WMConstraints.h	/^  typedef OptimizableFunctorBase<RealType>  BasisType;$/;"	t	struct:qmcplusplus::WMConstraints
BesselZero	BesselZeroFunctor.h	/^  BesselZero():R_B(1.0)$/;"	f	struct:qmcplusplus::BesselZero
BesselZero	BesselZeroFunctor.h	/^struct BesselZero: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
BlockID	ThreeBodyBlockSparse.h	/^  std::vector<IndexType> BlockID;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
BlockOffset	ThreeBodyBlockSparse.h	/^  std::vector<IndexType> BlockOffset;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
Blocks	ThreeBodyBlockSparse.h	/^  std::vector<IndexType> Blocks;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
BlocksPerGroup	ThreeBodyBlockSparse.h	/^  std::vector<IndexType> BlocksPerGroup;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
Bplus2	DerivWMFunctor.h	/^  real_type Bplus2;$/;"	m	struct:qmcplusplus::D2WMDB2Functor
Bplus2	DerivWMFunctor.h	/^  real_type Bplus2;$/;"	m	struct:qmcplusplus::DWMDBFunctor
Bplus3	DerivWMFunctor.h	/^  real_type Bplus3;$/;"	m	struct:qmcplusplus::D2WMDB2Functor
BsplineFunctor	BsplineFunctor.h	/^  BsplineFunctor(real_type cusp=0.0) :$/;"	f	struct:qmcplusplus::BsplineFunctor
BsplineFunctor	BsplineFunctor.h	/^struct BsplineFunctor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
BsplineFunctor3D	BsplineFunctor3D.h	/^  BsplineFunctor3D(real_type ecusp=0.0, real_type icusp=0.0) :$/;"	f	struct:qmcplusplus::BsplineFunctor3D
BsplineFunctor3D	BsplineFunctor3D.h	/^struct BsplineFunctor3D: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
BsplineInitializer	BsplineJastrowBuilder.cpp	/^struct BsplineInitializer$/;"	s	namespace:qmcplusplus	file:
BsplineJastrowBuilder	BsplineJastrowBuilder.h	/^  BsplineJastrowBuilder(ParticleSet& target, TrialWaveFunction& psi) :$/;"	f	struct:qmcplusplus::BsplineJastrowBuilder
BsplineJastrowBuilder	BsplineJastrowBuilder.h	/^  BsplineJastrowBuilder(ParticleSet& target, TrialWaveFunction& psi,$/;"	f	struct:qmcplusplus::BsplineJastrowBuilder
BsplineJastrowBuilder	BsplineJastrowBuilder.h	/^struct BsplineJastrowBuilder: public OrbitalBuilderBase$/;"	s	namespace:qmcplusplus
C	Experimental/PadeConstraints.h	/^  RealType C;$/;"	m	struct:qmcplusplus::ScaledPadeConstraints
C	GaussianFunctor.h	/^  real_type A, B, C, RC;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
C	GaussianFunctor.h	/^  real_type C;$/;"	m	struct:qmcplusplus::GaussianFunctor
C	LinearCombinationFunctor.h	/^  std::vector<real_type> C;$/;"	m	struct:LinearCombinationFunctor
C	OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> C;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
C	PadeFunctors.h	/^  real_type A, B, C, C2;$/;"	m	struct:qmcplusplus::Pade2ndOrderFunctor
C	PadeFunctors.h	/^  real_type A, B, C, D;$/;"	m	struct:qmcplusplus::PadeTwo2ndOrderFunctor
C	PadeFunctors.h	/^  real_type A, B, C;$/;"	m	struct:qmcplusplus::ScaledPadeFunctor
C	PolyFunctor.h	/^  std::vector<T> C;$/;"	m	struct:qmcplusplus::PolyFunctor
C	PolynomialFunctor3D.h	/^  const int C;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
C	ThreeBodyJastrowOrbital.h	/^  Array<RealType,3> C;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
C	ThreeBodyPade.h	/^  std::vector<Coeff> C;$/;"	m	class:qmcplusplus::ThreeBodyPade
C2	PadeFunctors.h	/^  real_type A, B, C, C2;$/;"	m	struct:qmcplusplus::Pade2ndOrderFunctor
CBSOBuilder	CBSOBuilder.cpp	/^CBSOBuilder::CBSOBuilder(xmlNodePtr cur):$/;"	f	class:qmcplusplus::CBSOBuilder
CBSOBuilder	CBSOBuilder.h	/^class CBSOBuilder: public QMCTraits$/;"	c	namespace:qmcplusplus
CRYSTAL	kSpaceJastrow.h	/^  typedef enum { CRYSTAL, ISOTROPIC, NOSYMM } SymmetryType;$/;"	e	enum:qmcplusplus::kSpaceJastrow::__anon1
CUDA_SPLINE_H	CudaSpline.h	16;"	d
C_0	BesselZeroFunctor.h	/^  real_type C_0,C_0inv;$/;"	m	struct:qmcplusplus::BesselZero
C_0inv	BesselZeroFunctor.h	/^  real_type C_0,C_0inv;$/;"	m	struct:qmcplusplus::BesselZero
CanNotChange	LinearCombinationFunctor.h	/^  std::vector<bool> CanNotChange;$/;"	m	struct:LinearCombinationFunctor
CellVolume	LRTwoBodyJastrow.h	/^  RealType CellVolume;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
CellVolume	kSpaceJastrow.h	/^  RealType CellVolume, NormConstant;$/;"	m	class:qmcplusplus::kSpaceJastrow
CenterFirst	OneBodyJastrowOrbitalBspline.h	/^  std::vector<int> CenterFirst, CenterLast;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
CenterLast	OneBodyJastrowOrbitalBspline.h	/^  std::vector<int> CenterFirst, CenterLast;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
CenterRef	DiffOneBodyJastrowOrbital.h	/^  const ParticleSet& CenterRef;$/;"	m	class:qmcplusplus::DiffOneBodyJastrowOrbital
CenterRef	DiffOneBodySpinJastrowOrbital.h	/^  const ParticleSet& CenterRef;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
CenterRef	OneBodyJastrowOrbital.h	/^  const ParticleSet& CenterRef;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbital
CenterRef	OneBodySpinJastrowOrbital.h	/^  const ParticleSet& CenterRef;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
CenterRef	ThreeBodyBlockSparse.h	/^  const ParticleSet& CenterRef;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
CenterRef	ThreeBodyGeminal.h	/^  const ParticleSet& CenterRef;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
CenterRef	ThreeBodyJastrowOrbital.h	/^  const ParticleSet& CenterRef;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
CenteredOrbitalType	CBSOBuilder.h	/^  typedef SphericalBasisSet<RadialOrbitalType>         CenteredOrbitalType;$/;"	t	class:qmcplusplus::CBSOBuilder
ChebyshevFunctor	ChebyshevFunctor.h	/^  ChebyshevFunctor() { }$/;"	f	struct:ChebyshevFunctor
ChebyshevFunctor	ChebyshevFunctor.h	/^struct ChebyshevFunctor$/;"	s
ChiesaKEcorrection	TwoBodyJastrowOrbital.h	/^  RealType ChiesaKEcorrection()$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
ChiesaKEcorrection	eeI_JastrowOrbital.h	/^  RealType ChiesaKEcorrection()$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
Coeff	ModPadeFunctor.h	/^  real_type Coeff;$/;"	m	struct:qmcplusplus::ModPadeFunctor
Coeff	ThreeBodyPade.h	/^    Coeff(int m0, int n0, int o0, ValueType c0, ValueType d0): m(m0),n(n0),o(o0),c(c0),d(d0) {}$/;"	f	struct:qmcplusplus::ThreeBodyPade::Coeff
Coeff	ThreeBodyPade.h	/^  struct Coeff$/;"	s	class:qmcplusplus::ThreeBodyPade
ComplexType	kSpaceJastrow.h	/^  typedef std::complex<RealType> ComplexType;$/;"	t	class:qmcplusplus::kSpaceJastrow
ComponentType	LinearCombinationFunctor.h	/^  typedef OptimizableFunctorBase ComponentType;$/;"	t	struct:LinearCombinationFunctor
ConstraintMatrix	PolynomialFunctor3D.h	/^  Matrix<real_type> ConstraintMatrix;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
CubicBsplineGroup	CubicBsplineGroup.h	/^  inline CubicBsplineGroup(): GridManager(true),numSiblings(1),OffSet(0.0), InFunc(0)$/;"	f	class:qmcplusplus::CubicBsplineGroup
CubicBsplineGroup	CubicBsplineGroup.h	/^class CubicBsplineGroup: public CubicBsplineGrid<T,GRIDTYPE,FIRSTDERIV_CONSTRAINTS>$/;"	c	namespace:qmcplusplus
CubicSplineBasisSet	SplineFunctors.h	/^  CubicSplineBasisSet(): InFunc(0), OutFunc(0) { }$/;"	f	struct:qmcplusplus::CubicSplineBasisSet
CubicSplineBasisSet	SplineFunctors.h	/^  CubicSplineBasisSet(FNIN* in_, grid_type* agrid)$/;"	f	struct:qmcplusplus::CubicSplineBasisSet
CubicSplineBasisSet	SplineFunctors.h	/^struct CubicSplineBasisSet: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
CubicSplineSingle	SplineFunctors.h	/^  CubicSplineSingle(): InFunc(0) { }$/;"	f	struct:qmcplusplus::CubicSplineSingle
CubicSplineSingle	SplineFunctors.h	/^  CubicSplineSingle(FNIN* in_, grid_type* agrid): InFunc(in_)$/;"	f	struct:qmcplusplus::CubicSplineSingle
CubicSplineSingle	SplineFunctors.h	/^  CubicSplineSingle(FNIN* in_, real_type rc, int npts):InFunc(in_)$/;"	f	struct:qmcplusplus::CubicSplineSingle
CubicSplineSingle	SplineFunctors.h	/^  CubicSplineSingle(const CubicSplineSingle& old):$/;"	f	struct:qmcplusplus::CubicSplineSingle
CubicSplineSingle	SplineFunctors.h	/^struct CubicSplineSingle: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
CudaReal	OneBodyJastrowOrbitalBspline.h	/^  typedef CUDA_PRECISION CudaReal;$/;"	t	class:qmcplusplus::OneBodyJastrowOrbitalBspline
CudaReal	TwoBodyJastrowOrbitalBspline.h	/^  typedef CUDA_PRECISION CudaReal;$/;"	t	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
CudaSpline	CudaSpline.h	/^  CudaSpline (BsplineFunctor<T2> &func) : coefs("CudaSpline::coefs")$/;"	f	struct:qmcplusplus::CudaSpline
CudaSpline	CudaSpline.h	/^struct CudaSpline$/;"	s	namespace:qmcplusplus
Cusp	Experimental/AnyConstraints.h	/^    RealType Cusp;$/;"	m	struct:qmcplusplus::AnyConstraints::BasisGroupType
Cusp	WMJastrowBuilder.h	/^    RealType Cusp;$/;"	m	struct:qmcplusplus::WMJastrowBuilder::BasisGroupType
CuspCorrectionFunctor	CompositeFunctor.h	/^  CuspCorrectionFunctor():E(1.0),Rmax(1),Rcut(0), RmaxFixed(10) {}$/;"	f	struct:qmcplusplus::CuspCorrectionFunctor
CuspCorrectionFunctor	CompositeFunctor.h	/^  inline CuspCorrectionFunctor(real_type e, real_type rc)$/;"	f	struct:qmcplusplus::CuspCorrectionFunctor
CuspCorrectionFunctor	CompositeFunctor.h	/^struct CuspCorrectionFunctor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
CuspValue	BsplineFunctor.h	/^  real_type CuspValue;$/;"	m	struct:qmcplusplus::BsplineFunctor
CutoffFunctor	NumericalJastrowFunctor.h	/^  CutoffFunctor() {}$/;"	f	struct:qmcplusplus::CutoffFunctor
CutoffFunctor	NumericalJastrowFunctor.h	/^  inline CutoffFunctor(T r1, T r2)$/;"	f	struct:qmcplusplus::CutoffFunctor
CutoffFunctor	NumericalJastrowFunctor.h	/^struct CutoffFunctor$/;"	s	namespace:qmcplusplus
D	PadeFunctors.h	/^  real_type A, B, C, D;$/;"	m	struct:qmcplusplus::PadeTwo2ndOrderFunctor
D2PadeDB2Functor	DerivPadeFunctors.h	/^  D2PadeDB2Functor(): ID_A("0"), ID_B("0") { }$/;"	f	struct:qmcplusplus::D2PadeDB2Functor
D2PadeDB2Functor	DerivPadeFunctors.h	/^  D2PadeDB2Functor(const PadeFunctor<T>& pade): ID_A(pade.ID_A), ID_B(pade.ID_B)$/;"	f	struct:qmcplusplus::D2PadeDB2Functor
D2PadeDB2Functor	DerivPadeFunctors.h	/^  explicit D2PadeDB2Functor(real_type a, real_type b): ID_A("0"),ID_B("0")$/;"	f	struct:qmcplusplus::D2PadeDB2Functor
D2PadeDB2Functor	DerivPadeFunctors.h	/^struct D2PadeDB2Functor:public OptimizableFunctorBase<T>$/;"	s	namespace:qmcplusplus
D2WMDB2Functor	DerivWMFunctor.h	/^  D2WMDB2Functor(real_type b, real_type rc=7.5, const std::string& bname="exponent"):$/;"	f	struct:qmcplusplus::D2WMDB2Functor
D2WMDB2Functor	DerivWMFunctor.h	/^struct D2WMDB2Functor: public OptimizableFunctorBase<T>$/;"	s	namespace:qmcplusplus
D2xDr2	WMFunctor.h	/^  real_type D2xDr2;$/;"	m	struct:qmcplusplus::WMFunctor
D2xDr2	WMFunctor.h	/^  real_type D2xDr2;$/;"	m	struct:qmcplusplus::WMFunctorSet
DCuspCorrectionDEFunctor	CompositeFunctor.h	/^  DCuspCorrectionDEFunctor():E(1.0),Rmax(1),Rcut(0), RmaxFixed(10) {}$/;"	f	struct:qmcplusplus::DCuspCorrectionDEFunctor
DCuspCorrectionDEFunctor	CompositeFunctor.h	/^  inline DCuspCorrectionDEFunctor(real_type e, real_type rc)$/;"	f	struct:qmcplusplus::DCuspCorrectionDEFunctor
DCuspCorrectionDEFunctor	CompositeFunctor.h	/^struct DCuspCorrectionDEFunctor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
DPadeDBFunctor	DerivPadeFunctors.h	/^  DPadeDBFunctor(): ID_A("0"), ID_B("0") { }$/;"	f	struct:qmcplusplus::DPadeDBFunctor
DPadeDBFunctor	DerivPadeFunctors.h	/^  DPadeDBFunctor(const PadeFunctor<T>& pade): ID_A(pade.ID_A), ID_B(pade.ID_B)$/;"	f	struct:qmcplusplus::DPadeDBFunctor
DPadeDBFunctor	DerivPadeFunctors.h	/^  explicit DPadeDBFunctor(real_type a, real_type b): ID_A("0"),ID_B("0")$/;"	f	struct:qmcplusplus::DPadeDBFunctor
DPadeDBFunctor	DerivPadeFunctors.h	/^struct DPadeDBFunctor:public OptimizableFunctorBase<T>$/;"	s	namespace:qmcplusplus
DWMDBFunctor	DerivWMFunctor.h	/^struct DWMDBFunctor: public OptimizableFunctorBase<T>$/;"	s	namespace:qmcplusplus
Delta	ThreeBodyPade.h	/^  inline ValueType Delta(int m, int n)$/;"	f	class:qmcplusplus::ThreeBodyPade
DeltaR	BsplineFunctor.h	/^  real_type DeltaR, DeltaRInv;$/;"	m	struct:qmcplusplus::BsplineFunctor
DeltaRInv	BsplineFunctor.h	/^  real_type DeltaR, DeltaRInv;$/;"	m	struct:qmcplusplus::BsplineFunctor
DeltaRInv_eI	BsplineFunctor3D.h	/^  real_type DeltaR_eI, DeltaRInv_eI;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
DeltaR_eI	BsplineFunctor3D.h	/^  real_type DeltaR_eI, DeltaRInv_eI;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
Delta_e2iGr	kSpaceJastrow.h	/^  Matrix<ComplexType> Delta_e2iGr;$/;"	m	class:qmcplusplus::kSpaceJastrow
Deltax	BsplineFunctor3D.h	/^  real_type Deltax, DeltaxInv;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
DeltaxInv	BsplineFunctor3D.h	/^  real_type Deltax, DeltaxInv;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
Density	LRBreakupUtilities.h	/^  T Density;$/;"	m	struct:qmcplusplus::DerivRPABreakup
Density	LRBreakupUtilities.h	/^  T Density;$/;"	m	struct:qmcplusplus::EPRPABreakup
Density	LRBreakupUtilities.h	/^  T Density;$/;"	m	struct:qmcplusplus::RPABFeeBreakup
Density	LRBreakupUtilities.h	/^  T Density;$/;"	m	struct:qmcplusplus::RPABreakup
Density	LRBreakupUtilities.h	/^  T Density;$/;"	m	struct:qmcplusplus::derivEPRPABreakup
DerivFuncType	Experimental/AnyConstraints.h	/^  typedef WMFunctorSet<RealType> DerivFuncType;$/;"	t	struct:qmcplusplus::AnyConstraints
DerivFuncType	WMJastrowBuilder.h	/^  typedef WMFunctorSet<RealType> DerivFuncType;$/;"	t	class:qmcplusplus::WMJastrowBuilder
DerivListGPU	OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal*> DerivListGPU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
DerivListGPU	TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal*> DerivListGPU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
DerivListHost	OneBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal*> DerivListHost;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
DerivListHost	TwoBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal*> DerivListHost;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
DerivRPABreakup	LRBreakupUtilities.h	/^  inline DerivRPABreakup() {}$/;"	f	struct:qmcplusplus::DerivRPABreakup
DerivRPABreakup	LRBreakupUtilities.h	/^struct DerivRPABreakup$/;"	s	namespace:qmcplusplus
DerivSecondTaylorTerm	LRBreakupUtilities.h	/^  T DerivSecondTaylorTerm;$/;"	m	struct:qmcplusplus::DerivYukawaBreakup
DerivYukawaBreakup	LRBreakupUtilities.h	/^  inline DerivYukawaBreakup() {}$/;"	f	struct:qmcplusplus::DerivYukawaBreakup
DerivYukawaBreakup	LRBreakupUtilities.h	/^struct DerivYukawaBreakup$/;"	s	namespace:qmcplusplus
Deriv_	Experimental/AnyConstraints.h	/^    DerivFuncType* Deriv_;$/;"	m	struct:qmcplusplus::AnyConstraints::BasisGroupType
Deriv_	WMJastrowBuilder.h	/^    DerivFuncType* Deriv_;$/;"	m	struct:qmcplusplus::WMJastrowBuilder::BasisGroupType
DiffOneBodyJastrowOrbital	DiffOneBodyJastrowOrbital.h	/^  DiffOneBodyJastrowOrbital(const ParticleSet& centers, ParticleSet& els)$/;"	f	class:qmcplusplus::DiffOneBodyJastrowOrbital
DiffOneBodyJastrowOrbital	DiffOneBodyJastrowOrbital.h	/^class DiffOneBodyJastrowOrbital: public DiffOrbitalBase$/;"	c	namespace:qmcplusplus
DiffOneBodySpinJastrowOrbital	DiffOneBodySpinJastrowOrbital.h	/^  DiffOneBodySpinJastrowOrbital(const ParticleSet& centers, ParticleSet& els)$/;"	f	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
DiffOneBodySpinJastrowOrbital	DiffOneBodySpinJastrowOrbital.h	/^class DiffOneBodySpinJastrowOrbital: public DiffOrbitalBase$/;"	c	namespace:qmcplusplus
DiffTwoBodyJastrowOrbital	DiffTwoBodyJastrowOrbital.h	/^  DiffTwoBodyJastrowOrbital(ParticleSet& p):NumVars(0)$/;"	f	class:qmcplusplus::DiffTwoBodyJastrowOrbital
DiffTwoBodyJastrowOrbital	DiffTwoBodyJastrowOrbital.h	/^class DiffTwoBodyJastrowOrbital: public DiffOrbitalBase$/;"	c	namespace:qmcplusplus
DiffVal	TwoBodyJastrowOrbital.h	/^  RealType DiffVal, DiffValSum;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
DiffVal	eeI_JastrowOrbital.h	/^  RealType DiffVal, DiffValSum;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
DiffValSum	TwoBodyJastrowOrbital.h	/^  RealType DiffVal, DiffValSum;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
DiffValSum	eeI_JastrowOrbital.h	/^  RealType DiffVal, DiffValSum;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
Dlindhard	LRBreakupUtilities.h	/^  T Dlindhard(T q, T w)$/;"	f	struct:qmcplusplus::RPABFeeBreakup
Dlindhardp	LRBreakupUtilities.h	/^  T Dlindhardp(T q, T w)$/;"	f	struct:qmcplusplus::RPABFeeBreakup
DropLongRange	RPAJastrow.h	/^  bool DropLongRange;$/;"	m	struct:qmcplusplus::RPAJastrow
DropShortRange	RPAJastrow.h	/^  bool DropShortRange;$/;"	m	struct:qmcplusplus::RPAJastrow
Dummy	BsplineFunctor.h	/^  int Dummy;$/;"	m	struct:qmcplusplus::BsplineFunctor
Dummy	BsplineFunctor3D.h	/^  int Dummy;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
DxDr	WMFunctor.h	/^  real_type DxDr;$/;"	m	struct:qmcplusplus::WMFunctor
DxDr	WMFunctor.h	/^  real_type DxDr;$/;"	m	struct:qmcplusplus::WMFunctorSet
E	CompositeFunctor.h	/^  real_type E;$/;"	m	struct:qmcplusplus::CuspCorrectionFunctor
E	CompositeFunctor.h	/^  real_type E;$/;"	m	struct:qmcplusplus::DCuspCorrectionDEFunctor
EPRPABreakup	LRBreakupUtilities.h	/^  inline EPRPABreakup() {}$/;"	f	struct:qmcplusplus::EPRPABreakup
EPRPABreakup	LRBreakupUtilities.h	/^struct EPRPABreakup$/;"	s	namespace:qmcplusplus
Elec	NLjobGPU.h	/^  int Elec, NumQuadPoints;$/;"	m	struct:NLjobGPU
ElecRef	OneBodyJastrowOrbitalBspline.h	/^  ParticleSet &ElecRef;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
Elecs	kSpaceJastrow.h	/^  ParticleSet &Elecs;$/;"	m	class:qmcplusplus::kSpaceJastrow
Equivalent	kSpaceJastrow.cpp	/^kSpaceJastrow::Equivalent(PosType G1, PosType G2)$/;"	f	class:qmcplusplus::kSpaceJastrow
F	DiffOneBodySpinJastrowOrbital.h	/^  Matrix<FT*> F;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
F	DiffTwoBodyJastrowOrbital.h	/^  std::vector<FT*> F;$/;"	m	class:qmcplusplus::DiffTwoBodyJastrowOrbital
F	OneBodySpinJastrowOrbital.h	/^  Matrix<FT*> F;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
F	TwoBodyJastrowOrbital.h	/^  std::vector<FT*> F;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
F	eeI_JastrowOrbital.h	/^  Array<FT*,3> F;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
FNIN	CubicBsplineGroup.h	/^  typedef OptimizableFunctorBase<T>                                                FNIN;$/;"	t	class:qmcplusplus::CubicBsplineGroup
FNIN	NumericalJastrowFunctor.h	/^  typedef OptimizableFunctorBase FNIN;$/;"	t	struct:qmcplusplus::NumericalJastrow
FNIN	SplineFunctors.h	/^  typedef OptimizableFunctorBase FNIN;$/;"	t	struct:qmcplusplus::CubicSplineBasisSet
FNIN	SplineFunctors.h	/^  typedef OptimizableFunctorBase FNIN;$/;"	t	struct:qmcplusplus::CubicSplineSingle
FNOUT	NumericalJastrowFunctor.h	/^  typedef OneDimCubicSpline<real_type,real_type>  FNOUT;$/;"	t	struct:qmcplusplus::NumericalJastrow
FNOUT	SplineFunctors.h	/^  typedef CubicBspline<RT,LINEAR_1DGRID,FIRSTDERIV_CONSTRAINTS> FNOUT;$/;"	t	struct:qmcplusplus::CubicSplineBasisSet
FT	OneBodyJastrowOrbitalBspline.h	/^  typedef BsplineFunctor<OrbitalBase::RealType> FT;$/;"	t	class:qmcplusplus::OneBodyJastrowOrbitalBspline
FT	ThreeBodyPade.h	/^  typedef int FT;$/;"	t	class:qmcplusplus::ThreeBodyPade
FT	TwoBodyJastrowOrbitalBspline.h	/^  typedef BsplineFunctor<OrbitalBase::RealType> FT;$/;"	t	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
FirstAddressOfdU	LRTwoBodyJastrow.h	/^  RealType *FirstAddressOfdU;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
FirstAddressOfdU	OneBodyJastrowOrbital.h	/^  RealType *FirstAddressOfdU, *LastAddressOfdU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbital
FirstAddressOfdU	OneBodySpinJastrowOrbital.h	/^  RealType *FirstAddressOfdU;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
FirstAddressOfdU	ThreeBodyJastrowOrbital.h	/^  ValueType *FirstAddressOfdU, *LastAddressOfdU;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
FirstAddressOfdU	ThreeBodyPade.h	/^  ValueType *FirstAddressOfdU, *LastAddressOfdU;$/;"	m	class:qmcplusplus::ThreeBodyPade
FirstAddressOfdU	TwoBodyJastrowOrbital.h	/^  RealType *FirstAddressOfdU, *LastAddressOfdU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
FirstAddressOfdU	eeI_JastrowOrbital.h	/^  RealType *FirstAddressOfdU, *LastAddressOfdU;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
FirstAddressOfdY	ThreeBodyBlockSparse.h	/^  RealType *FirstAddressOfdY;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
FirstAddressOfdY	ThreeBodyGeminal.h	/^  RealType *FirstAddressOfdY;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
FirstAddressOfgU	ThreeBodyBlockSparse.h	/^  RealType *FirstAddressOfgU;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
FirstAddressOfgU	ThreeBodyGeminal.h	/^  RealType *FirstAddressOfgU;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
FirstTime	TwoBodyJastrowOrbital.h	/^  bool FirstTime;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
FirstTime	eeI_JastrowOrbital.h	/^  bool FirstTime;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
Fk	LRBreakupUtilities.h	/^  inline T Fk(T k, T rc)$/;"	f	struct:qmcplusplus::DerivRPABreakup
Fk	LRBreakupUtilities.h	/^  inline T Fk(T k, T rc)$/;"	f	struct:qmcplusplus::DerivYukawaBreakup
Fk	LRBreakupUtilities.h	/^  inline T Fk(T k, T rc)$/;"	f	struct:qmcplusplus::EPRPABreakup
Fk	LRBreakupUtilities.h	/^  inline T Fk(T k, T rc)$/;"	f	struct:qmcplusplus::RPABFeeBreakup
Fk	LRBreakupUtilities.h	/^  inline T Fk(T k, T rc)$/;"	f	struct:qmcplusplus::RPABreakup
Fk	LRBreakupUtilities.h	/^  inline T Fk(T k, T rc)$/;"	f	struct:qmcplusplus::YukawaBreakup
Fk	LRBreakupUtilities.h	/^  inline T Fk(T k, T rc)$/;"	f	struct:qmcplusplus::derivEPRPABreakup
Fk	LRTwoBodyJastrow.h	/^  Vector<RealType> Fk;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
Fk_0	LRTwoBodyJastrow.h	/^  Vector<RealType> Fk_0;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
Fk_1	LRTwoBodyJastrow.h	/^  Vector<RealType> Fk_1;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
Fk_symm	LRTwoBodyJastrow.h	/^  Vector<RealType> Fk_symm;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
FkbyKK	LRTwoBodyJastrow.h	/^  std::vector<RealType> FkbyKK;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
Fmask	DiffOneBodySpinJastrowOrbital.h	/^  Matrix<int> Fmask;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
Fmask	OneBodySpinJastrowOrbital.h	/^  Matrix<int> Fmask;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
Form of the Jastrow	eeI_Jastrow.tex	/^\\newcommand{\\brij}{\\mathbf{r}_{ij}}$/;"	s
FreeLambda	ThreeBodyBlockSparse.h	/^  Matrix<int> FreeLambda;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
FreeLambda	ThreeBodyGeminal.h	/^  Vector<int> FreeLambda;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
Fs	DiffOneBodyJastrowOrbital.h	/^  std::vector<FT*> Fs;$/;"	m	class:qmcplusplus::DiffOneBodyJastrowOrbital
Fs	OneBodyJastrowOrbital.h	/^  std::vector<FT*> Fs;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbital
Fs	ThreeBodyJastrowOrbital.h	/^  std::vector<FT*> Fs;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
Fs	ThreeBodyPade.h	/^  std::vector<FT*> Fs;$/;"	m	class:qmcplusplus::ThreeBodyPade
FuncList	Experimental/PadeConstraints.h	/^  std::vector<FuncType*> FuncList;$/;"	m	struct:qmcplusplus::PadeConstraints
FuncList	Experimental/PadeConstraints.h	/^  std::vector<FuncType*> FuncList;$/;"	m	struct:qmcplusplus::ScaledPadeConstraints
FuncList	Experimental/WMConstraints.h	/^  std::vector<FuncType*> FuncList;$/;"	m	struct:qmcplusplus::WMConstraints
FuncType	Experimental/NJAABuilder.h	/^  typedef NumericalJastrow<RealType> FuncType;$/;"	t	struct:qmcplusplus::NJAABuilder
FuncType	Experimental/NJABBuilder.h	/^  typedef NumericalJastrow<RealType> FuncType;$/;"	t	struct:qmcplusplus::NJABBuilder
FuncType	Experimental/PadeConstraints.h	/^  typedef PadeFunctor<RealType> FuncType;$/;"	t	struct:qmcplusplus::PadeConstraints
FuncType	Experimental/PadeConstraints.h	/^  typedef ScaledPadeFunctor<RealType> FuncType;$/;"	t	struct:qmcplusplus::ScaledPadeConstraints
FuncType	Experimental/WMConstraints.h	/^  typedef CubicBsplineSingle<RealType> FuncType;$/;"	t	struct:qmcplusplus::WMConstraints
FuncType	JastrowBasisBuilder.h	/^  std::string FuncType;$/;"	m	class:qmcplusplus::JastrowBasisBuilder
FuncType	OneBodyJastrowOrbital.h	/^  typedef FT FuncType;$/;"	t	class:qmcplusplus::OneBodyJastrowOrbital
FuncType	OneBodySpinJastrowOrbital.h	/^  typedef FT FuncType;$/;"	t	class:qmcplusplus::OneBodySpinJastrowOrbital
FuncType	RPAJastrow.h	/^  typedef BsplineFunctor<RealType> FuncType;$/;"	t	struct:qmcplusplus::RPAJastrow
FuncType	ThreeBodyPade.h	/^  typedef FT FuncType;$/;"	t	class:qmcplusplus::ThreeBodyPade
FuncType	TwoBodyJastrowOrbital.h	/^  typedef FT FuncType;$/;"	t	class:qmcplusplus::TwoBodyJastrowOrbital
FuncType	eeI_JastrowOrbital.h	/^  typedef FT FuncType;$/;"	t	class:qmcplusplus::eeI_JastrowOrbital
FuncType	singleRPAJastrowBuilder.h	/^  typedef CubicSplineSingle<RealType,SplineEngineType> FuncType;$/;"	t	struct:qmcplusplus::singleRPAJastrowBuilder
Funique	DiffOneBodyJastrowOrbital.h	/^  std::vector<FT*> Funique;$/;"	m	class:qmcplusplus::DiffOneBodyJastrowOrbital
Funique	OneBodyJastrowOrbital.h	/^  std::vector<FT*> Funique;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbital
Funique	ThreeBodyJastrowOrbital.h	/^  std::vector<FT*> Funique;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
GPUSplines	OneBodyJastrowOrbitalBspline.h	/^  std::vector<CudaSpline<CudaReal>*> GPUSplines, UniqueSplines;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
GPUSplines	TwoBodyJastrowOrbitalBspline.h	/^  std::vector<CudaSpline<CudaReal>*> GPUSplines, UniqueSplines;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
GammaPerm	PolynomialFunctor3D.h	/^  std::vector<int> GammaPerm;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
GammaVec	PolynomialFunctor3D.h	/^  std::vector<real_type> GammaVec, dval_Vec;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
GaussianFunctor	GaussianFunctor.h	/^  GaussianFunctor(real_type a=1.0, real_type c=1.0,real_type rc=1.0):ID_A("G_A"), ID_C("G_C"),ID_RC("G_RC"), optimizable(true)$/;"	f	struct:qmcplusplus::GaussianFunctor
GaussianFunctor	GaussianFunctor.h	/^struct GaussianFunctor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
GeminalBasis	ThreeBodyBlockSparse.h	/^  BasisSetType *GeminalBasis;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
GeminalBasis	ThreeBodyGeminal.h	/^  BasisSetType *GeminalBasis;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
GradLaplGPU	OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> SumGPU, GradLaplGPU, OneGradGPU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
GradLaplGPU	TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> SumGPU, GradLaplGPU, OneGradGPU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
GradLaplHost	OneBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> SumHost, GradLaplHost, OneGradHost;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
GradLaplHost	TwoBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> SumHost, GradLaplHost, OneGradHost;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
Gradients and Laplacians	kSpaceJastrowNotes.tex	/^the primitive cell.$/;"	s
GridDelta	SplineFunctors.h	/^  real_type GridDelta;$/;"	m	struct:qmcplusplus::CubicSplineBasisSet
GridDelta	SplineFunctors.h	/^  real_type GridDelta;$/;"	m	struct:qmcplusplus::CubicSplineSingle
GridType	RPAJastrow.h	/^  typedef LinearGrid<RealType> GridType;$/;"	t	struct:qmcplusplus::RPAJastrow
GridType	singleRPAJastrowBuilder.h	/^  typedef LinearGrid<RealType> GridType;$/;"	t	struct:qmcplusplus::singleRPAJastrowBuilder
HandlerType	LRBreakupUtilities.h	/^  typedef LRHandlerBase HandlerType;$/;"	t	struct:qmcplusplus::ShortRangePartAdapter
HandlerType	LRTwoBodyJastrow.h	/^  typedef LRHandlerBase HandlerType;$/;"	t	class:qmcplusplus::LRTwoBodyJastrow
HandlerType	RPAJastrow.h	/^  typedef LRHandlerBase HandlerType;$/;"	t	struct:qmcplusplus::RPAJastrow
HandlerType	singleRPAJastrowBuilder.h	/^  typedef LRHandlerBase HandlerType;$/;"	t	struct:qmcplusplus::singleRPAJastrowBuilder
ID_A	DerivPadeFunctors.h	/^  std::string ID_A;$/;"	m	struct:qmcplusplus::D2PadeDB2Functor
ID_A	DerivPadeFunctors.h	/^  std::string ID_A;$/;"	m	struct:qmcplusplus::DPadeDBFunctor
ID_A	GaussianFunctor.h	/^  std::string ID_A;$/;"	m	struct:qmcplusplus::GaussianFunctor
ID_A	GaussianFunctor.h	/^  std::string ID_A;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
ID_A	McMillanJ2Functor.h	/^  std::string ID_A,ID_B,ID_RC,ID_R0;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
ID_A	McMillanJ2Functor.h	/^  std::string ID_A,ID_B,ID_RC;$/;"	m	struct:qmcplusplus::ModMcMillanJ2Functor
ID_A	McMillanJ2Functor.h	/^  std::string ID_A;$/;"	m	struct:qmcplusplus::McMillanJ2Functor
ID_A	McMillanJ2GFunctor.h	/^  std::string ID_A;$/;"	m	struct:qmcplusplus::McMillanJ2GFunctor
ID_A	OpenGaussianSlaterFunctor.h	/^  std::string ID_A;$/;"	m	struct:qmcplusplus::OpenGaussianSlaterFunctor
ID_A	PadeFunctors.h	/^  std::string ID_A;$/;"	m	struct:qmcplusplus::Pade2ndOrderFunctor
ID_A	PadeFunctors.h	/^  std::string ID_A;$/;"	m	struct:qmcplusplus::PadeFunctor
ID_A	PadeFunctors.h	/^  std::string ID_A;$/;"	m	struct:qmcplusplus::PadeTwo2ndOrderFunctor
ID_A	RPAJastrowFunctor.h	/^  std::string ID_A;$/;"	m	struct:qmcplusplus::RPAJastrowFunctor
ID_B	DerivPadeFunctors.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::D2PadeDB2Functor
ID_B	DerivPadeFunctors.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::DPadeDBFunctor
ID_B	DerivWMFunctor.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::D2WMDB2Functor
ID_B	DerivWMFunctor.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::DWMDBFunctor
ID_B	Experimental/PadeConstraints.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::PadeConstraints
ID_B	Experimental/PadeConstraints.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::ScaledPadeConstraints
ID_B	GaussianFunctor.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
ID_B	McMillanJ2Functor.h	/^  std::string ID_A,ID_B,ID_RC,ID_R0;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
ID_B	McMillanJ2Functor.h	/^  std::string ID_A,ID_B,ID_RC;$/;"	m	struct:qmcplusplus::ModMcMillanJ2Functor
ID_B	McMillanJ2Functor.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::McMillanJ2Functor
ID_B	McMillanJ2GFunctor.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::McMillanJ2GFunctor
ID_B	ModPadeFunctor.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::ModPadeFunctor
ID_B	OpenGaussianSlaterFunctor.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::OpenGaussianSlaterFunctor
ID_B	PadeFunctors.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::Pade2ndOrderFunctor
ID_B	PadeFunctors.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::PadeFunctor
ID_B	PadeFunctors.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::PadeTwo2ndOrderFunctor
ID_B	WMFunctor.h	/^  std::string ID_B;$/;"	m	struct:qmcplusplus::WMFunctor
ID_C	Experimental/PadeConstraints.h	/^  std::string ID_C;$/;"	m	struct:qmcplusplus::ScaledPadeConstraints
ID_C	GaussianFunctor.h	/^  std::string ID_C;$/;"	m	struct:qmcplusplus::GaussianFunctor
ID_C	GaussianFunctor.h	/^  std::string ID_C;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
ID_C	PadeFunctors.h	/^  std::string ID_C;$/;"	m	struct:qmcplusplus::Pade2ndOrderFunctor
ID_C	PadeFunctors.h	/^  std::string ID_C;$/;"	m	struct:qmcplusplus::PadeTwo2ndOrderFunctor
ID_C	PolyFunctor.h	/^  std::vector<std::string> ID_C;$/;"	m	struct:qmcplusplus::PolyFunctor
ID_D	PadeFunctors.h	/^  std::string ID_D;$/;"	m	struct:qmcplusplus::PadeTwo2ndOrderFunctor
ID_Lambda	ThreeBodyBlockSparse.h	/^  std::string ID_Lambda;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
ID_Lambda	ThreeBodyGeminal.h	/^  std::string ID_Lambda;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
ID_R0	McMillanJ2Functor.h	/^  std::string ID_A,ID_B,ID_RC,ID_R0;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
ID_RC	GaussianFunctor.h	/^  std::string ID_RC;$/;"	m	struct:qmcplusplus::GaussianFunctor
ID_RC	GaussianFunctor.h	/^  std::string ID_RC;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
ID_RC	McMillanJ2Functor.h	/^  std::string ID_A,ID_B,ID_RC,ID_R0;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
ID_RC	McMillanJ2Functor.h	/^  std::string ID_A,ID_B,ID_RC;$/;"	m	struct:qmcplusplus::ModMcMillanJ2Functor
ID_Rs	RPAJastrow.h	/^  std::string ID_Rs;$/;"	m	struct:qmcplusplus::RPAJastrow
ID_Rs	singleRPAJastrowBuilder.h	/^  std::string ID_Rs;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
IRef	eeI_JastrowOrbital.h	/^  ParticleSet *eRef, *IRef;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
ISOTROPIC	kSpaceJastrow.h	/^  typedef enum { CRYSTAL, ISOTROPIC, NOSYMM } SymmetryType;$/;"	e	enum:qmcplusplus::kSpaceJastrow::__anon1
IgnoreSpin	Experimental/AnyConstraints.h	/^  bool IgnoreSpin;$/;"	m	struct:qmcplusplus::AnyConstraints
IgnoreSpin	Experimental/NJAABuilder.h	/^  bool IgnoreSpin;$/;"	m	struct:qmcplusplus::NJAABuilder
IgnoreSpin	Experimental/PadeConstraints.h	/^  bool IgnoreSpin;$/;"	m	struct:qmcplusplus::PadeConstraints
IgnoreSpin	Experimental/PadeConstraints.h	/^  bool IgnoreSpin;$/;"	m	struct:qmcplusplus::ScaledPadeConstraints
IgnoreSpin	Experimental/WMConstraints.h	/^  bool IgnoreSpin;$/;"	m	struct:qmcplusplus::WMConstraints
IgnoreSpin	JAABuilder.h	/^  bool IgnoreSpin;$/;"	m	struct:qmcplusplus::JAABuilder
IgnoreSpin	PolyConstraints.h	/^  bool IgnoreSpin;$/;"	m	struct:qmcplusplus::PolyConstraints
IgnoreSpin	RPAJastrow.h	/^  bool IgnoreSpin;$/;"	m	struct:qmcplusplus::RPAJastrow
IgnoreSpin	WMJastrowBuilder.h	/^  bool IgnoreSpin;$/;"	m	class:qmcplusplus::WMJastrowBuilder
InFunc	CubicBsplineGroup.h	/^  FNIN* InFunc;$/;"	m	class:qmcplusplus::CubicBsplineGroup
InFunc	Experimental/NJAABuilder.h	/^  std::vector<InFuncType*> InFunc;$/;"	m	struct:qmcplusplus::NJAABuilder
InFunc	Experimental/NJABBuilder.h	/^  std::vector<InFuncType*> InFunc;$/;"	m	struct:qmcplusplus::NJABBuilder
InFunc	NumericalJastrowFunctor.h	/^  FNIN *InFunc;$/;"	m	struct:qmcplusplus::NumericalJastrow
InFunc	SplineFunctors.h	/^  FNIN *InFunc;$/;"	m	struct:qmcplusplus::CubicSplineBasisSet
InFunc	SplineFunctors.h	/^  FNIN *InFunc;$/;"	m	struct:qmcplusplus::CubicSplineSingle
InFuncList	Experimental/WMConstraints.h	/^  std::vector<InFuncType*> InFuncList;$/;"	m	struct:qmcplusplus::WMConstraints
InFuncType	Experimental/AnyConstraints.h	/^  typedef OptimizableFunctorBase InFuncType;$/;"	t	struct:qmcplusplus::AnyConstraints
InFuncType	Experimental/NJAABuilder.h	/^  typedef FuncType::FNIN              InFuncType;$/;"	t	struct:qmcplusplus::NJAABuilder
InFuncType	Experimental/NJABBuilder.h	/^  typedef FuncType::FNIN              InFuncType;$/;"	t	struct:qmcplusplus::NJABBuilder
InFuncType	Experimental/WMConstraints.h	/^  typedef ComboFunctor<RealType> InFuncType;$/;"	t	struct:qmcplusplus::WMConstraints
InFuncType	WMJastrowBuilder.h	/^  typedef OptimizableFunctorBase InFuncType;$/;"	t	class:qmcplusplus::WMJastrowBuilder
In_	Experimental/AnyConstraints.h	/^    InFuncType* In_;$/;"	m	struct:qmcplusplus::AnyConstraints::BasisGroupType
In_	WMJastrowBuilder.h	/^    InFuncType* In_;$/;"	m	struct:qmcplusplus::WMJastrowBuilder::BasisGroupType
Include	kSpaceJastrow.cpp	/^Include (int i, int j)$/;"	f	namespace:qmcplusplus
Include	kSpaceJastrow.cpp	/^Include (int i, int j, int k)$/;"	f	namespace:qmcplusplus
IndepVar	PolynomialFunctor3D.h	/^  std::vector<bool> IndepVar;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
IndexOffSet	ThreeBodyBlockSparse.h	/^  int IndexOffSet;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
IndexOffSet	ThreeBodyGeminal.h	/^  int IndexOffSet;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
InitC	ThreeBodyPade.h	/^  inline void InitC()$/;"	f	class:qmcplusplus::ThreeBodyPade
IonData	eeI_JastrowOrbital.h	/^  IonData() : cutoff_radius(0.0) { }$/;"	f	struct:qmcplusplus::IonData
IonData	eeI_JastrowOrbital.h	/^struct IonData$/;"	s	namespace:qmcplusplus
IonDataList	eeI_JastrowOrbital.h	/^  std::vector<IonData> IonDataList;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
Ion_rhoG	kSpaceJastrow.h	/^  std::vector<ComplexType> Ion_rhoG;$/;"	m	class:qmcplusplus::kSpaceJastrow
Ions	kSpaceJastrow.h	/^  const ParticleSet &Ions;$/;"	m	class:qmcplusplus::kSpaceJastrow
IsManager	RPAJastrow.h	/^  bool IsManager;$/;"	m	struct:qmcplusplus::RPAJastrow
J1s	singleRPAJastrowBuilder.h	/^  JneType* J1s;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
J2Unique	DiffTwoBodyJastrowOrbital.h	/^  std::map<std::string,FT*> J2Unique;$/;"	m	class:qmcplusplus::DiffTwoBodyJastrowOrbital
J2Unique	TwoBodyJastrowOrbital.h	/^  std::map<std::string,FT*> J2Unique;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
J3	ThreeBodyPadeBuilder.h	/^  ThreeBodyPade* J3;$/;"	m	class:qmcplusplus::ThreeBodyPadeBuilder
J3Unique	eeI_JastrowOrbital.h	/^  std::map<std::string,FT*> J3Unique;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
J3UniqueIndex	eeI_JastrowOrbital.h	/^  std::map<FT*,int> J3UniqueIndex;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
JAABuilder	JAABuilder.cpp	/^JAABuilder::JAABuilder(ParticleSet& p, TrialWaveFunction& psi):OrbitalBuilderBase(p,psi),$/;"	f	class:qmcplusplus::JAABuilder
JAABuilder	JAABuilder.h	/^struct JAABuilder: public OrbitalBuilderBase$/;"	s	namespace:qmcplusplus
JAAPBCBuilder	Experimental/JAAPBCBuilder.cpp	/^JAAPBCBuilder::JAAPBCBuilder(ParticleSet& p, TrialWaveFunction& psi):$/;"	f	class:qmcplusplus::JAAPBCBuilder
JAAPBCBuilder	Experimental/JAAPBCBuilder.h	/^struct JAAPBCBuilder: public OrbitalBuilderBase$/;"	s	namespace:qmcplusplus
JABBuilder	JABBuilder.h	/^  JABBuilder(ParticleSet& p, TrialWaveFunction& psi,$/;"	f	struct:qmcplusplus::JABBuilder
JABBuilder	JABBuilder.h	/^struct JABBuilder: public OrbitalBuilderBase$/;"	s	namespace:qmcplusplus
JastrowBasisBuilder	JastrowBasisBuilder.cpp	/^JastrowBasisBuilder::JastrowBasisBuilder(ParticleSet& els, ParticleSet& ions,$/;"	f	class:qmcplusplus::JastrowBasisBuilder
JastrowBasisBuilder	JastrowBasisBuilder.h	/^class JastrowBasisBuilder: public BasisSetBuilder$/;"	c	namespace:qmcplusplus
JastrowBuilder	Experimental/OldJastrowBuilder.cpp	/^JastrowBuilder::JastrowBuilder(ParticleSet& p, TrialWaveFunction& psi,$/;"	f	class:qmcplusplus::JastrowBuilder
JastrowBuilder	Experimental/OldJastrowBuilder.h	/^struct JastrowBuilder: public OrbitalBuilderBase$/;"	s	namespace:qmcplusplus
JastrowBuilder	JastrowBuilder.cpp	/^JastrowBuilder::JastrowBuilder(ParticleSet& p, TrialWaveFunction& psi, PtclPoolType& psets):$/;"	f	class:qmcplusplus::JastrowBuilder
JastrowBuilder	JastrowBuilder.h	/^class JastrowBuilder: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
JastrowType	JastrowBuilder.h	/^  int JastrowType;$/;"	m	class:qmcplusplus::JastrowBuilder
JneType	singleRPAJastrowBuilder.h	/^  typedef OneBodyJastrowOrbital<FuncType> JneType;$/;"	t	struct:qmcplusplus::singleRPAJastrowBuilder
K	PolyFunctor.h	/^  int K;$/;"	m	struct:qmcplusplus::PolyFunctor
KECorrection	TwoBodyJastrowOrbital.h	/^  RealType KECorrection()$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
KECorrection	eeI_JastrowOrbital.h	/^  RealType KECorrection()$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
KEcorr	TwoBodyJastrowOrbital.h	/^  RealType KEcorr;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
KEcorr	eeI_JastrowOrbital.h	/^  RealType KEcorr;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
KKOverL2	PolyFunctor.h	/^  real_type KKOverL2;$/;"	m	struct:qmcplusplus::PolyFunctor
KOverL	PolyFunctor.h	/^  real_type KOverL;$/;"	m	struct:qmcplusplus::PolyFunctor
Kc	RPAJastrow.h	/^  RealType Kc;$/;"	m	struct:qmcplusplus::RPAJastrow
Kc	singleRPAJastrowBuilder.h	/^  RealType Kc;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
Kc_max	singleRPAJastrowBuilder.h	/^  double Kc_max;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
Kf	LRBreakupUtilities.h	/^  T Kf;$/;"	m	struct:qmcplusplus::DerivRPABreakup
Kf	LRBreakupUtilities.h	/^  T Kf;$/;"	m	struct:qmcplusplus::EPRPABreakup
Kf	LRBreakupUtilities.h	/^  T Kf;$/;"	m	struct:qmcplusplus::RPABreakup
Kf	LRBreakupUtilities.h	/^  T Kf;$/;"	m	struct:qmcplusplus::derivEPRPABreakup
Kshell	LRTwoBodyJastrow.h	/^  std::vector<int> Kshell;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
L	ChebyshevFunctor.h	/^  T B, L;$/;"	m	struct:ChebyshevFunctor
L	OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> L, Linv;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
L	PolyFunctor.h	/^  real_type L;$/;"	m	struct:qmcplusplus::PolyFunctor
L	TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> L, Linv;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
LRTwoBodyJastrow	LRTwoBodyJastrow.cpp	/^LRTwoBodyJastrow::LRTwoBodyJastrow(ParticleSet& p ):$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
LRTwoBodyJastrow	LRTwoBodyJastrow.h	/^class LRTwoBodyJastrow: public OrbitalBase$/;"	c	namespace:qmcplusplus
Lambda	ThreeBodyBlockSparse.h	/^  Matrix<RealType> Lambda;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
Lambda	ThreeBodyGeminal.h	/^  Matrix<RealType> Lambda;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
LambdaBlocks	ThreeBodyBlockSparse.h	/^  std::vector<Matrix<RealType>* > LambdaBlocks;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
LastAddressOfdU	LRTwoBodyJastrow.h	/^  RealType *LastAddressOfdU;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
LastAddressOfdU	OneBodyJastrowOrbital.h	/^  RealType *FirstAddressOfdU, *LastAddressOfdU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbital
LastAddressOfdU	OneBodySpinJastrowOrbital.h	/^  RealType *LastAddressOfdU;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
LastAddressOfdU	ThreeBodyJastrowOrbital.h	/^  ValueType *FirstAddressOfdU, *LastAddressOfdU;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
LastAddressOfdU	ThreeBodyPade.h	/^  ValueType *FirstAddressOfdU, *LastAddressOfdU;$/;"	m	class:qmcplusplus::ThreeBodyPade
LastAddressOfdU	TwoBodyJastrowOrbital.h	/^  RealType *FirstAddressOfdU, *LastAddressOfdU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
LastAddressOfdU	eeI_JastrowOrbital.h	/^  RealType *FirstAddressOfdU, *LastAddressOfdU;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
LastAddressOfdY	ThreeBodyBlockSparse.h	/^  RealType *LastAddressOfdY;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
LastAddressOfdY	ThreeBodyGeminal.h	/^  RealType *LastAddressOfdY;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
LastAddressOfgU	ThreeBodyBlockSparse.h	/^  RealType *LastAddressOfgU;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
LastAddressOfgU	ThreeBodyGeminal.h	/^  RealType *LastAddressOfgU;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
LinearCombinationFunctor	LinearCombinationFunctor.h	/^  LinearCombinationFunctor(): NumComponents(0)$/;"	f	struct:LinearCombinationFunctor
LinearCombinationFunctor	LinearCombinationFunctor.h	/^struct LinearCombinationFunctor: public OptimizableFunctorBase$/;"	s
Linv	OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> L, Linv;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
Linv	TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> L, Linv;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
LoadC	ThreeBodyPade.h	/^  inline void LoadC(int k, int m, int n, int o, double c)$/;"	f	class:qmcplusplus::ThreeBodyPade
LongRangeRPA	RPAJastrow.h	/^  LRTwoBodyJastrow* LongRangeRPA;$/;"	m	struct:qmcplusplus::RPAJastrow
MaxCoefs	OneBodyJastrowOrbitalBspline.h	/^  int MaxCoefs;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
MaxCoefs	TwoBodyJastrowOrbitalBspline.h	/^  int MaxCoefs;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
MaxK	LRTwoBodyJastrow.h	/^  IndexType MaxK;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
MaxKshell	LRTwoBodyJastrow.h	/^  IndexType MaxKshell;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
McMillanJ2Functor	McMillanJ2Functor.h	/^  McMillanJ2Functor(real_type a=5.0, real_type b=4.9133):ID_A("McA"),ID_B("McB")$/;"	f	struct:qmcplusplus::McMillanJ2Functor
McMillanJ2Functor	McMillanJ2Functor.h	/^struct McMillanJ2Functor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
McMillanJ2GFunctor	McMillanJ2GFunctor.h	/^  McMillanJ2GFunctor(real_type a=5.0, real_type b=5.7448):ID_A("McA"),ID_B("McB"),R0(2.5)$/;"	f	struct:qmcplusplus::McMillanJ2GFunctor
McMillanJ2GFunctor	McMillanJ2GFunctor.h	/^struct McMillanJ2GFunctor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
ModMcMillanJ2Functor	McMillanJ2Functor.h	/^  ModMcMillanJ2Functor(real_type a=0.0, real_type b=0.0, real_type rc=0.0):ID_RC("Rcutoff"),ID_A("A"),ID_B("B")$/;"	f	struct:qmcplusplus::ModMcMillanJ2Functor
ModMcMillanJ2Functor	McMillanJ2Functor.h	/^struct ModMcMillanJ2Functor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
ModPadeFunctor	ModPadeFunctor.h	/^  ModPadeFunctor(real_type a=-0.5, real_type b=1): A(a),B(b),Zeff(1.0)$/;"	f	struct:qmcplusplus::ModPadeFunctor
ModPadeFunctor	ModPadeFunctor.h	/^struct ModPadeFunctor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
MyName	RPAJastrow.h	/^  std::string MyName;$/;"	m	struct:qmcplusplus::RPAJastrow
MyName	singleRPAJastrowBuilder.h	/^  std::string MyName;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
N	OneBodyJastrowOrbitalBspline.h	/^  int N;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
N	PolyFunctor.h	/^  int N;$/;"	m	struct:qmcplusplus::PolyFunctor
N	TwoBodyJastrowOrbital.h	/^  int N;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
NJAABuilder	Experimental/NJAABuilder.cpp	/^NJAABuilder::NJAABuilder(ParticleSet& p, TrialWaveFunction& psi):$/;"	f	class:qmcplusplus::NJAABuilder
NJAABuilder	Experimental/NJAABuilder.h	/^struct NJAABuilder: public OrbitalBuilderBase$/;"	s	namespace:qmcplusplus
NJABBuilder	Experimental/NJABBuilder.cpp	/^NJABBuilder::NJABBuilder(ParticleSet& p, TrialWaveFunction& psi, PtclPoolType& psets):$/;"	f	class:qmcplusplus::NJABBuilder
NJABBuilder	Experimental/NJABBuilder.h	/^struct NJABBuilder: public OrbitalBuilderBase$/;"	s	namespace:qmcplusplus
NLJOB_GPU_H	NLjobGPU.h	15;"	d
NL_JobListGPU	OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<NLjobGPU<CudaReal> > NL_JobListGPU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_JobListGPU	TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<NLjobGPU<CudaReal> > NL_JobListGPU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NL_JobListHost	OneBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<NLjobGPU<CudaReal> > NL_JobListHost;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_JobListHost	TwoBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<NLjobGPU<CudaReal> > NL_JobListHost;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NL_NumCoefsGPU	OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<int> NL_NumCoefsGPU,  NL_NumQuadPointsGPU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_NumCoefsGPU	TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<int> NL_NumCoefsGPU,  NL_NumQuadPointsGPU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NL_NumCoefsHost	OneBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<int> NL_NumCoefsHost, NL_NumQuadPointsHost;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_NumCoefsHost	TwoBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<int> NL_NumCoefsHost, NL_NumQuadPointsHost;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NL_NumQuadPointsGPU	OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<int> NL_NumCoefsGPU,  NL_NumQuadPointsGPU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_NumQuadPointsGPU	TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<int> NL_NumCoefsGPU,  NL_NumQuadPointsGPU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NL_NumQuadPointsHost	OneBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<int> NL_NumCoefsHost, NL_NumQuadPointsHost;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_NumQuadPointsHost	TwoBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<int> NL_NumCoefsHost, NL_NumQuadPointsHost;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NL_QuadPointsGPU	OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> NL_rMaxGPU,  NL_QuadPointsGPU,  NL_RatiosGPU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_QuadPointsGPU	TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> NL_rMaxGPU,  NL_QuadPointsGPU,  NL_RatiosGPU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NL_QuadPointsHost	OneBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> NL_rMaxHost, NL_QuadPointsHost, NL_RatiosHost;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_QuadPointsHost	TwoBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> NL_rMaxHost, NL_QuadPointsHost, NL_RatiosHost;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NL_RatiosGPU	OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> NL_rMaxGPU,  NL_QuadPointsGPU,  NL_RatiosGPU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_RatiosGPU	TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> NL_rMaxGPU,  NL_QuadPointsGPU,  NL_RatiosGPU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NL_RatiosHost	OneBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> NL_rMaxHost, NL_QuadPointsHost, NL_RatiosHost;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_RatiosHost	TwoBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> NL_rMaxHost, NL_QuadPointsHost, NL_RatiosHost;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NL_SplineCoefsListGPU	OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal*> NL_SplineCoefsListGPU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_SplineCoefsListGPU	TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal*> NL_SplineCoefsListGPU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NL_SplineCoefsListHost	OneBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal*> NL_SplineCoefsListHost;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_SplineCoefsListHost	TwoBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal*> NL_SplineCoefsListHost;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NL_rMaxGPU	OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> NL_rMaxGPU,  NL_QuadPointsGPU,  NL_RatiosGPU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_rMaxGPU	TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> NL_rMaxGPU,  NL_QuadPointsGPU,  NL_RatiosGPU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NL_rMaxHost	OneBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> NL_rMaxHost, NL_QuadPointsHost, NL_RatiosHost;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NL_rMaxHost	TwoBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> NL_rMaxHost, NL_QuadPointsHost, NL_RatiosHost;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NLjobGPU	NLjobGPU.h	/^struct NLjobGPU$/;"	s
NLratios	OneBodyJastrowOrbitalBspline.cpp	/^OneBodyJastrowOrbitalBspline::NLratios$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NLratios	TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::NLratios$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
NN	TwoBodyJastrowOrbital.h	/^  int NN;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
NN	eeI_JastrowOrbital.h	/^  int NN;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
NOSYMM	kSpaceJastrow.h	/^  typedef enum { CRYSTAL, ISOTROPIC, NOSYMM } SymmetryType;$/;"	e	enum:qmcplusplus::kSpaceJastrow::__anon1
N_eI	PolynomialFunctor3D.h	/^  int N_eI, N_ee;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
N_ee	PolynomialFunctor3D.h	/^  int N_eI, N_ee;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
NeedToRestore	LRTwoBodyJastrow.h	/^  bool NeedToRestore;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
Nelec	eeI_JastrowOrbital.h	/^  int Nelec, Nion;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
Nion	eeI_JastrowOrbital.h	/^  int Nelec, Nion;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
NormConstant	LRTwoBodyJastrow.h	/^  RealType NormConstant;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
NormConstant	kSpaceJastrow.h	/^  RealType CellVolume, NormConstant;$/;"	m	class:qmcplusplus::kSpaceJastrow
NormFac	ThreeBodyGeminal.h	/^  RealType NormFac;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
NormFactor	LRBreakupUtilities.h	/^  T NormFactor;$/;"	m	struct:qmcplusplus::DerivRPABreakup
NormFactor	LRBreakupUtilities.h	/^  T NormFactor;$/;"	m	struct:qmcplusplus::DerivYukawaBreakup
NormFactor	LRBreakupUtilities.h	/^  T NormFactor;$/;"	m	struct:qmcplusplus::EPRPABreakup
NormFactor	LRBreakupUtilities.h	/^  T NormFactor;$/;"	m	struct:qmcplusplus::RPABreakup
NormFactor	LRBreakupUtilities.h	/^  T NormFactor;$/;"	m	struct:qmcplusplus::YukawaBreakup
NormFactor	LRBreakupUtilities.h	/^  T NormFactor;$/;"	m	struct:qmcplusplus::derivEPRPABreakup
Normalized	CBSOBuilder.h	/^  bool Normalized;$/;"	m	class:qmcplusplus::CBSOBuilder
Np	CompositeFunctor.h	/^  int Np;$/;"	m	struct:qmcplusplus::AnyTimesRnFunctor
NumCenterGroups	OneBodyJastrowOrbitalBspline.h	/^  int NumCenterGroups, NumElecGroups;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NumCenters	ThreeBodyJastrowOrbital.h	/^  IndexType NumCenters;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
NumComponents	LinearCombinationFunctor.h	/^  int NumComponents;$/;"	m	struct:LinearCombinationFunctor
NumConstraints	PolynomialFunctor3D.h	/^  int NumConstraints, NumGamma;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
NumElecGroups	OneBodyJastrowOrbitalBspline.h	/^  int NumCenterGroups, NumElecGroups;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
NumElecs	kSpaceJastrow.h	/^  int NumElecs, NumSpins;$/;"	m	class:qmcplusplus::kSpaceJastrow
NumGamma	PolynomialFunctor3D.h	/^  int NumConstraints, NumGamma;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
NumGridPoints	CBSOBuilder.h	/^  int NumGridPoints;$/;"	m	class:qmcplusplus::CBSOBuilder
NumGridPoints	Experimental/AnyConstraints.h	/^    int NumGridPoints;$/;"	m	struct:qmcplusplus::AnyConstraints::BasisGroupType
NumGridPoints	SplineFunctors.h	/^  int NumGridPoints;$/;"	m	struct:qmcplusplus::CubicSplineBasisSet
NumGridPoints	SplineFunctors.h	/^  int NumGridPoints;$/;"	m	struct:qmcplusplus::CubicSplineSingle
NumGridPoints	WMJastrowBuilder.h	/^    int NumGridPoints;$/;"	m	struct:qmcplusplus::WMJastrowBuilder::BasisGroupType
NumGroups	DiffTwoBodyJastrowOrbital.h	/^  int NumGroups;$/;"	m	class:qmcplusplus::DiffTwoBodyJastrowOrbital
NumGroups	TwoBodyJastrowOrbital.h	/^  int NumGroups;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
NumIonSpecies	kSpaceJastrow.h	/^  int NumIons, NumIonSpecies;$/;"	m	class:qmcplusplus::kSpaceJastrow
NumIons	kSpaceJastrow.h	/^  int NumIons, NumIonSpecies;$/;"	m	class:qmcplusplus::kSpaceJastrow
NumKpts	LRTwoBodyJastrow.h	/^  IndexType NumKpts;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
NumParams	BesselZeroFunctor.h	/^  int NumParams;$/;"	m	struct:qmcplusplus::BesselZero
NumParams	BsplineFunctor.h	/^  int NumParams;$/;"	m	struct:qmcplusplus::BsplineFunctor
NumParams	SplineFunctors.h	/^  int NumParams;$/;"	m	struct:qmcplusplus::CubicSplineSingle
NumParams_eI	BsplineFunctor3D.h	/^  int NumParams_eI, NumParams_ee;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
NumParams_ee	BsplineFunctor3D.h	/^  int NumParams_eI, NumParams_ee;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
NumPtcls	DiffOneBodyJastrowOrbital.h	/^  int NumPtcls;$/;"	m	class:qmcplusplus::DiffOneBodyJastrowOrbital
NumPtcls	DiffOneBodySpinJastrowOrbital.h	/^  int NumPtcls;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
NumPtcls	DiffTwoBodyJastrowOrbital.h	/^  int NumPtcls;$/;"	m	class:qmcplusplus::DiffTwoBodyJastrowOrbital
NumPtcls	LRTwoBodyJastrow.h	/^  IndexType NumPtcls;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
NumPtcls	ThreeBodyBlockSparse.h	/^  int NumPtcls;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
NumPtcls	ThreeBodyGeminal.h	/^  int NumPtcls;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
NumPtcls	ThreeBodyJastrowOrbital.h	/^  IndexType NumPtcls;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
NumQuadPoints	NLjobGPU.h	/^  int Elec, NumQuadPoints;$/;"	m	struct:NLjobGPU
NumSpecies	LRTwoBodyJastrow.h	/^  IndexType NumSpecies;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
NumSpins	kSpaceJastrow.h	/^  int NumElecs, NumSpins;$/;"	m	class:qmcplusplus::kSpaceJastrow
NumVars	DiffOneBodyJastrowOrbital.h	/^  int NumVars;$/;"	m	class:qmcplusplus::DiffOneBodyJastrowOrbital
NumVars	DiffOneBodySpinJastrowOrbital.h	/^  int NumVars;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
NumVars	DiffTwoBodyJastrowOrbital.h	/^  int NumVars;$/;"	m	class:qmcplusplus::DiffTwoBodyJastrowOrbital
NumVars	eeI_JastrowOrbital.h	/^  int NumVars;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
NumericalJastrow	NumericalJastrowFunctor.h	/^  NumericalJastrow(): InFunc(0), OutFunc(0) { }$/;"	f	struct:qmcplusplus::NumericalJastrow
NumericalJastrow	NumericalJastrowFunctor.h	/^struct NumericalJastrow: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
ONE_BODY_JASTROW_ORBITAL_BSPLINE_H	OneBodyJastrowOrbitalBspline.h	17;"	d
OffSet	CompositeFunctor.h	/^  real_type OffSet;$/;"	m	struct:qmcplusplus::TruncatedPadeFunctor
OffSet	CubicBsplineGroup.h	/^  value_type OffSet;$/;"	m	class:qmcplusplus::CubicBsplineGroup
OffSet	DiffOneBodyJastrowOrbital.h	/^  std::vector<std::pair<int,int> > OffSet;$/;"	m	class:qmcplusplus::DiffOneBodyJastrowOrbital
OffSet	DiffTwoBodyJastrowOrbital.h	/^  std::vector<std::pair<int,int> > OffSet;$/;"	m	class:qmcplusplus::DiffTwoBodyJastrowOrbital
OneBodyCoefs	kSpaceJastrow.h	/^  std::vector<ComplexType> OneBodyCoefs;$/;"	m	class:qmcplusplus::kSpaceJastrow
OneBodyGvecs	kSpaceJastrow.h	/^  std::vector<PosType> OneBodyGvecs;$/;"	m	class:qmcplusplus::kSpaceJastrow
OneBodyID	kSpaceJastrow.h	/^  std::string OneBodyID;$/;"	m	class:qmcplusplus::kSpaceJastrow
OneBodyJastrowOrbital	OneBodyJastrowOrbital.h	/^  OneBodyJastrowOrbital(const ParticleSet& centers, ParticleSet& els)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
OneBodyJastrowOrbital	OneBodyJastrowOrbital.h	/^class OneBodyJastrowOrbital: public OrbitalBase$/;"	c	namespace:qmcplusplus
OneBodyJastrowOrbitalBspline	OneBodyJastrowOrbitalBspline.h	/^  OneBodyJastrowOrbitalBspline(ParticleSet &centers, ParticleSet& elecs) :$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
OneBodyJastrowOrbitalBspline	OneBodyJastrowOrbitalBspline.h	/^class OneBodyJastrowOrbitalBspline :$/;"	c	namespace:qmcplusplus
OneBodyPhase	kSpaceJastrow.h	/^  std::vector<RealType> OneBodyPhase, TwoBodyPhase;$/;"	m	class:qmcplusplus::kSpaceJastrow
OneBodySpinJastrowOrbital	OneBodySpinJastrowOrbital.h	/^  OneBodySpinJastrowOrbital(const ParticleSet& centers, ParticleSet& els)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
OneBodySpinJastrowOrbital	OneBodySpinJastrowOrbital.h	/^class OneBodySpinJastrowOrbital: public OrbitalBase$/;"	c	namespace:qmcplusplus
OneBodySymmCoefs	kSpaceJastrow.h	/^  std::vector<kSpaceCoef<ComplexType> > OneBodySymmCoefs;$/;"	m	class:qmcplusplus::kSpaceJastrow
OneBodySymmType	kSpaceJastrow.h	/^  SymmetryType OneBodySymmType, TwoBodySymmType;$/;"	m	class:qmcplusplus::kSpaceJastrow
OneBodyVarMap	kSpaceJastrow.h	/^  std::vector<int> OneBodyVarMap;$/;"	m	class:qmcplusplus::kSpaceJastrow
OneBody_e2iGr	kSpaceJastrow.h	/^  std::vector<ComplexType> OneBody_e2iGr,$/;"	m	class:qmcplusplus::kSpaceJastrow
OneBody_rhoG	kSpaceJastrow.h	/^  std::vector<ComplexType> OneBody_rhoG, TwoBody_rhoG;$/;"	m	class:qmcplusplus::kSpaceJastrow
OneGradGPU	OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> SumGPU, GradLaplGPU, OneGradGPU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
OneGradGPU	TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> SumGPU, GradLaplGPU, OneGradGPU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
OneGradHost	OneBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> SumHost, GradLaplHost, OneGradHost;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
OneGradHost	TwoBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> SumHost, GradLaplHost, OneGradHost;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
OneOverC	PadeFunctors.h	/^  real_type OneOverC, B2;$/;"	m	struct:qmcplusplus::ScaledPadeFunctor
OneOverE	CompositeFunctor.h	/^  real_type OneOverE;$/;"	m	struct:qmcplusplus::DCuspCorrectionDEFunctor
OneOverL	PolyFunctor.h	/^  real_type OneOverL;$/;"	m	struct:qmcplusplus::PolyFunctor
OneOverRc	DerivWMFunctor.h	/^  real_type OneOverRc;$/;"	m	struct:qmcplusplus::D2WMDB2Functor
OneOverRc	DerivWMFunctor.h	/^  real_type OneOverRc;$/;"	m	struct:qmcplusplus::DWMDBFunctor
OneOverRc	WMFunctor.h	/^  real_type OneOverRc;$/;"	m	struct:qmcplusplus::WMFunctor
OneOverRc	WMFunctor.h	/^  real_type OneOverRc;$/;"	m	struct:qmcplusplus::WMFunctorSet
OneOverRs	LRBreakupUtilities.h	/^  T OneOverRs;$/;"	m	struct:qmcplusplus::DerivYukawaBreakup
OneOverRsSq	kSpaceJastrow.h	/^  T OneOverRsSq;$/;"	m	struct:qmcplusplus::RPA0
OneOverSqrtRs	LRBreakupUtilities.h	/^  T OneOverSqrtRs;$/;"	m	struct:qmcplusplus::DerivYukawaBreakup
OneOverSqrtRs	LRBreakupUtilities.h	/^  T OneOverSqrtRs;$/;"	m	struct:qmcplusplus::YukawaBreakup
OneOverSqrtRs3	LRBreakupUtilities.h	/^  T OneOverSqrtRs3;$/;"	m	struct:qmcplusplus::DerivYukawaBreakup
OpenGaussianSlaterFunctor	OpenGaussianSlaterFunctor.h	/^  OpenGaussianSlaterFunctor(real_type a=1.0, real_type b=1.0 ):ID_A("G_A"), ID_B("G_B")$/;"	f	struct:qmcplusplus::OpenGaussianSlaterFunctor
OpenGaussianSlaterFunctor	OpenGaussianSlaterFunctor.h	/^struct OpenGaussianSlaterFunctor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
Opt_A	PadeFunctors.h	/^  bool Opt_A, Opt_B, Opt_C, Opt_D;$/;"	m	struct:qmcplusplus::PadeTwo2ndOrderFunctor
Opt_A	PadeFunctors.h	/^  bool Opt_A, Opt_B, Opt_C;$/;"	m	struct:qmcplusplus::Pade2ndOrderFunctor
Opt_A	PadeFunctors.h	/^  bool Opt_A;$/;"	m	struct:qmcplusplus::PadeFunctor
Opt_B	PadeFunctors.h	/^  bool Opt_A, Opt_B, Opt_C, Opt_D;$/;"	m	struct:qmcplusplus::PadeTwo2ndOrderFunctor
Opt_B	PadeFunctors.h	/^  bool Opt_A, Opt_B, Opt_C;$/;"	m	struct:qmcplusplus::Pade2ndOrderFunctor
Opt_B	PadeFunctors.h	/^  bool Opt_B;$/;"	m	struct:qmcplusplus::PadeFunctor
Opt_C	PadeFunctors.h	/^  bool Opt_A, Opt_B, Opt_C, Opt_D;$/;"	m	struct:qmcplusplus::PadeTwo2ndOrderFunctor
Opt_C	PadeFunctors.h	/^  bool Opt_A, Opt_B, Opt_C;$/;"	m	struct:qmcplusplus::Pade2ndOrderFunctor
Opt_D	PadeFunctors.h	/^  bool Opt_A, Opt_B, Opt_C, Opt_D;$/;"	m	struct:qmcplusplus::PadeTwo2ndOrderFunctor
OptimizableSetType	DerivPadeFunctors.h	/^  typedef typename OptimizableFunctorBase<T>::OptimizableSetType OptimizableSetType;$/;"	t	struct:qmcplusplus::D2PadeDB2Functor
OptimizableSetType	DerivPadeFunctors.h	/^  typedef typename OptimizableFunctorBase<T>::OptimizableSetType OptimizableSetType;$/;"	t	struct:qmcplusplus::DPadeDBFunctor
OptimizableSetType	DerivWMFunctor.h	/^  typedef typename OptimizableFunctorBase<T>::OptimizableSetType OptimizableSetType;$/;"	t	struct:qmcplusplus::D2WMDB2Functor
OptimizableSetType	DerivWMFunctor.h	/^  typedef typename OptimizableFunctorBase<T>::OptimizableSetType OptimizableSetType;$/;"	t	struct:qmcplusplus::DWMDBFunctor
OptimizableSetType	PolyFunctor.h	/^  typedef typename OptimizableFunctorBase<T>::OptimizableSetType OptimizableSetType;$/;"	t	struct:qmcplusplus::PolyFunctor
OptimizableSetType	RPAJastrowFunctor.h	/^  typedef typename OptimizableFunctorBase<T>::OptimizableSetType OptimizableSetType;$/;"	t	struct:qmcplusplus::RPAJastrowFunctor
OutFunc	NumericalJastrowFunctor.h	/^  FNOUT *OutFunc;$/;"	m	struct:qmcplusplus::NumericalJastrow
OutFunc	SplineFunctors.h	/^  FNOUT *OutFunc;$/;"	m	struct:qmcplusplus::CubicSplineBasisSet
OutFunc	SplineFunctors.h	/^  FNOUT OutFunc;$/;"	m	struct:qmcplusplus::CubicSplineSingle
OutFuncType	Experimental/AnyConstraints.h	/^  typedef CubicSplineSingle<RealType,SplineEngineType> OutFuncType;$/;"	t	struct:qmcplusplus::AnyConstraints
OutFuncType	Experimental/NJAABuilder.h	/^  typedef FuncType::FNOUT             OutFuncType;$/;"	t	struct:qmcplusplus::NJAABuilder
OutFuncType	Experimental/NJABBuilder.h	/^  typedef FuncType::FNOUT             OutFuncType;$/;"	t	struct:qmcplusplus::NJABBuilder
OutFuncType	WMJastrowBuilder.h	/^  typedef CubicSplineSingle<RealType,SplineEngineType> OutFuncType;$/;"	t	class:qmcplusplus::WMJastrowBuilder
Out_	Experimental/AnyConstraints.h	/^    OutFuncType* Out_;$/;"	m	struct:qmcplusplus::AnyConstraints::BasisGroupType
Out_	WMJastrowBuilder.h	/^    OutFuncType* Out_;$/;"	m	struct:qmcplusplus::WMJastrowBuilder::BasisGroupType
P	CubicBsplineGroup.h	/^  container_type P;$/;"	m	class:qmcplusplus::CubicBsplineGroup
Pade2ndOrderFunctor	PadeFunctors.h	/^  Pade2ndOrderFunctor(real_type a=1.0, real_type b=1.0, real_type c=1.0)$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
Pade2ndOrderFunctor	PadeFunctors.h	/^struct Pade2ndOrderFunctor:public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
PadeBuilder	Experimental/PadeBuilder.cpp	/^PadeBuilder::PadeBuilder(ParticleSet& p, TrialWaveFunction& psi,$/;"	f	class:qmcplusplus::PadeBuilder
PadeConstraints	Experimental/PadeConstraints.cpp	/^PadeConstraints::PadeConstraints(ParticleSet& p, TrialWaveFunction& psi, bool nospin):$/;"	f	class:qmcplusplus::PadeConstraints
PadeConstraints	Experimental/PadeConstraints.h	/^struct PadeConstraints: public OrbitalConstraintsBase$/;"	s	namespace:qmcplusplus
PadeFunctor	PadeFunctors.h	/^  PadeFunctor(): Scale(1.0),ID_A("0"),ID_B("0") { }$/;"	f	struct:qmcplusplus::PadeFunctor
PadeFunctor	PadeFunctors.h	/^  explicit PadeFunctor(real_type a, const std::string& ida)$/;"	f	struct:qmcplusplus::PadeFunctor
PadeFunctor	PadeFunctors.h	/^  explicit PadeFunctor(real_type a, real_type b, real_type s=1.0):$/;"	f	struct:qmcplusplus::PadeFunctor
PadeFunctor	PadeFunctors.h	/^struct PadeFunctor:public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
PadeJastrowBuilder	PadeJastrowBuilder.cpp	/^PadeJastrowBuilder::PadeJastrowBuilder(ParticleSet& target, TrialWaveFunction& psi,$/;"	f	class:qmcplusplus::PadeJastrowBuilder
PadeJastrowBuilder	PadeJastrowBuilder.h	/^struct PadeJastrowBuilder: public OrbitalBuilderBase$/;"	s	namespace:qmcplusplus
PadeTwo2ndOrderFunctor	PadeFunctors.h	/^  PadeTwo2ndOrderFunctor(real_type a=1.0, real_type b=1.0, real_type c=1.0, real_type d=1.0)$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
PadeTwo2ndOrderFunctor	PadeFunctors.h	/^struct PadeTwo2ndOrderFunctor:public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
PairID	TwoBodyJastrowOrbital.h	/^  Matrix<int> PairID;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
ParamArray	BsplineFunctor3D.h	/^  Array<real_type,3> ParamArray;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
ParameterNames	BsplineFunctor.h	/^  std::vector<std::string> ParameterNames;$/;"	m	struct:qmcplusplus::BsplineFunctor
ParameterNames	BsplineFunctor3D.h	/^  std::vector<std::string> ParameterNames;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
ParameterNames	PolynomialFunctor3D.h	/^  std::vector<std::string> ParameterNames;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
Parameters	BesselZeroFunctor.h	/^  std::vector<real_type> Parameters;$/;"	m	struct:qmcplusplus::BesselZero
Parameters	BsplineFunctor.h	/^  std::vector<real_type> Parameters;$/;"	m	struct:qmcplusplus::BsplineFunctor
Parameters	BsplineFunctor3D.h	/^  std::vector<real_type> Parameters;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
Parameters	PolynomialFunctor3D.h	/^  std::vector<real_type> Parameters, d_valsFD;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
Params	WMFunctor.h	/^  std::vector<variable_type> Params;$/;"	m	struct:qmcplusplus::WMFunctorSet
Phi	LinearCombinationFunctor.h	/^  std::vector<ComponentType*> Phi;$/;"	m	struct:LinearCombinationFunctor
PolarizedJastrow	PolarizedJastrow.h	/^  PolarizedJastrow():alpha(0.0)$/;"	f	class:qmcplusplus::PolarizedJastrow
PolarizedJastrow	PolarizedJastrow.h	/^class PolarizedJastrow: public OrbitalBase$/;"	c	namespace:qmcplusplus
PolyConstraints	PolyConstraints.cpp	/^PolyConstraints::PolyConstraints(ParticleSet& p, TrialWaveFunction& psi, bool spinInd):$/;"	f	class:qmcplusplus::PolyConstraints
PolyConstraints	PolyConstraints.h	/^struct PolyConstraints: public OrbitalConstraintsBase$/;"	s	namespace:qmcplusplus
PolyFunctor	PolyFunctor.h	/^  inline PolyFunctor(): L(10.0), K(0), N(0), OneOverL(0),KOverL(0), KKOverL2(0)$/;"	f	struct:qmcplusplus::PolyFunctor
PolyFunctor	PolyFunctor.h	/^  inline PolyFunctor(real_type rc, int k): L(rc), K(k), N(0)$/;"	f	struct:qmcplusplus::PolyFunctor
PolyFunctor	PolyFunctor.h	/^struct PolyFunctor: public OptimizableFunctorBase<T>$/;"	s	namespace:qmcplusplus
PolynomialFunctor3D	PolynomialFunctor3D.h	/^  PolynomialFunctor3D(real_type ee_cusp=0.0, real_type eI_cusp=0.0) :$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
PolynomialFunctor3D	PolynomialFunctor3D.h	/^struct PolynomialFunctor3D: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
Prefactor	kSpaceJastrow.h	/^  double Prefactor;$/;"	m	class:qmcplusplus::kSpaceJastrow
Psi	RPAJastrow.h	/^  std::vector<OrbitalBase*> Psi;$/;"	m	struct:qmcplusplus::RPAJastrow
PtclRef	TwoBodyJastrowOrbital.h	/^  ParticleSet *PtclRef;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
PtclRef	TwoBodyJastrowOrbitalBspline.h	/^  ParticleSet &PtclRef;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
QMCPLUSPLUS_ANY_CONSTRAINTS_H	Experimental/AnyConstraints.h	16;"	d
QMCPLUSPLUS_BESSELZERO_FUNCTOR_H	BesselZeroFunctor.h	15;"	d
QMCPLUSPLUS_BSPLINE3D_FUNCTOR_H	BsplineFunctor3D.h	17;"	d
QMCPLUSPLUS_BSPLINE_FUNCTOR_H	BsplineFunctor.h	21;"	d
QMCPLUSPLUS_BSPLINE_JASTROW_BUILDER_H	BsplineJastrowBuilder.h	16;"	d
QMCPLUSPLUS_CHEBYSHEV_JASTROWFUNCTION_H	ChebyshevFunctor.h	17;"	d
QMCPLUSPLUS_COMBOFUNCTORWITHCONSTRAINTS_H	LinearCombinationFunctor.h	18;"	d
QMCPLUSPLUS_COMMON_EEN_JASTROW_H	eeI_JastrowOrbital.h	20;"	d
QMCPLUSPLUS_COMMON_TWOBODYJASTROW_H	TwoBodyJastrowOrbital.h	21;"	d
QMCPLUSPLUS_COMPOSITEFUNCTORS_H	CompositeFunctor.h	17;"	d
QMCPLUSPLUS_CUBICBSPLINEGROUP_H	CubicBsplineGroup.h	16;"	d
QMCPLUSPLUS_CUBICFUNCTORSFORJASTROW_H	SplineFunctors.h	18;"	d
QMCPLUSPLUS_DERIV_PADEFUNCTORS_H	DerivPadeFunctors.h	27;"	d
QMCPLUSPLUS_DIFFERENTIAL_ONEBODYJASTROW_H	DiffOneBodyJastrowOrbital.h	16;"	d
QMCPLUSPLUS_DIFFERENTIAL_ONEBODYSPINJASTROW_H	DiffOneBodySpinJastrowOrbital.h	16;"	d
QMCPLUSPLUS_DIFFERENTIAL_TWOBODYJASTROW_H	DiffTwoBodyJastrowOrbital.h	18;"	d
QMCPLUSPLUS_EEI_JASTROW_BUILDER_H	eeI_JastrowBuilder.h	15;"	d
QMCPLUSPLUS_GAUSSIANSLATER_H	OpenGaussianSlaterFunctor.h	15;"	d
QMCPLUSPLUS_GAUSSIAN_H	GaussianFunctor.h	17;"	d
QMCPLUSPLUS_GENERALIZED_JASTROWBUILDER_H	JastrowBuilder.h	17;"	d
QMCPLUSPLUS_GENERIC_JASTROW_BUILDER_H	Experimental/OldJastrowBuilder.h	16;"	d
QMCPLUSPLUS_GENERIC_ONEBODYJASTROWSPIN_H	OneBodySpinJastrowOrbital.h	17;"	d
QMCPLUSPLUS_GENERIC_ONEBODYJASTROW_H	OneBodyJastrowOrbital.h	20;"	d
QMCPLUSPLUS_GENERIC_THREEBODYJASTROWORBITAL_H	ThreeBodyJastrowOrbital.h	16;"	d
QMCPLUSPLUS_GENERIC_THREEBODYPADE_H	ThreeBodyPade.h	18;"	d
QMCPLUSPLUS_JASTROWBASISBUILDER_H	JastrowBasisBuilder.h	17;"	d
QMCPLUSPLUS_KSPACE_JASTROW_BUILDER_H	kSpaceJastrowBuilder.h	16;"	d
QMCPLUSPLUS_LONGRANGEJASTROW_BREAKUPUTILITY_H	LRBreakupUtilities.h	20;"	d
QMCPLUSPLUS_LR_KSPACEJASTROW_H	kSpaceJastrow.h	25;"	d
QMCPLUSPLUS_LR_RPAJASTROW_H	LRTwoBodyJastrow.h	25;"	d
QMCPLUSPLUS_MCMILLANJ2G_H	McMillanJ2GFunctor.h	16;"	d
QMCPLUSPLUS_MCMILLANJ2_H	McMillanJ2Functor.h	16;"	d
QMCPLUSPLUS_MODIFIED_PADEFUNCTION_H	ModPadeFunctor.h	17;"	d
QMCPLUSPLUS_NUMERICAL_JASTROWFUNCTIONS_H	NumericalJastrowFunctor.h	16;"	d
QMCPLUSPLUS_NUMERICAL_JASTROW_AA_BUILDER_H	Experimental/NJAABuilder.h	16;"	d
QMCPLUSPLUS_NUMERICAL_JASTROW_AB_BUILDER_H	Experimental/NJABBuilder.h	16;"	d
QMCPLUSPLUS_NUMERICAL_PBC_JASTROW_AA_BUILDER_H	Experimental/JAAPBCBuilder.h	15;"	d
QMCPLUSPLUS_ORIGINAL_JASTROW_AA_BUILDER_H	JAABuilder.h	17;"	d
QMCPLUSPLUS_ORIGINAL_JASTROW_AB_BUILDER_H	JABBuilder.h	16;"	d
QMCPLUSPLUS_PADEFUNCTORS_H	PadeFunctors.h	21;"	d
QMCPLUSPLUS_PADE_COMBO_CONSTRAINTS_H	Experimental/PadeConstraints.h	16;"	d
QMCPLUSPLUS_PADE_JASTROW_BUILDER_H	PadeJastrowBuilder.h	15;"	d
QMCPLUSPLUS_POLARIZED_ONEBODYJASTROW_H	PolarizedJastrow.h	16;"	d
QMCPLUSPLUS_POLYFUNCTOR_H	PolyFunctor.h	16;"	d
QMCPLUSPLUS_POLYNOMIAL3D_FUNCTOR_H	PolynomialFunctor3D.h	17;"	d
QMCPLUSPLUS_POLYNOMIAL_CONSTRAINTS_H	PolyConstraints.h	16;"	d
QMCPLUSPLUS_RPA_FUNCTOR_H	RPAJastrowFunctor.h	16;"	d
QMCPLUSPLUS_RPA_JASTROW_H	RPAJastrow.h	17;"	d
QMCPLUSPLUS_SINGLE_RPA_JASTROW_H	singleRPAJastrowBuilder.h	16;"	d
QMCPLUSPLUS_SPHERICALBASISBUILDER_H	CBSOBuilder.h	15;"	d
QMCPLUSPLUS_THREEBODY_BLOCKSPARSE_H	ThreeBodyBlockSparse.h	16;"	d
QMCPLUSPLUS_THREEBODY_GEMINALBUILDER_H	ThreeBodyGeminalBuilder.h	18;"	d
QMCPLUSPLUS_THREEBODY_GEMINAL_H	ThreeBodyGeminal.h	16;"	d
QMCPLUSPLUS_THREEBODY_PADE_BUILDER_H	ThreeBodyPadeBuilder.h	18;"	d
QMCPLUSPLUS_TWOBODYJASTROWCOMBO_BUILDER_H	Experimental/TwoBodyJastrowBuilder.h	15;"	d
QMCPLUSPLUS_WMFUNCTOR_SM_CONSTRAINTS_H	Experimental/WMConstraints.h	16;"	d
QMCPLUSPLUS_WMFUNCTOR_WITHPADECORRECTION_H	DerivWMFunctor.h	16;"	d
QMCPLUSPLUS_WMFUNCTOR_WITHPADECORRECTION_H	WMFunctor.h	16;"	d
QMCPLUSPLUS_WM_JASTROW_BUILDER_H	WMJastrowBuilder.h	16;"	d
QuadPoints	NLjobGPU.h	/^  S *R, *QuadPoints, *Ratios;$/;"	m	struct:NLjobGPU
R	NLjobGPU.h	/^  S *R, *QuadPoints, *Ratios;$/;"	m	struct:NLjobGPU
R0	McMillanJ2Functor.h	/^  real_type R0;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
R0	McMillanJ2GFunctor.h	/^  real_type A, B, R0, c1, c2;$/;"	m	struct:qmcplusplus::McMillanJ2GFunctor
R1	NumericalJastrowFunctor.h	/^  T R1;$/;"	m	struct:qmcplusplus::CutoffFunctor
R12	CompositeFunctor.h	/^  real_type R12;$/;"	m	struct:qmcplusplus::CuspCorrectionFunctor
R12	CompositeFunctor.h	/^  real_type R12;$/;"	m	struct:qmcplusplus::DCuspCorrectionDEFunctor
R12	NumericalJastrowFunctor.h	/^  T R12;$/;"	m	struct:qmcplusplus::CutoffFunctor
R2	NumericalJastrowFunctor.h	/^  T R2;$/;"	m	struct:qmcplusplus::CutoffFunctor
RC	GaussianFunctor.h	/^  real_type A, B, C, RC;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
RC	GaussianFunctor.h	/^  real_type RC;$/;"	m	struct:qmcplusplus::GaussianFunctor
RC	McMillanJ2Functor.h	/^  real_type RC;$/;"	m	struct:qmcplusplus::ModMcMillanJ2Functor
RC	McMillanJ2Functor.h	/^  real_type RC;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
RPA0	kSpaceJastrow.h	/^  RPA0(T rs=1):Rs(rs)$/;"	f	struct:qmcplusplus::RPA0
RPA0	kSpaceJastrow.h	/^struct RPA0$/;"	s	namespace:qmcplusplus
RPABFeeBreakup	LRBreakupUtilities.h	/^  inline RPABFeeBreakup() {}$/;"	f	struct:qmcplusplus::RPABFeeBreakup
RPABFeeBreakup	LRBreakupUtilities.h	/^struct RPABFeeBreakup$/;"	s	namespace:qmcplusplus
RPABreakup	LRBreakupUtilities.h	/^  inline RPABreakup() {}$/;"	f	struct:qmcplusplus::RPABreakup
RPABreakup	LRBreakupUtilities.h	/^struct RPABreakup$/;"	s	namespace:qmcplusplus
RPAJastrow	RPAJastrow.cpp	/^RPAJastrow::RPAJastrow(ParticleSet& target, bool is_manager)$/;"	f	class:qmcplusplus::RPAJastrow
RPAJastrow	RPAJastrow.h	/^struct RPAJastrow: public OrbitalBase$/;"	s	namespace:qmcplusplus
RPAJastrowFunctor	RPAJastrowFunctor.h	/^  RPAJastrowFunctor(RPAJastrow<T>* func): SameSpin(true)$/;"	f	struct:qmcplusplus::RPAJastrowFunctor
RPAJastrowFunctor	RPAJastrowFunctor.h	/^  RPAJastrowFunctor(bool samespin=true): SameSpin(samespin)$/;"	f	struct:qmcplusplus::RPAJastrowFunctor
RPAJastrowFunctor	RPAJastrowFunctor.h	/^struct RPAJastrowFunctor: public OptimizableFunctorBase<T>$/;"	s	namespace:qmcplusplus
R_B	BesselZeroFunctor.h	/^  real_type R_B,R_Binv;$/;"	m	struct:qmcplusplus::BesselZero
R_Binv	BesselZeroFunctor.h	/^  real_type R_B,R_Binv;$/;"	m	struct:qmcplusplus::BesselZero
RadialOrbitalType	CBSOBuilder.h	/^  typedef CubicSplineSingle<RealType,SplineEngineType> RadialOrbitalType;$/;"	t	class:qmcplusplus::CBSOBuilder
Ratios	NLjobGPU.h	/^  S *R, *QuadPoints, *Ratios;$/;"	m	struct:NLjobGPU
Rc	LRBreakupUtilities.h	/^  T Rc;$/;"	m	struct:qmcplusplus::DerivYukawaBreakup
Rcut	CompositeFunctor.h	/^  real_type Rcut;$/;"	m	struct:qmcplusplus::CuspCorrectionFunctor
Rcut	CompositeFunctor.h	/^  real_type Rcut;$/;"	m	struct:qmcplusplus::DCuspCorrectionDEFunctor
Rcut	CompositeFunctor.h	/^  real_type Rcut;$/;"	m	struct:qmcplusplus::TruncatedPadeFunctor
Rcut	DerivWMFunctor.h	/^  real_type Rcut;$/;"	m	struct:qmcplusplus::D2WMDB2Functor
Rcut	DerivWMFunctor.h	/^  real_type Rcut;$/;"	m	struct:qmcplusplus::DWMDBFunctor
Rcut	Experimental/AnyConstraints.h	/^    RealType Rcut;$/;"	m	struct:qmcplusplus::AnyConstraints::BasisGroupType
Rcut	Experimental/WMConstraints.h	/^  RealType Rcut;$/;"	m	struct:qmcplusplus::WMConstraints
Rcut	NumericalJastrowFunctor.h	/^  CutoffFunctor<real_type> Rcut;$/;"	m	struct:qmcplusplus::NumericalJastrow
Rcut	RPAJastrow.h	/^  RealType Rcut;$/;"	m	struct:qmcplusplus::RPAJastrow
Rcut	WMFunctor.h	/^  real_type Rcut;$/;"	m	struct:qmcplusplus::WMFunctor
Rcut	WMFunctor.h	/^  real_type Rcut;$/;"	m	struct:qmcplusplus::WMFunctorSet
Rcut	WMJastrowBuilder.h	/^    RealType Rcut;$/;"	m	struct:qmcplusplus::WMJastrowBuilder::BasisGroupType
Rcut	singleRPAJastrowBuilder.h	/^  RealType Rcut;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
ReportLevel	BsplineFunctor.h	/^  int ReportLevel;$/;"	m	struct:qmcplusplus::BsplineFunctor
ResetCount	BsplineFunctor.h	/^  int ResetCount;$/;"	m	struct:qmcplusplus::BsplineFunctor
ResetCount	BsplineFunctor3D.h	/^  int ResetCount;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
ResetCount	PolynomialFunctor3D.h	/^  int ResetCount;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
Rhok	LRTwoBodyJastrow.h	/^  Vector<ComplexType> Rhok;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
Rhok_i	LRTwoBodyJastrow.h	/^  Vector<RealType> Rhok_i;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
Rhok_r	LRTwoBodyJastrow.h	/^  Vector<RealType> Rhok_r;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
Rmax	CompositeFunctor.h	/^  real_type Rmax;$/;"	m	struct:qmcplusplus::CuspCorrectionFunctor
Rmax	CompositeFunctor.h	/^  real_type Rmax;$/;"	m	struct:qmcplusplus::DCuspCorrectionDEFunctor
Rmax	CompositeFunctor.h	/^  real_type Rmax;$/;"	m	struct:qmcplusplus::TruncatedPadeFunctor
Rmax	SplineFunctors.h	/^  real_type Rmax;$/;"	m	struct:qmcplusplus::CubicSplineBasisSet
Rmax	SplineFunctors.h	/^  real_type Rmax;$/;"	m	struct:qmcplusplus::CubicSplineSingle
RmaxFixed	CompositeFunctor.h	/^  real_type RmaxFixed;$/;"	m	struct:qmcplusplus::CuspCorrectionFunctor
RmaxFixed	CompositeFunctor.h	/^  real_type RmaxFixed;$/;"	m	struct:qmcplusplus::DCuspCorrectionDEFunctor
Rs	LRBreakupUtilities.h	/^  T Rs;$/;"	m	struct:qmcplusplus::DerivRPABreakup
Rs	LRBreakupUtilities.h	/^  T Rs;$/;"	m	struct:qmcplusplus::DerivYukawaBreakup
Rs	LRBreakupUtilities.h	/^  T Rs;$/;"	m	struct:qmcplusplus::EPRPABreakup
Rs	LRBreakupUtilities.h	/^  T Rs;$/;"	m	struct:qmcplusplus::RPABFeeBreakup
Rs	LRBreakupUtilities.h	/^  T Rs;$/;"	m	struct:qmcplusplus::RPABreakup
Rs	LRBreakupUtilities.h	/^  T Rs;$/;"	m	struct:qmcplusplus::YukawaBreakup
Rs	LRBreakupUtilities.h	/^  T Rs;$/;"	m	struct:qmcplusplus::derivEPRPABreakup
Rs	LRTwoBodyJastrow.h	/^  RealType Rs;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
Rs	RPAJastrow.h	/^  RealType Rs;$/;"	m	struct:qmcplusplus::RPAJastrow
Rs	kSpaceJastrow.h	/^  T Rs;$/;"	m	struct:qmcplusplus::RPA0
Rs	singleRPAJastrowBuilder.h	/^  RealType Rs;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
SRA	RPAJastrow.h	/^  ShortRangePartAdapter<RealType>* SRA;$/;"	m	struct:qmcplusplus::RPAJastrow
SRA	singleRPAJastrowBuilder.h	/^  ShortRangePartAdapter<RealType>* SRA;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
SameBlocksForGroup	ThreeBodyBlockSparse.h	/^  bool SameBlocksForGroup;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
SameSpin	RPAJastrowFunctor.h	/^  bool SameSpin;$/;"	m	struct:qmcplusplus::RPAJastrowFunctor
Scale	PadeFunctors.h	/^  real_type Scale;$/;"	m	struct:qmcplusplus::PadeFunctor
ScaledPadeConstraints	Experimental/PadeConstraints.cpp	/^ScaledPadeConstraints::ScaledPadeConstraints(ParticleSet& p, TrialWaveFunction& psi, bool nospin):$/;"	f	class:qmcplusplus::ScaledPadeConstraints
ScaledPadeConstraints	Experimental/PadeConstraints.h	/^struct ScaledPadeConstraints: public OrbitalConstraintsBase$/;"	s	namespace:qmcplusplus
ScaledPadeFunctor	PadeFunctors.h	/^  explicit ScaledPadeFunctor(real_type a=1.0, real_type b=1.0, real_type c=1.0)$/;"	f	struct:qmcplusplus::ScaledPadeFunctor
ScaledPadeFunctor	PadeFunctors.h	/^struct ScaledPadeFunctor:public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
ShortRangePartAdapter	LRBreakupUtilities.h	/^  explicit ShortRangePartAdapter(HandlerType* inhandler): Uconst(0), myHandler(inhandler)$/;"	f	struct:qmcplusplus::ShortRangePartAdapter
ShortRangePartAdapter	LRBreakupUtilities.h	/^struct ShortRangePartAdapter : OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
ShortRangeRPA	RPAJastrow.h	/^  OrbitalBase* ShortRangeRPA;$/;"	m	struct:qmcplusplus::RPAJastrow
Siblings	CubicBsplineGroup.h	/^  std::vector<ThisType*> Siblings;$/;"	m	class:qmcplusplus::CubicBsplineGroup
SizeOfBasisPerCenter	JastrowBasisBuilder.h	/^  std::vector<int> SizeOfBasisPerCenter;$/;"	m	class:qmcplusplus::JastrowBasisBuilder
Spin	DiffOneBodySpinJastrowOrbital.h	/^  bool Spin;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
Spin	OneBodySpinJastrowOrbital.h	/^  bool Spin;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
SplineCoefs	BsplineFunctor.h	/^  std::vector<real_type> SplineCoefs;$/;"	m	struct:qmcplusplus::BsplineFunctor
SplineCoefs	BsplineFunctor3D.h	/^  Array<real_type,3> SplineCoefs;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
SplineDerivs	BsplineFunctor.h	/^  std::vector<TinyVector<real_type,3> > SplineDerivs;$/;"	m	struct:qmcplusplus::BsplineFunctor
SplineDerivs	BsplineFunctor3D.h	/^  std::vector<TinyVector<real_type,3> > SplineDerivs;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
SplineDerivsGPU	OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> SplineDerivsGPU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
SplineDerivsGPU	TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> SplineDerivsGPU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
SplineDerivsHost	OneBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> SplineDerivsHost;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
SplineDerivsHost	TwoBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> SplineDerivsHost;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
SplineEngineType	CBSOBuilder.h	/^  typedef CubicBspline<RealType,LINEAR_1DGRID,FIRSTDERIV_CONSTRAINTS> SplineEngineType;$/;"	t	class:qmcplusplus::CBSOBuilder
SplineEngineType	Experimental/AnyConstraints.h	/^  typedef CubicBspline<RealType,LINEAR_1DGRID,FIRSTDERIV_CONSTRAINTS> SplineEngineType;$/;"	t	struct:qmcplusplus::AnyConstraints
SplineEngineType	WMJastrowBuilder.h	/^  typedef CubicBspline<RealType,LINEAR_1DGRID,FIRSTDERIV_CONSTRAINTS> SplineEngineType;$/;"	t	class:qmcplusplus::WMJastrowBuilder
SplineEngineType	singleRPAJastrowBuilder.h	/^  typedef CubicBspline<RealType,LINEAR_1DGRID,FIRSTDERIV_CONSTRAINTS> SplineEngineType;$/;"	t	struct:qmcplusplus::singleRPAJastrowBuilder
SqrtRs	LRBreakupUtilities.h	/^  T SqrtRs;$/;"	m	struct:qmcplusplus::DerivYukawaBreakup
SqrtRs	LRBreakupUtilities.h	/^  T SqrtRs;$/;"	m	struct:qmcplusplus::YukawaBreakup
StructureFactor	kSpaceJastrow.cpp	/^kSpaceJastrow::StructureFactor(PosType G, std::vector<ComplexType> &rho_G)$/;"	f	class:qmcplusplus::kSpaceJastrow
SumGPU	OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> SumGPU, GradLaplGPU, OneGradGPU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
SumGPU	TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal> SumGPU, GradLaplGPU, OneGradGPU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
SumHost	OneBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> SumHost, GradLaplHost, OneGradHost;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
SumHost	TwoBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal> SumHost, GradLaplHost, OneGradHost;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
SymmMap	kSpaceJastrowBuilder.h	/^  std::map<std::string,kSpaceJastrow::SymmetryType> SymmMap;$/;"	m	struct:qmcplusplus::kSpaceJastrowBuilder
SymmetryType	kSpaceJastrow.h	/^  typedef enum { CRYSTAL, ISOTROPIC, NOSYMM } SymmetryType;$/;"	t	class:qmcplusplus::kSpaceJastrow	typeref:enum:qmcplusplus::kSpaceJastrow::__anon1
TT	ChebyshevFunctor.h	/^  std::vector<T> TT, dTT, d2TT;$/;"	m	struct:ChebyshevFunctor
TWO_BODY_JASTROW_ORBITAL_BSPLINE_H	TwoBodyJastrowOrbitalBspline.h	17;"	d
TaskID	TwoBodyJastrowOrbital.h	/^  int TaskID;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
ThisType	CubicBsplineGroup.h	/^  typedef CubicBsplineGroup<T,GRIDTYPE>                                            ThisType;$/;"	t	class:qmcplusplus::CubicBsplineGroup
ThreeBodyBlockSparse	ThreeBodyBlockSparse.cpp	/^ThreeBodyBlockSparse::ThreeBodyBlockSparse(const ParticleSet& ions, ParticleSet& els):$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
ThreeBodyBlockSparse	ThreeBodyBlockSparse.h	/^class ThreeBodyBlockSparse: public OrbitalBase$/;"	c	namespace:qmcplusplus
ThreeBodyGeminal	ThreeBodyGeminal.cpp	/^ThreeBodyGeminal::ThreeBodyGeminal(const ParticleSet& ions, ParticleSet& els):$/;"	f	class:qmcplusplus::ThreeBodyGeminal
ThreeBodyGeminal	ThreeBodyGeminal.h	/^class ThreeBodyGeminal: public OrbitalBase$/;"	c	namespace:qmcplusplus
ThreeBodyGeminalBuilder	ThreeBodyGeminalBuilder.cpp	/^ThreeBodyGeminalBuilder::ThreeBodyGeminalBuilder(ParticleSet& els,$/;"	f	class:qmcplusplus::ThreeBodyGeminalBuilder
ThreeBodyGeminalBuilder	ThreeBodyGeminalBuilder.h	/^class ThreeBodyGeminalBuilder: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
ThreeBodyJastrowOrbital	ThreeBodyJastrowOrbital.h	/^  ThreeBodyJastrowOrbital(ParticleSet& ions, ParticleSet& els):$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
ThreeBodyJastrowOrbital	ThreeBodyJastrowOrbital.h	/^class ThreeBodyJastrowOrbital: public OrbitalBase$/;"	c	namespace:qmcplusplus
ThreeBodyPade	ThreeBodyPade.h	/^  ThreeBodyPade(ParticleSet& ions, ParticleSet& els) :  FirstAddressOfdU(NULL), LastAddressOfdU(NULL)$/;"	f	class:qmcplusplus::ThreeBodyPade
ThreeBodyPade	ThreeBodyPade.h	/^class ThreeBodyPade: public OrbitalBase$/;"	c	namespace:qmcplusplus
ThreeBodyPadeBuilder	ThreeBodyPadeBuilder.cpp	/^ThreeBodyPadeBuilder::ThreeBodyPadeBuilder(ParticleSet& els, TrialWaveFunction& wfs, ParticleSet& ions):$/;"	f	class:qmcplusplus::ThreeBodyPadeBuilder
ThreeBodyPadeBuilder	ThreeBodyPadeBuilder.h	/^class ThreeBodyPadeBuilder: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
TripletID	eeI_JastrowOrbital.h	/^  int TripletID(int i, int j, int k) {$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
TruncatedPadeFunctor	CompositeFunctor.h	/^  TruncatedPadeFunctor(real_type a=-0.5, OptimizableFunctorBase* fin=0, real_type rmax=10):$/;"	f	struct:qmcplusplus::TruncatedPadeFunctor
TruncatedPadeFunctor	CompositeFunctor.h	/^struct TruncatedPadeFunctor:public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
TruncatedShiftedGaussianFunctor	GaussianFunctor.h	/^  TruncatedShiftedGaussianFunctor(real_type a=1.0 , real_type b=1.0 , real_type c=1.0):ID_A("SG_A"), ID_B("SG_B"),ID_C("SG_C")$/;"	f	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
TruncatedShiftedGaussianFunctor	GaussianFunctor.h	/^struct TruncatedShiftedGaussianFunctor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
Two-body Jastrow	kSpaceJastrowNotes.tex	/^\\maketitle$/;"	s
TwoBodyCoefs	kSpaceJastrow.h	/^  std::vector<RealType>    TwoBodyCoefs;$/;"	m	class:qmcplusplus::kSpaceJastrow
TwoBodyGvecs	kSpaceJastrow.h	/^  std::vector<PosType> TwoBodyGvecs;$/;"	m	class:qmcplusplus::kSpaceJastrow
TwoBodyID	kSpaceJastrow.h	/^  std::string TwoBodyID;$/;"	m	class:qmcplusplus::kSpaceJastrow
TwoBodyJastrowBuilder	Experimental/TwoBodyJastrowBuilder.cpp	/^TwoBodyJastrowBuilder::TwoBodyJastrowBuilder(ParticleSet& p, TrialWaveFunction& psi,$/;"	f	class:qmcplusplus::TwoBodyJastrowBuilder
TwoBodyJastrowBuilder	Experimental/TwoBodyJastrowBuilder.h	/^class TwoBodyJastrowBuilder: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
TwoBodyJastrowOrbital	TwoBodyJastrowOrbital.h	/^  TwoBodyJastrowOrbital(ParticleSet& p, int tid)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
TwoBodyJastrowOrbital	TwoBodyJastrowOrbital.h	/^class TwoBodyJastrowOrbital: public OrbitalBase$/;"	c	namespace:qmcplusplus
TwoBodyJastrowOrbitalBspline	TwoBodyJastrowOrbitalBspline.h	/^  TwoBodyJastrowOrbitalBspline(ParticleSet& pset, int tid) :$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
TwoBodyJastrowOrbitalBspline	TwoBodyJastrowOrbitalBspline.h	/^class TwoBodyJastrowOrbitalBspline :$/;"	c	namespace:qmcplusplus
TwoBodyPhase	kSpaceJastrow.h	/^  std::vector<RealType> OneBodyPhase, TwoBodyPhase;$/;"	m	class:qmcplusplus::kSpaceJastrow
TwoBodySymmCoefs	kSpaceJastrow.h	/^  std::vector<kSpaceCoef<RealType   > > TwoBodySymmCoefs;$/;"	m	class:qmcplusplus::kSpaceJastrow
TwoBodySymmType	kSpaceJastrow.h	/^  SymmetryType OneBodySymmType, TwoBodySymmType;$/;"	m	class:qmcplusplus::kSpaceJastrow
TwoBodyVarMap	kSpaceJastrow.h	/^  std::vector<int> TwoBodyVarMap;$/;"	m	class:qmcplusplus::kSpaceJastrow
TwoBody_e2iGr_new	kSpaceJastrow.h	/^      TwoBody_e2iGr_new, TwoBody_e2iGr_old;$/;"	m	class:qmcplusplus::kSpaceJastrow
TwoBody_e2iGr_old	kSpaceJastrow.h	/^      TwoBody_e2iGr_new, TwoBody_e2iGr_old;$/;"	m	class:qmcplusplus::kSpaceJastrow
TwoBody_rhoG	kSpaceJastrow.h	/^  std::vector<ComplexType> OneBody_rhoG, TwoBody_rhoG;$/;"	m	class:qmcplusplus::kSpaceJastrow
U	LRTwoBodyJastrow.h	/^  Vector<RealType> U,d2U;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
U	OneBodyJastrowOrbital.h	/^  ParticleAttrib<RealType> U,d2U;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbital
U	OneBodySpinJastrowOrbital.h	/^  ParticleAttrib<RealType> U,d2U;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
U	ThreeBodyJastrowOrbital.h	/^  ValueVectorType U,d2U;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
U	ThreeBodyPade.h	/^  ValueVectorType U,d2U;$/;"	m	class:qmcplusplus::ThreeBodyPade
U	TwoBodyJastrowOrbital.h	/^  ParticleAttrib<RealType> U,d2U,curLap,curVal;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
U	eeI_JastrowOrbital.h	/^  ParticleAttrib<RealType> U,d2U,curLap_i, curLap_j, curVal;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
Uconst	LRBreakupUtilities.h	/^  real_type Uconst;$/;"	m	struct:qmcplusplus::ShortRangePartAdapter
Uk	LRBreakupUtilities.h	/^  inline T Uk(T kk)$/;"	f	struct:qmcplusplus::DerivRPABreakup
Uk	LRBreakupUtilities.h	/^  inline T Uk(T kk)$/;"	f	struct:qmcplusplus::EPRPABreakup
Uk	LRBreakupUtilities.h	/^  inline T Uk(T kk)$/;"	f	struct:qmcplusplus::RPABFeeBreakup
Uk	LRBreakupUtilities.h	/^  inline T Uk(T kk)$/;"	f	struct:qmcplusplus::RPABreakup
Uk	LRBreakupUtilities.h	/^  inline T Uk(T kk)$/;"	f	struct:qmcplusplus::YukawaBreakup
Uk	LRBreakupUtilities.h	/^  inline T Uk(T kk)$/;"	f	struct:qmcplusplus::derivEPRPABreakup
Uk	ThreeBodyBlockSparse.h	/^  Vector<RealType> Uk;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
Uk	ThreeBodyGeminal.h	/^  Vector<RealType> Uk;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
UniqueSplines	OneBodyJastrowOrbitalBspline.h	/^  std::vector<CudaSpline<CudaReal>*> GPUSplines, UniqueSplines;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
UniqueSplines	TwoBodyJastrowOrbitalBspline.h	/^  std::vector<CudaSpline<CudaReal>*> GPUSplines, UniqueSplines;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
UpdateListGPU	OneBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal*> UpdateListGPU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
UpdateListGPU	TwoBodyJastrowOrbitalBspline.h	/^  gpu::device_vector<CudaReal*> UpdateListGPU;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
UpdateListHost	OneBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal*> UpdateListHost;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
UpdateListHost	TwoBodyJastrowOrbitalBspline.h	/^  gpu::host_vector<CudaReal*> UpdateListHost;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
Uptcl	TwoBodyJastrowOrbital.h	/^  std::vector<RealType> Uptcl;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
UsePBC	OneBodyJastrowOrbitalBspline.h	/^  bool UsePBC;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbitalBspline
UsePBC	TwoBodyJastrowOrbitalBspline.h	/^  bool UsePBC;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
UseSpline	JastrowBasisBuilder.h	/^  bool UseSpline;$/;"	m	class:qmcplusplus::JastrowBasisBuilder
V	ThreeBodyBlockSparse.h	/^  Matrix<RealType> V;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
V	ThreeBodyGeminal.h	/^  Matrix<RealType> V;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
VarOffset	DiffOneBodySpinJastrowOrbital.h	/^  int VarOffset;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
VarOffset	eeI_JastrowOrbital.h	/^  Array<std::pair<int,int>,3> VarOffset;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
WMConstraints	Experimental/WMConstraints.h	/^  WMConstraints(bool nospin=true):IgnoreSpin(nospin) {}$/;"	f	struct:qmcplusplus::WMConstraints
WMConstraints	Experimental/WMConstraints.h	/^struct WMConstraints: public OrbitalConstraintsBase$/;"	s	namespace:qmcplusplus
WMFunctor	DerivWMFunctor.h	/^  WMFunctor(real_type b, real_type rc=7.5, const std::string& bname="exponent"):$/;"	f	struct:qmcplusplus::DWMDBFunctor
WMFunctor	WMFunctor.h	/^  WMFunctor(real_type b, real_type rc=7.5, const std::string& bname="exponent"):$/;"	f	struct:qmcplusplus::WMFunctor
WMFunctor	WMFunctor.h	/^struct WMFunctor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
WMFunctorSet	WMFunctor.h	/^  WMFunctorSet(real_type rc=7.5):Rcut(rc)$/;"	f	struct:qmcplusplus::WMFunctorSet
WMFunctorSet	WMFunctor.h	/^struct WMFunctorSet: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
WMJastrowBuilder	WMJastrowBuilder.cpp	/^WMJastrowBuilder::WMJastrowBuilder(ParticleSet& target, TrialWaveFunction& psi,$/;"	f	class:qmcplusplus::WMJastrowBuilder
WMJastrowBuilder	WMJastrowBuilder.h	/^class WMJastrowBuilder: public OrbitalBuilderBase$/;"	c	namespace:qmcplusplus
Walker_t	OneBodyJastrowOrbitalBspline.h	/^  typedef ParticleSet::Walker_t     Walker_t;$/;"	t	class:qmcplusplus::OneBodyJastrowOrbitalBspline
Walker_t	TwoBodyJastrowOrbitalBspline.h	/^  typedef ParticleSet::Walker_t     Walker_t;$/;"	t	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
Write_Chiesa_Correction	eeI_JastrowOrbital.h	/^  bool Write_Chiesa_Correction;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
Xk	LRBreakupUtilities.h	/^  inline T Xk(T k, T rc )$/;"	f	struct:qmcplusplus::DerivYukawaBreakup
Xk	LRBreakupUtilities.h	/^  inline T Xk(T k, T rc)$/;"	f	struct:qmcplusplus::DerivRPABreakup
Xk	LRBreakupUtilities.h	/^  inline T Xk(T k, T rc)$/;"	f	struct:qmcplusplus::EPRPABreakup
Xk	LRBreakupUtilities.h	/^  inline T Xk(T k, T rc)$/;"	f	struct:qmcplusplus::RPABFeeBreakup
Xk	LRBreakupUtilities.h	/^  inline T Xk(T k, T rc)$/;"	f	struct:qmcplusplus::RPABreakup
Xk	LRBreakupUtilities.h	/^  inline T Xk(T k, T rc)$/;"	f	struct:qmcplusplus::YukawaBreakup
Xk	LRBreakupUtilities.h	/^  inline T Xk(T k, T rc)$/;"	f	struct:qmcplusplus::derivEPRPABreakup
Y	BsplineFunctor.h	/^  real_type Y, dY, d2Y;$/;"	m	struct:qmcplusplus::BsplineFunctor
Y	BsplineFunctor3D.h	/^  real_type Y, dY, d2Y;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
Y	CubicBsplineGroup.h	/^  value_type Y;$/;"	m	class:qmcplusplus::CubicBsplineGroup
Y	SplineFunctors.h	/^  real_type Y;$/;"	m	struct:qmcplusplus::CubicSplineSingle
Y	ThreeBodyBlockSparse.h	/^  Matrix<RealType> Y;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
Y	ThreeBodyGeminal.h	/^  Matrix<RealType> Y;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
YukawaBreakup	LRBreakupUtilities.h	/^  inline YukawaBreakup() {}$/;"	f	struct:qmcplusplus::YukawaBreakup
YukawaBreakup	LRBreakupUtilities.h	/^struct YukawaBreakup$/;"	s	namespace:qmcplusplus
Zeff	ModPadeFunctor.h	/^  real_type Zeff;$/;"	m	struct:qmcplusplus::ModPadeFunctor
acceptMove	LRTwoBodyJastrow.cpp	/^void LRTwoBodyJastrow::acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
acceptMove	OneBodyJastrowOrbital.h	/^  void acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
acceptMove	OneBodySpinJastrowOrbital.h	/^  void acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
acceptMove	PolarizedJastrow.h	/^  void acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::PolarizedJastrow
acceptMove	RPAJastrow.cpp	/^void RPAJastrow::acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::RPAJastrow
acceptMove	ThreeBodyBlockSparse.cpp	/^void ThreeBodyBlockSparse::acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
acceptMove	ThreeBodyGeminal.cpp	/^void ThreeBodyGeminal::acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
acceptMove	ThreeBodyJastrowOrbital.h	/^  void acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
acceptMove	ThreeBodyPade.h	/^  void acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::ThreeBodyPade
acceptMove	TwoBodyJastrowOrbital.h	/^  void acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
acceptMove	eeI_JastrowOrbital.h	/^  void acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
acceptMove	kSpaceJastrow.cpp	/^kSpaceJastrow::acceptMove(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::kSpaceJastrow
add	PolyFunctor.h	/^  inline void add(real_type c, int i)$/;"	f	struct:qmcplusplus::PolyFunctor
add2BasisGroup	Experimental/AnyConstraints.cpp	/^void AnyConstraints::add2BasisGroup(BasisGroupType* curBG, xmlNodePtr cur)$/;"	f	class:qmcplusplus::AnyConstraints
add2BasisGroup	WMJastrowBuilder.cpp	/^void WMJastrowBuilder::add2BasisGroup(BasisGroupType* curBG, xmlNodePtr cur)$/;"	f	class:qmcplusplus::WMJastrowBuilder
addBasisGroup	Experimental/WMConstraints.cpp	/^void WMConstraints::addBasisGroup(xmlNodePtr cur)$/;"	f	class:qmcplusplus::WMConstraints
addComponent	LinearCombinationFunctor.h	/^  void addComponent(ComponentType* func, real_type c,  std::string& id, bool fixit=false)$/;"	f	struct:LinearCombinationFunctor
addComponent	WMFunctor.h	/^  inline void addComponent(real_type c, real_type b, const std::string& aname)$/;"	f	struct:qmcplusplus::WMFunctorSet
addExtra2ComboOrbital	Experimental/AnyConstraints.h	/^  void addExtra2ComboOrbital(ComboOrbital* jcombo) {}$/;"	f	struct:qmcplusplus::AnyConstraints
addExtra2ComboOrbital	Experimental/PadeConstraints.h	/^  void addExtra2ComboOrbital(ComboOrbital* jcombo) {}$/;"	f	struct:qmcplusplus::PadeConstraints
addExtra2ComboOrbital	Experimental/PadeConstraints.h	/^  void addExtra2ComboOrbital(ComboOrbital* jcombo) {}$/;"	f	struct:qmcplusplus::ScaledPadeConstraints
addExtra2ComboOrbital	PolyConstraints.h	/^  void addExtra2ComboOrbital(ComboOrbital* jcombo) {}$/;"	f	struct:qmcplusplus::PolyConstraints
addFunc	DiffOneBodyJastrowOrbital.h	/^  void addFunc(int source_type, FT* afunc, int target_type=-1)$/;"	f	class:qmcplusplus::DiffOneBodyJastrowOrbital
addFunc	DiffOneBodySpinJastrowOrbital.h	/^  void addFunc(int source_g, FT* afunc, int target_g=-1)$/;"	f	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
addFunc	DiffTwoBodyJastrowOrbital.h	/^  void addFunc(int ia, int ib, FT* j)$/;"	f	class:qmcplusplus::DiffTwoBodyJastrowOrbital
addFunc	OneBodyJastrowOrbital.h	/^  void addFunc(int source_type, FT* afunc, int target_type=-1)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
addFunc	OneBodyJastrowOrbitalBspline.cpp	/^OneBodyJastrowOrbitalBspline::addFunc(int ig, FT* j, int jg=-1)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
addFunc	OneBodySpinJastrowOrbital.h	/^  void addFunc(int source_g, FT* afunc, int target_g=-1)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
addFunc	ThreeBodyJastrowOrbital.h	/^  void addFunc(int source_type, FT* afunc)$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
addFunc	ThreeBodyPade.h	/^  void addFunc(int source_type, FT* afunc)$/;"	f	class:qmcplusplus::ThreeBodyPade
addFunc	TwoBodyJastrowOrbital.h	/^  void addFunc(int ia, int ib, FT* j)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
addFunc	TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::addFunc(int ia, int ib, FT* j)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
addFunc	eeI_JastrowOrbital.h	/^  void addFunc(int iSpecies,$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
addGradient	OneBodyJastrowOrbitalBspline.cpp	/^void OneBodyJastrowOrbitalBspline::addGradient$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
addGradient	TwoBodyJastrowOrbitalBspline.cpp	/^void TwoBodyJastrowOrbitalBspline::addGradient(MCWalkerConfiguration &W, int iat,$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
addGrid	CBSOBuilder.cpp	/^CBSOBuilder::addGrid(xmlNodePtr cur)$/;"	f	class:qmcplusplus::CBSOBuilder
addLog	OneBodyJastrowOrbitalBspline.cpp	/^OneBodyJastrowOrbitalBspline::addLog (MCWalkerConfiguration &W,$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
addLog	TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::addLog (MCWalkerConfiguration &W,$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
addOneBody	JastrowBuilder.cpp	/^bool JastrowBuilder::addOneBody(xmlNodePtr cur)$/;"	f	class:qmcplusplus::JastrowBuilder
addOneBody	WMJastrowBuilder.cpp	/^bool WMJastrowBuilder::addOneBody(xmlNodePtr cur)$/;"	f	class:qmcplusplus::WMJastrowBuilder
addOptimizables	DerivPadeFunctors.h	/^  void addOptimizables(OptimizableSetType& vlist)$/;"	f	struct:qmcplusplus::D2PadeDB2Functor
addOptimizables	DerivPadeFunctors.h	/^  void addOptimizables(OptimizableSetType& vlist)$/;"	f	struct:qmcplusplus::DPadeDBFunctor
addOptimizables	DerivWMFunctor.h	/^  void addOptimizables(OptimizableSetType& vlist)$/;"	f	struct:qmcplusplus::D2WMDB2Functor
addOptimizables	DerivWMFunctor.h	/^  void addOptimizables(OptimizableSetType& vlist)$/;"	f	struct:qmcplusplus::DWMDBFunctor
addOptimizables	Experimental/WMConstraints.cpp	/^void WMConstraints::addOptimizables(VarRegistry<RealType>& outVars)$/;"	f	class:qmcplusplus::WMConstraints
addOptimizables	PolyConstraints.cpp	/^void PolyConstraints::addOptimizables(OptimizableSetType& outVars)$/;"	f	class:qmcplusplus::PolyConstraints
addOptimizables	PolyFunctor.h	/^  void addOptimizables(OptimizableSetType& vlist)$/;"	f	struct:qmcplusplus::PolyFunctor
addOptimizables	RPAJastrowFunctor.h	/^  void addOptimizables(OptimizableSetType& vlist)$/;"	f	struct:qmcplusplus::RPAJastrowFunctor
addRadialOrbital	CBSOBuilder.cpp	/^CBSOBuilder::addRadialOrbital(xmlNodePtr cur, const QuantumNumberType& nlms)$/;"	f	class:qmcplusplus::CBSOBuilder
addRatio	OneBodyJastrowOrbitalBspline.cpp	/^OneBodyJastrowOrbitalBspline::addRatio$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
addRatio	TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::addRatio$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
addSibling	CubicBsplineGroup.h	/^  void addSibling(ThisType* a)$/;"	f	class:qmcplusplus::CubicBsplineGroup
addSingleBasisPerSpecies	Experimental/AnyConstraints.cpp	/^void AnyConstraints::addSingleBasisPerSpecies(xmlNodePtr cur)$/;"	f	class:qmcplusplus::AnyConstraints
addSingleBasisPerSpecies	PolyConstraints.cpp	/^void PolyConstraints::addSingleBasisPerSpecies(xmlNodePtr cur)$/;"	f	class:qmcplusplus::PolyConstraints
addSingleBasisPerSpecies	WMJastrowBuilder.cpp	/^void WMJastrowBuilder::addSingleBasisPerSpecies(xmlNodePtr cur)$/;"	f	class:qmcplusplus::WMJastrowBuilder
addThreeBody	JastrowBuilder.cpp	/^bool JastrowBuilder::addThreeBody(xmlNodePtr cur)$/;"	f	class:qmcplusplus::JastrowBuilder
addTwoBody	JastrowBuilder.cpp	/^bool JastrowBuilder::addTwoBody(xmlNodePtr cur)$/;"	f	class:qmcplusplus::JastrowBuilder
addTwoBody	WMJastrowBuilder.cpp	/^bool WMJastrowBuilder::addTwoBody(xmlNodePtr cur)$/;"	f	class:qmcplusplus::WMJastrowBuilder
addTwoBodyPart	Experimental/WMConstraints.h	/^  inline void addTwoBodyPart(ParticleSet& target, ComboOrbital* jcombo)$/;"	f	struct:qmcplusplus::WMConstraints
add_eeI	JastrowBuilder.cpp	/^bool JastrowBuilder::add_eeI (xmlNodePtr cur)$/;"	f	class:qmcplusplus::JastrowBuilder
addkSpace	JastrowBuilder.cpp	/^bool JastrowBuilder::addkSpace(xmlNodePtr cur)$/;"	f	class:qmcplusplus::JastrowBuilder
alpha	ChebyshevFunctor.h	/^  std::vector<T> alpha;$/;"	m	struct:ChebyshevFunctor
alpha	PolarizedJastrow.h	/^  RealType alpha;$/;"	m	class:qmcplusplus::PolarizedJastrow
aoBuilders	JastrowBasisBuilder.h	/^  std::map<std::string,BasisSetBuilder*> aoBuilders;$/;"	m	class:qmcplusplus::JastrowBasisBuilder
apply	Experimental/WMConstraints.cpp	/^void WMConstraints::apply()$/;"	f	class:qmcplusplus::WMConstraints
applyCuspCondition	CompositeFunctor.h	/^  void applyCuspCondition()$/;"	f	struct:qmcplusplus::TruncatedPadeFunctor
attribName	DerivWMFunctor.h	/^  std::string attribName;$/;"	m	struct:qmcplusplus::D2WMDB2Functor
attribName	DerivWMFunctor.h	/^  std::string attribName;$/;"	m	struct:qmcplusplus::DWMDBFunctor
attribName	WMFunctor.h	/^  std::string attribName;$/;"	m	struct:qmcplusplus::WMFunctor
b0	McMillanJ2Functor.h	/^  real_type b0,b1,b2,b3;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
b1	McMillanJ2Functor.h	/^  real_type b0,b1,b2,b3;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
b2	McMillanJ2Functor.h	/^  real_type b0,b1,b2,b3;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
b3	McMillanJ2Functor.h	/^  real_type b0,b1,b2,b3;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
basisBuilder	ThreeBodyGeminalBuilder.h	/^  BasisSetBuilder* basisBuilder;$/;"	m	class:qmcplusplus::ThreeBodyGeminalBuilder
buildOrbital	RPAJastrow.cpp	/^void RPAJastrow::buildOrbital(const std::string& name, const std::string& UL$/;"	f	class:qmcplusplus::RPAJastrow
c	ThreeBodyPade.h	/^    ValueType c,d;$/;"	m	struct:qmcplusplus::ThreeBodyPade::Coeff
c0	GaussianFunctor.h	/^  real_type c0,c1,c2,c3,c4,c5,c6;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
c0	GaussianFunctor.h	/^  real_type c0,c1,c2,c3,c4;$/;"	m	struct:qmcplusplus::GaussianFunctor
c0	McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::ModMcMillanJ2Functor
c0	McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
c1	GaussianFunctor.h	/^  real_type c0,c1,c2,c3,c4,c5,c6;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
c1	GaussianFunctor.h	/^  real_type c0,c1,c2,c3,c4;$/;"	m	struct:qmcplusplus::GaussianFunctor
c1	McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::ModMcMillanJ2Functor
c1	McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
c1	McMillanJ2GFunctor.h	/^  real_type A, B, R0, c1, c2;$/;"	m	struct:qmcplusplus::McMillanJ2GFunctor
c2	GaussianFunctor.h	/^  real_type c0,c1,c2,c3,c4,c5,c6;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
c2	GaussianFunctor.h	/^  real_type c0,c1,c2,c3,c4;$/;"	m	struct:qmcplusplus::GaussianFunctor
c2	McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::ModMcMillanJ2Functor
c2	McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
c2	McMillanJ2GFunctor.h	/^  real_type A, B, R0, c1, c2;$/;"	m	struct:qmcplusplus::McMillanJ2GFunctor
c3	GaussianFunctor.h	/^  real_type c0,c1,c2,c3,c4,c5,c6;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
c3	GaussianFunctor.h	/^  real_type c0,c1,c2,c3,c4;$/;"	m	struct:qmcplusplus::GaussianFunctor
c3	McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::ModMcMillanJ2Functor
c3	McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
c4	GaussianFunctor.h	/^  real_type c0,c1,c2,c3,c4,c5,c6;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
c4	GaussianFunctor.h	/^  real_type c0,c1,c2,c3,c4;$/;"	m	struct:qmcplusplus::GaussianFunctor
c4	McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::ModMcMillanJ2Functor
c4	McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
c5	GaussianFunctor.h	/^  real_type c0,c1,c2,c3,c4,c5,c6;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
c5	McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::ModMcMillanJ2Functor
c5	McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
c6	GaussianFunctor.h	/^  real_type c0,c1,c2,c3,c4,c5,c6;$/;"	m	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
cA	McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::ModMcMillanJ2Functor
cA	McMillanJ2Functor.h	/^  real_type cA,c0,c1,c2,c3,c4,c5;$/;"	m	struct:qmcplusplus::comboMcMillanJ2Functor
cG	kSpaceJastrow.h	/^  T cG;$/;"	m	class:qmcplusplus::kSpaceCoef
calcGradient	OneBodyJastrowOrbitalBspline.cpp	/^void OneBodyJastrowOrbitalBspline::calcGradient$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
calcGradient	TwoBodyJastrowOrbitalBspline.cpp	/^void TwoBodyJastrowOrbitalBspline::calcGradient(MCWalkerConfiguration &W, int iat,$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
calcRatio	OneBodyJastrowOrbitalBspline.cpp	/^OneBodyJastrowOrbitalBspline::calcRatio$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
calcRatio	TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::calcRatio$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
checkInVariables	BesselZeroFunctor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::BesselZero
checkInVariables	BsplineFunctor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::BsplineFunctor
checkInVariables	BsplineFunctor3D.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::BsplineFunctor3D
checkInVariables	CompositeFunctor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::CuspCorrectionFunctor
checkInVariables	GaussianFunctor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::GaussianFunctor
checkInVariables	GaussianFunctor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
checkInVariables	LRBreakupUtilities.h	/^  void checkInVariables(opt_variables_type& active) { }$/;"	f	struct:qmcplusplus::ShortRangePartAdapter
checkInVariables	LRTwoBodyJastrow.cpp	/^void LRTwoBodyJastrow::checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
checkInVariables	LinearCombinationFunctor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:LinearCombinationFunctor
checkInVariables	McMillanJ2Functor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::McMillanJ2Functor
checkInVariables	McMillanJ2Functor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::ModMcMillanJ2Functor
checkInVariables	McMillanJ2Functor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::comboMcMillanJ2Functor
checkInVariables	McMillanJ2GFunctor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::McMillanJ2GFunctor
checkInVariables	ModPadeFunctor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::ModPadeFunctor
checkInVariables	OneBodyJastrowOrbital.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
checkInVariables	OneBodyJastrowOrbitalBspline.cpp	/^OneBodyJastrowOrbitalBspline::checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
checkInVariables	OneBodySpinJastrowOrbital.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
checkInVariables	OpenGaussianSlaterFunctor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::OpenGaussianSlaterFunctor
checkInVariables	PadeFunctors.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
checkInVariables	PadeFunctors.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::PadeFunctor
checkInVariables	PadeFunctors.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
checkInVariables	PadeFunctors.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::ScaledPadeFunctor
checkInVariables	PolynomialFunctor3D.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
checkInVariables	RPAJastrow.cpp	/^void RPAJastrow::checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::RPAJastrow
checkInVariables	SplineFunctors.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::CubicSplineSingle
checkInVariables	ThreeBodyBlockSparse.cpp	/^void ThreeBodyBlockSparse::checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
checkInVariables	ThreeBodyGeminal.cpp	/^void ThreeBodyGeminal::checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
checkInVariables	ThreeBodyJastrowOrbital.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
checkInVariables	TwoBodyJastrowOrbital.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
checkInVariables	TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
checkInVariables	WMFunctor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::WMFunctor
checkInVariables	WMFunctor.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	struct:qmcplusplus::WMFunctorSet
checkInVariables	eeI_JastrowOrbital.h	/^  void checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
checkInVariables	kSpaceJastrow.cpp	/^void kSpaceJastrow::checkInVariables(opt_variables_type& active)$/;"	f	class:qmcplusplus::kSpaceJastrow
checkLambda	ThreeBodyBlockSparse.cpp	/^void ThreeBodyBlockSparse::checkLambda()$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
checkOutVariables	BesselZeroFunctor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::BesselZero
checkOutVariables	BsplineFunctor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::BsplineFunctor
checkOutVariables	BsplineFunctor3D.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::BsplineFunctor3D
checkOutVariables	CompositeFunctor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::CuspCorrectionFunctor
checkOutVariables	DiffOneBodyJastrowOrbital.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::DiffOneBodyJastrowOrbital
checkOutVariables	DiffOneBodySpinJastrowOrbital.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
checkOutVariables	DiffTwoBodyJastrowOrbital.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::DiffTwoBodyJastrowOrbital
checkOutVariables	GaussianFunctor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::GaussianFunctor
checkOutVariables	GaussianFunctor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
checkOutVariables	LRBreakupUtilities.h	/^  void checkOutVariables(const opt_variables_type& active) { }$/;"	f	struct:qmcplusplus::ShortRangePartAdapter
checkOutVariables	LRTwoBodyJastrow.cpp	/^void LRTwoBodyJastrow::checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
checkOutVariables	LinearCombinationFunctor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:LinearCombinationFunctor
checkOutVariables	McMillanJ2Functor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::McMillanJ2Functor
checkOutVariables	McMillanJ2Functor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::ModMcMillanJ2Functor
checkOutVariables	McMillanJ2Functor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::comboMcMillanJ2Functor
checkOutVariables	McMillanJ2GFunctor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::McMillanJ2GFunctor
checkOutVariables	ModPadeFunctor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::ModPadeFunctor
checkOutVariables	OneBodyJastrowOrbital.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
checkOutVariables	OneBodySpinJastrowOrbital.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
checkOutVariables	OpenGaussianSlaterFunctor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::OpenGaussianSlaterFunctor
checkOutVariables	PadeFunctors.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
checkOutVariables	PadeFunctors.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::PadeFunctor
checkOutVariables	PadeFunctors.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
checkOutVariables	PadeFunctors.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::ScaledPadeFunctor
checkOutVariables	PolynomialFunctor3D.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
checkOutVariables	RPAJastrow.cpp	/^void RPAJastrow::checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::RPAJastrow
checkOutVariables	SplineFunctors.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::CubicSplineSingle
checkOutVariables	ThreeBodyBlockSparse.cpp	/^void ThreeBodyBlockSparse::checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
checkOutVariables	ThreeBodyGeminal.cpp	/^void ThreeBodyGeminal::checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
checkOutVariables	ThreeBodyJastrowOrbital.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
checkOutVariables	TwoBodyJastrowOrbital.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
checkOutVariables	WMFunctor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::WMFunctor
checkOutVariables	WMFunctor.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::WMFunctorSet
checkOutVariables	eeI_JastrowOrbital.h	/^  void checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
checkOutVariables	kSpaceJastrow.cpp	/^void kSpaceJastrow::checkOutVariables(const opt_variables_type& active)$/;"	f	class:qmcplusplus::kSpaceJastrow
check_coefs	CudaSpline.h	/^  void check_coefs()$/;"	f	struct:qmcplusplus::CudaSpline
check_complete	eeI_JastrowOrbital.h	/^  void check_complete()$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
coefs	CudaSpline.h	/^  gpu::device_vector<T> coefs;$/;"	m	struct:qmcplusplus::CudaSpline
comboMcMillanJ2Functor	McMillanJ2Functor.h	/^  comboMcMillanJ2Functor(real_type a=0.0, real_type b=0.0, real_type r0=0.0 , real_type rc=0.0):ID_RC("Rcutoff"),ID_R0("Rinner"),ID_A("A"),ID_B("B")$/;"	f	struct:qmcplusplus::comboMcMillanJ2Functor
comboMcMillanJ2Functor	McMillanJ2Functor.h	/^struct comboMcMillanJ2Functor: public OptimizableFunctorBase$/;"	s	namespace:qmcplusplus
container_type	CubicBsplineGroup.h	/^  typedef typename CubicBsplineGrid<T,GRIDTYPE,FIRSTDERIV_CONSTRAINTS>::container_type container_type;$/;"	t	class:qmcplusplus::CubicBsplineGroup
copyFrom	OneBodyJastrowOrbital.h	/^  void copyFrom(const OrbitalBase& old)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
copyFrom	OneBodySpinJastrowOrbital.h	/^  void copyFrom(const OrbitalBase& old)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
copyFrom	TwoBodyJastrowOrbital.h	/^  void copyFrom(const OrbitalBase& old)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
copyFrom	eeI_JastrowOrbital.h	/^  void copyFrom(const OrbitalBase& old)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
copyFrom	kSpaceJastrow.cpp	/^void kSpaceJastrow::copyFrom(const kSpaceJastrow& old)$/;"	f	class:qmcplusplus::kSpaceJastrow
copyFromBuffer	LRTwoBodyJastrow.cpp	/^void LRTwoBodyJastrow::copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
copyFromBuffer	OneBodyJastrowOrbital.h	/^  void copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
copyFromBuffer	OneBodySpinJastrowOrbital.h	/^  void copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
copyFromBuffer	PolarizedJastrow.h	/^  void copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::PolarizedJastrow
copyFromBuffer	RPAJastrow.cpp	/^RPAJastrow::copyFromBuffer(ParticleSet& P, BufferType& buf)$/;"	f	class:qmcplusplus::RPAJastrow
copyFromBuffer	ThreeBodyBlockSparse.cpp	/^ThreeBodyBlockSparse::copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
copyFromBuffer	ThreeBodyGeminal.cpp	/^ThreeBodyGeminal::copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
copyFromBuffer	ThreeBodyJastrowOrbital.h	/^  void copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
copyFromBuffer	ThreeBodyPade.h	/^  void copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::ThreeBodyPade
copyFromBuffer	TwoBodyJastrowOrbital.h	/^  inline void copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
copyFromBuffer	eeI_JastrowOrbital.h	/^  inline void copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
copyFromBuffer	kSpaceJastrow.cpp	/^kSpaceJastrow::copyFromBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::kSpaceJastrow
corr_tag	Experimental/OldJastrowBuilder.h	/^  std::string corr_tag;$/;"	m	struct:qmcplusplus::JastrowBuilder
createBasisGroup	Experimental/AnyConstraints.cpp	/^AnyConstraints::createBasisGroup(xmlNodePtr cur, const std::string& elementType)$/;"	f	class:qmcplusplus::AnyConstraints
createBasisGroup	PolyConstraints.cpp	/^PolyConstraints::createBasisGroup(xmlNodePtr cur, const std::string& elementType, RealType rcut)$/;"	f	class:qmcplusplus::PolyConstraints
createBasisGroup	WMJastrowBuilder.cpp	/^WMJastrowBuilder::createBasisGroup(xmlNodePtr cur, const std::string& elementType)$/;"	f	class:qmcplusplus::WMJastrowBuilder
createCorrelation	Experimental/WMConstraints.cpp	/^WMConstraints::createCorrelation(xmlNodePtr cur,BasisSetType* basis)$/;"	f	class:qmcplusplus::WMConstraints
createDefaultTwoBody	Experimental/WMConstraints.cpp	/^WMConstraints::createDefaultTwoBody(xmlNodePtr cur, const std::string& tname)$/;"	f	class:qmcplusplus::WMConstraints
createInFunc	Experimental/NJAABuilder.cpp	/^NJAABuilder::createInFunc(const std::string& jastfunction, int speciesA, int speciesB)$/;"	f	class:qmcplusplus::NJAABuilder
createInFunc	Experimental/NJABBuilder.cpp	/^NJABBuilder::createInFunc(const std::string& jastfunction)$/;"	f	class:qmcplusplus::NJABBuilder
createJAA	JAABuilder.cpp	/^template <class FN> TwoBodyJastrowOrbital<FN>* JAABuilder::createJAA(xmlNodePtr cur, const std::string& jname)$/;"	f	class:qmcplusplus::JAABuilder
createJAB	JABBuilder.cpp	/^bool JABBuilder::createJAB(xmlNodePtr cur, const std::string& jname)$/;"	f	class:qmcplusplus::JABBuilder
createLocalizedBasisSet	JastrowBasisBuilder.cpp	/^void JastrowBasisBuilder::createLocalizedBasisSet(xmlNodePtr cur)$/;"	f	class:qmcplusplus::JastrowBasisBuilder
createOneBody	Experimental/AnyConstraints.cpp	/^OrbitalBase* AnyConstraints::createOneBody(ParticleSet& source)$/;"	f	class:qmcplusplus::AnyConstraints
createOneBody	Experimental/OldJastrowBuilder.cpp	/^JastrowBuilder::createOneBody(xmlNodePtr cur, JneType* J1)$/;"	f	class:qmcplusplus::JastrowBuilder
createOneBody	Experimental/PadeConstraints.cpp	/^OrbitalBase* PadeConstraints::createOneBody(ParticleSet& source)$/;"	f	class:qmcplusplus::PadeConstraints
createOneBody	Experimental/PadeConstraints.cpp	/^ScaledPadeConstraints::createOneBody(ParticleSet& source)$/;"	f	class:qmcplusplus::ScaledPadeConstraints
createOneBody	Experimental/WMConstraints.cpp	/^OrbitalBase* WMConstraints::createOneBody(ParticleSet& target, ParticleSet& source)$/;"	f	class:qmcplusplus::WMConstraints
createOneBody	PolyConstraints.cpp	/^OrbitalBase* PolyConstraints::createOneBody(ParticleSet& source)$/;"	f	class:qmcplusplus::PolyConstraints
createOneBodyJastrow	BsplineJastrowBuilder.cpp	/^bool BsplineJastrowBuilder::createOneBodyJastrow(xmlNodePtr cur)$/;"	f	class:qmcplusplus::BsplineJastrowBuilder
createSPOSetFromXML	JastrowBasisBuilder.h	/^  SPOSetBase* createSPOSetFromXML(xmlNodePtr cur)$/;"	f	class:qmcplusplus::JastrowBasisBuilder
createTwoBody	Experimental/AnyConstraints.cpp	/^OrbitalBase* AnyConstraints::createTwoBody()$/;"	f	class:qmcplusplus::AnyConstraints
createTwoBody	Experimental/PadeConstraints.cpp	/^OrbitalBase* PadeConstraints::createTwoBody()$/;"	f	class:qmcplusplus::PadeConstraints
createTwoBody	Experimental/PadeConstraints.cpp	/^OrbitalBase* ScaledPadeConstraints::createTwoBody()$/;"	f	class:qmcplusplus::ScaledPadeConstraints
createTwoBody	Experimental/WMConstraints.cpp	/^OrbitalBase* WMConstraints::createTwoBody(ParticleSet& target)$/;"	f	class:qmcplusplus::WMConstraints
createTwoBody	PolyConstraints.cpp	/^OrbitalBase* PolyConstraints::createTwoBody()$/;"	f	class:qmcplusplus::PolyConstraints
createTwoBodyNoSpin	Experimental/OldJastrowBuilder.cpp	/^JastrowBuilder::createTwoBodyNoSpin(xmlNodePtr cur, JeeType* J2)$/;"	f	class:qmcplusplus::JastrowBuilder
createTwoBodySpin	Experimental/OldJastrowBuilder.cpp	/^JastrowBuilder::createTwoBodySpin(xmlNodePtr cur, JeeType* J2)$/;"	f	class:qmcplusplus::JastrowBuilder
curGrad	LRTwoBodyJastrow.h	/^  PosType curGrad;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
curGrad	OneBodyJastrowOrbital.h	/^  PosType curGrad;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbital
curGrad	OneBodySpinJastrowOrbital.h	/^  PosType curGrad;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
curGrad	ThreeBodyBlockSparse.h	/^  Vector<PosType> curGrad, tGrad;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
curGrad	ThreeBodyGeminal.h	/^  Vector<PosType> curGrad, tGrad;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
curGrad	ThreeBodyJastrowOrbital.h	/^  PosType curGrad;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
curGrad	ThreeBodyPade.h	/^  GradType curGrad;$/;"	m	class:qmcplusplus::ThreeBodyPade
curGrad	TwoBodyJastrowOrbital.h	/^  ParticleAttrib<PosType> dU,curGrad;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
curGrad0	TwoBodyJastrowOrbital.h	/^  ParticleAttrib<PosType> curGrad0;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
curGrad0	eeI_JastrowOrbital.h	/^  ParticleAttrib<PosType> curGrad0;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
curGrad_i	eeI_JastrowOrbital.h	/^  ParticleAttrib<PosType> dU,curGrad_i, curGrad_j;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
curGrad_j	eeI_JastrowOrbital.h	/^  ParticleAttrib<PosType> dU,curGrad_i, curGrad_j;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
curLap	LRTwoBodyJastrow.h	/^  RealType curVal, curLap;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
curLap	OneBodyJastrowOrbital.h	/^  RealType curVal, curLap;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbital
curLap	OneBodySpinJastrowOrbital.h	/^  RealType curLap;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
curLap	ThreeBodyBlockSparse.h	/^  Vector<RealType> curLap, tLap;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
curLap	ThreeBodyGeminal.h	/^  Vector<RealType> curLap, tLap;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
curLap	ThreeBodyJastrowOrbital.h	/^  RealType curVal, curLap;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
curLap	ThreeBodyPade.h	/^  ValueType curVal, curLap;$/;"	m	class:qmcplusplus::ThreeBodyPade
curLap	TwoBodyJastrowOrbital.h	/^  ParticleAttrib<RealType> U,d2U,curLap,curVal;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
curLap_i	eeI_JastrowOrbital.h	/^  ParticleAttrib<RealType> U,d2U,curLap_i, curLap_j, curVal;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
curLap_j	eeI_JastrowOrbital.h	/^  ParticleAttrib<RealType> U,d2U,curLap_i, curLap_j, curVal;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
curV	ThreeBodyBlockSparse.h	/^  Vector<RealType> curV;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
curV	ThreeBodyGeminal.h	/^  Vector<RealType> curV;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
curVal	LRTwoBodyJastrow.h	/^  RealType curVal, curLap;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
curVal	OneBodyJastrowOrbital.h	/^  RealType curVal, curLap;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbital
curVal	OneBodySpinJastrowOrbital.h	/^  RealType curVal;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
curVal	ThreeBodyBlockSparse.h	/^  Vector<RealType> curVal;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
curVal	ThreeBodyGeminal.h	/^  Vector<RealType> curVal;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
curVal	ThreeBodyJastrowOrbital.h	/^  RealType curVal, curLap;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
curVal	ThreeBodyPade.h	/^  ValueType curVal, curLap;$/;"	m	class:qmcplusplus::ThreeBodyPade
curVal	TwoBodyJastrowOrbital.h	/^  ParticleAttrib<RealType> U,d2U,curLap,curVal;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
curVal	eeI_JastrowOrbital.h	/^  ParticleAttrib<RealType> U,d2U,curLap_i, curLap_j, curVal;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
cutoff_radius	eeI_JastrowOrbital.h	/^  OrbitalBase::RealType cutoff_radius;$/;"	m	struct:qmcplusplus::IonData
d	ThreeBodyPade.h	/^    ValueType c,d;$/;"	m	struct:qmcplusplus::ThreeBodyPade::Coeff
d2A	BsplineFunctor.cpp	/^const double BsplineFunctor<double>::d2A[16] =$/;"	m	class:qmcplusplus::BsplineFunctor	file:
d2A	BsplineFunctor.h	/^  const TinyVector<real_type,16> A, dA, d2A, d3A;$/;"	m	struct:qmcplusplus::BsplineFunctor
d2A	BsplineFunctor3D.h	/^  const TinyVector<real_type,16> A, dA, d2A, d3A;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
d2C	PolyFunctor.h	/^  std::vector<T> d2C;$/;"	m	struct:qmcplusplus::PolyFunctor
d2CosFac	CompositeFunctor.h	/^  real_type d2CosFac;$/;"	m	struct:qmcplusplus::CuspCorrectionFunctor
d2CosFac	CompositeFunctor.h	/^  real_type d2CosFac;$/;"	m	struct:qmcplusplus::DCuspCorrectionDEFunctor
d2TT	ChebyshevFunctor.h	/^  std::vector<T> TT, dTT, d2TT;$/;"	m	struct:ChebyshevFunctor
d2U	LRTwoBodyJastrow.h	/^  Vector<RealType> U,d2U;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
d2U	OneBodyJastrowOrbital.h	/^  ParticleAttrib<RealType> U,d2U;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbital
d2U	OneBodySpinJastrowOrbital.h	/^  ParticleAttrib<RealType> U,d2U;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
d2U	ThreeBodyJastrowOrbital.h	/^  ValueVectorType U,d2U;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
d2U	ThreeBodyPade.h	/^  ValueVectorType U,d2U;$/;"	m	class:qmcplusplus::ThreeBodyPade
d2U	TwoBodyJastrowOrbital.h	/^  ParticleAttrib<RealType> U,d2U,curLap,curVal;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
d2U	eeI_JastrowOrbital.h	/^  ParticleAttrib<RealType> U,d2U,curLap_i, curLap_j, curVal;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
d2Uk	ThreeBodyBlockSparse.h	/^  Matrix<RealType> d2Uk;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
d2Uk	ThreeBodyGeminal.h	/^  Matrix<RealType> d2Uk;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
d2Y	BsplineFunctor.h	/^  real_type Y, dY, d2Y;$/;"	m	struct:qmcplusplus::BsplineFunctor
d2Y	BsplineFunctor3D.h	/^  real_type Y, dY, d2Y;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
d2Y	CubicBsplineGroup.h	/^  value_type d2Y;$/;"	m	class:qmcplusplus::CubicBsplineGroup
d2Y	SplineFunctors.h	/^  real_type d2Y;$/;"	m	struct:qmcplusplus::CubicSplineSingle
d2Y	ThreeBodyBlockSparse.h	/^  Matrix<RealType> d2Y;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
d2Y	ThreeBodyGeminal.h	/^  Matrix<RealType> d2Y;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
d2phi2	ThreeBodyJastrowOrbital.h	/^  Matrix<RealType> d2phi2;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
d3A	BsplineFunctor.cpp	/^const double BsplineFunctor<double>::d3A[16] =$/;"	m	class:qmcplusplus::BsplineFunctor	file:
d3A	BsplineFunctor.h	/^  const TinyVector<real_type,16> A, dA, d2A, d3A;$/;"	m	struct:qmcplusplus::BsplineFunctor
d3A	BsplineFunctor3D.h	/^  const TinyVector<real_type,16> A, dA, d2A, d3A;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
dA	BsplineFunctor.cpp	/^const double BsplineFunctor<double>::dA[16] =$/;"	m	class:qmcplusplus::BsplineFunctor	file:
dA	BsplineFunctor.h	/^  const TinyVector<real_type,16> A, dA, d2A, d3A;$/;"	m	struct:qmcplusplus::BsplineFunctor
dA	BsplineFunctor3D.h	/^  const TinyVector<real_type,16> A, dA, d2A, d3A;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
dC	PolyFunctor.h	/^  std::vector<T> dC;$/;"	m	struct:qmcplusplus::PolyFunctor
dCosFac	CompositeFunctor.h	/^  real_type dCosFac;$/;"	m	struct:qmcplusplus::CuspCorrectionFunctor
dCosFac	CompositeFunctor.h	/^  real_type dCosFac;$/;"	m	struct:qmcplusplus::DCuspCorrectionDEFunctor
dLogPsi	DiffOneBodyJastrowOrbital.h	/^  Vector<RealType> dLogPsi;$/;"	m	class:qmcplusplus::DiffOneBodyJastrowOrbital
dLogPsi	DiffOneBodySpinJastrowOrbital.h	/^  Vector<RealType> dLogPsi;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
dLogPsi	DiffTwoBodyJastrowOrbital.h	/^  Vector<RealType> dLogPsi;$/;"	m	class:qmcplusplus::DiffTwoBodyJastrowOrbital
dLogPsi	eeI_JastrowOrbital.h	/^  Vector<RealType> dLogPsi;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
dTT	ChebyshevFunctor.h	/^  std::vector<T> TT, dTT, d2TT;$/;"	m	struct:ChebyshevFunctor
dU	LRTwoBodyJastrow.h	/^  Vector<PosType> dU;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
dU	OneBodyJastrowOrbital.h	/^  ParticleAttrib<PosType> dU;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbital
dU	OneBodySpinJastrowOrbital.h	/^  ParticleAttrib<PosType> dU;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
dU	ThreeBodyJastrowOrbital.h	/^  GradVectorType dU;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
dU	ThreeBodyPade.h	/^  GradVectorType dU;$/;"	m	class:qmcplusplus::ThreeBodyPade
dU	TwoBodyJastrowOrbital.h	/^  ParticleAttrib<PosType> dU,curGrad;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
dU	eeI_JastrowOrbital.h	/^  ParticleAttrib<PosType> dU,curGrad_i, curGrad_j;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
dUk	ThreeBodyBlockSparse.h	/^  Matrix<PosType> dUk;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
dUk	ThreeBodyGeminal.h	/^  Matrix<PosType> dUk;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
dY	BsplineFunctor.h	/^  real_type Y, dY, d2Y;$/;"	m	struct:qmcplusplus::BsplineFunctor
dY	BsplineFunctor3D.h	/^  real_type Y, dY, d2Y;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
dY	CubicBsplineGroup.h	/^  value_type dY;$/;"	m	class:qmcplusplus::CubicBsplineGroup
dY	SplineFunctors.h	/^  real_type dY;$/;"	m	struct:qmcplusplus::CubicSplineSingle
dY	ThreeBodyBlockSparse.h	/^  Matrix<PosType>  dY;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
dY	ThreeBodyGeminal.h	/^  Matrix<PosType>  dY;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
d_gradsFD	PolynomialFunctor3D.h	/^  std::vector<TinyVector<real_type,3> > d_gradsFD;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
d_hessFD	PolynomialFunctor3D.h	/^  std::vector<Tensor<real_type,3> > d_hessFD;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
d_table	JAABuilder.h	/^  DistanceTableData* d_table;$/;"	m	struct:qmcplusplus::JAABuilder
d_table	ThreeBodyGeminal.h	/^  const DistanceTableData* d_table;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
d_table	ThreeBodyPade.h	/^  const DistanceTableData* d_table;$/;"	m	class:qmcplusplus::ThreeBodyPade
d_valsFD	PolynomialFunctor3D.h	/^  std::vector<real_type> Parameters, d_valsFD;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
delV	ThreeBodyBlockSparse.h	/^  Vector<RealType> delV;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
delV	ThreeBodyGeminal.h	/^  Vector<RealType> delV;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
delta_eikr	LRTwoBodyJastrow.h	/^  Vector<ComplexType> delta_eikr;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
delta_eikr_i	LRTwoBodyJastrow.h	/^  Vector<RealType> delta_eikr_i;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
delta_eikr_r	LRTwoBodyJastrow.h	/^  Vector<RealType> delta_eikr_r;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
derivEPRPABreakup	LRBreakupUtilities.h	/^  inline derivEPRPABreakup() {}$/;"	f	struct:qmcplusplus::derivEPRPABreakup
derivEPRPABreakup	LRBreakupUtilities.h	/^struct derivEPRPABreakup$/;"	s	namespace:qmcplusplus
derivUk	LRBreakupUtilities.h	/^  inline T derivUk(T kk)$/;"	f	struct:qmcplusplus::DerivRPABreakup
derivUk	LRBreakupUtilities.h	/^  inline T derivUk(T kk)$/;"	f	struct:qmcplusplus::EPRPABreakup
derivUk	LRBreakupUtilities.h	/^  inline T derivUk(T kk)$/;"	f	struct:qmcplusplus::RPABFeeBreakup
derivUk	LRBreakupUtilities.h	/^  inline T derivUk(T kk)$/;"	f	struct:qmcplusplus::RPABreakup
derivUk	LRBreakupUtilities.h	/^  inline T derivUk(T kk)$/;"	f	struct:qmcplusplus::YukawaBreakup
derivUk	LRBreakupUtilities.h	/^  inline T derivUk(T kk)$/;"	f	struct:qmcplusplus::derivEPRPABreakup
df	BesselZeroFunctor.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::BesselZero
df	BsplineFunctor.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::BsplineFunctor
df	BsplineFunctor3D.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::BsplineFunctor3D
df	CompositeFunctor.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::AnyTimesRnFunctor
df	CompositeFunctor.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::CuspCorrectionFunctor
df	CompositeFunctor.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::DCuspCorrectionDEFunctor
df	CompositeFunctor.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::TruncatedPadeFunctor
df	DerivPadeFunctors.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::D2PadeDB2Functor
df	DerivPadeFunctors.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::DPadeDBFunctor
df	DerivWMFunctor.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::D2WMDB2Functor
df	DerivWMFunctor.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::DWMDBFunctor
df	GaussianFunctor.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::GaussianFunctor
df	GaussianFunctor.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
df	LRBreakupUtilities.h	/^  inline T df(T r)$/;"	f	struct:qmcplusplus::DerivRPABreakup
df	LRBreakupUtilities.h	/^  inline T df(T r)$/;"	f	struct:qmcplusplus::DerivYukawaBreakup
df	LRBreakupUtilities.h	/^  inline T df(T r)$/;"	f	struct:qmcplusplus::EPRPABreakup
df	LRBreakupUtilities.h	/^  inline T df(T r)$/;"	f	struct:qmcplusplus::RPABFeeBreakup
df	LRBreakupUtilities.h	/^  inline T df(T r)$/;"	f	struct:qmcplusplus::RPABreakup
df	LRBreakupUtilities.h	/^  inline T df(T r)$/;"	f	struct:qmcplusplus::YukawaBreakup
df	LRBreakupUtilities.h	/^  inline T df(T r)$/;"	f	struct:qmcplusplus::derivEPRPABreakup
df	LRBreakupUtilities.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::ShortRangePartAdapter
df	LinearCombinationFunctor.h	/^  inline real_type df(real_type r)$/;"	f	struct:LinearCombinationFunctor
df	McMillanJ2Functor.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::McMillanJ2Functor
df	McMillanJ2Functor.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::ModMcMillanJ2Functor
df	McMillanJ2Functor.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::comboMcMillanJ2Functor
df	McMillanJ2GFunctor.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::McMillanJ2GFunctor
df	ModPadeFunctor.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::ModPadeFunctor
df	NumericalJastrowFunctor.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::NumericalJastrow
df	OpenGaussianSlaterFunctor.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::OpenGaussianSlaterFunctor
df	PadeFunctors.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::PadeFunctor
df	PadeFunctors.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
df	PadeFunctors.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
df	PadeFunctors.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::ScaledPadeFunctor
df	PolyFunctor.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::PolyFunctor
df	PolynomialFunctor3D.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
df	RPAJastrowFunctor.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::RPAJastrowFunctor
df	SplineFunctors.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::CubicSplineSingle
df	SplineFunctors.h	/^  real_type df(real_type r)$/;"	f	struct:qmcplusplus::CubicSplineBasisSet
df	WMFunctor.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::WMFunctor
df	WMFunctor.h	/^  inline real_type df(real_type r)$/;"	f	struct:qmcplusplus::WMFunctorSet
dgrad_Vec	PolynomialFunctor3D.h	/^  std::vector<TinyVector<real_type,3> > dgrad_Vec;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
dgrad_dalpha	eeI_JastrowOrbital.h	/^  std::vector<std::vector<PosType> >             dgrad_dalpha;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
dgrad_dgamma	PolynomialFunctor3D.h	/^  Array<TinyVector<real_type,3>,3> dgrad_dgamma;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
dhess_Vec	PolynomialFunctor3D.h	/^  std::vector<Tensor<real_type,3> > dhess_Vec;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
dhess_dalpha	eeI_JastrowOrbital.h	/^  std::vector<std::vector<Tensor<RealType,3> > > dhess_dalpha;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
dhess_dgamma	PolynomialFunctor3D.h	/^  Array<Tensor<real_type,3>,3> dhess_dgamma;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
diffVal	ThreeBodyBlockSparse.h	/^  RealType diffVal;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
diffVal	ThreeBodyGeminal.h	/^  RealType diffVal;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
dphi2	ThreeBodyJastrowOrbital.h	/^  Matrix<PosType> dphi2;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
du_dalpha	eeI_JastrowOrbital.h	/^  std::vector<std::vector<RealType> >               du_dalpha;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
dval_Vec	PolynomialFunctor3D.h	/^  std::vector<real_type> GammaVec, dval_Vec;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
dval_dgamma	PolynomialFunctor3D.h	/^  Array<real_type,3> dval_dgamma;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
eGroups	eeI_JastrowOrbital.h	/^  int eGroups, iGroups;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
eListType	eeI_JastrowOrbital.h	/^  typedef std::vector<int> eListType;$/;"	t	struct:qmcplusplus::IonData
eRef	eeI_JastrowOrbital.h	/^  ParticleSet *eRef, *IRef;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
eSpecies1	BsplineFunctor3D.h	/^  std::string iSpecies, eSpecies1, eSpecies2;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
eSpecies1	PolynomialFunctor3D.h	/^  std::string iSpecies, eSpecies1, eSpecies2;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
eSpecies2	BsplineFunctor3D.h	/^  std::string iSpecies, eSpecies1, eSpecies2;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
eSpecies2	PolynomialFunctor3D.h	/^  std::string iSpecies, eSpecies1, eSpecies2;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
eeI_JastrowBuilder	eeI_JastrowBuilder.h	/^  eeI_JastrowBuilder(ParticleSet& target, TrialWaveFunction& psi,$/;"	f	struct:qmcplusplus::eeI_JastrowBuilder
eeI_JastrowBuilder	eeI_JastrowBuilder.h	/^struct eeI_JastrowBuilder: public OrbitalBuilderBase$/;"	s	namespace:qmcplusplus
eeI_JastrowOrbital	eeI_JastrowOrbital.h	/^  eeI_JastrowOrbital(ParticleSet& ions, ParticleSet& elecs, bool is_master)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
eeI_JastrowOrbital	eeI_JastrowOrbital.h	/^class eeI_JastrowOrbital: public OrbitalBase$/;"	c	namespace:qmcplusplus
ee_table	ThreeBodyPade.h	/^  const DistanceTableData* ee_table;$/;"	m	class:qmcplusplus::ThreeBodyPade
eikr	LRTwoBodyJastrow.h	/^  Matrix<ComplexType> eikr;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
eikr_i	LRTwoBodyJastrow.h	/^  Matrix<RealType> eikr_i;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
eikr_new	LRTwoBodyJastrow.h	/^  Vector<ComplexType> eikr_new;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
eikr_new_i	LRTwoBodyJastrow.h	/^  Vector<RealType> eikr_new_i;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
eikr_new_r	LRTwoBodyJastrow.h	/^  Vector<RealType> eikr_new_r;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
eikr_r	LRTwoBodyJastrow.h	/^  Matrix<RealType> eikr_r;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
elecs_inside	eeI_JastrowOrbital.h	/^  eListType elecs_inside;$/;"	m	struct:qmcplusplus::IonData
elementType	BsplineFunctor.h	/^  std::string elementType, pairType;$/;"	m	struct:qmcplusplus::BsplineFunctor
evalGrad	LRTwoBodyJastrow.cpp	/^LRTwoBodyJastrow::evalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
evalGrad	OneBodyJastrowOrbital.h	/^  inline GradType evalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
evalGrad	OneBodySpinJastrowOrbital.h	/^  inline GradType evalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
evalGrad	RPAJastrow.cpp	/^RPAJastrow::evalGrad(ParticleSet &P, int iat)$/;"	f	class:qmcplusplus::RPAJastrow
evalGrad	TwoBodyJastrowOrbital.h	/^  GradType evalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
evalGrad	eeI_JastrowOrbital.h	/^  GradType evalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
evalGrad	kSpaceJastrow.cpp	/^kSpaceJastrow::GradType kSpaceJastrow::evalGrad(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::kSpaceJastrow
evalGradSource	OneBodyJastrowOrbital.h	/^  evalGradSource(ParticleSet& P, ParticleSet& source, int isrc,$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
evalGradSource	OneBodyJastrowOrbital.h	/^  inline GradType evalGradSource(ParticleSet& P,$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
evalGradSource	OneBodySpinJastrowOrbital.h	/^  evalGradSource(ParticleSet& P, ParticleSet& source, int isrc$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
evalGradSource	OneBodySpinJastrowOrbital.h	/^  inline GradType evalGradSource(ParticleSet& P, ParticleSet& source, int isrc)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
evalGradSource	eeI_JastrowOrbital.h	/^  evalGradSource(ParticleSet& P, ParticleSet& source, int isrc,$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
evalGradSource	eeI_JastrowOrbital.h	/^  inline GradType evalGradSource(ParticleSet& P,$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
evalGradSourceFD	eeI_JastrowOrbital.h	/^  evalGradSourceFD(ParticleSet& P, ParticleSet& source, int isrc,$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
evalGradSourceFD	eeI_JastrowOrbital.h	/^  inline GradType evalGradSourceFD(ParticleSet& P,$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
evaluate	BesselZeroFunctor.h	/^  evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::BesselZero
evaluate	BesselZeroFunctor.h	/^  evaluate(real_type r, real_type& dudr, real_type& d2udr2, real_type &d3udr3)$/;"	f	struct:qmcplusplus::BesselZero
evaluate	BesselZeroFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::BesselZero
evaluate	BesselZeroFunctor.h	/^  inline real_type evaluate(real_type r, real_type rinv)$/;"	f	struct:qmcplusplus::BesselZero
evaluate	BsplineFunctor.h	/^  evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::BsplineFunctor
evaluate	BsplineFunctor.h	/^  evaluate(real_type r, real_type& dudr, real_type& d2udr2, real_type &d3udr3)$/;"	f	struct:qmcplusplus::BsplineFunctor
evaluate	BsplineFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::BsplineFunctor
evaluate	BsplineFunctor.h	/^  inline real_type evaluate(real_type r, real_type rinv)$/;"	f	struct:qmcplusplus::BsplineFunctor
evaluate	BsplineFunctor3D.h	/^  inline real_type evaluate(real_type r, real_type rinv)$/;"	f	struct:qmcplusplus::BsplineFunctor3D
evaluate	BsplineFunctor3D.h	/^  inline real_type evaluate(real_type r_12, real_type r_1I, real_type r_2I,$/;"	f	struct:qmcplusplus::BsplineFunctor3D
evaluate	BsplineFunctor3D.h	/^  inline real_type evaluate(real_type r_12,$/;"	f	struct:qmcplusplus::BsplineFunctor3D
evaluate	ChebyshevFunctor.h	/^  inline T evaluate(T r, T& dudr, T& d2udr2)$/;"	f	struct:ChebyshevFunctor
evaluate	CompositeFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::CuspCorrectionFunctor
evaluate	CompositeFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::DCuspCorrectionDEFunctor
evaluate	CompositeFunctor.h	/^  inline real_type evaluate(real_type r, real_type& du, real_type& d2u)$/;"	f	struct:qmcplusplus::CuspCorrectionFunctor
evaluate	CompositeFunctor.h	/^  inline real_type evaluate(real_type r, real_type& du, real_type& d2u)$/;"	f	struct:qmcplusplus::DCuspCorrectionDEFunctor
evaluate	CubicBsplineGroup.h	/^  inline value_type evaluate(point_type x, point_type xinv)$/;"	f	class:qmcplusplus::CubicBsplineGroup
evaluate	DerivPadeFunctors.h	/^  evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::D2PadeDB2Functor
evaluate	DerivPadeFunctors.h	/^  evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::DPadeDBFunctor
evaluate	DerivPadeFunctors.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::D2PadeDB2Functor
evaluate	DerivPadeFunctors.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::DPadeDBFunctor
evaluate	GaussianFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::GaussianFunctor
evaluate	GaussianFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
evaluate	GaussianFunctor.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::GaussianFunctor
evaluate	GaussianFunctor.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
evaluate	GaussianFunctor.h	/^  inline real_type evaluate(real_type r, real_type& dudr,$/;"	f	struct:qmcplusplus::GaussianFunctor
evaluate	GaussianFunctor.h	/^  inline real_type evaluate(real_type r, real_type& dudr,$/;"	f	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
evaluate	LRBreakupUtilities.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::ShortRangePartAdapter
evaluate	LRTwoBodyJastrow.h	/^  inline ValueType evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
evaluate	McMillanJ2Functor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::McMillanJ2Functor
evaluate	McMillanJ2Functor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::ModMcMillanJ2Functor
evaluate	McMillanJ2Functor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::comboMcMillanJ2Functor
evaluate	McMillanJ2Functor.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::McMillanJ2Functor
evaluate	McMillanJ2Functor.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::ModMcMillanJ2Functor
evaluate	McMillanJ2Functor.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::comboMcMillanJ2Functor
evaluate	McMillanJ2GFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::McMillanJ2GFunctor
evaluate	McMillanJ2GFunctor.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::McMillanJ2GFunctor
evaluate	ModPadeFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::ModPadeFunctor
evaluate	ModPadeFunctor.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::ModPadeFunctor
evaluate	ModPadeFunctor.h	/^  inline real_type evaluate(real_type r, real_type& dudr,$/;"	f	struct:qmcplusplus::ModPadeFunctor
evaluate	NumericalJastrowFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::NumericalJastrow
evaluate	NumericalJastrowFunctor.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::NumericalJastrow
evaluate	OneBodyJastrowOrbital.h	/^  ValueType evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
evaluate	OneBodySpinJastrowOrbital.h	/^  ValueType evaluate(ParticleSet& P$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
evaluate	OpenGaussianSlaterFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::OpenGaussianSlaterFunctor
evaluate	OpenGaussianSlaterFunctor.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::OpenGaussianSlaterFunctor
evaluate	OpenGaussianSlaterFunctor.h	/^  inline real_type evaluate(real_type r, real_type& dudr,$/;"	f	struct:qmcplusplus::OpenGaussianSlaterFunctor
evaluate	PadeFunctors.h	/^  evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::PadeFunctor
evaluate	PadeFunctors.h	/^  evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::ScaledPadeFunctor
evaluate	PadeFunctors.h	/^  evaluate(real_type r, real_type& dudr, real_type& d2udr2, real_type d3udr3)$/;"	f	struct:qmcplusplus::ScaledPadeFunctor
evaluate	PadeFunctors.h	/^  evaluate(real_type r, real_type& dudr, real_type& d2udr2, real_type& d3udr3)$/;"	f	struct:qmcplusplus::PadeFunctor
evaluate	PadeFunctors.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
evaluate	PadeFunctors.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::PadeFunctor
evaluate	PadeFunctors.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
evaluate	PadeFunctors.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::ScaledPadeFunctor
evaluate	PadeFunctors.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
evaluate	PadeFunctors.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
evaluate	PadeFunctors.h	/^  inline real_type evaluate(real_type r, real_type& dudr,$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
evaluate	PadeFunctors.h	/^  inline real_type evaluate(real_type r, real_type& dudr,$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
evaluate	PolarizedJastrow.h	/^  ValueType evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::PolarizedJastrow
evaluate	PolarizedJastrow.h	/^  ValueType evaluate(ParticleSet& P,PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::PolarizedJastrow
evaluate	PolarizedJastrow.h	/^  void evaluate(WalkerSetRef& W,$/;"	f	class:qmcplusplus::PolarizedJastrow
evaluate	PolyFunctor.h	/^  evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::PolyFunctor
evaluate	PolyFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::PolyFunctor
evaluate	PolynomialFunctor3D.h	/^  inline real_type evaluate(real_type r, real_type rinv)$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
evaluate	PolynomialFunctor3D.h	/^  inline real_type evaluate(real_type r_12, real_type r_1I, real_type r_2I,$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
evaluate	PolynomialFunctor3D.h	/^  inline real_type evaluate(real_type r_12,$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
evaluate	RPAJastrow.h	/^  ValueType evaluate(ParticleSet& P,$/;"	f	struct:qmcplusplus::RPAJastrow
evaluate	RPAJastrowFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::RPAJastrowFunctor
evaluate	RPAJastrowFunctor.h	/^  inline real_type evaluate(real_type r, T& dudr, T& d2udr2)$/;"	f	struct:qmcplusplus::RPAJastrowFunctor
evaluate	SplineFunctors.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::CubicSplineBasisSet
evaluate	SplineFunctors.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::CubicSplineSingle
evaluate	SplineFunctors.h	/^  inline real_type evaluate(real_type r, real_type rinv)$/;"	f	struct:qmcplusplus::CubicSplineSingle
evaluate	SplineFunctors.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::CubicSplineBasisSet
evaluate	SplineFunctors.h	/^  inline real_type evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::CubicSplineSingle
evaluate	SplineFunctors.h	/^  inline real_type evaluate(real_type r, real_type& dudr,$/;"	f	struct:qmcplusplus::CubicSplineSingle
evaluate	ThreeBodyBlockSparse.h	/^  ValueType evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
evaluate	ThreeBodyGeminal.h	/^  ValueType evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::ThreeBodyGeminal
evaluate	ThreeBodyJastrowOrbital.h	/^  ValueType evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
evaluate	ThreeBodyJastrowOrbital.h	/^  inline ValueType evaluate(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
evaluate	ThreeBodyPade.h	/^  ValueType evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::ThreeBodyPade
evaluate	ThreeBodyPade.h	/^  inline ValueType evaluate(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::ThreeBodyPade
evaluate	TwoBodyJastrowOrbital.h	/^  ValueType evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
evaluate	WMFunctor.h	/^  evaluate(real_type r, real_type& dudr, real_type& d2udr2)$/;"	f	struct:qmcplusplus::WMFunctor
evaluate	WMFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::WMFunctor
evaluate	WMFunctor.h	/^  inline real_type evaluate(real_type r)$/;"	f	struct:qmcplusplus::WMFunctorSet
evaluate	WMFunctor.h	/^  inline real_type evaluate(real_type r, real_type& dv, real_type& d2v)$/;"	f	struct:qmcplusplus::WMFunctorSet
evaluate	eeI_JastrowOrbital.h	/^  ValueType evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
evaluate	kSpaceJastrow.h	/^  inline ValueType evaluate(ParticleSet& P,$/;"	f	class:qmcplusplus::kSpaceJastrow
evaluateAll	BesselZeroFunctor.h	/^  inline void evaluateAll(real_type r, real_type rinv)$/;"	f	struct:qmcplusplus::BesselZero
evaluateAll	BsplineFunctor.h	/^  inline void evaluateAll(real_type r, real_type rinv)$/;"	f	struct:qmcplusplus::BsplineFunctor
evaluateAll	CubicBsplineGroup.h	/^  inline value_type evaluateAll(point_type x, point_type xin)$/;"	f	class:qmcplusplus::CubicBsplineGroup
evaluateAll	SplineFunctors.h	/^  inline real_type evaluateAll(real_type r, real_type rinv)$/;"	f	struct:qmcplusplus::CubicSplineSingle
evaluateDerivRatios	OneBodyJastrowOrbital.h	/^  inline void evaluateDerivRatios(VirtualParticleSet& VP, const opt_variables_type& optvars,$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
evaluateDerivatives	BesselZeroFunctor.h	/^  evaluateDerivatives (real_type r, std::vector<TinyVector<real_type,3> >& derivs)$/;"	f	struct:qmcplusplus::BesselZero
evaluateDerivatives	BsplineFunctor.h	/^  evaluateDerivatives(real_type r, std::vector<TinyVector<real_type,3> >& derivs)$/;"	f	struct:qmcplusplus::BsplineFunctor
evaluateDerivatives	BsplineFunctor.h	/^  inline bool evaluateDerivatives(real_type r, std::vector<real_type>& derivs)$/;"	f	struct:qmcplusplus::BsplineFunctor
evaluateDerivatives	BsplineFunctor3D.h	/^  evaluateDerivatives (real_type r_12, real_type r_1I, real_type r_2I,$/;"	f	struct:qmcplusplus::BsplineFunctor3D
evaluateDerivatives	BsplineFunctor3D.h	/^  evaluateDerivatives(real_type r, std::vector<TinyVector<real_type,3> >& derivs)$/;"	f	struct:qmcplusplus::BsplineFunctor3D
evaluateDerivatives	DiffOneBodyJastrowOrbital.h	/^  void evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::DiffOneBodyJastrowOrbital
evaluateDerivatives	DiffOneBodySpinJastrowOrbital.h	/^  void evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
evaluateDerivatives	DiffTwoBodyJastrowOrbital.h	/^  void evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::DiffTwoBodyJastrowOrbital
evaluateDerivatives	GaussianFunctor.h	/^  evaluateDerivatives(real_type r, std::vector<TinyVector<real_type,3> >& derivs)$/;"	f	struct:qmcplusplus::GaussianFunctor
evaluateDerivatives	OneBodyJastrowOrbitalBspline.cpp	/^OneBodyJastrowOrbitalBspline::evaluateDerivatives$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
evaluateDerivatives	OpenGaussianSlaterFunctor.h	/^  evaluateDerivatives(real_type r, std::vector<TinyVector<real_type,3> >& derivs)$/;"	f	struct:qmcplusplus::OpenGaussianSlaterFunctor
evaluateDerivatives	PadeFunctors.h	/^  inline bool evaluateDerivatives (real_type r, std::vector<TinyVector<real_type,3> >& derivs)$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
evaluateDerivatives	PadeFunctors.h	/^  inline bool evaluateDerivatives (real_type r, std::vector<TinyVector<real_type,3> >& derivs)$/;"	f	struct:qmcplusplus::PadeFunctor
evaluateDerivatives	PadeFunctors.h	/^  inline bool evaluateDerivatives (real_type r, std::vector<TinyVector<real_type,3> >& derivs)$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
evaluateDerivatives	PadeFunctors.h	/^  inline bool evaluateDerivatives (real_type r, std::vector<real_type>& derivs)$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
evaluateDerivatives	PadeFunctors.h	/^  inline bool evaluateDerivatives (real_type r, std::vector<real_type>& derivs)$/;"	f	struct:qmcplusplus::PadeFunctor
evaluateDerivatives	PadeFunctors.h	/^  inline bool evaluateDerivatives (real_type r, std::vector<real_type>& derivs)$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
evaluateDerivatives	PolynomialFunctor3D.h	/^  evaluateDerivatives (real_type r_12, real_type r_1I, real_type r_2I,$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
evaluateDerivatives	TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::evaluateDerivatives$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
evaluateDerivatives	WMFunctor.h	/^  evaluateDerivatives(real_type r, std::vector<TinyVector<real_type,3> >& derivs)$/;"	f	struct:qmcplusplus::WMFunctorSet
evaluateDerivatives	eeI_JastrowOrbital.h	/^  void evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
evaluateDerivatives	kSpaceJastrow.cpp	/^void kSpaceJastrow::evaluateDerivatives(ParticleSet& P,$/;"	f	class:qmcplusplus::kSpaceJastrow
evaluateDerivativesFD	PolynomialFunctor3D.h	/^  evaluateDerivativesFD (real_type r_12, real_type r_1I, real_type r_2I,$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
evaluateHessian	OneBodyJastrowOrbital.h	/^  void evaluateHessian(ParticleSet& P, HessVector_t& grad_grad_psi)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
evaluateHessian	TwoBodyJastrowOrbital.h	/^  void evaluateHessian(ParticleSet& P, HessVector_t& grad_grad_psi)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
evaluateLog	LRTwoBodyJastrow.cpp	/^LRTwoBodyJastrow::evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
evaluateLog	LRTwoBodyJastrow.cpp	/^LRTwoBodyJastrow::evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
evaluateLog	OneBodyJastrowOrbital.h	/^  RealType evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
evaluateLog	OneBodyJastrowOrbital.h	/^  inline RealType evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
evaluateLog	OneBodySpinJastrowOrbital.h	/^  RealType evaluateLog(ParticleSet& P$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
evaluateLog	OneBodySpinJastrowOrbital.h	/^  inline RealType evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
evaluateLog	PolarizedJastrow.h	/^  ValueType evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::PolarizedJastrow
evaluateLog	RPAJastrow.cpp	/^RPAJastrow::evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::RPAJastrow
evaluateLog	RPAJastrow.cpp	/^RPAJastrow::evaluateLog(ParticleSet& P,BufferType& buf)$/;"	f	class:qmcplusplus::RPAJastrow
evaluateLog	ThreeBodyBlockSparse.cpp	/^ThreeBodyBlockSparse::evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
evaluateLog	ThreeBodyBlockSparse.cpp	/^ThreeBodyBlockSparse::evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
evaluateLog	ThreeBodyGeminal.cpp	/^ThreeBodyGeminal::evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
evaluateLog	ThreeBodyGeminal.cpp	/^ThreeBodyGeminal::evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::ThreeBodyGeminal
evaluateLog	ThreeBodyJastrowOrbital.h	/^  ValueType evaluateLog(ParticleSet& P, ParticleSet::ParticleGradient_t& G, ParticleSet::ParticleLaplacian_t& L)$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
evaluateLog	ThreeBodyPade.h	/^  ValueType evaluateLog(ParticleSet& P, ParticleSet::ParticleGradient_t& G, ParticleSet::ParticleLaplacian_t& L)$/;"	f	class:qmcplusplus::ThreeBodyPade
evaluateLog	TwoBodyJastrowOrbital.h	/^  RealType evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
evaluateLog	TwoBodyJastrowOrbital.h	/^  inline RealType evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
evaluateLog	eeI_JastrowOrbital.h	/^  RealType evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
evaluateLog	eeI_JastrowOrbital.h	/^  inline RealType evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
evaluateLog	kSpaceJastrow.cpp	/^kSpaceJastrow::evaluateLog(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::kSpaceJastrow
evaluateLog	kSpaceJastrow.cpp	/^kSpaceJastrow::evaluateLog(ParticleSet& P,$/;"	f	class:qmcplusplus::kSpaceJastrow
evaluateLogAndStore	OneBodyJastrowOrbital.h	/^  void evaluateLogAndStore(ParticleSet& P,$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
evaluateLogAndStore	OneBodySpinJastrowOrbital.h	/^  void evaluateLogAndStore(ParticleSet& P,$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
evaluateLogAndStore	ThreeBodyBlockSparse.cpp	/^ThreeBodyBlockSparse::evaluateLogAndStore(ParticleSet& P)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
evaluateLogAndStore	ThreeBodyGeminal.cpp	/^ThreeBodyGeminal::evaluateLogAndStore(ParticleSet& P)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
evaluateLogAndStore	TwoBodyJastrowOrbital.h	/^  inline void evaluateLogAndStore(ParticleSet& P,$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
evaluateLogAndStore	eeI_JastrowOrbital.h	/^  inline void evaluateLogAndStore(ParticleSet& P,$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
evaluateRatios	OneBodyJastrowOrbital.h	/^  inline void evaluateRatios(VirtualParticleSet& VP, std::vector<ValueType>& ratios)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
evaluateRatios	OneBodySpinJastrowOrbital.h	/^  inline void evaluateRatios(VirtualParticleSet& VP, std::vector<ValueType>& ratios)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
evaluateRatios	TwoBodyJastrowOrbital.h	/^  inline void evaluateRatios(VirtualParticleSet& VP, std::vector<ValueType>& ratios)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
evaluateRatios	eeI_JastrowOrbital.h	/^  inline void evaluateRatios(VirtualParticleSet& VP, std::vector<ValueType>& ratios)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
f	BesselZeroFunctor.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::BesselZero
f	BsplineFunctor.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::BsplineFunctor
f	BsplineFunctor3D.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::BsplineFunctor3D
f	CompositeFunctor.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::AnyTimesRnFunctor
f	CompositeFunctor.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::CuspCorrectionFunctor
f	CompositeFunctor.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::DCuspCorrectionDEFunctor
f	CompositeFunctor.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::TruncatedPadeFunctor
f	DerivPadeFunctors.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::D2PadeDB2Functor
f	DerivPadeFunctors.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::DPadeDBFunctor
f	DerivWMFunctor.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::D2WMDB2Functor
f	DerivWMFunctor.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::DWMDBFunctor
f	GaussianFunctor.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::GaussianFunctor
f	GaussianFunctor.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
f	LRBreakupUtilities.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::ShortRangePartAdapter
f	LinearCombinationFunctor.h	/^  inline real_type f(real_type r)$/;"	f	struct:LinearCombinationFunctor
f	McMillanJ2Functor.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::McMillanJ2Functor
f	McMillanJ2Functor.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::ModMcMillanJ2Functor
f	McMillanJ2Functor.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::comboMcMillanJ2Functor
f	McMillanJ2GFunctor.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::McMillanJ2GFunctor
f	ModPadeFunctor.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::ModPadeFunctor
f	NumericalJastrowFunctor.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::NumericalJastrow
f	OpenGaussianSlaterFunctor.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::OpenGaussianSlaterFunctor
f	PadeFunctors.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::PadeFunctor
f	PadeFunctors.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
f	PadeFunctors.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
f	PadeFunctors.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::ScaledPadeFunctor
f	PolyFunctor.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::PolyFunctor
f	PolynomialFunctor3D.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
f	RPAJastrowFunctor.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::RPAJastrowFunctor
f	SplineFunctors.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::CubicSplineSingle
f	SplineFunctors.h	/^  real_type f(real_type r)$/;"	f	struct:qmcplusplus::CubicSplineBasisSet
f	WMFunctor.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::WMFunctor
f	WMFunctor.h	/^  inline real_type f(real_type r)$/;"	f	struct:qmcplusplus::WMFunctorSet
fileName	BsplineFunctor.h	/^  std::string fileName;$/;"	m	struct:qmcplusplus::BsplineFunctor
finalizeOptimization	TwoBodyJastrowOrbital.h	/^  finalizeOptimization()$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
finalizeOptimization	eeI_JastrowOrbital.h	/^  finalizeOptimization()$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
firstIndex	kSpaceJastrow.h	/^  int firstIndex, lastIndex;$/;"	m	class:qmcplusplus::kSpaceCoef
first_addFunc	TwoBodyJastrowOrbital.h	/^  bool first_addFunc;$/;"	m	class:qmcplusplus::TwoBodyJastrowOrbital
freeGPUmem	TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::freeGPUmem()$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
funcOpt	JastrowBuilder.h	/^  std::string funcOpt;$/;"	m	class:qmcplusplus::JastrowBuilder
gamma	PolynomialFunctor3D.h	/^  Array<real_type,3> gamma;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
getNumParameters	BsplineFunctor3D.h	/^  inline int getNumParameters()$/;"	f	struct:qmcplusplus::BsplineFunctor3D
getNumParameters	PolynomialFunctor3D.h	/^  inline int getNumParameters()$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
getOrbital	singleRPAJastrowBuilder.cpp	/^OrbitalBase* singleRPAJastrowBuilder::getOrbital()$/;"	f	class:qmcplusplus::singleRPAJastrowBuilder
getValues	CubicBsplineGroup.h	/^  inline void getValues(point_type x)$/;"	f	class:qmcplusplus::CubicBsplineGroup
getValuesOnly	CubicBsplineGroup.h	/^  inline void getValuesOnly(point_type x)$/;"	f	class:qmcplusplus::CubicBsplineGroup
get_ratios	OneBodyJastrowOrbital.h	/^  inline void get_ratios(ParticleSet& P, std::vector<ValueType>& ratios)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
get_ratios	OneBodySpinJastrowOrbital.h	/^  inline void get_ratios(ParticleSet& P, std::vector<ValueType>& ratios)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
get_ratios	TwoBodyJastrowOrbital.h	/^  inline void get_ratios(ParticleSet& P, std::vector<ValueType>& ratios)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
get_ratios	kSpaceJastrow.cpp	/^inline void kSpaceJastrow::get_ratios(ParticleSet& P, std::vector<kSpaceJastrow::ValueType>& ratios)$/;"	f	class:qmcplusplus::kSpaceJastrow
gradLapl	OneBodyJastrowOrbitalBspline.cpp	/^OneBodyJastrowOrbitalBspline::gradLapl (MCWalkerConfiguration &W,$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
gradLapl	TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::gradLapl (MCWalkerConfiguration &W,$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
gradLogPsi	DiffOneBodyJastrowOrbital.h	/^  std::vector<GradVectorType*> gradLogPsi;$/;"	m	class:qmcplusplus::DiffOneBodyJastrowOrbital
gradLogPsi	DiffOneBodySpinJastrowOrbital.h	/^  std::vector<GradVectorType*> gradLogPsi;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
gradLogPsi	DiffTwoBodyJastrowOrbital.h	/^  std::vector<GradVectorType*> gradLogPsi;$/;"	m	class:qmcplusplus::DiffTwoBodyJastrowOrbital
gradLogPsi	eeI_JastrowOrbital.h	/^  Array<PosType,2> gradLogPsi;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
gridPtr	Experimental/NJAABuilder.h	/^  xmlNodePtr gridPtr;$/;"	m	struct:qmcplusplus::NJAABuilder
gridPtr	Experimental/NJABBuilder.h	/^  xmlNodePtr gridPtr;$/;"	m	struct:qmcplusplus::NJABBuilder
grid_type	SplineFunctors.h	/^  typedef OneDimGridBase<real_type> grid_type;$/;"	t	struct:qmcplusplus::CubicSplineBasisSet
grid_type	SplineFunctors.h	/^  typedef OneDimGridBase<real_type> grid_type;$/;"	t	struct:qmcplusplus::CubicSplineSingle
handler	LRTwoBodyJastrow.h	/^  HandlerType* handler;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
hbs2m	LRBreakupUtilities.h	/^  T hbs2m;$/;"	m	struct:qmcplusplus::RPABFeeBreakup
iGroups	eeI_JastrowOrbital.h	/^  int eGroups, iGroups;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
iSpecies	BsplineFunctor3D.h	/^  std::string iSpecies, eSpecies1, eSpecies2;$/;"	m	struct:qmcplusplus::BsplineFunctor3D
iSpecies	PolynomialFunctor3D.h	/^  std::string iSpecies, eSpecies1, eSpecies2;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
inFunc	CompositeFunctor.h	/^  OptimizableFunctorBase* inFunc;$/;"	m	struct:qmcplusplus::TruncatedPadeFunctor
index	PolynomialFunctor3D.h	/^  Array<int,3> index;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
indx	singleRPAJastrowBuilder.h	/^  int indx,ng;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
init	TwoBodyJastrowOrbital.h	/^  void init(ParticleSet& p)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
init	eeI_JastrowOrbital.h	/^  void init(ParticleSet& p)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
initUnique	eeI_JastrowOrbital.h	/^  void initUnique()$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
initWithRPA	BsplineJastrowBuilder.cpp	/^  inline void initWithRPA(ParticleSet& P,  BsplineFunctor<T>& bfunc, T fac)$/;"	f	struct:qmcplusplus::BsplineInitializer
initialize	BsplineFunctor.h	/^  void initialize(int numPoints, std::vector<real_type>& x, std::vector<real_type>& y$/;"	f	struct:qmcplusplus::BsplineFunctor
initialize	CubicBsplineGroup.h	/^  void  initialize(FNIN* in_, point_type rmax, int npts)$/;"	f	class:qmcplusplus::CubicBsplineGroup
initialize	CubicBsplineGroup.h	/^  void initialize(point_type start, point_type end, const container_type& datain, bool closed,$/;"	f	class:qmcplusplus::CubicBsplineGroup
initialize	NumericalJastrowFunctor.h	/^  void initialize(FNIN* in_, typename FNOUT::grid_type* agrid, real_type rcut)$/;"	f	struct:qmcplusplus::NumericalJastrow
initialize	SplineFunctors.h	/^  void initialize(FNIN* in_, grid_type* agrid)$/;"	f	struct:qmcplusplus::CubicSplineBasisSet
initialize	SplineFunctors.h	/^  void initialize(FNIN* in_, grid_type* agrid)$/;"	f	struct:qmcplusplus::CubicSplineSingle
initialize	SplineFunctors.h	/^  void initialize(FNIN* in_, real_type rmax, int npts)$/;"	f	struct:qmcplusplus::CubicSplineSingle
integrate_r2	LRBreakupUtilities.h	/^  inline T integrate_r2(T rc)$/;"	f	struct:qmcplusplus::DerivRPABreakup
integrate_r2	LRBreakupUtilities.h	/^  inline T integrate_r2(T rc)$/;"	f	struct:qmcplusplus::DerivYukawaBreakup
integrate_r2	LRBreakupUtilities.h	/^  inline T integrate_r2(T rc)$/;"	f	struct:qmcplusplus::EPRPABreakup
integrate_r2	LRBreakupUtilities.h	/^  inline T integrate_r2(T rc)$/;"	f	struct:qmcplusplus::RPABFeeBreakup
integrate_r2	LRBreakupUtilities.h	/^  inline T integrate_r2(T rc)$/;"	f	struct:qmcplusplus::RPABreakup
integrate_r2	LRBreakupUtilities.h	/^  inline T integrate_r2(T rc)$/;"	f	struct:qmcplusplus::YukawaBreakup
integrate_r2	LRBreakupUtilities.h	/^  inline T integrate_r2(T rc)$/;"	f	struct:qmcplusplus::derivEPRPABreakup
interpolate	CubicBsplineGroup.h	/^  inline value_type interpolate(value_type p0, value_type p1, value_type p2, value_type p3)$/;"	f	class:qmcplusplus::CubicBsplineGroup
interpolate	CubicBsplineGroup.h	/^  inline value_type interpolate(value_type p0, value_type p1, value_type p2, value_type p3,$/;"	f	class:qmcplusplus::CubicBsplineGroup
isOptimizable	BsplineFunctor.h	/^  bool isOptimizable()$/;"	f	struct:qmcplusplus::BsplineFunctor
isOptimizable	SplineFunctors.h	/^  bool isOptimizable()$/;"	f	struct:qmcplusplus::CubicSplineSingle
kSpaceCoef	kSpaceJastrow.h	/^class kSpaceCoef$/;"	c	namespace:qmcplusplus
kSpaceJastrow	kSpaceJastrow.cpp	/^kSpaceJastrow::kSpaceJastrow(ParticleSet& ions, ParticleSet& elecs,$/;"	f	class:qmcplusplus::kSpaceJastrow
kSpaceJastrow	kSpaceJastrow.cpp	/^kSpaceJastrow::kSpaceJastrow(const ParticleSet& ions, ParticleSet& els):$/;"	f	class:qmcplusplus::kSpaceJastrow
kSpaceJastrow	kSpaceJastrow.h	/^class kSpaceJastrow: public OrbitalBase$/;"	c	namespace:qmcplusplus
kSpaceJastrowBuilder	kSpaceJastrowBuilder.h	/^  kSpaceJastrowBuilder(ParticleSet& target, TrialWaveFunction& psi,$/;"	f	struct:qmcplusplus::kSpaceJastrowBuilder
kSpaceJastrowBuilder	kSpaceJastrowBuilder.h	/^struct kSpaceJastrowBuilder: public OrbitalBuilderBase$/;"	s	namespace:qmcplusplus
kf	LRBreakupUtilities.h	/^  T kf;$/;"	m	struct:qmcplusplus::RPABFeeBreakup
kfm	LRBreakupUtilities.h	/^  T kfm[2];$/;"	m	struct:qmcplusplus::RPABFeeBreakup
lapLogPsi	DiffOneBodyJastrowOrbital.h	/^  std::vector<ValueVectorType*> lapLogPsi;$/;"	m	class:qmcplusplus::DiffOneBodyJastrowOrbital
lapLogPsi	DiffOneBodySpinJastrowOrbital.h	/^  std::vector<ValueVectorType*> lapLogPsi;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
lapLogPsi	DiffTwoBodyJastrowOrbital.h	/^  std::vector<ValueVectorType*> lapLogPsi;$/;"	m	class:qmcplusplus::DiffTwoBodyJastrowOrbital
lapLogPsi	eeI_JastrowOrbital.h	/^  Array<RealType,2> lapLogPsi;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
lastIndex	kSpaceJastrow.h	/^  int firstIndex, lastIndex;$/;"	m	class:qmcplusplus::kSpaceCoef
lmax	ChebyshevFunctor.h	/^  int lmax;$/;"	m	struct:ChebyshevFunctor
logRatio	LRTwoBodyJastrow.cpp	/^LRTwoBodyJastrow::logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
logRatio	OneBodyJastrowOrbital.h	/^  inline ValueType logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
logRatio	OneBodySpinJastrowOrbital.h	/^  inline ValueType logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
logRatio	PolarizedJastrow.h	/^  ValueType logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::PolarizedJastrow
logRatio	ThreeBodyBlockSparse.cpp	/^ThreeBodyBlockSparse::logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
logRatio	ThreeBodyGeminal.cpp	/^ThreeBodyGeminal::logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::ThreeBodyGeminal
logRatio	ThreeBodyJastrowOrbital.h	/^  inline ValueType logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
logRatio	ThreeBodyPade.h	/^  inline ValueType logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::ThreeBodyPade
logRatio	kSpaceJastrow.cpp	/^kSpaceJastrow::logRatio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::kSpaceJastrow
m	ThreeBodyPade.h	/^    int m, n, o;$/;"	m	struct:qmcplusplus::ThreeBodyPade::Coeff
mAB	ModPadeFunctor.h	/^  real_type mAB;$/;"	m	struct:qmcplusplus::ModPadeFunctor
mOneOverE	CompositeFunctor.h	/^  real_type mOneOverE;$/;"	m	struct:qmcplusplus::CuspCorrectionFunctor
m_nlms	CBSOBuilder.h	/^  QuantumNumberType m_nlms;$/;"	m	class:qmcplusplus::CBSOBuilder
m_orbitals	CBSOBuilder.h	/^  CenteredOrbitalType* m_orbitals;$/;"	m	class:qmcplusplus::CBSOBuilder
m_param	PolarizedJastrow.h	/^  ParameterSet m_param;$/;"	m	class:qmcplusplus::PolarizedJastrow
m_rcut	CBSOBuilder.h	/^  RealType m_rcut;$/;"	m	class:qmcplusplus::CBSOBuilder
m_species	CBSOBuilder.h	/^  std::string m_species;$/;"	m	class:qmcplusplus::CBSOBuilder
magLess	kSpaceJastrow.cpp	/^struct magLess$/;"	s	namespace:qmcplusplus	file:
makeClone	BesselZeroFunctor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::BesselZero
makeClone	BsplineFunctor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::BsplineFunctor
makeClone	BsplineFunctor3D.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::BsplineFunctor3D
makeClone	CompositeFunctor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::AnyTimesRnFunctor
makeClone	CompositeFunctor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::CuspCorrectionFunctor
makeClone	DiffOneBodyJastrowOrbital.h	/^  DiffOrbitalBasePtr makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::DiffOneBodyJastrowOrbital
makeClone	DiffOneBodySpinJastrowOrbital.h	/^  DiffOrbitalBasePtr makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
makeClone	DiffTwoBodyJastrowOrbital.h	/^  DiffOrbitalBasePtr makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::DiffTwoBodyJastrowOrbital
makeClone	GaussianFunctor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::GaussianFunctor
makeClone	GaussianFunctor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
makeClone	LRBreakupUtilities.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::ShortRangePartAdapter
makeClone	LRTwoBodyJastrow.cpp	/^OrbitalBasePtr LRTwoBodyJastrow::makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
makeClone	LinearCombinationFunctor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:LinearCombinationFunctor
makeClone	McMillanJ2Functor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::McMillanJ2Functor
makeClone	McMillanJ2Functor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::ModMcMillanJ2Functor
makeClone	McMillanJ2Functor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::comboMcMillanJ2Functor
makeClone	McMillanJ2GFunctor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::McMillanJ2GFunctor
makeClone	ModPadeFunctor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::ModPadeFunctor
makeClone	OneBodyJastrowOrbital.h	/^  OrbitalBasePtr makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
makeClone	OneBodySpinJastrowOrbital.h	/^  OrbitalBasePtr makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
makeClone	OpenGaussianSlaterFunctor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::OpenGaussianSlaterFunctor
makeClone	PadeFunctors.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
makeClone	PadeFunctors.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::PadeFunctor
makeClone	PadeFunctors.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
makeClone	PadeFunctors.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::ScaledPadeFunctor
makeClone	PolynomialFunctor3D.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
makeClone	RPAJastrow.cpp	/^OrbitalBase* RPAJastrow::makeClone(ParticleSet& tpq) const$/;"	f	class:qmcplusplus::RPAJastrow
makeClone	SplineFunctors.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::CubicSplineSingle
makeClone	ThreeBodyBlockSparse.cpp	/^OrbitalBasePtr ThreeBodyBlockSparse::makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
makeClone	ThreeBodyGeminal.cpp	/^OrbitalBasePtr ThreeBodyGeminal::makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::ThreeBodyGeminal
makeClone	TwoBodyJastrowOrbital.h	/^  OrbitalBasePtr makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
makeClone	WMFunctor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::WMFunctor
makeClone	WMFunctor.h	/^  OptimizableFunctorBase* makeClone() const$/;"	f	struct:qmcplusplus::WMFunctorSet
makeClone	eeI_JastrowOrbital.h	/^  OrbitalBasePtr makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
makeClone	kSpaceJastrow.cpp	/^OrbitalBasePtr kSpaceJastrow::makeClone(ParticleSet& tqp) const$/;"	f	class:qmcplusplus::kSpaceJastrow
makeLongRange	RPAJastrow.cpp	/^void RPAJastrow::makeLongRange()$/;"	f	class:qmcplusplus::RPAJastrow
makeShortRange	RPAJastrow.cpp	/^void RPAJastrow::makeShortRange()$/;"	f	class:qmcplusplus::RPAJastrow
myBasisSet	Experimental/WMConstraints.h	/^  std::map<std::string,BasisSetType*> myBasisSet;$/;"	m	struct:qmcplusplus::WMConstraints
myBasisSet	JastrowBasisBuilder.h	/^  BasisSetBase<RealType>* myBasisSet;$/;"	m	class:qmcplusplus::JastrowBasisBuilder
myFunc	CompositeFunctor.h	/^  OptimizableFunctorBase* myFunc;$/;"	m	struct:qmcplusplus::AnyTimesRnFunctor
myGrid	RPAJastrow.h	/^  GridType* myGrid;$/;"	m	struct:qmcplusplus::RPAJastrow
myHandler	LRBreakupUtilities.h	/^  HandlerType* myHandler;$/;"	m	struct:qmcplusplus::ShortRangePartAdapter
myHandler	RPAJastrow.h	/^  HandlerType* myHandler;$/;"	m	struct:qmcplusplus::RPAJastrow
myHandler	singleRPAJastrowBuilder.h	/^  HandlerType* myHandler;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
myTableIndex	DiffOneBodyJastrowOrbital.h	/^  int myTableIndex;$/;"	m	class:qmcplusplus::DiffOneBodyJastrowOrbital
myTableIndex	DiffOneBodySpinJastrowOrbital.h	/^  int myTableIndex;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
myTableIndex	OneBodyJastrowOrbital.h	/^  int myTableIndex;$/;"	m	class:qmcplusplus::OneBodyJastrowOrbital
myTableIndex	OneBodySpinJastrowOrbital.h	/^  int myTableIndex;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
myTableIndex	ThreeBodyBlockSparse.h	/^  int myTableIndex;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
myTableIndex	ThreeBodyJastrowOrbital.h	/^  IndexType myTableIndex;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
myTableIndex	eeI_JastrowOrbital.h	/^  int myTableIndex;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
myVars	DiffOneBodyJastrowOrbital.h	/^  opt_variables_type myVars;$/;"	m	class:qmcplusplus::DiffOneBodyJastrowOrbital
myVars	DiffOneBodySpinJastrowOrbital.h	/^  opt_variables_type myVars;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
myVars	DiffTwoBodyJastrowOrbital.h	/^  opt_variables_type myVars;$/;"	m	class:qmcplusplus::DiffTwoBodyJastrowOrbital
n	ThreeBodyPade.h	/^    int m, n, o;$/;"	m	struct:qmcplusplus::ThreeBodyPade::Coeff
n2	LRBreakupUtilities.h	/^  T n2;$/;"	m	struct:qmcplusplus::DerivYukawaBreakup
nameOpt	JastrowBuilder.h	/^  std::string nameOpt;$/;"	m	class:qmcplusplus::JastrowBuilder
nelec	LRBreakupUtilities.h	/^  int nelec;$/;"	m	struct:qmcplusplus::RPABFeeBreakup
nfunc	RPAJastrow.h	/^  FuncType* nfunc;$/;"	m	struct:qmcplusplus::RPAJastrow
nfunc	singleRPAJastrowBuilder.h	/^  FuncType* nfunc;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
ng	singleRPAJastrowBuilder.h	/^  int indx,ng;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
node_B	Experimental/PadeConstraints.h	/^  xmlNodePtr node_B;$/;"	m	struct:qmcplusplus::PadeConstraints
notOpt	BsplineFunctor.h	/^  bool notOpt;$/;"	m	struct:qmcplusplus::BsplineFunctor
notOpt	PolynomialFunctor3D.h	/^  bool notOpt;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
nppss	LRBreakupUtilities.h	/^  int nppss[2];$/;"	m	struct:qmcplusplus::RPABFeeBreakup
nspin	LRBreakupUtilities.h	/^  int nspin;$/;"	m	struct:qmcplusplus::RPABFeeBreakup
numSiblings	CubicBsplineGroup.h	/^  int numSiblings;$/;"	m	class:qmcplusplus::CubicBsplineGroup
o	ThreeBodyPade.h	/^    int m, n, o;$/;"	m	struct:qmcplusplus::ThreeBodyPade::Coeff
offU	LRTwoBodyJastrow.h	/^  Vector<RealType> offU, offd2U;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
offd2U	LRTwoBodyJastrow.h	/^  Vector<RealType> offU, offd2U;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
offdU	LRTwoBodyJastrow.h	/^  Vector<PosType> offdU;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
operator ()	LRBreakupUtilities.h	/^  inline T operator()(T r, T rinv)$/;"	f	struct:qmcplusplus::DerivRPABreakup
operator ()	LRBreakupUtilities.h	/^  inline T operator()(T r, T rinv)$/;"	f	struct:qmcplusplus::DerivYukawaBreakup
operator ()	LRBreakupUtilities.h	/^  inline T operator()(T r, T rinv)$/;"	f	struct:qmcplusplus::EPRPABreakup
operator ()	LRBreakupUtilities.h	/^  inline T operator()(T r, T rinv)$/;"	f	struct:qmcplusplus::RPABFeeBreakup
operator ()	LRBreakupUtilities.h	/^  inline T operator()(T r, T rinv)$/;"	f	struct:qmcplusplus::RPABreakup
operator ()	LRBreakupUtilities.h	/^  inline T operator()(T r, T rinv)$/;"	f	struct:qmcplusplus::YukawaBreakup
operator ()	LRBreakupUtilities.h	/^  inline T operator()(T r, T rinv)$/;"	f	struct:qmcplusplus::derivEPRPABreakup
operator ()	NumericalJastrowFunctor.h	/^  inline T operator()(T r)$/;"	f	struct:qmcplusplus::CutoffFunctor
operator ()	kSpaceJastrow.cpp	/^  inline bool operator()(kSpaceJastrow::PosType a, kSpaceJastrow::PosType b)$/;"	f	struct:qmcplusplus::magLess
operator ()	kSpaceJastrow.cpp	/^kSpaceJastrow::operator()(PosType G1, PosType G2)$/;"	f	class:qmcplusplus::kSpaceJastrow
operator ()	kSpaceJastrow.h	/^  inline T operator()(T kk)$/;"	f	struct:qmcplusplus::RPA0
optimizable	GaussianFunctor.h	/^  bool optimizable;$/;"	m	struct:qmcplusplus::GaussianFunctor
pairType	BsplineFunctor.h	/^  std::string elementType, pairType;$/;"	m	struct:qmcplusplus::BsplineFunctor
periodic	BsplineFunctor.h	/^  bool periodic;$/;"	m	struct:qmcplusplus::BsplineFunctor
phi2	ThreeBodyJastrowOrbital.h	/^  Matrix<RealType> phi2;$/;"	m	class:qmcplusplus::ThreeBodyJastrowOrbital
pi	NumericalJastrowFunctor.h	/^  T pi;$/;"	m	struct:qmcplusplus::CutoffFunctor
point_type	CubicBsplineGroup.h	/^  typedef typename CubicBsplineGrid<T,GRIDTYPE,FIRSTDERIV_CONSTRAINTS>::point_type point_type;$/;"	t	class:qmcplusplus::CubicBsplineGroup
pr	BesselZeroFunctor.h	/^  std::string pr;$/;"	m	struct:qmcplusplus::BesselZero
print	BesselZeroFunctor.h	/^  void print()$/;"	f	struct:qmcplusplus::BesselZero
print	BesselZeroFunctor.h	/^  void print(std::ostream& os)$/;"	f	struct:qmcplusplus::BesselZero
print	BsplineFunctor.h	/^  void print()$/;"	f	struct:qmcplusplus::BsplineFunctor
print	BsplineFunctor.h	/^  void print(std::ostream& os)$/;"	f	struct:qmcplusplus::BsplineFunctor
print	BsplineFunctor3D.h	/^  void print()$/;"	f	struct:qmcplusplus::BsplineFunctor3D
print	BsplineFunctor3D.h	/^  void print(std::ostream& os)$/;"	f	struct:qmcplusplus::BsplineFunctor3D
print	NumericalJastrowFunctor.h	/^  void print(std::ostream& os)$/;"	f	struct:qmcplusplus::NumericalJastrow
print	PolynomialFunctor3D.h	/^  void print()$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
print	PolynomialFunctor3D.h	/^  void print(std::ostream& os)$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
print	SplineFunctors.h	/^  void print(std::ostream& os)$/;"	f	struct:qmcplusplus::CubicSplineBasisSet
print	SplineFunctors.h	/^  void print(std::ostream& os)$/;"	f	struct:qmcplusplus::CubicSplineSingle
printRadialFunctors	JastrowBasisBuilder.cpp	/^void JastrowBasisBuilder::printRadialFunctors(const std::string& elementType, COT* aoBasis)$/;"	f	class:qmcplusplus::JastrowBasisBuilder
ptclPool	Experimental/NJABBuilder.h	/^  PtclPoolType& ptclPool;$/;"	m	struct:qmcplusplus::NJABBuilder
ptclPool	Experimental/OldJastrowBuilder.h	/^  PtclPoolType& ptclPool;$/;"	m	struct:qmcplusplus::JastrowBuilder
ptclPool	Experimental/TwoBodyJastrowBuilder.h	/^  PtclPoolType& ptclPool;$/;"	m	class:qmcplusplus::TwoBodyJastrowBuilder
ptclPool	JABBuilder.h	/^  PtclPoolType& ptclPool;$/;"	m	struct:qmcplusplus::JABBuilder
ptclPool	JastrowBuilder.h	/^  PtclPoolType& ptclPool;$/;"	m	class:qmcplusplus::JastrowBuilder
ptclPool	PadeJastrowBuilder.h	/^  PtclPoolType& ptclPool;$/;"	m	struct:qmcplusplus::PadeJastrowBuilder
put	BesselZeroFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::BesselZero
put	BsplineFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::BsplineFunctor
put	BsplineFunctor3D.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::BsplineFunctor3D
put	BsplineJastrowBuilder.cpp	/^bool BsplineJastrowBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::BsplineJastrowBuilder
put	ChebyshevFunctor.h	/^  void put(xmlNodePtr cur, VarRegistry<T1>& vlist)$/;"	f	struct:ChebyshevFunctor
put	CompositeFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::AnyTimesRnFunctor
put	CompositeFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::CuspCorrectionFunctor
put	CompositeFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::DCuspCorrectionDEFunctor
put	CompositeFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::TruncatedPadeFunctor
put	DerivPadeFunctors.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::D2PadeDB2Functor
put	DerivPadeFunctors.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::DPadeDBFunctor
put	DerivWMFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::D2WMDB2Functor
put	DerivWMFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::DWMDBFunctor
put	Experimental/AnyConstraints.cpp	/^bool AnyConstraints::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::AnyConstraints
put	Experimental/JAAPBCBuilder.cpp	/^bool JAAPBCBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::JAAPBCBuilder
put	Experimental/NJAABuilder.cpp	/^bool NJAABuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::NJAABuilder
put	Experimental/NJABBuilder.cpp	/^bool NJABBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::NJABBuilder
put	Experimental/OldJastrowBuilder.cpp	/^bool JastrowBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::JastrowBuilder
put	Experimental/PadeBuilder.cpp	/^bool PadeBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::PadeBuilder
put	Experimental/PadeConstraints.cpp	/^bool PadeConstraints::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::PadeConstraints
put	Experimental/PadeConstraints.cpp	/^bool ScaledPadeConstraints::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::ScaledPadeConstraints
put	Experimental/TwoBodyJastrowBuilder.cpp	/^bool TwoBodyJastrowBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::TwoBodyJastrowBuilder
put	Experimental/WMConstraints.cpp	/^bool WMConstraints::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::WMConstraints
put	GaussianFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::GaussianFunctor
put	GaussianFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
put	JAABuilder.cpp	/^bool JAABuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::JAABuilder
put	JABBuilder.cpp	/^bool JABBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::JABBuilder
put	JastrowBasisBuilder.cpp	/^bool JastrowBasisBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::JastrowBasisBuilder
put	JastrowBuilder.cpp	/^bool JastrowBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::JastrowBuilder
put	LRBreakupUtilities.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::ShortRangePartAdapter
put	LRTwoBodyJastrow.cpp	/^bool LRTwoBodyJastrow::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
put	LinearCombinationFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:LinearCombinationFunctor
put	McMillanJ2Functor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::McMillanJ2Functor
put	McMillanJ2Functor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::ModMcMillanJ2Functor
put	McMillanJ2Functor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::comboMcMillanJ2Functor
put	McMillanJ2GFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::McMillanJ2GFunctor
put	ModPadeFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::ModPadeFunctor
put	NumericalJastrowFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::NumericalJastrow
put	OpenGaussianSlaterFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::OpenGaussianSlaterFunctor
put	PadeFunctors.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
put	PadeFunctors.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::PadeFunctor
put	PadeFunctors.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
put	PadeFunctors.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::ScaledPadeFunctor
put	PadeJastrowBuilder.cpp	/^bool PadeJastrowBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::PadeJastrowBuilder
put	PolarizedJastrow.h	/^  void put(xmlNodePtr cur, VarRegistry<RealType>& vlist)$/;"	f	class:qmcplusplus::PolarizedJastrow
put	PolyConstraints.cpp	/^bool PolyConstraints::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::PolyConstraints
put	PolyFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::PolyFunctor
put	PolynomialFunctor3D.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
put	RPAJastrow.cpp	/^bool RPAJastrow::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::RPAJastrow
put	RPAJastrowFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::RPAJastrowFunctor
put	SplineFunctors.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::CubicSplineBasisSet
put	SplineFunctors.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::CubicSplineSingle
put	ThreeBodyBlockSparse.cpp	/^bool ThreeBodyBlockSparse::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
put	ThreeBodyGeminal.cpp	/^bool ThreeBodyGeminal::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
put	ThreeBodyGeminalBuilder.cpp	/^bool ThreeBodyGeminalBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::ThreeBodyGeminalBuilder
put	ThreeBodyPade.h	/^  void put(xmlNodePtr cur, VarRegistry<RealType>& vlist)$/;"	f	class:qmcplusplus::ThreeBodyPade
put	ThreeBodyPadeBuilder.cpp	/^bool ThreeBodyPadeBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::ThreeBodyPadeBuilder
put	WMFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::WMFunctor
put	WMFunctor.h	/^  bool put(xmlNodePtr cur)$/;"	f	struct:qmcplusplus::WMFunctorSet
put	WMJastrowBuilder.cpp	/^bool WMJastrowBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::WMJastrowBuilder
put	eeI_JastrowBuilder.cpp	/^bool eeI_JastrowBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::eeI_JastrowBuilder
put	kSpaceJastrow.cpp	/^kSpaceJastrow::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::kSpaceJastrow
put	kSpaceJastrowBuilder.cpp	/^kSpaceJastrowBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::kSpaceJastrowBuilder
put	singleRPAJastrowBuilder.cpp	/^bool singleRPAJastrowBuilder::put(xmlNodePtr cur)$/;"	f	class:qmcplusplus::singleRPAJastrowBuilder
put	singleRPAJastrowBuilder.cpp	/^bool singleRPAJastrowBuilder::put(xmlNodePtr cur, int addOrbital)$/;"	f	class:qmcplusplus::singleRPAJastrowBuilder
putCommon	CBSOBuilder.cpp	/^CBSOBuilder::putCommon(xmlNodePtr cur)$/;"	f	class:qmcplusplus::CBSOBuilder
putContent2	kSpaceJastrowBuilder.cpp	/^putContent2(std::vector<T>& a, xmlNodePtr cur)$/;"	f	namespace:qmcplusplus
putInFunc	Experimental/NJAABuilder.cpp	/^bool NJAABuilder::putInFunc(xmlNodePtr cur)$/;"	f	class:qmcplusplus::NJAABuilder
putInFunc	Experimental/NJABBuilder.cpp	/^bool NJABBuilder::putInFunc(xmlNodePtr cur)$/;"	f	class:qmcplusplus::NJABBuilder
putkids	eeI_JastrowBuilder.cpp	/^bool eeI_JastrowBuilder::putkids (xmlNodePtr kids, J3type &J3)$/;"	f	class:qmcplusplus::eeI_JastrowBuilder
qmcplusplus	BesselZeroFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	BsplineFunctor.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	BsplineFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	BsplineFunctor3D.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	BsplineJastrowBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	BsplineJastrowBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	CBSOBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	CBSOBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	CompositeFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	CubicBsplineGroup.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	CudaSpline.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	DerivPadeFunctors.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	DerivWMFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	DiffOneBodyJastrowOrbital.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	DiffOneBodySpinJastrowOrbital.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	DiffTwoBodyJastrowOrbital.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/AnyConstraints.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/AnyConstraints.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/JAAPBCBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/JAAPBCBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/NJAABuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/NJAABuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/NJABBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/NJABBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/OldJastrowBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/OldJastrowBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/PadeBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/PadeConstraints.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/PadeConstraints.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/TwoBodyJastrowBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/TwoBodyJastrowBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	Experimental/WMConstraints.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	Experimental/WMConstraints.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	GaussianFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	JAABuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	JAABuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	JABBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	JABBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	JastrowBasisBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	JastrowBasisBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	JastrowBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	JastrowBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	LRBreakupUtilities.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	LRTwoBodyJastrow.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	LRTwoBodyJastrow.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	McMillanJ2Functor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	McMillanJ2GFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	ModPadeFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	NumericalJastrowFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	OneBodyJastrowOrbital.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	OneBodyJastrowOrbitalBspline.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	OneBodyJastrowOrbitalBspline.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	OneBodySpinJastrowOrbital.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	OpenGaussianSlaterFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	PadeFunctors.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	PadeJastrowBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	PadeJastrowBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	PolarizedJastrow.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	PolyConstraints.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	PolyConstraints.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	PolyFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	PolynomialFunctor3D.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	RPAJastrow.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	RPAJastrow.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	RPAJastrowFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	SplineFunctors.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	ThreeBodyBlockSparse.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	ThreeBodyBlockSparse.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	ThreeBodyGeminal.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	ThreeBodyGeminal.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	ThreeBodyGeminalBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	ThreeBodyGeminalBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	ThreeBodyJastrowOrbital.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	ThreeBodyPade.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	ThreeBodyPadeBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	ThreeBodyPadeBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	TwoBodyJastrowOrbital.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	TwoBodyJastrowOrbitalBspline.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	TwoBodyJastrowOrbitalBspline.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	WMFunctor.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	WMJastrowBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	WMJastrowBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	eeI_JastrowBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	eeI_JastrowBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	eeI_JastrowOrbital.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	kSpaceJastrow.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	kSpaceJastrow.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	kSpaceJastrowBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	kSpaceJastrowBuilder.h	/^namespace qmcplusplus$/;"	n
qmcplusplus	singleRPAJastrowBuilder.cpp	/^namespace qmcplusplus$/;"	n	file:
qmcplusplus	singleRPAJastrowBuilder.h	/^namespace qmcplusplus$/;"	n
rMax	CudaSpline.h	/^  T rMax;$/;"	m	struct:qmcplusplus::CudaSpline
ratio	LRTwoBodyJastrow.cpp	/^LRTwoBodyJastrow::ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
ratio	LRTwoBodyJastrow.h	/^  ValueType ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
ratio	OneBodyJastrowOrbital.h	/^  inline ValueType ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
ratio	OneBodyJastrowOrbital.h	/^  inline ValueType ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
ratio	OneBodyJastrowOrbitalBspline.cpp	/^OneBodyJastrowOrbitalBspline::ratio$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
ratio	OneBodyJastrowOrbitalBspline.h	/^  void ratio (std::vector<Walker_t*> &walkers,    std::vector<int> &iatList,$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
ratio	OneBodySpinJastrowOrbital.h	/^  inline ValueType ratio(ParticleSet& P, int iat$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
ratio	OneBodySpinJastrowOrbital.h	/^  inline ValueType ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
ratio	PolarizedJastrow.h	/^  ValueType ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::PolarizedJastrow
ratio	PolarizedJastrow.h	/^  ValueType ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::PolarizedJastrow
ratio	RPAJastrow.cpp	/^RPAJastrow::ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::RPAJastrow
ratio	RPAJastrow.cpp	/^RPAJastrow::ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::RPAJastrow
ratio	ThreeBodyBlockSparse.cpp	/^ThreeBodyBlockSparse::ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
ratio	ThreeBodyBlockSparse.cpp	/^ThreeBodyBlockSparse::ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
ratio	ThreeBodyGeminal.cpp	/^ThreeBodyGeminal::ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
ratio	ThreeBodyGeminal.cpp	/^ThreeBodyGeminal::ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::ThreeBodyGeminal
ratio	ThreeBodyJastrowOrbital.h	/^  inline ValueType ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
ratio	ThreeBodyJastrowOrbital.h	/^  inline ValueType ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
ratio	ThreeBodyPade.h	/^  inline ValueType ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::ThreeBodyPade
ratio	ThreeBodyPade.h	/^  inline ValueType ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::ThreeBodyPade
ratio	TwoBodyJastrowOrbital.h	/^  ValueType ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
ratio	TwoBodyJastrowOrbital.h	/^  ValueType ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
ratio	TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::ratio$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
ratio	TwoBodyJastrowOrbitalBspline.h	/^  void ratio (std::vector<Walker_t*> &walkers,    std::vector<int> &iatList,$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
ratio	eeI_JastrowOrbital.h	/^  ValueType ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
ratio	eeI_JastrowOrbital.h	/^  ValueType ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
ratio	kSpaceJastrow.cpp	/^kSpaceJastrow::ratio(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::kSpaceJastrow
ratio	kSpaceJastrow.h	/^  ValueType ratio(ParticleSet& P, int iat,$/;"	f	class:qmcplusplus::kSpaceJastrow
ratioGrad	LRTwoBodyJastrow.cpp	/^LRTwoBodyJastrow::ratioGrad(ParticleSet& P, int iat, GradType & g)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
ratioGrad	OneBodyJastrowOrbital.h	/^  inline ValueType ratioGrad(ParticleSet& P, int iat, GradType& grad_iat)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
ratioGrad	OneBodySpinJastrowOrbital.h	/^  inline ValueType ratioGrad(ParticleSet& P, int iat, GradType& grad_iat)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
ratioGrad	RPAJastrow.cpp	/^RPAJastrow::ratioGrad(ParticleSet &P, int iat, GradType& g)$/;"	f	class:qmcplusplus::RPAJastrow
ratioGrad	TwoBodyJastrowOrbital.h	/^  ValueType ratioGrad(ParticleSet& P, int iat, GradType& grad_iat)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
ratioGrad	eeI_JastrowOrbital.h	/^  ValueType ratioGrad(ParticleSet& P, int iat, GradType& grad_iat)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
ratioGrad	kSpaceJastrow.cpp	/^kSpaceJastrow::ratioGrad(ParticleSet& P, int iat, GradType& grad_iat)$/;"	f	class:qmcplusplus::kSpaceJastrow
real_type	DerivPadeFunctors.h	/^  typedef typename OptimizableFunctorBase<T>::real_type real_type;$/;"	t	struct:qmcplusplus::D2PadeDB2Functor
real_type	DerivPadeFunctors.h	/^  typedef typename OptimizableFunctorBase<T>::real_type real_type;$/;"	t	struct:qmcplusplus::DPadeDBFunctor
real_type	DerivWMFunctor.h	/^  typedef typename OptimizableFunctorBase<T>::real_type real_type;$/;"	t	struct:qmcplusplus::D2WMDB2Functor
real_type	DerivWMFunctor.h	/^  typedef typename OptimizableFunctorBase<T>::real_type real_type;$/;"	t	struct:qmcplusplus::DWMDBFunctor
real_type	GaussianFunctor.h	/^  typedef typename OptimizableFunctorBase::real_type real_type;$/;"	t	struct:qmcplusplus::GaussianFunctor
real_type	GaussianFunctor.h	/^  typedef typename OptimizableFunctorBase::real_type real_type;$/;"	t	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
real_type	McMillanJ2Functor.h	/^  typedef typename OptimizableFunctorBase::real_type real_type;$/;"	t	struct:qmcplusplus::McMillanJ2Functor
real_type	McMillanJ2Functor.h	/^  typedef typename OptimizableFunctorBase::real_type real_type;$/;"	t	struct:qmcplusplus::ModMcMillanJ2Functor
real_type	McMillanJ2Functor.h	/^  typedef typename OptimizableFunctorBase::real_type real_type;$/;"	t	struct:qmcplusplus::comboMcMillanJ2Functor
real_type	McMillanJ2GFunctor.h	/^  typedef typename OptimizableFunctorBase::real_type real_type;$/;"	t	struct:qmcplusplus::McMillanJ2GFunctor
real_type	OpenGaussianSlaterFunctor.h	/^  typedef typename OptimizableFunctorBase::real_type real_type;$/;"	t	struct:qmcplusplus::OpenGaussianSlaterFunctor
real_type	PolyFunctor.h	/^  typedef typename OptimizableFunctorBase<T>::real_type real_type;$/;"	t	struct:qmcplusplus::PolyFunctor
real_type	RPAJastrowFunctor.h	/^  typedef typename OptimizableFunctorBase<T>::real_type real_type;$/;"	t	struct:qmcplusplus::RPAJastrowFunctor
recompute	OneBodyJastrowOrbitalBspline.cpp	/^OneBodyJastrowOrbitalBspline::recompute(MCWalkerConfiguration &W,$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
recompute	TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::recompute(MCWalkerConfiguration &W,$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
refVal	eeI_JastrowOrbital.h	/^  ParticleAttrib<RealType> refVal;$/;"	m	class:qmcplusplus::eeI_JastrowOrbital
registerData	LRTwoBodyJastrow.cpp	/^LRTwoBodyJastrow::registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
registerData	OneBodyJastrowOrbital.h	/^  RealType registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
registerData	OneBodySpinJastrowOrbital.h	/^  RealType registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
registerData	PolarizedJastrow.h	/^  ValueType registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::PolarizedJastrow
registerData	RPAJastrow.cpp	/^RPAJastrow::registerData(ParticleSet& P, BufferType& buf)$/;"	f	class:qmcplusplus::RPAJastrow
registerData	ThreeBodyBlockSparse.cpp	/^ThreeBodyBlockSparse::registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
registerData	ThreeBodyGeminal.cpp	/^ThreeBodyGeminal::registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
registerData	ThreeBodyJastrowOrbital.h	/^  ValueType registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
registerData	ThreeBodyPade.h	/^  ValueType registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::ThreeBodyPade
registerData	TwoBodyJastrowOrbital.h	/^  inline RealType registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
registerData	eeI_JastrowOrbital.h	/^  inline RealType registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
registerData	kSpaceJastrow.cpp	/^kSpaceJastrow::registerData(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::kSpaceJastrow
reportStatus	BsplineFunctor.h	/^  void reportStatus(std::ostream& os)$/;"	f	struct:qmcplusplus::BsplineFunctor
reportStatus	LRTwoBodyJastrow.cpp	/^void LRTwoBodyJastrow::reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
reportStatus	OneBodyJastrowOrbital.h	/^  void reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
reportStatus	OneBodySpinJastrowOrbital.h	/^  void reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
reportStatus	RPAJastrow.cpp	/^void RPAJastrow::reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::RPAJastrow
reportStatus	SplineFunctors.h	/^  void reportStatus(std::ostream& os)$/;"	f	struct:qmcplusplus::CubicSplineSingle
reportStatus	ThreeBodyBlockSparse.cpp	/^void ThreeBodyBlockSparse::reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
reportStatus	ThreeBodyGeminal.cpp	/^void ThreeBodyGeminal::reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
reportStatus	TwoBodyJastrowOrbital.h	/^  void reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
reportStatus	eeI_JastrowOrbital.h	/^  void reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
reportStatus	kSpaceJastrow.cpp	/^void kSpaceJastrow::reportStatus(std::ostream& os)$/;"	f	class:qmcplusplus::kSpaceJastrow
reserve	OneBodyJastrowOrbitalBspline.cpp	/^OneBodyJastrowOrbitalBspline::reserve$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
reserve	TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::reserve$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
reset	BesselZeroFunctor.h	/^  void reset()$/;"	f	struct:qmcplusplus::BesselZero
reset	BsplineFunctor.h	/^  void reset()$/;"	f	struct:qmcplusplus::BsplineFunctor
reset	BsplineFunctor3D.h	/^  void reset()$/;"	f	struct:qmcplusplus::BsplineFunctor3D
reset	ChebyshevFunctor.h	/^  inline void reset() { }$/;"	f	struct:ChebyshevFunctor
reset	ChebyshevFunctor.h	/^  void reset(std::vector<T> a)$/;"	f	struct:ChebyshevFunctor
reset	CompositeFunctor.h	/^  inline void reset()$/;"	f	struct:qmcplusplus::AnyTimesRnFunctor
reset	CompositeFunctor.h	/^  inline void reset()$/;"	f	struct:qmcplusplus::CuspCorrectionFunctor
reset	CompositeFunctor.h	/^  inline void reset()$/;"	f	struct:qmcplusplus::DCuspCorrectionDEFunctor
reset	CubicBsplineGroup.h	/^  inline void reset()$/;"	f	class:qmcplusplus::CubicBsplineGroup
reset	DerivPadeFunctors.h	/^  void reset(real_type a, real_type b)$/;"	f	struct:qmcplusplus::D2PadeDB2Functor
reset	DerivPadeFunctors.h	/^  void reset(real_type a, real_type b)$/;"	f	struct:qmcplusplus::DPadeDBFunctor
reset	DerivWMFunctor.h	/^  void reset(real_type b, real_type rc)$/;"	f	struct:qmcplusplus::D2WMDB2Functor
reset	DerivWMFunctor.h	/^  void reset(real_type b, real_type rc)$/;"	f	struct:qmcplusplus::DWMDBFunctor
reset	GaussianFunctor.h	/^  inline void reset()$/;"	f	struct:qmcplusplus::GaussianFunctor
reset	GaussianFunctor.h	/^  void reset()$/;"	f	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
reset	LRBreakupUtilities.h	/^  inline void reset() {}$/;"	f	struct:qmcplusplus::ShortRangePartAdapter
reset	LRBreakupUtilities.h	/^  void reset(ParticleSet& ref)$/;"	f	struct:qmcplusplus::DerivRPABreakup
reset	LRBreakupUtilities.h	/^  void reset(ParticleSet& ref)$/;"	f	struct:qmcplusplus::DerivYukawaBreakup
reset	LRBreakupUtilities.h	/^  void reset(ParticleSet& ref)$/;"	f	struct:qmcplusplus::EPRPABreakup
reset	LRBreakupUtilities.h	/^  void reset(ParticleSet& ref)$/;"	f	struct:qmcplusplus::RPABFeeBreakup
reset	LRBreakupUtilities.h	/^  void reset(ParticleSet& ref)$/;"	f	struct:qmcplusplus::RPABreakup
reset	LRBreakupUtilities.h	/^  void reset(ParticleSet& ref)$/;"	f	struct:qmcplusplus::YukawaBreakup
reset	LRBreakupUtilities.h	/^  void reset(ParticleSet& ref)$/;"	f	struct:qmcplusplus::derivEPRPABreakup
reset	LRBreakupUtilities.h	/^  void reset(ParticleSet& ref, T rs)$/;"	f	struct:qmcplusplus::DerivRPABreakup
reset	LRBreakupUtilities.h	/^  void reset(ParticleSet& ref, T rs)$/;"	f	struct:qmcplusplus::DerivYukawaBreakup
reset	LRBreakupUtilities.h	/^  void reset(ParticleSet& ref, T rs)$/;"	f	struct:qmcplusplus::EPRPABreakup
reset	LRBreakupUtilities.h	/^  void reset(ParticleSet& ref, T rs)$/;"	f	struct:qmcplusplus::RPABFeeBreakup
reset	LRBreakupUtilities.h	/^  void reset(ParticleSet& ref, T rs)$/;"	f	struct:qmcplusplus::RPABreakup
reset	LRBreakupUtilities.h	/^  void reset(ParticleSet& ref, T rs)$/;"	f	struct:qmcplusplus::YukawaBreakup
reset	LRBreakupUtilities.h	/^  void reset(ParticleSet& ref, T rs)$/;"	f	struct:qmcplusplus::derivEPRPABreakup
reset	LinearCombinationFunctor.h	/^  inline void reset()$/;"	f	struct:LinearCombinationFunctor
reset	McMillanJ2Functor.h	/^  inline void reset()$/;"	f	struct:qmcplusplus::McMillanJ2Functor
reset	McMillanJ2Functor.h	/^  inline void reset()$/;"	f	struct:qmcplusplus::ModMcMillanJ2Functor
reset	McMillanJ2Functor.h	/^  inline void reset()$/;"	f	struct:qmcplusplus::comboMcMillanJ2Functor
reset	McMillanJ2Functor.h	/^  inline void reset(real_type a, real_type b)$/;"	f	struct:qmcplusplus::McMillanJ2Functor
reset	McMillanJ2GFunctor.h	/^  inline void reset()$/;"	f	struct:qmcplusplus::McMillanJ2GFunctor
reset	McMillanJ2GFunctor.h	/^  inline void reset(real_type a, real_type b)$/;"	f	struct:qmcplusplus::McMillanJ2GFunctor
reset	ModPadeFunctor.h	/^  inline void reset()$/;"	f	struct:qmcplusplus::ModPadeFunctor
reset	NumericalJastrowFunctor.h	/^  inline void reset()$/;"	f	struct:qmcplusplus::NumericalJastrow
reset	OpenGaussianSlaterFunctor.h	/^  inline void reset()$/;"	f	struct:qmcplusplus::OpenGaussianSlaterFunctor
reset	PadeFunctors.h	/^  void reset()$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
reset	PadeFunctors.h	/^  void reset()$/;"	f	struct:qmcplusplus::PadeFunctor
reset	PadeFunctors.h	/^  void reset()$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
reset	PadeFunctors.h	/^  void reset()$/;"	f	struct:qmcplusplus::ScaledPadeFunctor
reset	PolynomialFunctor3D.h	/^  void reset()$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
reset	RPAJastrowFunctor.h	/^  void reset(real_type a)$/;"	f	struct:qmcplusplus::RPAJastrowFunctor
reset	SplineFunctors.h	/^  void reset()$/;"	f	struct:qmcplusplus::CubicSplineBasisSet
reset	SplineFunctors.h	/^  void reset()$/;"	f	struct:qmcplusplus::CubicSplineSingle
reset	WMFunctor.h	/^  inline void reset() {}$/;"	f	struct:qmcplusplus::WMFunctorSet
reset	WMFunctor.h	/^  void reset()$/;"	f	struct:qmcplusplus::WMFunctor
resetByFunction	LRTwoBodyJastrow.h	/^  void resetByFunction(RealType kc)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
resetByHandler	LRTwoBodyJastrow.cpp	/^void LRTwoBodyJastrow::resetByHandler(HandlerType* handler)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
resetInternals	PolyFunctor.h	/^  inline void resetInternals()$/;"	f	struct:qmcplusplus::PolyFunctor
resetInternals	RPAJastrowFunctor.h	/^  void resetInternals()$/;"	f	struct:qmcplusplus::RPAJastrowFunctor
resetOptions	JastrowBuilder.cpp	/^void JastrowBuilder::resetOptions()$/;"	f	class:qmcplusplus::JastrowBuilder
resetParameters	BesselZeroFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::BesselZero
resetParameters	BsplineFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::BsplineFunctor
resetParameters	BsplineFunctor3D.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::BsplineFunctor3D
resetParameters	CompositeFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::AnyTimesRnFunctor
resetParameters	CompositeFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::CuspCorrectionFunctor
resetParameters	CompositeFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::DCuspCorrectionDEFunctor
resetParameters	CompositeFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::TruncatedPadeFunctor
resetParameters	DerivPadeFunctors.h	/^  void resetParameters(OptimizableSetType& optVariables)$/;"	f	struct:qmcplusplus::D2PadeDB2Functor
resetParameters	DerivPadeFunctors.h	/^  void resetParameters(const OptimizableSetType& optVariables)$/;"	f	struct:qmcplusplus::DPadeDBFunctor
resetParameters	DerivWMFunctor.h	/^  void resetParameters(OptimizableSetType& optVariables)$/;"	f	struct:qmcplusplus::D2WMDB2Functor
resetParameters	DerivWMFunctor.h	/^  void resetParameters(OptimizableSetType& optVariables)$/;"	f	struct:qmcplusplus::DWMDBFunctor
resetParameters	DiffOneBodyJastrowOrbital.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::DiffOneBodyJastrowOrbital
resetParameters	DiffOneBodySpinJastrowOrbital.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
resetParameters	DiffTwoBodyJastrowOrbital.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::DiffTwoBodyJastrowOrbital
resetParameters	Experimental/AnyConstraints.cpp	/^void AnyConstraints::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::AnyConstraints
resetParameters	Experimental/PadeConstraints.cpp	/^void PadeConstraints::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::PadeConstraints
resetParameters	Experimental/PadeConstraints.cpp	/^void ScaledPadeConstraints::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::ScaledPadeConstraints
resetParameters	GaussianFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::GaussianFunctor
resetParameters	GaussianFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::TruncatedShiftedGaussianFunctor
resetParameters	LRBreakupUtilities.h	/^  void resetParameters(const opt_variables_type& optVariables) { }$/;"	f	struct:qmcplusplus::ShortRangePartAdapter
resetParameters	LRTwoBodyJastrow.cpp	/^void LRTwoBodyJastrow::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
resetParameters	LinearCombinationFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:LinearCombinationFunctor
resetParameters	McMillanJ2Functor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::McMillanJ2Functor
resetParameters	McMillanJ2Functor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::ModMcMillanJ2Functor
resetParameters	McMillanJ2Functor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::comboMcMillanJ2Functor
resetParameters	McMillanJ2GFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::McMillanJ2GFunctor
resetParameters	ModPadeFunctor.h	/^  inline void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::ModPadeFunctor
resetParameters	OneBodyJastrowOrbital.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
resetParameters	OneBodyJastrowOrbitalBspline.cpp	/^OneBodyJastrowOrbitalBspline::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
resetParameters	OneBodySpinJastrowOrbital.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
resetParameters	OpenGaussianSlaterFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::OpenGaussianSlaterFunctor
resetParameters	PadeFunctors.h	/^  inline void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::ScaledPadeFunctor
resetParameters	PadeFunctors.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::Pade2ndOrderFunctor
resetParameters	PadeFunctors.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::PadeFunctor
resetParameters	PadeFunctors.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::PadeTwo2ndOrderFunctor
resetParameters	PolarizedJastrow.h	/^  void resetParameters(OptimizableSetType& optVariables)$/;"	f	class:qmcplusplus::PolarizedJastrow
resetParameters	PolyConstraints.cpp	/^void PolyConstraints::resetParameters(OptimizableSetType& optVariables)$/;"	f	class:qmcplusplus::PolyConstraints
resetParameters	PolyFunctor.h	/^  void resetParameters(OptimizableSetType& optVariables)$/;"	f	struct:qmcplusplus::PolyFunctor
resetParameters	PolynomialFunctor3D.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
resetParameters	RPAJastrow.cpp	/^void RPAJastrow::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::RPAJastrow
resetParameters	RPAJastrowFunctor.h	/^  void resetParameters(OptimizableSetType& optVariables)$/;"	f	struct:qmcplusplus::RPAJastrowFunctor
resetParameters	SplineFunctors.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::CubicSplineBasisSet
resetParameters	SplineFunctors.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::CubicSplineSingle
resetParameters	ThreeBodyBlockSparse.cpp	/^void ThreeBodyBlockSparse::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
resetParameters	ThreeBodyGeminal.cpp	/^void ThreeBodyGeminal::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
resetParameters	ThreeBodyJastrowOrbital.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
resetParameters	ThreeBodyPade.h	/^  void resetParameters(OptimizableSetType& optVariables)$/;"	f	class:qmcplusplus::ThreeBodyPade
resetParameters	TwoBodyJastrowOrbital.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
resetParameters	TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
resetParameters	WMFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::WMFunctor
resetParameters	WMFunctor.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	struct:qmcplusplus::WMFunctorSet
resetParameters	eeI_JastrowOrbital.h	/^  void resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
resetParameters	kSpaceJastrow.cpp	/^kSpaceJastrow::resetParameters(const opt_variables_type& active)$/;"	f	class:qmcplusplus::kSpaceJastrow
resetTargetParticleSet	DiffOneBodyJastrowOrbital.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::DiffOneBodyJastrowOrbital
resetTargetParticleSet	DiffOneBodySpinJastrowOrbital.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
resetTargetParticleSet	DiffTwoBodyJastrowOrbital.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::DiffTwoBodyJastrowOrbital
resetTargetParticleSet	LRTwoBodyJastrow.cpp	/^void LRTwoBodyJastrow::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
resetTargetParticleSet	OneBodyJastrowOrbital.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
resetTargetParticleSet	OneBodySpinJastrowOrbital.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
resetTargetParticleSet	PolarizedJastrow.h	/^  void resetTargetParticleSet(ParticleSet& P) {}$/;"	f	class:qmcplusplus::PolarizedJastrow
resetTargetParticleSet	RPAJastrow.cpp	/^void RPAJastrow::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::RPAJastrow
resetTargetParticleSet	ThreeBodyBlockSparse.cpp	/^void ThreeBodyBlockSparse::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
resetTargetParticleSet	ThreeBodyGeminal.cpp	/^void ThreeBodyGeminal::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
resetTargetParticleSet	ThreeBodyJastrowOrbital.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
resetTargetParticleSet	ThreeBodyPade.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::ThreeBodyPade
resetTargetParticleSet	TwoBodyJastrowOrbital.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
resetTargetParticleSet	eeI_JastrowOrbital.h	/^  void resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
resetTargetParticleSet	kSpaceJastrow.cpp	/^kSpaceJastrow::resetTargetParticleSet(ParticleSet& P)$/;"	f	class:qmcplusplus::kSpaceJastrow
reset_gamma	PolynomialFunctor3D.h	/^  void reset_gamma()$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
resize	BesselZeroFunctor.h	/^  void resize(int n)$/;"	f	struct:qmcplusplus::BesselZero
resize	BsplineFunctor.h	/^  void resize(int n)$/;"	f	struct:qmcplusplus::BsplineFunctor
resize	BsplineFunctor3D.h	/^  void resize(int neI, int nee)$/;"	f	struct:qmcplusplus::BsplineFunctor3D
resize	LRTwoBodyJastrow.cpp	/^void LRTwoBodyJastrow::resize()$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
resize	PolynomialFunctor3D.h	/^  void resize(int neI, int nee)$/;"	f	struct:qmcplusplus::PolynomialFunctor3D
restore	LRTwoBodyJastrow.cpp	/^void LRTwoBodyJastrow::restore(int iat)$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
restore	OneBodyJastrowOrbital.h	/^  inline void restore(int iat) {}$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
restore	OneBodySpinJastrowOrbital.h	/^  inline void restore(int iat) {}$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
restore	PolarizedJastrow.h	/^  inline void restore(int iat) { }$/;"	f	class:qmcplusplus::PolarizedJastrow
restore	RPAJastrow.cpp	/^void RPAJastrow::restore(int iat)$/;"	f	class:qmcplusplus::RPAJastrow
restore	ThreeBodyBlockSparse.cpp	/^void ThreeBodyBlockSparse::restore(int iat)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
restore	ThreeBodyGeminal.cpp	/^void ThreeBodyGeminal::restore(int iat)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
restore	ThreeBodyJastrowOrbital.h	/^  inline void restore(int iat) {}$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
restore	ThreeBodyPade.h	/^  inline void restore(int iat) {}$/;"	f	class:qmcplusplus::ThreeBodyPade
restore	TwoBodyJastrowOrbital.h	/^  inline void restore(int iat) {}$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
restore	eeI_JastrowOrbital.h	/^  inline void restore(int iat) {}$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
restore	kSpaceJastrow.cpp	/^kSpaceJastrow::restore(int iat)$/;"	f	class:qmcplusplus::kSpaceJastrow
rokbyF	LRTwoBodyJastrow.h	/^  Matrix<ComplexType> rokbyF;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
rokbyF_i	LRTwoBodyJastrow.h	/^  Matrix<RealType> rokbyF_i;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
rokbyF_r	LRTwoBodyJastrow.h	/^  Matrix<RealType> rokbyF_r;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
rpaValues	BsplineJastrowBuilder.cpp	/^  std::vector<T> rpaValues;$/;"	m	struct:qmcplusplus::BsplineInitializer	file:
rpafunc	RPAJastrow.h	/^  std::string rpafunc;$/;"	m	struct:qmcplusplus::RPAJastrow
s_offset	DiffOneBodySpinJastrowOrbital.h	/^  std::vector<int> s_offset;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
s_offset	OneBodySpinJastrowOrbital.h	/^  std::vector<int> s_offset;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
scale	PolynomialFunctor3D.h	/^  real_type scale;$/;"	m	struct:qmcplusplus::PolynomialFunctor3D
set	CudaSpline.h	/^  void set (BsplineFunctor<T2> &func)$/;"	f	struct:qmcplusplus::CudaSpline
set	NumericalJastrowFunctor.h	/^  inline void set(T r1, T r2)$/;"	f	struct:qmcplusplus::CutoffFunctor
set	kSpaceJastrow.h	/^  inline void set (std::vector<T> &unpackedCoefs)$/;"	f	class:qmcplusplus::kSpaceCoef
setBasisSet	ThreeBodyBlockSparse.h	/^  void setBasisSet(BasisSetType* abasis)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
setBasisSet	ThreeBodyGeminal.h	/^  void setBasisSet(BasisSetType* abasis)$/;"	f	class:qmcplusplus::ThreeBodyGeminal
setBlocks	ThreeBodyBlockSparse.cpp	/^void ThreeBodyBlockSparse::setBlocks(const std::vector<int>& blockspergroup)$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
setCoefficients	kSpaceJastrow.cpp	/^kSpaceJastrow::setCoefficients(std::vector<RealType> &oneBodyCoefs,$/;"	f	class:qmcplusplus::kSpaceJastrow
setCutoff	NumericalJastrowFunctor.h	/^  void setCutoff(real_type r1, real_type r2)$/;"	f	struct:qmcplusplus::NumericalJastrow
setDensity	RPAJastrowFunctor.h	/^  void setDensity(real_type n)$/;"	f	struct:qmcplusplus::RPAJastrowFunctor
setGrid	Experimental/AnyConstraints.h	/^    void setGrid(RealType rc, int npts)$/;"	f	struct:qmcplusplus::AnyConstraints::BasisGroupType
setGrid	WMJastrowBuilder.h	/^    void setGrid(RealType rc, int npts)$/;"	f	struct:qmcplusplus::WMJastrowBuilder::BasisGroupType
setGridManager	CubicBsplineGroup.h	/^  void setGridManager(bool manage)$/;"	f	class:qmcplusplus::CubicBsplineGroup
setHandler	RPAJastrow.h	/^  void setHandler(HandlerType* Handler)$/;"	f	struct:qmcplusplus::RPAJastrow
setInFunc	NumericalJastrowFunctor.h	/^  void setInFunc(FNIN* in_)$/;"	f	struct:qmcplusplus::NumericalJastrow
setInFunc	SplineFunctors.h	/^  void setInFunc(FNIN* in_)$/;"	f	struct:qmcplusplus::CubicSplineBasisSet
setInFunc	SplineFunctors.h	/^  void setInFunc(FNIN* in_)$/;"	f	struct:qmcplusplus::CubicSplineSingle
setL	PolyFunctor.h	/^  inline void setL(real_type rc)$/;"	f	struct:qmcplusplus::PolyFunctor
setOrbitalSet	CBSOBuilder.cpp	/^CBSOBuilder::setOrbitalSet(CenteredOrbitalType* oset, const std::string& acenter)$/;"	f	class:qmcplusplus::CBSOBuilder
setOutFunc	NumericalJastrowFunctor.h	/^  void setOutFunc(FNOUT* out_)$/;"	f	struct:qmcplusplus::NumericalJastrow
setOutFunc	SplineFunctors.h	/^  void setOutFunc(FNOUT* out_)$/;"	f	struct:qmcplusplus::CubicSplineBasisSet
setReportLevel	BsplineFunctor.h	/^  inline void setReportLevel(int i, const std::string& fname)$/;"	f	struct:qmcplusplus::BsplineFunctor
setRmax	LRBreakupUtilities.h	/^  inline void setRmax(real_type rm)$/;"	f	struct:qmcplusplus::ShortRangePartAdapter
setVars	DiffOneBodyJastrowOrbital.h	/^  inline void setVars(const opt_variables_type& vars)$/;"	f	class:qmcplusplus::DiffOneBodyJastrowOrbital
setVars	DiffOneBodySpinJastrowOrbital.h	/^  inline void setVars(const opt_variables_type& vars)$/;"	f	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
setupGvecs	kSpaceJastrow.cpp	/^kSpaceJastrow::setupGvecs(RealType kc, std::vector<PosType> &gvecs,$/;"	f	class:qmcplusplus::kSpaceJastrow
singleRPAJastrowBuilder	singleRPAJastrowBuilder.h	/^  singleRPAJastrowBuilder(ParticleSet& target, TrialWaveFunction& psi,$/;"	f	struct:qmcplusplus::singleRPAJastrowBuilder
singleRPAJastrowBuilder	singleRPAJastrowBuilder.h	/^struct singleRPAJastrowBuilder: public OrbitalBuilderBase$/;"	s	namespace:qmcplusplus
size	LinearCombinationFunctor.h	/^  int size() const$/;"	f	struct:LinearCombinationFunctor
skRef	LRTwoBodyJastrow.h	/^  StructFact* skRef;$/;"	m	class:qmcplusplus::LRTwoBodyJastrow
sortGvecs	kSpaceJastrow.cpp	/^kSpaceJastrow::sortGvecs(std::vector<PosType> &gvecs,$/;"	f	class:qmcplusplus::kSpaceJastrow
sourceOpt	JastrowBuilder.h	/^  std::string sourceOpt;$/;"	m	class:qmcplusplus::JastrowBuilder
sourcePtcl	BsplineJastrowBuilder.h	/^  ParticleSet *sourcePtcl;$/;"	m	struct:qmcplusplus::BsplineJastrowBuilder
sourcePtcl	Experimental/NJABBuilder.h	/^  ParticleSet* sourcePtcl;$/;"	m	struct:qmcplusplus::NJABBuilder
sourcePtcl	JastrowBasisBuilder.h	/^  ParticleSet& sourcePtcl;$/;"	m	class:qmcplusplus::JastrowBasisBuilder
sourcePtcl	ThreeBodyGeminalBuilder.h	/^  ParticleSet& sourcePtcl;$/;"	m	class:qmcplusplus::ThreeBodyGeminalBuilder
sourcePtcl	WMJastrowBuilder.h	/^  ParticleSet* sourcePtcl;$/;"	m	class:qmcplusplus::WMJastrowBuilder
sourcePtcl	eeI_JastrowBuilder.h	/^  ParticleSet *sourcePtcl;$/;"	m	struct:qmcplusplus::eeI_JastrowBuilder
sourcePtcl	kSpaceJastrowBuilder.h	/^  ParticleSet sourcePtcl;$/;"	m	struct:qmcplusplus::kSpaceJastrowBuilder
sourcePtcl	singleRPAJastrowBuilder.h	/^  ParticleSet* sourcePtcl;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
spinOpt	JastrowBuilder.h	/^  std::string spinOpt;$/;"	m	class:qmcplusplus::JastrowBuilder
sumB	BesselZeroFunctor.h	/^  inline void sumB(real_type X, real_type& u, real_type& du, real_type& d2u)$/;"	f	struct:qmcplusplus::BesselZero
tGrad	ThreeBodyBlockSparse.h	/^  Vector<PosType> curGrad, tGrad;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
tGrad	ThreeBodyGeminal.h	/^  Vector<PosType> curGrad, tGrad;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
tLap	ThreeBodyBlockSparse.h	/^  Vector<RealType> curLap, tLap;$/;"	m	class:qmcplusplus::ThreeBodyBlockSparse
tLap	ThreeBodyGeminal.h	/^  Vector<RealType> curLap, tLap;$/;"	m	class:qmcplusplus::ThreeBodyGeminal
t_offset	DiffOneBodySpinJastrowOrbital.h	/^  std::vector<int> t_offset;$/;"	m	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
t_offset	OneBodySpinJastrowOrbital.h	/^  std::vector<int> t_offset;$/;"	m	class:qmcplusplus::OneBodySpinJastrowOrbital
targetPtcl	JastrowBasisBuilder.h	/^  ParticleSet& targetPtcl;$/;"	m	class:qmcplusplus::JastrowBasisBuilder
targetPtcl	RPAJastrow.h	/^  ParticleSet& targetPtcl;$/;"	m	struct:qmcplusplus::RPAJastrow
tlen	singleRPAJastrowBuilder.h	/^  RealType tlen;$/;"	m	struct:qmcplusplus::singleRPAJastrowBuilder
transformOpt	JastrowBuilder.h	/^  std::string transformOpt;$/;"	m	class:qmcplusplus::JastrowBuilder
typeOpt	JastrowBuilder.h	/^  std::string typeOpt;$/;"	m	class:qmcplusplus::JastrowBuilder
update	LRTwoBodyJastrow.cpp	/^void LRTwoBodyJastrow::update(ParticleSet& P,$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
update	OneBodyJastrowOrbital.h	/^  void update(ParticleSet& P,$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
update	OneBodyJastrowOrbitalBspline.cpp	/^OneBodyJastrowOrbitalBspline::update (std::vector<Walker_t*> &walkers, int iat)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
update	OneBodyJastrowOrbitalBspline.h	/^  void update (const std::vector<Walker_t*> &walkers, const std::vector<int> &iatList)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbitalBspline
update	OneBodySpinJastrowOrbital.h	/^  void update(ParticleSet& P,$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
update	PolarizedJastrow.h	/^  void update(ParticleSet& P,$/;"	f	class:qmcplusplus::PolarizedJastrow
update	RPAJastrow.cpp	/^void RPAJastrow::update(ParticleSet& P,$/;"	f	class:qmcplusplus::RPAJastrow
update	ThreeBodyBlockSparse.cpp	/^void ThreeBodyBlockSparse::update(ParticleSet& P,$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
update	ThreeBodyGeminal.cpp	/^void ThreeBodyGeminal::update(ParticleSet& P,$/;"	f	class:qmcplusplus::ThreeBodyGeminal
update	ThreeBodyJastrowOrbital.h	/^  void update(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
update	ThreeBodyJastrowOrbital.h	/^  void update(ParticleSet& P,$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
update	ThreeBodyPade.h	/^  void update(ParticleSet& P, int iat)$/;"	f	class:qmcplusplus::ThreeBodyPade
update	ThreeBodyPade.h	/^  void update(ParticleSet& P,$/;"	f	class:qmcplusplus::ThreeBodyPade
update	TwoBodyJastrowOrbital.h	/^  inline void update(ParticleSet& P,$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
update	TwoBodyJastrowOrbitalBspline.cpp	/^TwoBodyJastrowOrbitalBspline::update (std::vector<Walker_t*> &walkers, int iat)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
update	TwoBodyJastrowOrbitalBspline.h	/^  void update (const std::vector<Walker_t*> &walkers, const std::vector<int> &iatList)$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbitalBspline
update	eeI_JastrowOrbital.h	/^  inline void update(ParticleSet& P,$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
update	kSpaceJastrow.cpp	/^kSpaceJastrow::update(ParticleSet& P,$/;"	f	class:qmcplusplus::kSpaceJastrow
updateBuffer	LRTwoBodyJastrow.cpp	/^LRTwoBodyJastrow::updateBuffer(ParticleSet& P, PooledData<RealType>& buf,$/;"	f	class:qmcplusplus::LRTwoBodyJastrow
updateBuffer	OneBodyJastrowOrbital.h	/^  RealType updateBuffer(ParticleSet& P, BufferType& buf, bool fromscratch=false)$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
updateBuffer	OneBodySpinJastrowOrbital.h	/^  RealType updateBuffer(ParticleSet& P, BufferType& buf, bool fromscratch=false)$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
updateBuffer	PolarizedJastrow.h	/^  ValueType updateBuffer(ParticleSet& P, PooledData<RealType>& buf)$/;"	f	class:qmcplusplus::PolarizedJastrow
updateBuffer	RPAJastrow.cpp	/^RPAJastrow::updateBuffer(ParticleSet& P, BufferType& buf, bool fromscratch)$/;"	f	class:qmcplusplus::RPAJastrow
updateBuffer	ThreeBodyBlockSparse.cpp	/^ThreeBodyBlockSparse::updateBuffer(ParticleSet& P, PooledData<RealType>& buf,$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
updateBuffer	ThreeBodyGeminal.cpp	/^ThreeBodyGeminal::updateBuffer(ParticleSet& P, PooledData<RealType>& buf,$/;"	f	class:qmcplusplus::ThreeBodyGeminal
updateBuffer	ThreeBodyJastrowOrbital.h	/^  ValueType updateBuffer(ParticleSet& P, BufferType& buf)$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
updateBuffer	ThreeBodyPade.h	/^  ValueType updateBuffer(ParticleSet& P, BufferType& buf)$/;"	f	class:qmcplusplus::ThreeBodyPade
updateBuffer	TwoBodyJastrowOrbital.h	/^  inline RealType updateBuffer(ParticleSet& P, PooledData<RealType>& buf,$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
updateBuffer	eeI_JastrowOrbital.h	/^  inline RealType updateBuffer(ParticleSet& P, PooledData<RealType>& buf,$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
updateBuffer	kSpaceJastrow.cpp	/^kSpaceJastrow::updateBuffer(ParticleSet& P, PooledData<RealType>& buf,$/;"	f	class:qmcplusplus::kSpaceJastrow
urpa	LRBreakupUtilities.h	/^  T urpa(T q)$/;"	f	struct:qmcplusplus::RPABFeeBreakup
value_type	BesselZeroFunctor.h	/^  typedef real_type value_type;$/;"	t	struct:qmcplusplus::BesselZero
value_type	BsplineFunctor.h	/^  typedef real_type value_type;$/;"	t	struct:qmcplusplus::BsplineFunctor
value_type	BsplineFunctor3D.h	/^  typedef real_type value_type;$/;"	t	struct:qmcplusplus::BsplineFunctor3D
value_type	CubicBsplineGroup.h	/^  typedef typename CubicBsplineGrid<T,GRIDTYPE,FIRSTDERIV_CONSTRAINTS>::value_type value_type;$/;"	t	class:qmcplusplus::CubicBsplineGroup
value_type	PolynomialFunctor3D.h	/^  typedef real_type value_type;$/;"	t	struct:qmcplusplus::PolynomialFunctor3D
value_type	SplineFunctors.h	/^  typedef RT value_type;$/;"	t	struct:qmcplusplus::CubicSplineSingle
variable_type	WMFunctor.h	/^  typedef TinyVector<real_type,2>  variable_type;$/;"	t	struct:qmcplusplus::WMFunctorSet
volume	LRBreakupUtilities.h	/^  T volume;$/;"	m	struct:qmcplusplus::RPABFeeBreakup
~AnyConstraints	Experimental/AnyConstraints.cpp	/^AnyConstraints::~AnyConstraints()$/;"	f	class:qmcplusplus::AnyConstraints
~DiffOneBodyJastrowOrbital	DiffOneBodyJastrowOrbital.h	/^  ~DiffOneBodyJastrowOrbital()$/;"	f	class:qmcplusplus::DiffOneBodyJastrowOrbital
~DiffOneBodySpinJastrowOrbital	DiffOneBodySpinJastrowOrbital.h	/^  ~DiffOneBodySpinJastrowOrbital()$/;"	f	class:qmcplusplus::DiffOneBodySpinJastrowOrbital
~DiffTwoBodyJastrowOrbital	DiffTwoBodyJastrowOrbital.h	/^  ~DiffTwoBodyJastrowOrbital()$/;"	f	class:qmcplusplus::DiffTwoBodyJastrowOrbital
~JastrowBasisBuilder	JastrowBasisBuilder.cpp	/^JastrowBasisBuilder::~JastrowBasisBuilder()$/;"	f	class:qmcplusplus::JastrowBasisBuilder
~OneBodyJastrowOrbital	OneBodyJastrowOrbital.h	/^  ~OneBodyJastrowOrbital() { }$/;"	f	class:qmcplusplus::OneBodyJastrowOrbital
~OneBodySpinJastrowOrbital	OneBodySpinJastrowOrbital.h	/^  ~OneBodySpinJastrowOrbital()$/;"	f	class:qmcplusplus::OneBodySpinJastrowOrbital
~PadeConstraints	Experimental/PadeConstraints.cpp	/^PadeConstraints::~PadeConstraints()$/;"	f	class:qmcplusplus::PadeConstraints
~PolarizedJastrow	PolarizedJastrow.h	/^  ~PolarizedJastrow()$/;"	f	class:qmcplusplus::PolarizedJastrow
~PolyConstraints	PolyConstraints.cpp	/^PolyConstraints::~PolyConstraints()$/;"	f	class:qmcplusplus::PolyConstraints
~RPAJastrow	RPAJastrow.cpp	/^RPAJastrow::~RPAJastrow()$/;"	f	class:qmcplusplus::RPAJastrow
~ScaledPadeConstraints	Experimental/PadeConstraints.cpp	/^ScaledPadeConstraints::~ScaledPadeConstraints()$/;"	f	class:qmcplusplus::ScaledPadeConstraints
~ThreeBodyBlockSparse	ThreeBodyBlockSparse.cpp	/^ThreeBodyBlockSparse::~ThreeBodyBlockSparse()$/;"	f	class:qmcplusplus::ThreeBodyBlockSparse
~ThreeBodyGeminal	ThreeBodyGeminal.cpp	/^ThreeBodyGeminal::~ThreeBodyGeminal()$/;"	f	class:qmcplusplus::ThreeBodyGeminal
~ThreeBodyJastrowOrbital	ThreeBodyJastrowOrbital.h	/^  ~ThreeBodyJastrowOrbital() { }$/;"	f	class:qmcplusplus::ThreeBodyJastrowOrbital
~ThreeBodyPade	ThreeBodyPade.h	/^  ~ThreeBodyPade() { }$/;"	f	class:qmcplusplus::ThreeBodyPade
~TwoBodyJastrowOrbital	TwoBodyJastrowOrbital.h	/^  ~TwoBodyJastrowOrbital() { }$/;"	f	class:qmcplusplus::TwoBodyJastrowOrbital
~WMConstraints	Experimental/WMConstraints.cpp	/^WMConstraints::~WMConstraints()$/;"	f	class:qmcplusplus::WMConstraints
~eeI_JastrowOrbital	eeI_JastrowOrbital.h	/^  ~eeI_JastrowOrbital() { }$/;"	f	class:qmcplusplus::eeI_JastrowOrbital
